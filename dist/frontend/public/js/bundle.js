'use strict'
var _interopRequireDefault2 = require('@babel/runtime/helpers/interopRequireDefault')
var _regenerator = _interopRequireDefault2(
  require('@babel/runtime/regenerator')
)
var _asyncToGenerator2 = _interopRequireDefault2(
  require('@babel/runtime/helpers/asyncToGenerator')
)
var _defineProperty2 = _interopRequireDefault2(
  require('@babel/runtime/helpers/defineProperty')
)
var _toConsumableArray2 = _interopRequireDefault2(
  require('@babel/runtime/helpers/toConsumableArray')
)
var _typeof3 = _interopRequireDefault2(require('@babel/runtime/helpers/typeof'))
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object)
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object)
    if (enumerableOnly)
      symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable
      })
    keys.push.apply(keys, symbols)
  }
  return keys
}
function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {}
    if (i % 2) {
      ownKeys(Object(source), true).forEach(function(key) {
        ;(0, _defineProperty2['default'])(target, key, source[key])
      })
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source))
    } else {
      ownKeys(Object(source)).forEach(function(key) {
        Object.defineProperty(
          target,
          key,
          Object.getOwnPropertyDescriptor(source, key)
        )
      })
    }
  }
  return target
}
;(function() {
  function r(e, n, t) {
    function o(i, f) {
      if (!n[i]) {
        if (!e[i]) {
          var c = 'function' == typeof require && require
          if (!f && c) return c(i, !0)
          if (u) return u(i, !0)
          var a = new Error("Cannot find module '" + i + "'")
          throw ((a.code = 'MODULE_NOT_FOUND'), a)
        }
        var p = (n[i] = { exports: {} })
        e[i][0].call(
          p.exports,
          function(r) {
            var n = e[i][1][r]
            return o(n || r)
          },
          p,
          p.exports,
          r,
          e,
          n,
          t
        )
      }
      return n[i].exports
    }
    for (
      var u = 'function' == typeof require && require, i = 0;
      i < t.length;
      i++
    ) {
      o(t[i])
    }
    return o
  }
  return r
})()(
  {
    2: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule('node_modules/after/index.js', module)
        ;(function() {
          module.exports = after
          function after(count, callback, err_cb) {
            var bail = false
            err_cb = err_cb || noop
            proxy.count = count
            return count === 0 ? callback() : proxy
            function proxy(err, result) {
              if (proxy.count <= 0) {
                throw new Error('after called too many times')
              }
              --proxy.count // after first error, rest are passed to err_cb
              if (err) {
                bail = true
                callback(err) // future error callbacks will go to error handler
                callback = err_cb
              } else if (proxy.count === 0 && !bail) {
                callback(null, result)
              }
            }
          }
          function noop() {}
        }.apply(this, arguments))
      },
      {}
    ],
    3: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/arraybuffer.slice/index.js',
          module
        )
        ;(function() {
          /**
           * An abstraction for slicing an arraybuffer even when
           * ArrayBuffer.prototype.slice is not supported
           *
           * @api public
           */ module.exports = function(arraybuffer, start, end) {
            var bytes = arraybuffer.byteLength
            start = start || 0
            end = end || bytes
            if (arraybuffer.slice) {
              return arraybuffer.slice(start, end)
            }
            if (start < 0) {
              start += bytes
            }
            if (end < 0) {
              end += bytes
            }
            if (end > bytes) {
              end = bytes
            }
            if (start >= bytes || start >= end || bytes === 0) {
              return new ArrayBuffer(0)
            }
            var abv = new Uint8Array(arraybuffer)
            var result = new Uint8Array(end - start)
            for (var i = start, ii = 0; i < end; i++, ii++) {
              result[ii] = abv[i]
            }
            return result.buffer
          }
        }.apply(this, arguments))
      },
      {}
    ],
    4: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule('node_modules/axios/index.js', module)
        ;(function() {
          module.exports = require('./lib/axios')
        }.apply(this, arguments))
      },
      { './lib/axios': 6 }
    ],
    5: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/axios/lib/adapters/xhr.js',
          module
        )
        ;(function() {
          'use strict'
          var utils = require('./../utils')
          var settle = require('./../core/settle')
          var buildURL = require('./../helpers/buildURL')
          var buildFullPath = require('../core/buildFullPath')
          var parseHeaders = require('./../helpers/parseHeaders')
          var isURLSameOrigin = require('./../helpers/isURLSameOrigin')
          var createError = require('../core/createError')
          module.exports = function xhrAdapter(config) {
            return new Promise(function dispatchXhrRequest(resolve, reject) {
              var requestData = config.data
              var requestHeaders = config.headers
              if (utils.isFormData(requestData)) {
                delete requestHeaders['Content-Type'] // Let the browser set it
              }
              var request = new XMLHttpRequest() // HTTP basic authentication
              if (config.auth) {
                var username = config.auth.username || ''
                var password = config.auth.password || ''
                requestHeaders.Authorization =
                  'Basic ' + btoa(username + ':' + password)
              }
              var fullPath = buildFullPath(config.baseURL, config.url)
              request.open(
                config.method.toUpperCase(),
                buildURL(fullPath, config.params, config.paramsSerializer),
                true
              ) // Set the request timeout in MS
              request.timeout = config.timeout // Listen for ready state
              request.onreadystatechange = function handleLoad() {
                if (!request || request.readyState !== 4) {
                  return
                } // The request errored out and we didn't get a response, this will be
                // handled by onerror instead
                // With one exception: request that using file: protocol, most browsers
                // will return status as 0 even though it's a successful request
                if (
                  request.status === 0 &&
                  !(
                    request.responseURL &&
                    request.responseURL.indexOf('file:') === 0
                  )
                ) {
                  return
                } // Prepare the response
                var responseHeaders =
                  'getAllResponseHeaders' in request
                    ? parseHeaders(request.getAllResponseHeaders())
                    : null
                var responseData =
                  !config.responseType || config.responseType === 'text'
                    ? request.responseText
                    : request.response
                var response = {
                  data: responseData,
                  status: request.status,
                  statusText: request.statusText,
                  headers: responseHeaders,
                  config: config,
                  request: request
                }
                settle(resolve, reject, response) // Clean up request
                request = null
              } // Handle browser request cancellation (as opposed to a manual cancellation)
              request.onabort = function handleAbort() {
                if (!request) {
                  return
                }
                reject(
                  createError(
                    'Request aborted',
                    config,
                    'ECONNABORTED',
                    request
                  )
                ) // Clean up request
                request = null
              } // Handle low level network errors
              request.onerror = function handleError() {
                // Real errors are hidden from us by the browser
                // onerror should only fire if it's a network error
                reject(createError('Network Error', config, null, request)) // Clean up request
                request = null
              } // Handle timeout
              request.ontimeout = function handleTimeout() {
                var timeoutErrorMessage =
                  'timeout of ' + config.timeout + 'ms exceeded'
                if (config.timeoutErrorMessage) {
                  timeoutErrorMessage = config.timeoutErrorMessage
                }
                reject(
                  createError(
                    timeoutErrorMessage,
                    config,
                    'ECONNABORTED',
                    request
                  )
                ) // Clean up request
                request = null
              } // Add xsrf header
              // This is only done if running in a standard browser environment.
              // Specifically not if we're in a web worker, or react-native.
              if (utils.isStandardBrowserEnv()) {
                var cookies = require('./../helpers/cookies') // Add xsrf header
                var xsrfValue =
                  (config.withCredentials || isURLSameOrigin(fullPath)) &&
                  config.xsrfCookieName
                    ? cookies.read(config.xsrfCookieName)
                    : undefined
                if (xsrfValue) {
                  requestHeaders[config.xsrfHeaderName] = xsrfValue
                }
              } // Add headers to the request
              if ('setRequestHeader' in request) {
                utils.forEach(requestHeaders, function setRequestHeader(
                  val,
                  key
                ) {
                  if (
                    typeof requestData === 'undefined' &&
                    key.toLowerCase() === 'content-type'
                  ) {
                    // Remove Content-Type if data is undefined
                    delete requestHeaders[key]
                  } else {
                    // Otherwise add header to the request
                    request.setRequestHeader(key, val)
                  }
                })
              } // Add withCredentials to request if needed
              if (!utils.isUndefined(config.withCredentials)) {
                request.withCredentials = !!config.withCredentials
              } // Add responseType to request if needed
              if (config.responseType) {
                try {
                  request.responseType = config.responseType
                } catch (e) {
                  // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
                  // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
                  if (config.responseType !== 'json') {
                    throw e
                  }
                }
              } // Handle progress if needed
              if (typeof config.onDownloadProgress === 'function') {
                request.addEventListener('progress', config.onDownloadProgress)
              } // Not all browsers support upload events
              if (
                typeof config.onUploadProgress === 'function' &&
                request.upload
              ) {
                request.upload.addEventListener(
                  'progress',
                  config.onUploadProgress
                )
              }
              if (config.cancelToken) {
                // Handle cancellation
                config.cancelToken.promise.then(function onCanceled(cancel) {
                  if (!request) {
                    return
                  }
                  request.abort()
                  reject(cancel) // Clean up request
                  request = null
                })
              }
              if (requestData === undefined) {
                requestData = null
              } // Send the request
              request.send(requestData)
            })
          }
        }.apply(this, arguments))
      },
      {
        '../core/buildFullPath': 12,
        '../core/createError': 13,
        './../core/settle': 17,
        './../helpers/buildURL': 21,
        './../helpers/cookies': 23,
        './../helpers/isURLSameOrigin': 25,
        './../helpers/parseHeaders': 27,
        './../utils': 29
      }
    ],
    6: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/axios/lib/axios.js',
          module
        )
        ;(function() {
          'use strict'
          var utils = require('./utils')
          var bind = require('./helpers/bind')
          var Axios = require('./core/Axios')
          var mergeConfig = require('./core/mergeConfig')
          var defaults = require('./defaults')
          /**
           * Create an instance of Axios
           *
           * @param {Object} defaultConfig The default config for the instance
           * @return {Axios} A new instance of Axios
           */ function createInstance(defaultConfig) {
            var context = new Axios(defaultConfig)
            var instance = bind(Axios.prototype.request, context) // Copy axios.prototype to instance
            utils.extend(instance, Axios.prototype, context) // Copy context to instance
            utils.extend(instance, context)
            return instance
          } // Create the default instance to be exported
          var axios = createInstance(defaults) // Expose Axios class to allow class inheritance
          axios.Axios = Axios // Factory for creating new instances
          axios.create = function create(instanceConfig) {
            return createInstance(mergeConfig(axios.defaults, instanceConfig))
          } // Expose Cancel & CancelToken
          axios.Cancel = require('./cancel/Cancel')
          axios.CancelToken = require('./cancel/CancelToken')
          axios.isCancel = require('./cancel/isCancel') // Expose all/spread
          axios.all = function all(promises) {
            return Promise.all(promises)
          }
          axios.spread = require('./helpers/spread')
          module.exports = axios // Allow use of default import syntax in TypeScript
          module.exports['default'] = axios
        }.apply(this, arguments))
      },
      {
        './cancel/Cancel': 7,
        './cancel/CancelToken': 8,
        './cancel/isCancel': 9,
        './core/Axios': 10,
        './core/mergeConfig': 16,
        './defaults': 19,
        './helpers/bind': 20,
        './helpers/spread': 28,
        './utils': 29
      }
    ],
    7: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/axios/lib/cancel/Cancel.js',
          module
        )
        ;(function() {
          'use strict'
          /**
           * A `Cancel` is an object that is thrown when an operation is canceled.
           *
           * @class
           * @param {string=} message The message.
           */ function Cancel(message) {
            this.message = message
          }
          Cancel.prototype.toString = function toString() {
            return 'Cancel' + (this.message ? ': ' + this.message : '')
          }
          Cancel.prototype.__CANCEL__ = true
          module.exports = Cancel
        }.apply(this, arguments))
      },
      {}
    ],
    8: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/axios/lib/cancel/CancelToken.js',
          module
        )
        ;(function() {
          'use strict'
          var Cancel = require('./Cancel')
          /**
           * A `CancelToken` is an object that can be used to request cancellation of an operation.
           *
           * @class
           * @param {Function} executor The executor function.
           */ function CancelToken(executor) {
            if (typeof executor !== 'function') {
              throw new TypeError('executor must be a function.')
            }
            var resolvePromise
            this.promise = new Promise(function promiseExecutor(resolve) {
              resolvePromise = resolve
            })
            var token = this
            executor(function cancel(message) {
              if (token.reason) {
                // Cancellation has already been requested
                return
              }
              token.reason = new Cancel(message)
              resolvePromise(token.reason)
            })
          }
          /**
           * Throws a `Cancel` if cancellation has been requested.
           */ CancelToken.prototype.throwIfRequested = function throwIfRequested() {
            if (this.reason) {
              throw this.reason
            }
          }
          /**
           * Returns an object that contains a new `CancelToken` and a function that, when called,
           * cancels the `CancelToken`.
           */ CancelToken.source = function source() {
            var cancel
            var token = new CancelToken(function executor(c) {
              cancel = c
            })
            return { token: token, cancel: cancel }
          }
          module.exports = CancelToken
        }.apply(this, arguments))
      },
      { './Cancel': 7 }
    ],
    9: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/axios/lib/cancel/isCancel.js',
          module
        )
        ;(function() {
          'use strict'
          module.exports = function isCancel(value) {
            return !!(value && value.__CANCEL__)
          }
        }.apply(this, arguments))
      },
      {}
    ],
    10: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/axios/lib/core/Axios.js',
          module
        )
        ;(function() {
          'use strict'
          var utils = require('./../utils')
          var buildURL = require('../helpers/buildURL')
          var InterceptorManager = require('./InterceptorManager')
          var dispatchRequest = require('./dispatchRequest')
          var mergeConfig = require('./mergeConfig')
          /**
           * Create a new instance of Axios
           *
           * @param {Object} instanceConfig The default config for the instance
           */ function Axios(instanceConfig) {
            this.defaults = instanceConfig
            this.interceptors = {
              request: new InterceptorManager(),
              response: new InterceptorManager()
            }
          }
          /**
           * Dispatch a request
           *
           * @param {Object} config The config specific for this request (merged with this.defaults)
           */ Axios.prototype.request = function request(config) {
            /*eslint no-param-reassign:0*/ // Allow for axios('example/url'[, config]) a la fetch API
            if (typeof config === 'string') {
              config = arguments[1] || {}
              config.url = arguments[0]
            } else {
              config = config || {}
            }
            config = mergeConfig(this.defaults, config) // Set config.method
            if (config.method) {
              config.method = config.method.toLowerCase()
            } else if (this.defaults.method) {
              config.method = this.defaults.method.toLowerCase()
            } else {
              config.method = 'get'
            } // Hook up interceptors middleware
            var chain = [dispatchRequest, undefined]
            var promise = Promise.resolve(config)
            this.interceptors.request.forEach(
              function unshiftRequestInterceptors(interceptor) {
                chain.unshift(interceptor.fulfilled, interceptor.rejected)
              }
            )
            this.interceptors.response.forEach(
              function pushResponseInterceptors(interceptor) {
                chain.push(interceptor.fulfilled, interceptor.rejected)
              }
            )
            while (chain.length) {
              promise = promise.then(chain.shift(), chain.shift())
            }
            return promise
          }
          Axios.prototype.getUri = function getUri(config) {
            config = mergeConfig(this.defaults, config)
            return buildURL(
              config.url,
              config.params,
              config.paramsSerializer
            ).replace(/^\?/, '')
          } // Provide aliases for supported request methods
          utils.forEach(
            ['delete', 'get', 'head', 'options'],
            function forEachMethodNoData(method) {
              /*eslint func-names:0*/ Axios.prototype[method] = function(
                url,
                config
              ) {
                return this.request(
                  utils.merge(config || {}, { method: method, url: url })
                )
              }
            }
          )
          utils.forEach(
            ['post', 'put', 'patch'],
            function forEachMethodWithData(method) {
              /*eslint func-names:0*/ Axios.prototype[method] = function(
                url,
                data,
                config
              ) {
                return this.request(
                  utils.merge(config || {}, {
                    method: method,
                    url: url,
                    data: data
                  })
                )
              }
            }
          )
          module.exports = Axios
        }.apply(this, arguments))
      },
      {
        '../helpers/buildURL': 21,
        './../utils': 29,
        './InterceptorManager': 11,
        './dispatchRequest': 14,
        './mergeConfig': 16
      }
    ],
    11: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/axios/lib/core/InterceptorManager.js',
          module
        )
        ;(function() {
          'use strict'
          var utils = require('./../utils')
          function InterceptorManager() {
            this.handlers = []
          }
          /**
           * Add a new interceptor to the stack
           *
           * @param {Function} fulfilled The function to handle `then` for a `Promise`
           * @param {Function} rejected The function to handle `reject` for a `Promise`
           *
           * @return {Number} An ID used to remove interceptor later
           */ InterceptorManager.prototype.use = function use(
            fulfilled,
            rejected
          ) {
            this.handlers.push({ fulfilled: fulfilled, rejected: rejected })
            return this.handlers.length - 1
          }
          /**
           * Remove an interceptor from the stack
           *
           * @param {Number} id The ID that was returned by `use`
           */ InterceptorManager.prototype.eject = function eject(id) {
            if (this.handlers[id]) {
              this.handlers[id] = null
            }
          }
          /**
           * Iterate over all the registered interceptors
           *
           * This method is particularly useful for skipping over any
           * interceptors that may have become `null` calling `eject`.
           *
           * @param {Function} fn The function to call for each interceptor
           */ InterceptorManager.prototype.forEach = function forEach(fn) {
            utils.forEach(this.handlers, function forEachHandler(h) {
              if (h !== null) {
                fn(h)
              }
            })
          }
          module.exports = InterceptorManager
        }.apply(this, arguments))
      },
      { './../utils': 29 }
    ],
    12: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/axios/lib/core/buildFullPath.js',
          module
        )
        ;(function() {
          'use strict'
          var isAbsoluteURL = require('../helpers/isAbsoluteURL')
          var combineURLs = require('../helpers/combineURLs')
          /**
           * Creates a new URL by combining the baseURL with the requestedURL,
           * only when the requestedURL is not already an absolute URL.
           * If the requestURL is absolute, this function returns the requestedURL untouched.
           *
           * @param {string} baseURL The base URL
           * @param {string} requestedURL Absolute or relative URL to combine
           * @returns {string} The combined full path
           */ module.exports = function buildFullPath(baseURL, requestedURL) {
            if (baseURL && !isAbsoluteURL(requestedURL)) {
              return combineURLs(baseURL, requestedURL)
            }
            return requestedURL
          }
        }.apply(this, arguments))
      },
      { '../helpers/combineURLs': 22, '../helpers/isAbsoluteURL': 24 }
    ],
    13: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/axios/lib/core/createError.js',
          module
        )
        ;(function() {
          'use strict'
          var enhanceError = require('./enhanceError')
          /**
           * Create an Error with the specified message, config, error code, request and response.
           *
           * @param {string} message The error message.
           * @param {Object} config The config.
           * @param {string} [code] The error code (for example, 'ECONNABORTED').
           * @param {Object} [request] The request.
           * @param {Object} [response] The response.
           * @returns {Error} The created error.
           */ module.exports = function createError(
            message,
            config,
            code,
            request,
            response
          ) {
            var error = new Error(message)
            return enhanceError(error, config, code, request, response)
          }
        }.apply(this, arguments))
      },
      { './enhanceError': 15 }
    ],
    14: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/axios/lib/core/dispatchRequest.js',
          module
        )
        ;(function() {
          'use strict'
          var utils = require('./../utils')
          var transformData = require('./transformData')
          var isCancel = require('../cancel/isCancel')
          var defaults = require('../defaults')
          /**
           * Throws a `Cancel` if cancellation has been requested.
           */ function throwIfCancellationRequested(config) {
            if (config.cancelToken) {
              config.cancelToken.throwIfRequested()
            }
          }
          /**
           * Dispatch a request to the server using the configured adapter.
           *
           * @param {object} config The config that is to be used for the request
           * @returns {Promise} The Promise to be fulfilled
           */ module.exports = function dispatchRequest(config) {
            throwIfCancellationRequested(config) // Ensure headers exist
            config.headers = config.headers || {} // Transform request data
            config.data = transformData(
              config.data,
              config.headers,
              config.transformRequest
            ) // Flatten headers
            config.headers = utils.merge(
              config.headers.common || {},
              config.headers[config.method] || {},
              config.headers
            )
            utils.forEach(
              ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
              function cleanHeaderConfig(method) {
                delete config.headers[method]
              }
            )
            var adapter = config.adapter || defaults.adapter
            return adapter(config).then(
              function onAdapterResolution(response) {
                throwIfCancellationRequested(config) // Transform response data
                response.data = transformData(
                  response.data,
                  response.headers,
                  config.transformResponse
                )
                return response
              },
              function onAdapterRejection(reason) {
                if (!isCancel(reason)) {
                  throwIfCancellationRequested(config) // Transform response data
                  if (reason && reason.response) {
                    reason.response.data = transformData(
                      reason.response.data,
                      reason.response.headers,
                      config.transformResponse
                    )
                  }
                }
                return Promise.reject(reason)
              }
            )
          }
        }.apply(this, arguments))
      },
      {
        '../cancel/isCancel': 9,
        '../defaults': 19,
        './../utils': 29,
        './transformData': 18
      }
    ],
    15: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/axios/lib/core/enhanceError.js',
          module
        )
        ;(function() {
          'use strict'
          /**
           * Update an Error with the specified config, error code, and response.
           *
           * @param {Error} error The error to update.
           * @param {Object} config The config.
           * @param {string} [code] The error code (for example, 'ECONNABORTED').
           * @param {Object} [request] The request.
           * @param {Object} [response] The response.
           * @returns {Error} The error.
           */ module.exports = function enhanceError(
            error,
            config,
            code,
            request,
            response
          ) {
            error.config = config
            if (code) {
              error.code = code
            }
            error.request = request
            error.response = response
            error.isAxiosError = true
            error.toJSON = function() {
              return {
                // Standard
                message: this.message,
                name: this.name, // Microsoft
                description: this.description,
                number: this.number, // Mozilla
                fileName: this.fileName,
                lineNumber: this.lineNumber,
                columnNumber: this.columnNumber,
                stack: this.stack, // Axios
                config: this.config,
                code: this.code
              }
            }
            return error
          }
        }.apply(this, arguments))
      },
      {}
    ],
    16: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/axios/lib/core/mergeConfig.js',
          module
        )
        ;(function() {
          'use strict'
          var utils = require('../utils')
          /**
           * Config-specific merge-function which creates a new config-object
           * by merging two configuration objects together.
           *
           * @param {Object} config1
           * @param {Object} config2
           * @returns {Object} New object resulting from merging config2 to config1
           */ module.exports = function mergeConfig(config1, config2) {
            // eslint-disable-next-line no-param-reassign
            config2 = config2 || {}
            var config = {}
            var valueFromConfig2Keys = ['url', 'method', 'params', 'data']
            var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy']
            var defaultToConfig2Keys = [
              'baseURL',
              'url',
              'transformRequest',
              'transformResponse',
              'paramsSerializer',
              'timeout',
              'withCredentials',
              'adapter',
              'responseType',
              'xsrfCookieName',
              'xsrfHeaderName',
              'onUploadProgress',
              'onDownloadProgress',
              'maxContentLength',
              'validateStatus',
              'maxRedirects',
              'httpAgent',
              'httpsAgent',
              'cancelToken',
              'socketPath'
            ]
            utils.forEach(valueFromConfig2Keys, function valueFromConfig2(
              prop
            ) {
              if (typeof config2[prop] !== 'undefined') {
                config[prop] = config2[prop]
              }
            })
            utils.forEach(mergeDeepPropertiesKeys, function mergeDeepProperties(
              prop
            ) {
              if (utils.isObject(config2[prop])) {
                config[prop] = utils.deepMerge(config1[prop], config2[prop])
              } else if (typeof config2[prop] !== 'undefined') {
                config[prop] = config2[prop]
              } else if (utils.isObject(config1[prop])) {
                config[prop] = utils.deepMerge(config1[prop])
              } else if (typeof config1[prop] !== 'undefined') {
                config[prop] = config1[prop]
              }
            })
            utils.forEach(defaultToConfig2Keys, function defaultToConfig2(
              prop
            ) {
              if (typeof config2[prop] !== 'undefined') {
                config[prop] = config2[prop]
              } else if (typeof config1[prop] !== 'undefined') {
                config[prop] = config1[prop]
              }
            })
            var axiosKeys = valueFromConfig2Keys
              .concat(mergeDeepPropertiesKeys)
              .concat(defaultToConfig2Keys)
            var otherKeys = Object.keys(config2).filter(
              function filterAxiosKeys(key) {
                return axiosKeys.indexOf(key) === -1
              }
            )
            utils.forEach(otherKeys, function otherKeysDefaultToConfig2(prop) {
              if (typeof config2[prop] !== 'undefined') {
                config[prop] = config2[prop]
              } else if (typeof config1[prop] !== 'undefined') {
                config[prop] = config1[prop]
              }
            })
            return config
          }
        }.apply(this, arguments))
      },
      { '../utils': 29 }
    ],
    17: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/axios/lib/core/settle.js',
          module
        )
        ;(function() {
          'use strict'
          var createError = require('./createError')
          /**
           * Resolve or reject a Promise based on response status.
           *
           * @param {Function} resolve A function that resolves the promise.
           * @param {Function} reject A function that rejects the promise.
           * @param {object} response The response.
           */ module.exports = function settle(resolve, reject, response) {
            var validateStatus = response.config.validateStatus
            if (!validateStatus || validateStatus(response.status)) {
              resolve(response)
            } else {
              reject(
                createError(
                  'Request failed with status code ' + response.status,
                  response.config,
                  null,
                  response.request,
                  response
                )
              )
            }
          }
        }.apply(this, arguments))
      },
      { './createError': 13 }
    ],
    18: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/axios/lib/core/transformData.js',
          module
        )
        ;(function() {
          'use strict'
          var utils = require('./../utils')
          /**
           * Transform the data for a request or a response
           *
           * @param {Object|String} data The data to be transformed
           * @param {Array} headers The headers for the request or response
           * @param {Array|Function} fns A single function or Array of functions
           * @returns {*} The resulting transformed data
           */ module.exports = function transformData(data, headers, fns) {
            /*eslint no-param-reassign:0*/ utils.forEach(
              fns,
              function transform(fn) {
                data = fn(data, headers)
              }
            )
            return data
          }
        }.apply(this, arguments))
      },
      { './../utils': 29 }
    ],
    19: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/axios/lib/defaults.js',
          module
        )
        ;(function() {
          ;(function(process) {
            'use strict'
            var utils = require('./utils')
            var normalizeHeaderName = require('./helpers/normalizeHeaderName')
            var DEFAULT_CONTENT_TYPE = {
              'Content-Type': 'application/x-www-form-urlencoded'
            }
            function setContentTypeIfUnset(headers, value) {
              if (
                !utils.isUndefined(headers) &&
                utils.isUndefined(headers['Content-Type'])
              ) {
                headers['Content-Type'] = value
              }
            }
            function getDefaultAdapter() {
              var adapter
              if (typeof XMLHttpRequest !== 'undefined') {
                // For browsers use XHR adapter
                adapter = require('./adapters/xhr')
              } else if (
                typeof process !== 'undefined' &&
                Object.prototype.toString.call(process) === '[object process]'
              ) {
                // For node use HTTP adapter
                adapter = require('./adapters/http')
              }
              return adapter
            }
            var defaults = {
              adapter: getDefaultAdapter(),
              transformRequest: [
                function transformRequest(data, headers) {
                  normalizeHeaderName(headers, 'Accept')
                  normalizeHeaderName(headers, 'Content-Type')
                  if (
                    utils.isFormData(data) ||
                    utils.isArrayBuffer(data) ||
                    utils.isBuffer(data) ||
                    utils.isStream(data) ||
                    utils.isFile(data) ||
                    utils.isBlob(data)
                  ) {
                    return data
                  }
                  if (utils.isArrayBufferView(data)) {
                    return data.buffer
                  }
                  if (utils.isURLSearchParams(data)) {
                    setContentTypeIfUnset(
                      headers,
                      'application/x-www-form-urlencoded;charset=utf-8'
                    )
                    return data.toString()
                  }
                  if (utils.isObject(data)) {
                    setContentTypeIfUnset(
                      headers,
                      'application/json;charset=utf-8'
                    )
                    return JSON.stringify(data)
                  }
                  return data
                }
              ],
              transformResponse: [
                function transformResponse(data) {
                  /*eslint no-param-reassign:0*/ if (typeof data === 'string') {
                    try {
                      data = JSON.parse(data)
                    } catch (e) {
                      /* Ignore */
                    }
                  }
                  return data
                }
              ],
              /**
               * A timeout in milliseconds to abort a request. If set to 0 (default) a
               * timeout is not created.
               */ timeout: 0,
              xsrfCookieName: 'XSRF-TOKEN',
              xsrfHeaderName: 'X-XSRF-TOKEN',
              maxContentLength: -1,
              validateStatus: function validateStatus(status) {
                return status >= 200 && status < 300
              }
            }
            defaults.headers = {
              common: { Accept: 'application/json, text/plain, */*' }
            }
            utils.forEach(
              ['delete', 'get', 'head'],
              function forEachMethodNoData(method) {
                defaults.headers[method] = {}
              }
            )
            utils.forEach(
              ['post', 'put', 'patch'],
              function forEachMethodWithData(method) {
                defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE)
              }
            )
            module.exports = defaults
          }.call(this, require('_process')))
        }.apply(this, arguments))
      },
      {
        './adapters/http': 5,
        './adapters/xhr': 5,
        './helpers/normalizeHeaderName': 26,
        './utils': 29,
        _process: 210
      }
    ],
    20: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/axios/lib/helpers/bind.js',
          module
        )
        ;(function() {
          'use strict'
          module.exports = function bind(fn, thisArg) {
            return function wrap() {
              var args = new Array(arguments.length)
              for (var i = 0; i < args.length; i++) {
                args[i] = arguments[i]
              }
              return fn.apply(thisArg, args)
            }
          }
        }.apply(this, arguments))
      },
      {}
    ],
    21: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/axios/lib/helpers/buildURL.js',
          module
        )
        ;(function() {
          'use strict'
          var utils = require('./../utils')
          function encode(val) {
            return encodeURIComponent(val)
              .replace(/%40/gi, '@')
              .replace(/%3A/gi, ':')
              .replace(/%24/g, '$')
              .replace(/%2C/gi, ',')
              .replace(/%20/g, '+')
              .replace(/%5B/gi, '[')
              .replace(/%5D/gi, ']')
          }
          /**
           * Build a URL by appending params to the end
           *
           * @param {string} url The base of the url (e.g., http://www.google.com)
           * @param {object} [params] The params to be appended
           * @returns {string} The formatted url
           */ module.exports = function buildURL(
            url,
            params,
            paramsSerializer
          ) {
            /*eslint no-param-reassign:0*/ if (!params) {
              return url
            }
            var serializedParams
            if (paramsSerializer) {
              serializedParams = paramsSerializer(params)
            } else if (utils.isURLSearchParams(params)) {
              serializedParams = params.toString()
            } else {
              var parts = []
              utils.forEach(params, function serialize(val, key) {
                if (val === null || typeof val === 'undefined') {
                  return
                }
                if (utils.isArray(val)) {
                  key = key + '[]'
                } else {
                  val = [val]
                }
                utils.forEach(val, function parseValue(v) {
                  if (utils.isDate(v)) {
                    v = v.toISOString()
                  } else if (utils.isObject(v)) {
                    v = JSON.stringify(v)
                  }
                  parts.push(encode(key) + '=' + encode(v))
                })
              })
              serializedParams = parts.join('&')
            }
            if (serializedParams) {
              var hashmarkIndex = url.indexOf('#')
              if (hashmarkIndex !== -1) {
                url = url.slice(0, hashmarkIndex)
              }
              url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams
            }
            return url
          }
        }.apply(this, arguments))
      },
      { './../utils': 29 }
    ],
    22: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/axios/lib/helpers/combineURLs.js',
          module
        )
        ;(function() {
          'use strict'
          /**
           * Creates a new URL by combining the specified URLs
           *
           * @param {string} baseURL The base URL
           * @param {string} relativeURL The relative URL
           * @returns {string} The combined URL
           */ module.exports = function combineURLs(baseURL, relativeURL) {
            return relativeURL
              ? baseURL.replace(/\/+$/, '') +
                  '/' +
                  relativeURL.replace(/^\/+/, '')
              : baseURL
          }
        }.apply(this, arguments))
      },
      {}
    ],
    23: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/axios/lib/helpers/cookies.js',
          module
        )
        ;(function() {
          'use strict'
          var utils = require('./../utils')
          module.exports = utils.isStandardBrowserEnv() // Standard browser envs support document.cookie
            ? (function standardBrowserEnv() {
                return {
                  write: function write(
                    name,
                    value,
                    expires,
                    path,
                    domain,
                    secure
                  ) {
                    var cookie = []
                    cookie.push(name + '=' + encodeURIComponent(value))
                    if (utils.isNumber(expires)) {
                      cookie.push('expires=' + new Date(expires).toGMTString())
                    }
                    if (utils.isString(path)) {
                      cookie.push('path=' + path)
                    }
                    if (utils.isString(domain)) {
                      cookie.push('domain=' + domain)
                    }
                    if (secure === true) {
                      cookie.push('secure')
                    }
                    document.cookie = cookie.join('; ')
                  },
                  read: function read(name) {
                    var match = document.cookie.match(
                      new RegExp('(^|;\\s*)(' + name + ')=([^;]*)')
                    )
                    return match ? decodeURIComponent(match[3]) : null
                  },
                  remove: function remove(name) {
                    this.write(name, '', Date.now() - 86400000)
                  }
                }
              })() // Non standard browser env (web workers, react-native) lack needed support.
            : (function nonStandardBrowserEnv() {
                return {
                  write: function write() {},
                  read: function read() {
                    return null
                  },
                  remove: function remove() {}
                }
              })()
        }.apply(this, arguments))
      },
      { './../utils': 29 }
    ],
    24: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/axios/lib/helpers/isAbsoluteURL.js',
          module
        )
        ;(function() {
          'use strict'
          /**
           * Determines whether the specified URL is absolute
           *
           * @param {string} url The URL to test
           * @returns {boolean} True if the specified URL is absolute, otherwise false
           */ module.exports = function isAbsoluteURL(url) {
            // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
            // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
            // by any combination of letters, digits, plus, period, or hyphen.
            return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url)
          }
        }.apply(this, arguments))
      },
      {}
    ],
    25: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/axios/lib/helpers/isURLSameOrigin.js',
          module
        )
        ;(function() {
          'use strict'
          var utils = require('./../utils')
          module.exports = utils.isStandardBrowserEnv() // Standard browser envs have full support of the APIs needed to test
            ? // whether the request URL is of the same origin as current location.
              (function standardBrowserEnv() {
                var msie = /(msie|trident)/i.test(navigator.userAgent)
                var urlParsingNode = document.createElement('a')
                var originURL
                /**
                 * Parse a URL to discover it's components
                 *
                 * @param {String} url The URL to be parsed
                 * @returns {Object}
                 */ function resolveURL(url) {
                  var href = url
                  if (msie) {
                    // IE needs attribute set twice to normalize properties
                    urlParsingNode.setAttribute('href', href)
                    href = urlParsingNode.href
                  }
                  urlParsingNode.setAttribute('href', href) // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
                  return {
                    href: urlParsingNode.href,
                    protocol: urlParsingNode.protocol
                      ? urlParsingNode.protocol.replace(/:$/, '')
                      : '',
                    host: urlParsingNode.host,
                    search: urlParsingNode.search
                      ? urlParsingNode.search.replace(/^\?/, '')
                      : '',
                    hash: urlParsingNode.hash
                      ? urlParsingNode.hash.replace(/^#/, '')
                      : '',
                    hostname: urlParsingNode.hostname,
                    port: urlParsingNode.port,
                    pathname:
                      urlParsingNode.pathname.charAt(0) === '/'
                        ? urlParsingNode.pathname
                        : '/' + urlParsingNode.pathname
                  }
                }
                originURL = resolveURL(window.location.href)
                /**
                 * Determine if a URL shares the same origin as the current location
                 *
                 * @param {String} requestURL The URL to test
                 * @returns {boolean} True if URL shares the same origin, otherwise false
                 */ return function isURLSameOrigin(requestURL) {
                  var parsed = utils.isString(requestURL)
                    ? resolveURL(requestURL)
                    : requestURL
                  return (
                    parsed.protocol === originURL.protocol &&
                    parsed.host === originURL.host
                  )
                }
              })() // Non standard browser envs (web workers, react-native) lack needed support.
            : (function nonStandardBrowserEnv() {
                return function isURLSameOrigin() {
                  return true
                }
              })()
        }.apply(this, arguments))
      },
      { './../utils': 29 }
    ],
    26: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/axios/lib/helpers/normalizeHeaderName.js',
          module
        )
        ;(function() {
          'use strict'
          var utils = require('../utils')
          module.exports = function normalizeHeaderName(
            headers,
            normalizedName
          ) {
            utils.forEach(headers, function processHeader(value, name) {
              if (
                name !== normalizedName &&
                name.toUpperCase() === normalizedName.toUpperCase()
              ) {
                headers[normalizedName] = value
                delete headers[name]
              }
            })
          }
        }.apply(this, arguments))
      },
      { '../utils': 29 }
    ],
    27: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/axios/lib/helpers/parseHeaders.js',
          module
        )
        ;(function() {
          'use strict'
          var utils = require('./../utils') // Headers whose duplicates are ignored by node
          // c.f. https://nodejs.org/api/http.html#http_message_headers
          var ignoreDuplicateOf = [
            'age',
            'authorization',
            'content-length',
            'content-type',
            'etag',
            'expires',
            'from',
            'host',
            'if-modified-since',
            'if-unmodified-since',
            'last-modified',
            'location',
            'max-forwards',
            'proxy-authorization',
            'referer',
            'retry-after',
            'user-agent'
          ]
          /**
           * Parse headers into an object
           *
           * ```
           * Date: Wed, 27 Aug 2014 08:58:49 GMT
           * Content-Type: application/json
           * Connection: keep-alive
           * Transfer-Encoding: chunked
           * ```
           *
           * @param {String} headers Headers needing to be parsed
           * @returns {Object} Headers parsed into an object
           */ module.exports = function parseHeaders(headers) {
            var parsed = {}
            var key
            var val
            var i
            if (!headers) {
              return parsed
            }
            utils.forEach(headers.split('\n'), function parser(line) {
              i = line.indexOf(':')
              key = utils.trim(line.substr(0, i)).toLowerCase()
              val = utils.trim(line.substr(i + 1))
              if (key) {
                if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
                  return
                }
                if (key === 'set-cookie') {
                  parsed[key] = (parsed[key] ? parsed[key] : []).concat([val])
                } else {
                  parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val
                }
              }
            })
            return parsed
          }
        }.apply(this, arguments))
      },
      { './../utils': 29 }
    ],
    28: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/axios/lib/helpers/spread.js',
          module
        )
        ;(function() {
          'use strict'
          /**
           * Syntactic sugar for invoking a function and expanding an array for arguments.
           *
           * Common use case would be to use `Function.prototype.apply`.
           *
           *  ```js
           *  function f(x, y, z) {}
           *  var args = [1, 2, 3];
           *  f.apply(null, args);
           *  ```
           *
           * With `spread` this example can be re-written.
           *
           *  ```js
           *  spread(function(x, y, z) {})([1, 2, 3]);
           *  ```
           *
           * @param {Function} callback
           * @returns {Function}
           */ module.exports = function spread(callback) {
            return function wrap(arr) {
              return callback.apply(null, arr)
            }
          }
        }.apply(this, arguments))
      },
      {}
    ],
    29: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/axios/lib/utils.js',
          module
        )
        ;(function() {
          'use strict'
          var bind = require('./helpers/bind') /*global toString:true*/ // utils is a library of generic helper functions non-specific to axios
          var toString = Object.prototype.toString
          /**
           * Determine if a value is an Array
           *
           * @param {Object} val The value to test
           * @returns {boolean} True if value is an Array, otherwise false
           */ function isArray(val) {
            return toString.call(val) === '[object Array]'
          }
          /**
           * Determine if a value is undefined
           *
           * @param {Object} val The value to test
           * @returns {boolean} True if the value is undefined, otherwise false
           */ function isUndefined(val) {
            return typeof val === 'undefined'
          }
          /**
           * Determine if a value is a Buffer
           *
           * @param {Object} val The value to test
           * @returns {boolean} True if value is a Buffer, otherwise false
           */ function isBuffer(val) {
            return (
              val !== null &&
              !isUndefined(val) &&
              val.constructor !== null &&
              !isUndefined(val.constructor) &&
              typeof val.constructor.isBuffer === 'function' &&
              val.constructor.isBuffer(val)
            )
          }
          /**
           * Determine if a value is an ArrayBuffer
           *
           * @param {Object} val The value to test
           * @returns {boolean} True if value is an ArrayBuffer, otherwise false
           */ function isArrayBuffer(val) {
            return toString.call(val) === '[object ArrayBuffer]'
          }
          /**
           * Determine if a value is a FormData
           *
           * @param {Object} val The value to test
           * @returns {boolean} True if value is an FormData, otherwise false
           */ function isFormData(val) {
            return typeof FormData !== 'undefined' && val instanceof FormData
          }
          /**
           * Determine if a value is a view on an ArrayBuffer
           *
           * @param {Object} val The value to test
           * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
           */ function isArrayBufferView(val) {
            var result
            if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {
              result = ArrayBuffer.isView(val)
            } else {
              result = val && val.buffer && val.buffer instanceof ArrayBuffer
            }
            return result
          }
          /**
           * Determine if a value is a String
           *
           * @param {Object} val The value to test
           * @returns {boolean} True if value is a String, otherwise false
           */ function isString(val) {
            return typeof val === 'string'
          }
          /**
           * Determine if a value is a Number
           *
           * @param {Object} val The value to test
           * @returns {boolean} True if value is a Number, otherwise false
           */ function isNumber(val) {
            return typeof val === 'number'
          }
          /**
           * Determine if a value is an Object
           *
           * @param {Object} val The value to test
           * @returns {boolean} True if value is an Object, otherwise false
           */ function isObject(val) {
            return val !== null && (0, _typeof3['default'])(val) === 'object'
          }
          /**
           * Determine if a value is a Date
           *
           * @param {Object} val The value to test
           * @returns {boolean} True if value is a Date, otherwise false
           */ function isDate(val) {
            return toString.call(val) === '[object Date]'
          }
          /**
           * Determine if a value is a File
           *
           * @param {Object} val The value to test
           * @returns {boolean} True if value is a File, otherwise false
           */ function isFile(val) {
            return toString.call(val) === '[object File]'
          }
          /**
           * Determine if a value is a Blob
           *
           * @param {Object} val The value to test
           * @returns {boolean} True if value is a Blob, otherwise false
           */ function isBlob(val) {
            return toString.call(val) === '[object Blob]'
          }
          /**
           * Determine if a value is a Function
           *
           * @param {Object} val The value to test
           * @returns {boolean} True if value is a Function, otherwise false
           */ function isFunction(val) {
            return toString.call(val) === '[object Function]'
          }
          /**
           * Determine if a value is a Stream
           *
           * @param {Object} val The value to test
           * @returns {boolean} True if value is a Stream, otherwise false
           */ function isStream(val) {
            return isObject(val) && isFunction(val.pipe)
          }
          /**
           * Determine if a value is a URLSearchParams object
           *
           * @param {Object} val The value to test
           * @returns {boolean} True if value is a URLSearchParams object, otherwise false
           */ function isURLSearchParams(val) {
            return (
              typeof URLSearchParams !== 'undefined' &&
              val instanceof URLSearchParams
            )
          }
          /**
           * Trim excess whitespace off the beginning and end of a string
           *
           * @param {String} str The String to trim
           * @returns {String} The String freed of excess whitespace
           */ function trim(str) {
            return str.replace(/^\s*/, '').replace(/\s*$/, '')
          }
          /**
           * Determine if we're running in a standard browser environment
           *
           * This allows axios to run in a web worker, and react-native.
           * Both environments support XMLHttpRequest, but not fully standard globals.
           *
           * web workers:
           *  typeof window -> undefined
           *  typeof document -> undefined
           *
           * react-native:
           *  navigator.product -> 'ReactNative'
           * nativescript
           *  navigator.product -> 'NativeScript' or 'NS'
           */ function isStandardBrowserEnv() {
            if (
              typeof navigator !== 'undefined' &&
              (navigator.product === 'ReactNative' ||
                navigator.product === 'NativeScript' ||
                navigator.product === 'NS')
            ) {
              return false
            }
            return (
              typeof window !== 'undefined' && typeof document !== 'undefined'
            )
          }
          /**
           * Iterate over an Array or an Object invoking a function for each item.
           *
           * If `obj` is an Array callback will be called passing
           * the value, index, and complete array for each item.
           *
           * If 'obj' is an Object callback will be called passing
           * the value, key, and complete object for each property.
           *
           * @param {Object|Array} obj The object to iterate
           * @param {Function} fn The callback to invoke for each item
           */ function forEach(obj, fn) {
            // Don't bother if no value provided
            if (obj === null || typeof obj === 'undefined') {
              return
            } // Force an array if not already something iterable
            if ((0, _typeof3['default'])(obj) !== 'object') {
              /*eslint no-param-reassign:0*/ obj = [obj]
            }
            if (isArray(obj)) {
              // Iterate over array values
              for (var i = 0, l = obj.length; i < l; i++) {
                fn.call(null, obj[i], i, obj)
              }
            } else {
              // Iterate over object keys
              for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key)) {
                  fn.call(null, obj[key], key, obj)
                }
              }
            }
          }
          /**
           * Accepts varargs expecting each argument to be an object, then
           * immutably merges the properties of each object and returns result.
           *
           * When multiple objects contain the same key the later object in
           * the arguments list will take precedence.
           *
           * Example:
           *
           * ```js
           * var result = merge({foo: 123}, {foo: 456});
           * console.log(result.foo); // outputs 456
           * ```
           *
           * @param {Object} obj1 Object to merge
           * @returns {Object} Result of all merge properties
           */ function merge() /* obj1, obj2, obj3, ... */ {
            var result = {}
            function assignValue(val, key) {
              if (
                (0, _typeof3['default'])(result[key]) === 'object' &&
                (0, _typeof3['default'])(val) === 'object'
              ) {
                result[key] = merge(result[key], val)
              } else {
                result[key] = val
              }
            }
            for (var i = 0, l = arguments.length; i < l; i++) {
              forEach(arguments[i], assignValue)
            }
            return result
          }
          /**
           * Function equal to merge with the difference being that no reference
           * to original objects is kept.
           *
           * @see merge
           * @param {Object} obj1 Object to merge
           * @returns {Object} Result of all merge properties
           */ function deepMerge() /* obj1, obj2, obj3, ... */ {
            var result = {}
            function assignValue(val, key) {
              if (
                (0, _typeof3['default'])(result[key]) === 'object' &&
                (0, _typeof3['default'])(val) === 'object'
              ) {
                result[key] = deepMerge(result[key], val)
              } else if ((0, _typeof3['default'])(val) === 'object') {
                result[key] = deepMerge({}, val)
              } else {
                result[key] = val
              }
            }
            for (var i = 0, l = arguments.length; i < l; i++) {
              forEach(arguments[i], assignValue)
            }
            return result
          }
          /**
           * Extends object a by mutably adding to it the properties of object b.
           *
           * @param {Object} a The object to be extended
           * @param {Object} b The object to copy properties from
           * @param {Object} thisArg The object to bind function to
           * @return {Object} The resulting value of object a
           */ function extend(a, b, thisArg) {
            forEach(b, function assignValue(val, key) {
              if (thisArg && typeof val === 'function') {
                a[key] = bind(val, thisArg)
              } else {
                a[key] = val
              }
            })
            return a
          }
          module.exports = {
            isArray: isArray,
            isArrayBuffer: isArrayBuffer,
            isBuffer: isBuffer,
            isFormData: isFormData,
            isArrayBufferView: isArrayBufferView,
            isString: isString,
            isNumber: isNumber,
            isObject: isObject,
            isUndefined: isUndefined,
            isDate: isDate,
            isFile: isFile,
            isBlob: isBlob,
            isFunction: isFunction,
            isStream: isStream,
            isURLSearchParams: isURLSearchParams,
            isStandardBrowserEnv: isStandardBrowserEnv,
            forEach: forEach,
            merge: merge,
            deepMerge: deepMerge,
            extend: extend,
            trim: trim
          }
        }.apply(this, arguments))
      },
      { './helpers/bind': 20 }
    ],
    30: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/backo2/index.js',
          module
        )
        ;(function() {
          /**
           * Expose `Backoff`.
           */ module.exports = Backoff
          /**
           * Initialize backoff timer with `opts`.
           *
           * - `min` initial timeout in milliseconds [100]
           * - `max` max timeout [10000]
           * - `jitter` [0]
           * - `factor` [2]
           *
           * @param {Object} opts
           * @api public
           */ function Backoff(opts) {
            opts = opts || {}
            this.ms = opts.min || 100
            this.max = opts.max || 10000
            this.factor = opts.factor || 2
            this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0
            this.attempts = 0
          }
          /**
           * Return the backoff duration.
           *
           * @return {Number}
           * @api public
           */ Backoff.prototype.duration = function() {
            var ms = this.ms * Math.pow(this.factor, this.attempts++)
            if (this.jitter) {
              var rand = Math.random()
              var deviation = Math.floor(rand * this.jitter * ms)
              ms =
                (Math.floor(rand * 10) & 1) == 0
                  ? ms - deviation
                  : ms + deviation
            }
            return Math.min(ms, this.max) | 0
          }
          /**
           * Reset the number of attempts.
           *
           * @api public
           */ Backoff.prototype.reset = function() {
            this.attempts = 0
          }
          /**
           * Set the minimum duration
           *
           * @api public
           */ Backoff.prototype.setMin = function(min) {
            this.ms = min
          }
          /**
           * Set the maximum duration
           *
           * @api public
           */ Backoff.prototype.setMax = function(max) {
            this.max = max
          }
          /**
           * Set the jitter
           *
           * @api public
           */ Backoff.prototype.setJitter = function(jitter) {
            this.jitter = jitter
          }
        }.apply(this, arguments))
      },
      {}
    ],
    31: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/base64-arraybuffer/lib/base64-arraybuffer.js',
          module
        )
        ;(function() {
          /*
           * base64-arraybuffer
           * https://github.com/niklasvh/base64-arraybuffer
           *
           * Copyright (c) 2012 Niklas von Hertzen
           * Licensed under the MIT license.
           */ ;(function() {
            'use strict'
            var chars =
              'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/' // Use a lookup table to find the index.
            var lookup = new Uint8Array(256)
            for (var i = 0; i < chars.length; i++) {
              lookup[chars.charCodeAt(i)] = i
            }
            exports.encode = function(arraybuffer) {
              var bytes = new Uint8Array(arraybuffer),
                i,
                len = bytes.length,
                base64 = ''
              for (i = 0; i < len; i += 3) {
                base64 += chars[bytes[i] >> 2]
                base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)]
                base64 +=
                  chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)]
                base64 += chars[bytes[i + 2] & 63]
              }
              if (len % 3 === 2) {
                base64 = base64.substring(0, base64.length - 1) + '='
              } else if (len % 3 === 1) {
                base64 = base64.substring(0, base64.length - 2) + '=='
              }
              return base64
            }
            exports.decode = function(base64) {
              var bufferLength = base64.length * 0.75,
                len = base64.length,
                i,
                p = 0,
                encoded1,
                encoded2,
                encoded3,
                encoded4
              if (base64[base64.length - 1] === '=') {
                bufferLength--
                if (base64[base64.length - 2] === '=') {
                  bufferLength--
                }
              }
              var arraybuffer = new ArrayBuffer(bufferLength),
                bytes = new Uint8Array(arraybuffer)
              for (i = 0; i < len; i += 4) {
                encoded1 = lookup[base64.charCodeAt(i)]
                encoded2 = lookup[base64.charCodeAt(i + 1)]
                encoded3 = lookup[base64.charCodeAt(i + 2)]
                encoded4 = lookup[base64.charCodeAt(i + 3)]
                bytes[p++] = (encoded1 << 2) | (encoded2 >> 4)
                bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2)
                bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63)
              }
              return arraybuffer
            }
          })()
        }.apply(this, arguments))
      },
      {}
    ],
    32: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/base64-js/index.js',
          module
        )
        ;(function() {
          'use strict'
          exports.byteLength = byteLength
          exports.toByteArray = toByteArray
          exports.fromByteArray = fromByteArray
          var lookup = []
          var revLookup = []
          var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array
          var code =
            'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
          for (var i = 0, len = code.length; i < len; ++i) {
            lookup[i] = code[i]
            revLookup[code.charCodeAt(i)] = i
          } // Support decoding URL-safe base64 strings, as Node.js does.
          // See: https://en.wikipedia.org/wiki/Base64#URL_applications
          revLookup['-'.charCodeAt(0)] = 62
          revLookup['_'.charCodeAt(0)] = 63
          function getLens(b64) {
            var len = b64.length
            if (len % 4 > 0) {
              throw new Error('Invalid string. Length must be a multiple of 4')
            } // Trim off extra bytes after placeholder bytes are found
            // See: https://github.com/beatgammit/base64-js/issues/42
            var validLen = b64.indexOf('=')
            if (validLen === -1) validLen = len
            var placeHoldersLen = validLen === len ? 0 : 4 - (validLen % 4)
            return [validLen, placeHoldersLen]
          } // base64 is 4/3 + up to two characters of the original data
          function byteLength(b64) {
            var lens = getLens(b64)
            var validLen = lens[0]
            var placeHoldersLen = lens[1]
            return ((validLen + placeHoldersLen) * 3) / 4 - placeHoldersLen
          }
          function _byteLength(b64, validLen, placeHoldersLen) {
            return ((validLen + placeHoldersLen) * 3) / 4 - placeHoldersLen
          }
          function toByteArray(b64) {
            var tmp
            var lens = getLens(b64)
            var validLen = lens[0]
            var placeHoldersLen = lens[1]
            var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))
            var curByte = 0 // if there are placeholders, only get up to the last complete 4 chars
            var len = placeHoldersLen > 0 ? validLen - 4 : validLen
            var i
            for (i = 0; i < len; i += 4) {
              tmp =
                (revLookup[b64.charCodeAt(i)] << 18) |
                (revLookup[b64.charCodeAt(i + 1)] << 12) |
                (revLookup[b64.charCodeAt(i + 2)] << 6) |
                revLookup[b64.charCodeAt(i + 3)]
              arr[curByte++] = (tmp >> 16) & 0xff
              arr[curByte++] = (tmp >> 8) & 0xff
              arr[curByte++] = tmp & 0xff
            }
            if (placeHoldersLen === 2) {
              tmp =
                (revLookup[b64.charCodeAt(i)] << 2) |
                (revLookup[b64.charCodeAt(i + 1)] >> 4)
              arr[curByte++] = tmp & 0xff
            }
            if (placeHoldersLen === 1) {
              tmp =
                (revLookup[b64.charCodeAt(i)] << 10) |
                (revLookup[b64.charCodeAt(i + 1)] << 4) |
                (revLookup[b64.charCodeAt(i + 2)] >> 2)
              arr[curByte++] = (tmp >> 8) & 0xff
              arr[curByte++] = tmp & 0xff
            }
            return arr
          }
          function tripletToBase64(num) {
            return (
              lookup[(num >> 18) & 0x3f] +
              lookup[(num >> 12) & 0x3f] +
              lookup[(num >> 6) & 0x3f] +
              lookup[num & 0x3f]
            )
          }
          function encodeChunk(uint8, start, end) {
            var tmp
            var output = []
            for (var i = start; i < end; i += 3) {
              tmp =
                ((uint8[i] << 16) & 0xff0000) +
                ((uint8[i + 1] << 8) & 0xff00) +
                (uint8[i + 2] & 0xff)
              output.push(tripletToBase64(tmp))
            }
            return output.join('')
          }
          function fromByteArray(uint8) {
            var tmp
            var len = uint8.length
            var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
            var parts = []
            var maxChunkLength = 16383 // must be multiple of 3
            // go through the array every three bytes, we'll deal with trailing stuff later
            for (
              var i = 0, len2 = len - extraBytes;
              i < len2;
              i += maxChunkLength
            ) {
              parts.push(
                encodeChunk(
                  uint8,
                  i,
                  i + maxChunkLength > len2 ? len2 : i + maxChunkLength
                )
              )
            } // pad the end with zeros, but make sure to not forget the extra bytes
            if (extraBytes === 1) {
              tmp = uint8[len - 1]
              parts.push(lookup[tmp >> 2] + lookup[(tmp << 4) & 0x3f] + '==')
            } else if (extraBytes === 2) {
              tmp = (uint8[len - 2] << 8) + uint8[len - 1]
              parts.push(
                lookup[tmp >> 10] +
                  lookup[(tmp >> 4) & 0x3f] +
                  lookup[(tmp << 2) & 0x3f] +
                  '='
              )
            }
            return parts.join('')
          }
        }.apply(this, arguments))
      },
      {}
    ],
    33: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule('node_modules/blob/index.js', module)
        ;(function() {
          /**
           * Create a blob builder even when vendor prefixes exist
           */ var BlobBuilder =
            typeof BlobBuilder !== 'undefined'
              ? BlobBuilder
              : typeof WebKitBlobBuilder !== 'undefined'
              ? WebKitBlobBuilder
              : typeof MSBlobBuilder !== 'undefined'
              ? MSBlobBuilder
              : typeof MozBlobBuilder !== 'undefined'
              ? MozBlobBuilder
              : false
          /**
           * Check if Blob constructor is supported
           */ var blobSupported = (function() {
            try {
              var a = new Blob(['hi'])
              return a.size === 2
            } catch (e) {
              return false
            }
          })()
          /**
           * Check if Blob constructor supports ArrayBufferViews
           * Fails in Safari 6, so we need to map to ArrayBuffers there.
           */ var blobSupportsArrayBufferView =
            blobSupported &&
            (function() {
              try {
                var b = new Blob([new Uint8Array([1, 2])])
                return b.size === 2
              } catch (e) {
                return false
              }
            })()
          /**
           * Check if BlobBuilder is supported
           */ var blobBuilderSupported =
            BlobBuilder &&
            BlobBuilder.prototype.append &&
            BlobBuilder.prototype.getBlob
          /**
           * Helper function that maps ArrayBufferViews to ArrayBuffers
           * Used by BlobBuilder constructor and old browsers that didn't
           * support it in the Blob constructor.
           */ function mapArrayBufferViews(ary) {
            return ary.map(function(chunk) {
              if (chunk.buffer instanceof ArrayBuffer) {
                var buf = chunk.buffer // if this is a subarray, make a copy so we only
                // include the subarray region from the underlying buffer
                if (chunk.byteLength !== buf.byteLength) {
                  var copy = new Uint8Array(chunk.byteLength)
                  copy.set(
                    new Uint8Array(buf, chunk.byteOffset, chunk.byteLength)
                  )
                  buf = copy.buffer
                }
                return buf
              }
              return chunk
            })
          }
          function BlobBuilderConstructor(ary, options) {
            options = options || {}
            var bb = new BlobBuilder()
            mapArrayBufferViews(ary).forEach(function(part) {
              bb.append(part)
            })
            return options.type ? bb.getBlob(options.type) : bb.getBlob()
          }
          function BlobConstructor(ary, options) {
            return new Blob(mapArrayBufferViews(ary), options || {})
          }
          if (typeof Blob !== 'undefined') {
            BlobBuilderConstructor.prototype = Blob.prototype
            BlobConstructor.prototype = Blob.prototype
          }
          module.exports = (function() {
            if (blobSupported) {
              return blobSupportsArrayBufferView ? Blob : BlobConstructor
            } else if (blobBuilderSupported) {
              return BlobBuilderConstructor
            } else {
              return undefined
            }
          })()
        }.apply(this, arguments))
      },
      {}
    ],
    34: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/browser-resolve/empty.js',
          module
        )
        ;(function() {}.apply(this, arguments))
      },
      {}
    ],
    35: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/browserify-hmr/inc/index.js',
          module
        )
        ;(function() {
          ;(function(global) {
            'use strict'
            var has = require('../lib/has')
            var StrSet = require('../lib/str-set')
            var forEach = require('lodash/forEach')
            var some = require('lodash/some')
            var map = require('lodash/map')
            var filter = require('lodash/filter')
            var zipObject = require('lodash/zipObject')
            var forOwn = require('lodash/forOwn')
            var mapValues = require('lodash/mapValues')
            var assign = require('lodash/assign')
            function emitError(err) {
              setTimeout(function() {
                throw err
              }, 0)
            }
            function makeModuleIndexesToNames(moduleMeta) {
              var moduleIndexesToNames = {}
              forOwn(moduleMeta, function(value, name) {
                moduleIndexesToNames[value.index] = name
              })
              return moduleIndexesToNames
            }
            var console = global.console
              ? global.console
              : { error: function error() {}, log: function log() {} }
            function main(
              moduleDefs,
              cachedModules,
              moduleMeta,
              updateUrl,
              updateMode,
              supportModes,
              ignoreUnaccepted,
              updateCacheBust,
              bundleKey,
              socketio,
              bundle__filename,
              bundle__dirname
            ) {
              var moduleIndexesToNames = makeModuleIndexesToNames(moduleMeta)
              var socket
              var name, i, len
              if (!global._hmr[bundleKey].setStatus) {
                var runtimeModuleInfo = {}
                var createInfoEntry = function createInfoEntry(name) {
                  runtimeModuleInfo[name] = {
                    index: moduleMeta[name].index,
                    hash: moduleMeta[name].hash,
                    parents: new StrSet(moduleMeta[name].parents),
                    module: null,
                    disposeData: null,
                    accepters: new StrSet(),
                    accepting: new StrSet(),
                    decliners: new StrSet(),
                    declining: new StrSet(),
                    selfAcceptCbs: [], // may contain null. nonzero length means module is self-accepting
                    disposeHandlers: []
                  }
                }
                for (name in moduleMeta) {
                  if (has(moduleMeta, name)) {
                    createInfoEntry(name)
                  }
                } // loaders take a callback(err, data). They may give null for data if they
                // know there hasn't been an update.
                var fileReloaders = {
                  fs: function fs(cb) {
                    var fs
                    try {
                      fs = require('f' + 's')
                    } catch (e) {
                      cb(e)
                      return
                    }
                    fs.readFile(
                      localHmr.updateUrl || bundle__filename,
                      'utf8',
                      cb
                    )
                  },
                  ajax: function ajax(cb) {
                    var xhr
                    try {
                      xhr = new XMLHttpRequest()
                    } catch (e) {
                      cb(e)
                      return
                    }
                    xhr.onreadystatechange = function() {
                      if (xhr.readyState === 4) {
                        if (xhr.status === 200) {
                          cb(null, xhr.responseText)
                        } else {
                          cb(new Error('Request had response ' + xhr.status))
                        }
                      }
                    }
                    var url =
                      localHmr.updateUrl +
                      (updateCacheBust ? '?_v=' + +new Date() : '')
                    xhr.open('GET', url, true)
                    xhr.send()
                  }
                }
                var lastScriptData = null // cb(err, expectUpdate)
                var reloadAndRunScript = function reloadAndRunScript(cb) {
                  if (!has(fileReloaders, localHmr.updateMode)) {
                    cb(
                      new Error(
                        'updateMode ' + localHmr.updateMode + ' not implemented'
                      )
                    )
                    return
                  }
                  var reloader = fileReloaders[localHmr.updateMode]
                  reloader(function(err, data) {
                    if (err || !data || lastScriptData === data) {
                      cb(err, false)
                      return
                    }
                    lastScriptData = data
                    localHmr.newLoad = null
                    try {
                      if (bundle__filename || bundle__dirname) {
                        new Function(
                          'require',
                          '__filename',
                          '__dirname',
                          data
                        )(require, bundle__filename, bundle__dirname)
                      } else {
                        new Function('require', data)(require)
                      } // running the file sets _hmr.newLoad
                    } catch (err2) {
                      localHmr.newLoad = null
                      cb(err2)
                      return
                    }
                    if (!localHmr.newLoad) {
                      cb(
                        new Error(
                          'Reloaded script did not set hot module reload data'
                        )
                      )
                      return
                    }
                    cb(null, true)
                  })
                }
                var getOutdatedModules = function getOutdatedModules() {
                  var outdated = []
                  var name // add changed and deleted modules
                  for (name in runtimeModuleInfo) {
                    if (has(runtimeModuleInfo, name)) {
                      if (
                        !has(localHmr.newLoad.moduleMeta, name) ||
                        runtimeModuleInfo[name].hash !==
                          localHmr.newLoad.moduleMeta[name].hash
                      ) {
                        outdated.push(name)
                      }
                    }
                  } // add brand new modules
                  for (name in localHmr.newLoad.moduleMeta) {
                    if (has(localHmr.newLoad.moduleMeta, name)) {
                      if (!has(runtimeModuleInfo, name)) {
                        outdated.push(name)
                      }
                    }
                  } // add modules that are non-accepting/declining parents of outdated modules.
                  // important: if outdated has new elements added during the loop,
                  // then we iterate over them too.
                  for (var i = 0; i < outdated.length; i++) {
                    name = outdated[i]
                    if (has(runtimeModuleInfo, name)) {
                      runtimeModuleInfo[name].parents.forEach(function(
                        parentName
                      ) {
                        if (
                          runtimeModuleInfo[name].selfAcceptCbs.length === 0 &&
                          !runtimeModuleInfo[name].accepters.has(parentName) &&
                          !runtimeModuleInfo[name].decliners.has(parentName) &&
                          outdated.indexOf(parentName) === -1
                        ) {
                          outdated.push(parentName)
                        }
                      })
                    }
                  }
                  return outdated
                }
                var moduleHotCheck = function moduleHotCheck(autoApply, cb) {
                  if (typeof autoApply === 'function') {
                    cb = autoApply
                    autoApply = false
                  }
                  if (!cb) {
                    throw new Error(
                      'module.hot.check callback parameter required'
                    )
                  }
                  if (localHmr.status !== 'idle') {
                    cb(
                      new Error(
                        'module.hot.check can only be called while status is idle'
                      )
                    )
                    return
                  }
                  if (updateMode === 'websocket') {
                    cb(
                      new Error(
                        "module.hot.check can't be used when update mode is websocket"
                      )
                    )
                    return
                  }
                  localHmr.setStatus('check')
                  reloadAndRunScript(function(err, expectUpdate) {
                    if (err || !expectUpdate) {
                      localHmr.setStatus('idle')
                      cb(err, null)
                      return
                    }
                    var outdatedModules = getOutdatedModules()
                    if (outdatedModules.length === 0) {
                      localHmr.setStatus('idle')
                      cb(null, null)
                    } else {
                      localHmr.setStatus('ready')
                      if (autoApply) {
                        moduleHotApply(autoApply, cb)
                      } else {
                        cb(null, outdatedModules)
                      }
                    }
                  })
                }
                var moduleHotApply = function moduleHotApply(options, cb) {
                  if (typeof options === 'function') {
                    cb = options
                    options = null
                  }
                  if (!cb) {
                    throw new Error(
                      'module.hot.apply callback parameter required'
                    )
                  }
                  var ignoreUnaccepted = !!(options && options.ignoreUnaccepted)
                  if (localHmr.status !== 'ready') {
                    cb(
                      new Error(
                        'module.hot.apply can only be called while status is ready'
                      )
                    )
                    return
                  }
                  var outdatedModules = getOutdatedModules()
                  var isValueNotInOutdatedModules = function isValueNotInOutdatedModules(
                    value
                  ) {
                    return outdatedModules.indexOf(value) === -1
                  }
                  var i, len
                  var acceptedUpdates = filter(outdatedModules, function(name) {
                    if (has(runtimeModuleInfo, name)) {
                      if (
                        runtimeModuleInfo[name].decliners.some(
                          isValueNotInOutdatedModules
                        ) ||
                        (runtimeModuleInfo[name].accepters.size() === 0 &&
                          runtimeModuleInfo[name].selfAcceptCbs.length === 0 &&
                          runtimeModuleInfo[name].parents.some(
                            isValueNotInOutdatedModules
                          ))
                      ) {
                        return false
                      }
                    }
                    return true
                  })
                  if (
                    !ignoreUnaccepted &&
                    outdatedModules.length !== acceptedUpdates.length
                  ) {
                    localHmr.setStatus('idle')
                    cb(new Error('Some updates were declined'))
                    return
                  }
                  var an
                  for (i = 0, len = acceptedUpdates.length; i < len; i++) {
                    an = acceptedUpdates[i]
                    if (has(runtimeModuleInfo, an)) {
                      runtimeModuleInfo[an].disposeData = {}
                      for (
                        var j = 0;
                        j < runtimeModuleInfo[an].disposeHandlers.length;
                        j++
                      ) {
                        try {
                          runtimeModuleInfo[an].disposeHandlers[j].call(
                            null,
                            runtimeModuleInfo[an].disposeData
                          )
                        } catch (e) {
                          localHmr.setStatus('idle')
                          cb(e || new Error('Unknown dispose callback error'))
                          return
                        }
                      }
                    }
                  }
                  var selfAccepters = []
                  for (i = 0, len = acceptedUpdates.length; i < len; i++) {
                    an = acceptedUpdates[i]
                    if (!has(runtimeModuleInfo, an)) {
                      // new modules
                      runtimeModuleInfo[an] = {
                        index: an,
                        hash: localHmr.newLoad.moduleMeta[an].hash,
                        parents: new StrSet(
                          localHmr.newLoad.moduleMeta[an].parents
                        ),
                        module: null,
                        disposeData: null,
                        accepters: new StrSet(),
                        accepting: new StrSet(),
                        decliners: new StrSet(),
                        declining: new StrSet(),
                        selfAcceptCbs: [],
                        disposeHandlers: []
                      }
                    } else if (!has(localHmr.newLoad.moduleMeta, an)) {
                      // removed modules
                      delete cachedModules[runtimeModuleInfo[an].index]
                      delete runtimeModuleInfo[an]
                      continue
                    } else {
                      // updated modules
                      runtimeModuleInfo[an].hash =
                        localHmr.newLoad.moduleMeta[an].hash
                      runtimeModuleInfo[an].parents = new StrSet(
                        localHmr.newLoad.moduleMeta[an].parents
                      )
                      runtimeModuleInfo[an].module = null
                      runtimeModuleInfo[an].accepting.forEach(function(
                        accepted
                      ) {
                        runtimeModuleInfo[accepted].accepters.del(an)
                      })
                      runtimeModuleInfo[an].accepting = new StrSet()
                      runtimeModuleInfo[an].declining.forEach(function(
                        accepted
                      ) {
                        runtimeModuleInfo[accepted].decliners.del(an)
                      })
                      runtimeModuleInfo[an].declining = new StrSet()
                      forEach(runtimeModuleInfo[an].selfAcceptCbs, function(
                        cb
                      ) {
                        selfAccepters.push({ name: an, cb: cb })
                      })
                      runtimeModuleInfo[an].selfAcceptCbs = []
                      runtimeModuleInfo[an].disposeHandlers = []
                    }
                    moduleDefs[runtimeModuleInfo[an].index] = [
                      // module function
                      localHmr.newLoad.moduleDefs[
                        localHmr.newLoad.moduleMeta[an].index
                      ][0], // module deps
                      mapValues(
                        localHmr.newLoad.moduleDefs[
                          localHmr.newLoad.moduleMeta[an].index
                        ][1],
                        function(depIndex, depRef) {
                          var depName =
                            localHmr.newLoad.moduleIndexesToNames[depIndex]
                          if (has(localHmr.runtimeModuleInfo, depName)) {
                            return localHmr.runtimeModuleInfo[depName].index
                          } else {
                            return depName
                          }
                        }
                      )
                    ]
                    cachedModules[runtimeModuleInfo[an].index] = null
                  } // Update the accept handlers list and call the right ones
                  var errCanWait = null
                  var updatedNames = new StrSet(acceptedUpdates)
                  var oldUpdateHandlers = localHmr.updateHandlers
                  var relevantUpdateHandlers = []
                  var newUpdateHandlers = []
                  for (i = 0, len = oldUpdateHandlers.length; i < len; i++) {
                    if (!updatedNames.has(oldUpdateHandlers[i].accepter)) {
                      newUpdateHandlers.push(oldUpdateHandlers[i])
                    }
                    if (
                      updatedNames.hasIntersection(oldUpdateHandlers[i].deps)
                    ) {
                      relevantUpdateHandlers.push(oldUpdateHandlers[i])
                    }
                  }
                  localHmr.updateHandlers = newUpdateHandlers
                  for (
                    i = 0, len = relevantUpdateHandlers.length;
                    i < len;
                    i++
                  ) {
                    try {
                      relevantUpdateHandlers[i].cb.call(null, acceptedUpdates)
                    } catch (e) {
                      if (errCanWait) emitError(errCanWait)
                      errCanWait = e
                    }
                  } // Call the self-accepting modules
                  forEach(selfAccepters, function(obj) {
                    try {
                      require(runtimeModuleInfo[obj.name].index)
                    } catch (e) {
                      if (obj.cb) {
                        obj.cb.call(null, e)
                      } else {
                        if (errCanWait) emitError(errCanWait)
                        errCanWait = e
                      }
                    }
                  })
                  localHmr.setStatus('apply')
                  localHmr.setStatus('idle')
                  cb(errCanWait, acceptedUpdates)
                }
                var moduleHotSetUpdateMode = function moduleHotSetUpdateMode(
                  mode,
                  options
                ) {
                  options = options || {}
                  if (supportModes.indexOf(mode) === -1) {
                    throw new Error(
                      'Mode ' +
                        mode +
                        ' not in supportModes. Please check the Browserify-HMR plugin options.'
                    )
                  }
                  if (mode === 'ajax' && !options.url) {
                    throw new Error('url required for ajax update mode')
                  }
                  if (localHmr.status !== 'idle') {
                    throw new Error(
                      'module.hot.setUpdateMode can only be called while status is idle'
                    )
                  }
                  localHmr.newLoad = null
                  localHmr.updateMode = updateMode = mode
                  localHmr.updateUrl = updateUrl = options.url
                  updateCacheBust = options.cacheBust
                  ignoreUnaccepted = has(options, 'ignoreUnaccepted')
                    ? options.ignoreUnaccepted
                    : true
                  if (socket) {
                    socket.disconnect()
                    socket = null
                  }
                  if (mode === 'websocket') {
                    socket = setupSocket()
                  }
                }
                var setupSocket = function setupSocket() {
                  var url = updateUrl || 'http://localhost:3123'
                  var socket = socketio(url, { 'force new connection': true })
                  console.log('[HMR] Attempting websocket connection to', url)
                  var isAcceptingMessages = false
                  socket.on('connect', function() {
                    isAcceptingMessages = false
                    var syncMsg = mapValues(runtimeModuleInfo, function(
                      value,
                      name
                    ) {
                      return { hash: value.hash }
                    })
                    socket.emit('sync', syncMsg)
                  })
                  var isUpdating = false
                  var queuedUpdateMessages = []
                  socket.on('sync confirm', function() {
                    console.log('[HMR] Websocket connection successful.')
                    isAcceptingMessages = true
                    queuedUpdateMessages = []
                  })
                  socket.on('error', function(err) {
                    console.error('[HMR] Websocket error: ' + err)
                  })
                  socket.on('disconnect', function() {
                    console.log('[HMR] Websocket connection lost.')
                  })
                  var acceptNewModules = function acceptNewModules(msg) {
                    // Make sure we don't accept new modules before we've synced ourselves.
                    if (!isAcceptingMessages) return
                    if (isUpdating) {
                      queuedUpdateMessages.push(msg)
                      return
                    } // Take the message and create a localHmr.newLoad value as if the
                    // bundle had been re-executed, then call moduleHotApply.
                    isUpdating = true // random id so we can make the normally unnamed args have random names
                    var rid = String(Math.random()).replace(/[^0-9]/g, '')
                    var newModuleDefs = localHmr.newLoad
                      ? localHmr.newLoad.moduleDefs
                      : assign({}, moduleDefs)
                    var newModuleMeta = localHmr.newLoad
                      ? localHmr.newLoad.moduleMeta
                      : mapValues(runtimeModuleInfo, function(value, key) {
                          return {
                            index: value.index,
                            hash: value.hash,
                            parents: value.parents.toArray()
                          }
                        })
                    forOwn(msg.newModuleData, function(value, key) {
                      newModuleMeta[key] = {
                        index: value.index,
                        hash: value.hash,
                        parents: value.parents
                      }
                    })
                    forEach(msg.removedModules, function(removedName) {
                      delete newModuleDefs[runtimeModuleInfo[removedName].index]
                      delete newModuleMeta[removedName]
                    })
                    var newModuleIndexesToNames = makeModuleIndexesToNames(
                      newModuleMeta
                    )
                    forOwn(msg.newModuleData, function(value, key) {
                      // this part needs to run after newModuleMeta and
                      // newModuleIndexesToNames are populated.
                      var newModuleFunction = (function() {
                        var fn
                        if (bundle__filename || bundle__dirname) {
                          fn = new Function(
                            'require',
                            'module',
                            'exports',
                            '_u1' + rid,
                            '_u2' + rid,
                            '__u3' + rid,
                            '__u4' + rid,
                            '__filename',
                            '__dirname',
                            value.source
                          )
                          return function(
                            require,
                            module,
                            exports,
                            _u1,
                            _u2,
                            _u3,
                            _u4
                          ) {
                            global._hmr[bundleKey].initModule(key, module)
                            fn.call(
                              this,
                              require,
                              module,
                              exports,
                              _u1,
                              _u2,
                              _u3,
                              _u4,
                              bundle__filename,
                              bundle__dirname
                            )
                          }
                        } else {
                          fn = new Function(
                            'require',
                            'module',
                            'exports',
                            '_u1' + rid,
                            '_u2' + rid,
                            '__u3' + rid,
                            '__u4' + rid,
                            value.source
                          )
                          return function(
                            require,
                            module,
                            exports,
                            _u1,
                            _u2,
                            _u3,
                            _u4
                          ) {
                            global._hmr[bundleKey].initModule(key, module)
                            fn.call(
                              this,
                              require,
                              module,
                              exports,
                              _u1,
                              _u2,
                              _u3,
                              _u4
                            )
                          }
                        }
                      })()
                      newModuleDefs[newModuleMeta[key].index] = [
                        // module function
                        newModuleFunction, // module deps
                        mapValues(value.deps, function(depIndex, depRef) {
                          var depName = newModuleIndexesToNames[depIndex]
                          if (has(newModuleMeta, depName)) {
                            return newModuleMeta[depName].index
                          } else {
                            return depName
                          }
                        })
                      ]
                    })
                    localHmr.newLoad = {
                      moduleDefs: newModuleDefs,
                      moduleMeta: newModuleMeta,
                      moduleIndexesToNames: newModuleIndexesToNames
                    }
                    localHmr.setStatus('ready')
                    var outdatedModules = getOutdatedModules()
                    moduleHotApply(
                      { ignoreUnaccepted: ignoreUnaccepted },
                      function(err, updatedNames) {
                        if (err) {
                          console.error('[HMR] Error applying update', err)
                        }
                        if (updatedNames) {
                          console.log('[HMR] Updated modules', updatedNames)
                          if (outdatedModules.length !== updatedNames.length) {
                            var notUpdatedNames = filter(
                              outdatedModules,
                              function(name) {
                                return updatedNames.indexOf(name) === -1
                              }
                            )
                            console.log(
                              '[HMR] Some modules were not updated',
                              notUpdatedNames
                            )
                          }
                        }
                        isUpdating = false
                        var queuedMsg
                        while ((queuedMsg = queuedUpdateMessages.shift())) {
                          acceptNewModules(queuedMsg)
                        }
                      }
                    )
                  }
                  socket.on('new modules', acceptNewModules)
                  return socket
                }
                var localHmr = {
                  updateUrl: updateUrl,
                  updateMode: updateMode,
                  runtimeModuleInfo: runtimeModuleInfo,
                  status: 'idle',
                  setStatus: function setStatus(status) {
                    this.status = status
                    var statusHandlers = this.statusHandlers.slice()
                    for (var i = 0, len = statusHandlers.length; i < len; i++) {
                      statusHandlers[i].call(null, status)
                    }
                  },
                  statusHandlers: [],
                  updateHandlers: [], // during a reload this is set to an object with moduleDefs,
                  // moduleMeta, and moduleIndexesToNames properties
                  newLoad: null,
                  initModule: function initModule(name, module) {
                    // Set module.id for react-hot-loader support.
                    module.id = moduleMeta[name] ? moduleMeta[name].index : name
                    runtimeModuleInfo[name].module = module
                    module.hot = {
                      accept: function accept(deps, cb) {
                        if (!cb && (!deps || typeof deps === 'function')) {
                          // self
                          cb = deps
                          deps = null
                          runtimeModuleInfo[name].selfAcceptCbs.push(cb)
                        } else {
                          if (typeof deps === 'string') {
                            deps = [deps]
                          }
                          var depNames = new StrSet()
                          for (
                            var i = 0, depsLen = deps.length;
                            i < depsLen;
                            i++
                          ) {
                            var depIndex =
                              moduleDefs[runtimeModuleInfo[name].index][1][
                                deps[i]
                              ]
                            if (
                              depIndex === undefined ||
                              !has(moduleIndexesToNames, depIndex)
                            ) {
                              throw new Error(
                                'File does not use dependency: ' + deps[i]
                              )
                            }
                            depNames.add(moduleIndexesToNames[depIndex])
                          }
                          deps = null
                          depNames.forEach(function(depName) {
                            runtimeModuleInfo[depName].accepters.add(name)
                            runtimeModuleInfo[name].accepting.add(depName)
                          })
                          if (cb) {
                            localHmr.updateHandlers.push({
                              accepter: name,
                              deps: depNames,
                              cb: cb
                            })
                          }
                        }
                      },
                      decline: function decline(deps) {
                        if (!deps) {
                          // self
                          runtimeModuleInfo[name].decliners.add(name)
                          runtimeModuleInfo[name].declining.add(name)
                        } else {
                          if (typeof deps === 'string') {
                            deps = [deps]
                          }
                          for (
                            var i = 0, depsLen = deps.length;
                            i < depsLen;
                            i++
                          ) {
                            var depIndex =
                              moduleDefs[runtimeModuleInfo[name].index][1][
                                deps[i]
                              ]
                            if (
                              depIndex === undefined ||
                              !has(moduleIndexesToNames, depIndex)
                            ) {
                              throw new Error(
                                'File does not use dependency: ' + deps[i]
                              )
                            }
                            var depName = moduleIndexesToNames[depIndex]
                            runtimeModuleInfo[depName].decliners.add(name)
                            runtimeModuleInfo[name].declining.add(depName)
                          }
                        }
                      },
                      data: runtimeModuleInfo[name].disposeData,
                      dispose: function dispose(cb) {
                        return this.addDisposeHandler(cb)
                      },
                      addDisposeHandler: function addDisposeHandler(cb) {
                        runtimeModuleInfo[name].disposeHandlers.push(cb)
                      },
                      removeDisposeHandler: function removeDisposeHandler(cb) {
                        var ix = runtimeModuleInfo[
                          name
                        ].disposeHandlers.indexOf(cb)
                        if (ix !== -1) {
                          runtimeModuleInfo[name].disposeHandlers.splice(ix, 1)
                        }
                      }, // Management
                      check: moduleHotCheck,
                      apply: moduleHotApply,
                      status: function status(cb) {
                        if (cb) {
                          return this.addStatusHandler(cb)
                        }
                        return localHmr.status
                      },
                      addStatusHandler: function addStatusHandler(cb) {
                        localHmr.statusHandlers.push(cb)
                      },
                      removeStatusHandler: function removeStatusHandler(cb) {
                        var ix = localHmr.statusHandlers.indexOf(cb)
                        if (ix !== -1) {
                          localHmr.statusHandlers.splice(ix, 1)
                        }
                      },
                      setUpdateMode: moduleHotSetUpdateMode
                    }
                  }
                }
                global._hmr[bundleKey] = localHmr
                if (updateMode === 'websocket') {
                  socket = setupSocket()
                }
                return true
              } else {
                // We're in a reload!
                global._hmr[bundleKey].newLoad = {
                  moduleDefs: moduleDefs,
                  moduleMeta: moduleMeta,
                  moduleIndexesToNames: moduleIndexesToNames
                }
                return false
              }
            }
            module.exports = main
          }.call(
            this,
            typeof global !== 'undefined'
              ? global
              : typeof self !== 'undefined'
              ? self
              : typeof window !== 'undefined'
              ? window
              : {}
          ))
        }.apply(this, arguments))
      },
      {
        '../lib/has': 36,
        '../lib/str-set': 37,
        'lodash/assign': 179,
        'lodash/filter': 182,
        'lodash/forEach': 183,
        'lodash/forOwn': 184,
        'lodash/map': 199,
        'lodash/mapValues': 200,
        'lodash/some': 203,
        'lodash/zipObject': 207
      }
    ],
    36: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/browserify-hmr/lib/has.js',
          module
        )
        ;(function() {
          'use strict'
          function has(object, propName) {
            return Object.prototype.hasOwnProperty.call(object, propName)
          }
          module.exports = has
        }.apply(this, arguments))
      },
      {}
    ],
    37: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/browserify-hmr/lib/str-set.js',
          module
        )
        ;(function() {
          'use strict'
          var has = require('./has')
          function StrSet(other) {
            this._map = {}
            this._size = 0
            if (other) {
              for (var i = 0, len = other.length; i < len; i++) {
                this.add(other[i])
              }
            }
          }
          StrSet.prototype.add = function(value) {
            if (!this.has(value)) {
              this._map[value] = true
              this._size++
            }
          }
          StrSet.prototype.has = function(value) {
            return has(this._map, value)
          }
          StrSet.prototype.del = function(value) {
            if (this.has(value)) {
              delete this._map[value]
              this._size--
            }
          }
          StrSet.prototype.size = function() {
            return this._size
          }
          StrSet.prototype.forEach = function(cb) {
            for (var value in this._map) {
              if (has(this._map, value)) {
                cb(value)
              }
            }
          }
          StrSet.prototype.some = function(cb) {
            for (var value in this._map) {
              if (has(this._map, value)) {
                if (cb(value)) {
                  return true
                }
              }
            }
            return false
          }
          StrSet.prototype.every = function(cb) {
            return !this.some(function(x) {
              return !cb(x)
            })
          }
          StrSet.prototype.hasIntersection = function(otherStrSet) {
            var value
            if (this._size < otherStrSet._size) {
              return this.some(function(value) {
                return otherStrSet.has(value)
              })
            } else {
              var self = this
              return otherStrSet.some(function(value) {
                return self.has(value)
              })
            }
          }
          StrSet.prototype.toArray = function() {
            var arr = []
            this.forEach(function(value) {
              arr.push(value)
            })
            return arr
          }
          module.exports = StrSet
        }.apply(this, arguments))
      },
      { './has': 36 }
    ],
    38: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/buffer/index.js',
          module
        )
        ;(function() {
          ;(function(Buffer) {
            /*!
             * The buffer module from node.js, for the browser.
             *
             * @author   Feross Aboukhadijeh <https://feross.org>
             * @license  MIT
             */ /* eslint-disable no-proto */ 'use strict'
            var base64 = require('base64-js')
            var ieee754 = require('ieee754')
            var customInspectSymbol =
              typeof Symbol === 'function' &&
              typeof Symbol['for'] === 'function'
                ? Symbol['for']('nodejs.util.inspect.custom')
                : null
            exports.Buffer = Buffer
            exports.SlowBuffer = SlowBuffer
            exports.INSPECT_MAX_BYTES = 50
            var K_MAX_LENGTH = 0x7fffffff
            exports.kMaxLength = K_MAX_LENGTH
            /**
             * If `Buffer.TYPED_ARRAY_SUPPORT`:
             *   === true    Use Uint8Array implementation (fastest)
             *   === false   Print warning and recommend using `buffer` v4.x which has an Object
             *               implementation (most compatible, even IE6)
             *
             * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
             * Opera 11.6+, iOS 4.2+.
             *
             * We report that the browser does not support typed arrays if the are not subclassable
             * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
             * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
             * for __proto__ and has a buggy typed array implementation.
             */ Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()
            if (
              !Buffer.TYPED_ARRAY_SUPPORT &&
              typeof console !== 'undefined' &&
              typeof console.error === 'function'
            ) {
              console.error(
                'This browser lacks typed array (Uint8Array) support which is required by ' +
                  '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
              )
            }
            function typedArraySupport() {
              // Can typed array instances can be augmented?
              try {
                var arr = new Uint8Array(1)
                var proto = {
                  foo: function foo() {
                    return 42
                  }
                }
                Object.setPrototypeOf(proto, Uint8Array.prototype)
                Object.setPrototypeOf(arr, proto)
                return arr.foo() === 42
              } catch (e) {
                return false
              }
            }
            Object.defineProperty(Buffer.prototype, 'parent', {
              enumerable: true,
              get: function get() {
                if (!Buffer.isBuffer(this)) return undefined
                return this.buffer
              }
            })
            Object.defineProperty(Buffer.prototype, 'offset', {
              enumerable: true,
              get: function get() {
                if (!Buffer.isBuffer(this)) return undefined
                return this.byteOffset
              }
            })
            function createBuffer(length) {
              if (length > K_MAX_LENGTH) {
                throw new RangeError(
                  'The value "' + length + '" is invalid for option "size"'
                )
              } // Return an augmented `Uint8Array` instance
              var buf = new Uint8Array(length)
              Object.setPrototypeOf(buf, Buffer.prototype)
              return buf
            }
            /**
             * The Buffer constructor returns instances of `Uint8Array` that have their
             * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
             * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
             * and the `Uint8Array` methods. Square bracket notation works as expected -- it
             * returns a single octet.
             *
             * The `Uint8Array` prototype remains unmodified.
             */ function Buffer(arg, encodingOrOffset, length) {
              // Common case.
              if (typeof arg === 'number') {
                if (typeof encodingOrOffset === 'string') {
                  throw new TypeError(
                    'The "string" argument must be of type string. Received type number'
                  )
                }
                return allocUnsafe(arg)
              }
              return from(arg, encodingOrOffset, length)
            } // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
            if (
              typeof Symbol !== 'undefined' &&
              Symbol.species != null &&
              Buffer[Symbol.species] === Buffer
            ) {
              Object.defineProperty(Buffer, Symbol.species, {
                value: null,
                configurable: true,
                enumerable: false,
                writable: false
              })
            }
            Buffer.poolSize = 8192 // not used by this implementation
            function from(value, encodingOrOffset, length) {
              if (typeof value === 'string') {
                return fromString(value, encodingOrOffset)
              }
              if (ArrayBuffer.isView(value)) {
                return fromArrayLike(value)
              }
              if (value == null) {
                throw new TypeError(
                  'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
                    'or Array-like Object. Received type ' +
                    (0, _typeof3['default'])(value)
                )
              }
              if (
                isInstance(value, ArrayBuffer) ||
                (value && isInstance(value.buffer, ArrayBuffer))
              ) {
                return fromArrayBuffer(value, encodingOrOffset, length)
              }
              if (typeof value === 'number') {
                throw new TypeError(
                  'The "value" argument must not be of type number. Received type number'
                )
              }
              var valueOf = value.valueOf && value.valueOf()
              if (valueOf != null && valueOf !== value) {
                return Buffer.from(valueOf, encodingOrOffset, length)
              }
              var b = fromObject(value)
              if (b) return b
              if (
                typeof Symbol !== 'undefined' &&
                Symbol.toPrimitive != null &&
                typeof value[Symbol.toPrimitive] === 'function'
              ) {
                return Buffer.from(
                  value[Symbol.toPrimitive]('string'),
                  encodingOrOffset,
                  length
                )
              }
              throw new TypeError(
                'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
                  'or Array-like Object. Received type ' +
                  (0, _typeof3['default'])(value)
              )
            }
            /**
             * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
             * if value is a number.
             * Buffer.from(str[, encoding])
             * Buffer.from(array)
             * Buffer.from(buffer)
             * Buffer.from(arrayBuffer[, byteOffset[, length]])
             **/ Buffer.from = function(value, encodingOrOffset, length) {
              return from(value, encodingOrOffset, length)
            } // Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
            // https://github.com/feross/buffer/pull/148
            Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)
            Object.setPrototypeOf(Buffer, Uint8Array)
            function assertSize(size) {
              if (typeof size !== 'number') {
                throw new TypeError('"size" argument must be of type number')
              } else if (size < 0) {
                throw new RangeError(
                  'The value "' + size + '" is invalid for option "size"'
                )
              }
            }
            function alloc(size, fill, encoding) {
              assertSize(size)
              if (size <= 0) {
                return createBuffer(size)
              }
              if (fill !== undefined) {
                // Only pay attention to encoding if it's a string. This
                // prevents accidentally sending in a number that would
                // be interpretted as a start offset.
                return typeof encoding === 'string'
                  ? createBuffer(size).fill(fill, encoding)
                  : createBuffer(size).fill(fill)
              }
              return createBuffer(size)
            }
            /**
             * Creates a new filled Buffer instance.
             * alloc(size[, fill[, encoding]])
             **/ Buffer.alloc = function(size, fill, encoding) {
              return alloc(size, fill, encoding)
            }
            function allocUnsafe(size) {
              assertSize(size)
              return createBuffer(size < 0 ? 0 : checked(size) | 0)
            }
            /**
             * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
             * */ Buffer.allocUnsafe = function(size) {
              return allocUnsafe(size)
            }
            /**
             * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
             */ Buffer.allocUnsafeSlow = function(size) {
              return allocUnsafe(size)
            }
            function fromString(string, encoding) {
              if (typeof encoding !== 'string' || encoding === '') {
                encoding = 'utf8'
              }
              if (!Buffer.isEncoding(encoding)) {
                throw new TypeError('Unknown encoding: ' + encoding)
              }
              var length = byteLength(string, encoding) | 0
              var buf = createBuffer(length)
              var actual = buf.write(string, encoding)
              if (actual !== length) {
                // Writing a hex string, for example, that contains invalid characters will
                // cause everything after the first invalid character to be ignored. (e.g.
                // 'abxxcd' will be treated as 'ab')
                buf = buf.slice(0, actual)
              }
              return buf
            }
            function fromArrayLike(array) {
              var length = array.length < 0 ? 0 : checked(array.length) | 0
              var buf = createBuffer(length)
              for (var i = 0; i < length; i += 1) {
                buf[i] = array[i] & 255
              }
              return buf
            }
            function fromArrayBuffer(array, byteOffset, length) {
              if (byteOffset < 0 || array.byteLength < byteOffset) {
                throw new RangeError('"offset" is outside of buffer bounds')
              }
              if (array.byteLength < byteOffset + (length || 0)) {
                throw new RangeError('"length" is outside of buffer bounds')
              }
              var buf
              if (byteOffset === undefined && length === undefined) {
                buf = new Uint8Array(array)
              } else if (length === undefined) {
                buf = new Uint8Array(array, byteOffset)
              } else {
                buf = new Uint8Array(array, byteOffset, length)
              } // Return an augmented `Uint8Array` instance
              Object.setPrototypeOf(buf, Buffer.prototype)
              return buf
            }
            function fromObject(obj) {
              if (Buffer.isBuffer(obj)) {
                var len = checked(obj.length) | 0
                var buf = createBuffer(len)
                if (buf.length === 0) {
                  return buf
                }
                obj.copy(buf, 0, 0, len)
                return buf
              }
              if (obj.length !== undefined) {
                if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
                  return createBuffer(0)
                }
                return fromArrayLike(obj)
              }
              if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
                return fromArrayLike(obj.data)
              }
            }
            function checked(length) {
              // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
              // length is NaN (which is otherwise coerced to zero.)
              if (length >= K_MAX_LENGTH) {
                throw new RangeError(
                  'Attempt to allocate Buffer larger than maximum ' +
                    'size: 0x' +
                    K_MAX_LENGTH.toString(16) +
                    ' bytes'
                )
              }
              return length | 0
            }
            function SlowBuffer(length) {
              if (+length != length) {
                // eslint-disable-line eqeqeq
                length = 0
              }
              return Buffer.alloc(+length)
            }
            Buffer.isBuffer = function isBuffer(b) {
              return b != null && b._isBuffer === true && b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false
            }
            Buffer.compare = function compare(a, b) {
              if (isInstance(a, Uint8Array))
                a = Buffer.from(a, a.offset, a.byteLength)
              if (isInstance(b, Uint8Array))
                b = Buffer.from(b, b.offset, b.byteLength)
              if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
                throw new TypeError(
                  'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
                )
              }
              if (a === b) return 0
              var x = a.length
              var y = b.length
              for (var i = 0, len = Math.min(x, y); i < len; ++i) {
                if (a[i] !== b[i]) {
                  x = a[i]
                  y = b[i]
                  break
                }
              }
              if (x < y) return -1
              if (y < x) return 1
              return 0
            }
            Buffer.isEncoding = function isEncoding(encoding) {
              switch (String(encoding).toLowerCase()) {
                case 'hex':
                case 'utf8':
                case 'utf-8':
                case 'ascii':
                case 'latin1':
                case 'binary':
                case 'base64':
                case 'ucs2':
                case 'ucs-2':
                case 'utf16le':
                case 'utf-16le':
                  return true
                default:
                  return false
              }
            }
            Buffer.concat = function concat(list, length) {
              if (!Array.isArray(list)) {
                throw new TypeError(
                  '"list" argument must be an Array of Buffers'
                )
              }
              if (list.length === 0) {
                return Buffer.alloc(0)
              }
              var i
              if (length === undefined) {
                length = 0
                for (i = 0; i < list.length; ++i) {
                  length += list[i].length
                }
              }
              var buffer = Buffer.allocUnsafe(length)
              var pos = 0
              for (i = 0; i < list.length; ++i) {
                var buf = list[i]
                if (isInstance(buf, Uint8Array)) {
                  buf = Buffer.from(buf)
                }
                if (!Buffer.isBuffer(buf)) {
                  throw new TypeError(
                    '"list" argument must be an Array of Buffers'
                  )
                }
                buf.copy(buffer, pos)
                pos += buf.length
              }
              return buffer
            }
            function byteLength(string, encoding) {
              if (Buffer.isBuffer(string)) {
                return string.length
              }
              if (
                ArrayBuffer.isView(string) ||
                isInstance(string, ArrayBuffer)
              ) {
                return string.byteLength
              }
              if (typeof string !== 'string') {
                throw new TypeError(
                  'The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' +
                    'Received type ' +
                    (0, _typeof3['default'])(string)
                )
              }
              var len = string.length
              var mustMatch = arguments.length > 2 && arguments[2] === true
              if (!mustMatch && len === 0) return 0 // Use a for loop to avoid recursion
              var loweredCase = false
              for (;;) {
                switch (encoding) {
                  case 'ascii':
                  case 'latin1':
                  case 'binary':
                    return len
                  case 'utf8':
                  case 'utf-8':
                    return utf8ToBytes(string).length
                  case 'ucs2':
                  case 'ucs-2':
                  case 'utf16le':
                  case 'utf-16le':
                    return len * 2
                  case 'hex':
                    return len >>> 1
                  case 'base64':
                    return base64ToBytes(string).length
                  default:
                    if (loweredCase) {
                      return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8
                    }
                    encoding = ('' + encoding).toLowerCase()
                    loweredCase = true
                }
              }
            }
            Buffer.byteLength = byteLength
            function slowToString(encoding, start, end) {
              var loweredCase = false // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
              // property of a typed array.
              // This behaves neither like String nor Uint8Array in that we set start/end
              // to their upper/lower bounds if the value passed is out of range.
              // undefined is handled specially as per ECMA-262 6th Edition,
              // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
              if (start === undefined || start < 0) {
                start = 0
              } // Return early if start > this.length. Done here to prevent potential uint32
              // coercion fail below.
              if (start > this.length) {
                return ''
              }
              if (end === undefined || end > this.length) {
                end = this.length
              }
              if (end <= 0) {
                return ''
              } // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
              end >>>= 0
              start >>>= 0
              if (end <= start) {
                return ''
              }
              if (!encoding) encoding = 'utf8'
              while (true) {
                switch (encoding) {
                  case 'hex':
                    return hexSlice(this, start, end)
                  case 'utf8':
                  case 'utf-8':
                    return utf8Slice(this, start, end)
                  case 'ascii':
                    return asciiSlice(this, start, end)
                  case 'latin1':
                  case 'binary':
                    return latin1Slice(this, start, end)
                  case 'base64':
                    return base64Slice(this, start, end)
                  case 'ucs2':
                  case 'ucs-2':
                  case 'utf16le':
                  case 'utf-16le':
                    return utf16leSlice(this, start, end)
                  default:
                    if (loweredCase)
                      throw new TypeError('Unknown encoding: ' + encoding)
                    encoding = (encoding + '').toLowerCase()
                    loweredCase = true
                }
              }
            } // This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
            // to detect a Buffer instance. It's not possible to use `instanceof Buffer`
            // reliably in a browserify context because there could be multiple different
            // copies of the 'buffer' package in use. This method works even for Buffer
            // instances that were created from another copy of the `buffer` package.
            // See: https://github.com/feross/buffer/issues/154
            Buffer.prototype._isBuffer = true
            function swap(b, n, m) {
              var i = b[n]
              b[n] = b[m]
              b[m] = i
            }
            Buffer.prototype.swap16 = function swap16() {
              var len = this.length
              if (len % 2 !== 0) {
                throw new RangeError(
                  'Buffer size must be a multiple of 16-bits'
                )
              }
              for (var i = 0; i < len; i += 2) {
                swap(this, i, i + 1)
              }
              return this
            }
            Buffer.prototype.swap32 = function swap32() {
              var len = this.length
              if (len % 4 !== 0) {
                throw new RangeError(
                  'Buffer size must be a multiple of 32-bits'
                )
              }
              for (var i = 0; i < len; i += 4) {
                swap(this, i, i + 3)
                swap(this, i + 1, i + 2)
              }
              return this
            }
            Buffer.prototype.swap64 = function swap64() {
              var len = this.length
              if (len % 8 !== 0) {
                throw new RangeError(
                  'Buffer size must be a multiple of 64-bits'
                )
              }
              for (var i = 0; i < len; i += 8) {
                swap(this, i, i + 7)
                swap(this, i + 1, i + 6)
                swap(this, i + 2, i + 5)
                swap(this, i + 3, i + 4)
              }
              return this
            }
            Buffer.prototype.toString = function toString() {
              var length = this.length
              if (length === 0) return ''
              if (arguments.length === 0) return utf8Slice(this, 0, length)
              return slowToString.apply(this, arguments)
            }
            Buffer.prototype.toLocaleString = Buffer.prototype.toString
            Buffer.prototype.equals = function equals(b) {
              if (!Buffer.isBuffer(b))
                throw new TypeError('Argument must be a Buffer')
              if (this === b) return true
              return Buffer.compare(this, b) === 0
            }
            Buffer.prototype.inspect = function inspect() {
              var str = ''
              var max = exports.INSPECT_MAX_BYTES
              str = this.toString('hex', 0, max)
                .replace(/(.{2})/g, '$1 ')
                .trim()
              if (this.length > max) str += ' ... '
              return '<Buffer ' + str + '>'
            }
            if (customInspectSymbol) {
              Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect
            }
            Buffer.prototype.compare = function compare(
              target,
              start,
              end,
              thisStart,
              thisEnd
            ) {
              if (isInstance(target, Uint8Array)) {
                target = Buffer.from(target, target.offset, target.byteLength)
              }
              if (!Buffer.isBuffer(target)) {
                throw new TypeError(
                  'The "target" argument must be one of type Buffer or Uint8Array. ' +
                    'Received type ' +
                    (0, _typeof3['default'])(target)
                )
              }
              if (start === undefined) {
                start = 0
              }
              if (end === undefined) {
                end = target ? target.length : 0
              }
              if (thisStart === undefined) {
                thisStart = 0
              }
              if (thisEnd === undefined) {
                thisEnd = this.length
              }
              if (
                start < 0 ||
                end > target.length ||
                thisStart < 0 ||
                thisEnd > this.length
              ) {
                throw new RangeError('out of range index')
              }
              if (thisStart >= thisEnd && start >= end) {
                return 0
              }
              if (thisStart >= thisEnd) {
                return -1
              }
              if (start >= end) {
                return 1
              }
              start >>>= 0
              end >>>= 0
              thisStart >>>= 0
              thisEnd >>>= 0
              if (this === target) return 0
              var x = thisEnd - thisStart
              var y = end - start
              var len = Math.min(x, y)
              var thisCopy = this.slice(thisStart, thisEnd)
              var targetCopy = target.slice(start, end)
              for (var i = 0; i < len; ++i) {
                if (thisCopy[i] !== targetCopy[i]) {
                  x = thisCopy[i]
                  y = targetCopy[i]
                  break
                }
              }
              if (x < y) return -1
              if (y < x) return 1
              return 0
            } // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
            // OR the last index of `val` in `buffer` at offset <= `byteOffset`.
            //
            // Arguments:
            // - buffer - a Buffer to search
            // - val - a string, Buffer, or number
            // - byteOffset - an index into `buffer`; will be clamped to an int32
            // - encoding - an optional encoding, relevant is val is a string
            // - dir - true for indexOf, false for lastIndexOf
            function bidirectionalIndexOf(
              buffer,
              val,
              byteOffset,
              encoding,
              dir
            ) {
              // Empty buffer means no match
              if (buffer.length === 0) return -1 // Normalize byteOffset
              if (typeof byteOffset === 'string') {
                encoding = byteOffset
                byteOffset = 0
              } else if (byteOffset > 0x7fffffff) {
                byteOffset = 0x7fffffff
              } else if (byteOffset < -0x80000000) {
                byteOffset = -0x80000000
              }
              byteOffset = +byteOffset // Coerce to Number.
              if (numberIsNaN(byteOffset)) {
                // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
                byteOffset = dir ? 0 : buffer.length - 1
              } // Normalize byteOffset: negative offsets start from the end of the buffer
              if (byteOffset < 0) byteOffset = buffer.length + byteOffset
              if (byteOffset >= buffer.length) {
                if (dir) return -1
                else byteOffset = buffer.length - 1
              } else if (byteOffset < 0) {
                if (dir) byteOffset = 0
                else return -1
              } // Normalize val
              if (typeof val === 'string') {
                val = Buffer.from(val, encoding)
              } // Finally, search either indexOf (if dir is true) or lastIndexOf
              if (Buffer.isBuffer(val)) {
                // Special case: looking for empty string/buffer always fails
                if (val.length === 0) {
                  return -1
                }
                return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
              } else if (typeof val === 'number') {
                val = val & 0xff // Search for a byte value [0-255]
                if (typeof Uint8Array.prototype.indexOf === 'function') {
                  if (dir) {
                    return Uint8Array.prototype.indexOf.call(
                      buffer,
                      val,
                      byteOffset
                    )
                  } else {
                    return Uint8Array.prototype.lastIndexOf.call(
                      buffer,
                      val,
                      byteOffset
                    )
                  }
                }
                return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)
              }
              throw new TypeError('val must be string, number or Buffer')
            }
            function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
              var indexSize = 1
              var arrLength = arr.length
              var valLength = val.length
              if (encoding !== undefined) {
                encoding = String(encoding).toLowerCase()
                if (
                  encoding === 'ucs2' ||
                  encoding === 'ucs-2' ||
                  encoding === 'utf16le' ||
                  encoding === 'utf-16le'
                ) {
                  if (arr.length < 2 || val.length < 2) {
                    return -1
                  }
                  indexSize = 2
                  arrLength /= 2
                  valLength /= 2
                  byteOffset /= 2
                }
              }
              function read(buf, i) {
                if (indexSize === 1) {
                  return buf[i]
                } else {
                  return buf.readUInt16BE(i * indexSize)
                }
              }
              var i
              if (dir) {
                var foundIndex = -1
                for (i = byteOffset; i < arrLength; i++) {
                  if (
                    read(arr, i) ===
                    read(val, foundIndex === -1 ? 0 : i - foundIndex)
                  ) {
                    if (foundIndex === -1) foundIndex = i
                    if (i - foundIndex + 1 === valLength)
                      return foundIndex * indexSize
                  } else {
                    if (foundIndex !== -1) i -= i - foundIndex
                    foundIndex = -1
                  }
                }
              } else {
                if (byteOffset + valLength > arrLength)
                  byteOffset = arrLength - valLength
                for (i = byteOffset; i >= 0; i--) {
                  var found = true
                  for (var j = 0; j < valLength; j++) {
                    if (read(arr, i + j) !== read(val, j)) {
                      found = false
                      break
                    }
                  }
                  if (found) return i
                }
              }
              return -1
            }
            Buffer.prototype.includes = function includes(
              val,
              byteOffset,
              encoding
            ) {
              return this.indexOf(val, byteOffset, encoding) !== -1
            }
            Buffer.prototype.indexOf = function indexOf(
              val,
              byteOffset,
              encoding
            ) {
              return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
            }
            Buffer.prototype.lastIndexOf = function lastIndexOf(
              val,
              byteOffset,
              encoding
            ) {
              return bidirectionalIndexOf(
                this,
                val,
                byteOffset,
                encoding,
                false
              )
            }
            function hexWrite(buf, string, offset, length) {
              offset = Number(offset) || 0
              var remaining = buf.length - offset
              if (!length) {
                length = remaining
              } else {
                length = Number(length)
                if (length > remaining) {
                  length = remaining
                }
              }
              var strLen = string.length
              if (length > strLen / 2) {
                length = strLen / 2
              }
              for (var i = 0; i < length; ++i) {
                var parsed = parseInt(string.substr(i * 2, 2), 16)
                if (numberIsNaN(parsed)) return i
                buf[offset + i] = parsed
              }
              return i
            }
            function utf8Write(buf, string, offset, length) {
              return blitBuffer(
                utf8ToBytes(string, buf.length - offset),
                buf,
                offset,
                length
              )
            }
            function asciiWrite(buf, string, offset, length) {
              return blitBuffer(asciiToBytes(string), buf, offset, length)
            }
            function latin1Write(buf, string, offset, length) {
              return asciiWrite(buf, string, offset, length)
            }
            function base64Write(buf, string, offset, length) {
              return blitBuffer(base64ToBytes(string), buf, offset, length)
            }
            function ucs2Write(buf, string, offset, length) {
              return blitBuffer(
                utf16leToBytes(string, buf.length - offset),
                buf,
                offset,
                length
              )
            }
            Buffer.prototype.write = function write(
              string,
              offset,
              length,
              encoding
            ) {
              // Buffer#write(string)
              if (offset === undefined) {
                encoding = 'utf8'
                length = this.length
                offset = 0 // Buffer#write(string, encoding)
              } else if (length === undefined && typeof offset === 'string') {
                encoding = offset
                length = this.length
                offset = 0 // Buffer#write(string, offset[, length][, encoding])
              } else if (isFinite(offset)) {
                offset = offset >>> 0
                if (isFinite(length)) {
                  length = length >>> 0
                  if (encoding === undefined) encoding = 'utf8'
                } else {
                  encoding = length
                  length = undefined
                }
              } else {
                throw new Error(
                  'Buffer.write(string, encoding, offset[, length]) is no longer supported'
                )
              }
              var remaining = this.length - offset
              if (length === undefined || length > remaining) length = remaining
              if (
                (string.length > 0 && (length < 0 || offset < 0)) ||
                offset > this.length
              ) {
                throw new RangeError('Attempt to write outside buffer bounds')
              }
              if (!encoding) encoding = 'utf8'
              var loweredCase = false
              for (;;) {
                switch (encoding) {
                  case 'hex':
                    return hexWrite(this, string, offset, length)
                  case 'utf8':
                  case 'utf-8':
                    return utf8Write(this, string, offset, length)
                  case 'ascii':
                    return asciiWrite(this, string, offset, length)
                  case 'latin1':
                  case 'binary':
                    return latin1Write(this, string, offset, length)
                  case 'base64': // Warning: maxLength not taken into account in base64Write
                    return base64Write(this, string, offset, length)
                  case 'ucs2':
                  case 'ucs-2':
                  case 'utf16le':
                  case 'utf-16le':
                    return ucs2Write(this, string, offset, length)
                  default:
                    if (loweredCase)
                      throw new TypeError('Unknown encoding: ' + encoding)
                    encoding = ('' + encoding).toLowerCase()
                    loweredCase = true
                }
              }
            }
            Buffer.prototype.toJSON = function toJSON() {
              return {
                type: 'Buffer',
                data: Array.prototype.slice.call(this._arr || this, 0)
              }
            }
            function base64Slice(buf, start, end) {
              if (start === 0 && end === buf.length) {
                return base64.fromByteArray(buf)
              } else {
                return base64.fromByteArray(buf.slice(start, end))
              }
            }
            function utf8Slice(buf, start, end) {
              end = Math.min(buf.length, end)
              var res = []
              var i = start
              while (i < end) {
                var firstByte = buf[i]
                var codePoint = null
                var bytesPerSequence =
                  firstByte > 0xef
                    ? 4
                    : firstByte > 0xdf
                    ? 3
                    : firstByte > 0xbf
                    ? 2
                    : 1
                if (i + bytesPerSequence <= end) {
                  var secondByte, thirdByte, fourthByte, tempCodePoint
                  switch (bytesPerSequence) {
                    case 1:
                      if (firstByte < 0x80) {
                        codePoint = firstByte
                      }
                      break
                    case 2:
                      secondByte = buf[i + 1]
                      if ((secondByte & 0xc0) === 0x80) {
                        tempCodePoint =
                          ((firstByte & 0x1f) << 0x6) | (secondByte & 0x3f)
                        if (tempCodePoint > 0x7f) {
                          codePoint = tempCodePoint
                        }
                      }
                      break
                    case 3:
                      secondByte = buf[i + 1]
                      thirdByte = buf[i + 2]
                      if (
                        (secondByte & 0xc0) === 0x80 &&
                        (thirdByte & 0xc0) === 0x80
                      ) {
                        tempCodePoint =
                          ((firstByte & 0xf) << 0xc) |
                          ((secondByte & 0x3f) << 0x6) |
                          (thirdByte & 0x3f)
                        if (
                          tempCodePoint > 0x7ff &&
                          (tempCodePoint < 0xd800 || tempCodePoint > 0xdfff)
                        ) {
                          codePoint = tempCodePoint
                        }
                      }
                      break
                    case 4:
                      secondByte = buf[i + 1]
                      thirdByte = buf[i + 2]
                      fourthByte = buf[i + 3]
                      if (
                        (secondByte & 0xc0) === 0x80 &&
                        (thirdByte & 0xc0) === 0x80 &&
                        (fourthByte & 0xc0) === 0x80
                      ) {
                        tempCodePoint =
                          ((firstByte & 0xf) << 0x12) |
                          ((secondByte & 0x3f) << 0xc) |
                          ((thirdByte & 0x3f) << 0x6) |
                          (fourthByte & 0x3f)
                        if (
                          tempCodePoint > 0xffff &&
                          tempCodePoint < 0x110000
                        ) {
                          codePoint = tempCodePoint
                        }
                      }
                  }
                }
                if (codePoint === null) {
                  // we did not generate a valid codePoint so insert a
                  // replacement char (U+FFFD) and advance only 1 byte
                  codePoint = 0xfffd
                  bytesPerSequence = 1
                } else if (codePoint > 0xffff) {
                  // encode to utf16 (surrogate pair dance)
                  codePoint -= 0x10000
                  res.push(((codePoint >>> 10) & 0x3ff) | 0xd800)
                  codePoint = 0xdc00 | (codePoint & 0x3ff)
                }
                res.push(codePoint)
                i += bytesPerSequence
              }
              return decodeCodePointsArray(res)
            } // Based on http://stackoverflow.com/a/22747272/680742, the browser with
            // the lowest limit is Chrome, with 0x10000 args.
            // We go 1 magnitude less, for safety
            var MAX_ARGUMENTS_LENGTH = 0x1000
            function decodeCodePointsArray(codePoints) {
              var len = codePoints.length
              if (len <= MAX_ARGUMENTS_LENGTH) {
                return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
              } // Decode in chunks to avoid "call stack size exceeded".
              var res = ''
              var i = 0
              while (i < len) {
                res += String.fromCharCode.apply(
                  String,
                  codePoints.slice(i, (i += MAX_ARGUMENTS_LENGTH))
                )
              }
              return res
            }
            function asciiSlice(buf, start, end) {
              var ret = ''
              end = Math.min(buf.length, end)
              for (var i = start; i < end; ++i) {
                ret += String.fromCharCode(buf[i] & 0x7f)
              }
              return ret
            }
            function latin1Slice(buf, start, end) {
              var ret = ''
              end = Math.min(buf.length, end)
              for (var i = start; i < end; ++i) {
                ret += String.fromCharCode(buf[i])
              }
              return ret
            }
            function hexSlice(buf, start, end) {
              var len = buf.length
              if (!start || start < 0) start = 0
              if (!end || end < 0 || end > len) end = len
              var out = ''
              for (var i = start; i < end; ++i) {
                out += hexSliceLookupTable[buf[i]]
              }
              return out
            }
            function utf16leSlice(buf, start, end) {
              var bytes = buf.slice(start, end)
              var res = ''
              for (var i = 0; i < bytes.length; i += 2) {
                res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
              }
              return res
            }
            Buffer.prototype.slice = function slice(start, end) {
              var len = this.length
              start = ~~start
              end = end === undefined ? len : ~~end
              if (start < 0) {
                start += len
                if (start < 0) start = 0
              } else if (start > len) {
                start = len
              }
              if (end < 0) {
                end += len
                if (end < 0) end = 0
              } else if (end > len) {
                end = len
              }
              if (end < start) end = start
              var newBuf = this.subarray(start, end) // Return an augmented `Uint8Array` instance
              Object.setPrototypeOf(newBuf, Buffer.prototype)
              return newBuf
            }
            /*
             * Need to make sure that buffer isn't trying to write out of bounds.
             */ function checkOffset(offset, ext, length) {
              if (offset % 1 !== 0 || offset < 0)
                throw new RangeError('offset is not uint')
              if (offset + ext > length)
                throw new RangeError('Trying to access beyond buffer length')
            }
            Buffer.prototype.readUIntLE = function readUIntLE(
              offset,
              byteLength,
              noAssert
            ) {
              offset = offset >>> 0
              byteLength = byteLength >>> 0
              if (!noAssert) checkOffset(offset, byteLength, this.length)
              var val = this[offset]
              var mul = 1
              var i = 0
              while (++i < byteLength && (mul *= 0x100)) {
                val += this[offset + i] * mul
              }
              return val
            }
            Buffer.prototype.readUIntBE = function readUIntBE(
              offset,
              byteLength,
              noAssert
            ) {
              offset = offset >>> 0
              byteLength = byteLength >>> 0
              if (!noAssert) {
                checkOffset(offset, byteLength, this.length)
              }
              var val = this[offset + --byteLength]
              var mul = 1
              while (byteLength > 0 && (mul *= 0x100)) {
                val += this[offset + --byteLength] * mul
              }
              return val
            }
            Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
              offset = offset >>> 0
              if (!noAssert) checkOffset(offset, 1, this.length)
              return this[offset]
            }
            Buffer.prototype.readUInt16LE = function readUInt16LE(
              offset,
              noAssert
            ) {
              offset = offset >>> 0
              if (!noAssert) checkOffset(offset, 2, this.length)
              return this[offset] | (this[offset + 1] << 8)
            }
            Buffer.prototype.readUInt16BE = function readUInt16BE(
              offset,
              noAssert
            ) {
              offset = offset >>> 0
              if (!noAssert) checkOffset(offset, 2, this.length)
              return (this[offset] << 8) | this[offset + 1]
            }
            Buffer.prototype.readUInt32LE = function readUInt32LE(
              offset,
              noAssert
            ) {
              offset = offset >>> 0
              if (!noAssert) checkOffset(offset, 4, this.length)
              return (
                (this[offset] |
                  (this[offset + 1] << 8) |
                  (this[offset + 2] << 16)) +
                this[offset + 3] * 0x1000000
              )
            }
            Buffer.prototype.readUInt32BE = function readUInt32BE(
              offset,
              noAssert
            ) {
              offset = offset >>> 0
              if (!noAssert) checkOffset(offset, 4, this.length)
              return (
                this[offset] * 0x1000000 +
                ((this[offset + 1] << 16) |
                  (this[offset + 2] << 8) |
                  this[offset + 3])
              )
            }
            Buffer.prototype.readIntLE = function readIntLE(
              offset,
              byteLength,
              noAssert
            ) {
              offset = offset >>> 0
              byteLength = byteLength >>> 0
              if (!noAssert) checkOffset(offset, byteLength, this.length)
              var val = this[offset]
              var mul = 1
              var i = 0
              while (++i < byteLength && (mul *= 0x100)) {
                val += this[offset + i] * mul
              }
              mul *= 0x80
              if (val >= mul) val -= Math.pow(2, 8 * byteLength)
              return val
            }
            Buffer.prototype.readIntBE = function readIntBE(
              offset,
              byteLength,
              noAssert
            ) {
              offset = offset >>> 0
              byteLength = byteLength >>> 0
              if (!noAssert) checkOffset(offset, byteLength, this.length)
              var i = byteLength
              var mul = 1
              var val = this[offset + --i]
              while (i > 0 && (mul *= 0x100)) {
                val += this[offset + --i] * mul
              }
              mul *= 0x80
              if (val >= mul) val -= Math.pow(2, 8 * byteLength)
              return val
            }
            Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
              offset = offset >>> 0
              if (!noAssert) checkOffset(offset, 1, this.length)
              if (!(this[offset] & 0x80)) return this[offset]
              return (0xff - this[offset] + 1) * -1
            }
            Buffer.prototype.readInt16LE = function readInt16LE(
              offset,
              noAssert
            ) {
              offset = offset >>> 0
              if (!noAssert) checkOffset(offset, 2, this.length)
              var val = this[offset] | (this[offset + 1] << 8)
              return val & 0x8000 ? val | 0xffff0000 : val
            }
            Buffer.prototype.readInt16BE = function readInt16BE(
              offset,
              noAssert
            ) {
              offset = offset >>> 0
              if (!noAssert) checkOffset(offset, 2, this.length)
              var val = this[offset + 1] | (this[offset] << 8)
              return val & 0x8000 ? val | 0xffff0000 : val
            }
            Buffer.prototype.readInt32LE = function readInt32LE(
              offset,
              noAssert
            ) {
              offset = offset >>> 0
              if (!noAssert) checkOffset(offset, 4, this.length)
              return (
                this[offset] |
                (this[offset + 1] << 8) |
                (this[offset + 2] << 16) |
                (this[offset + 3] << 24)
              )
            }
            Buffer.prototype.readInt32BE = function readInt32BE(
              offset,
              noAssert
            ) {
              offset = offset >>> 0
              if (!noAssert) checkOffset(offset, 4, this.length)
              return (
                (this[offset] << 24) |
                (this[offset + 1] << 16) |
                (this[offset + 2] << 8) |
                this[offset + 3]
              )
            }
            Buffer.prototype.readFloatLE = function readFloatLE(
              offset,
              noAssert
            ) {
              offset = offset >>> 0
              if (!noAssert) checkOffset(offset, 4, this.length)
              return ieee754.read(this, offset, true, 23, 4)
            }
            Buffer.prototype.readFloatBE = function readFloatBE(
              offset,
              noAssert
            ) {
              offset = offset >>> 0
              if (!noAssert) checkOffset(offset, 4, this.length)
              return ieee754.read(this, offset, false, 23, 4)
            }
            Buffer.prototype.readDoubleLE = function readDoubleLE(
              offset,
              noAssert
            ) {
              offset = offset >>> 0
              if (!noAssert) checkOffset(offset, 8, this.length)
              return ieee754.read(this, offset, true, 52, 8)
            }
            Buffer.prototype.readDoubleBE = function readDoubleBE(
              offset,
              noAssert
            ) {
              offset = offset >>> 0
              if (!noAssert) checkOffset(offset, 8, this.length)
              return ieee754.read(this, offset, false, 52, 8)
            }
            function checkInt(buf, value, offset, ext, max, min) {
              if (!Buffer.isBuffer(buf))
                throw new TypeError(
                  '"buffer" argument must be a Buffer instance'
                )
              if (value > max || value < min)
                throw new RangeError('"value" argument is out of bounds')
              if (offset + ext > buf.length)
                throw new RangeError('Index out of range')
            }
            Buffer.prototype.writeUIntLE = function writeUIntLE(
              value,
              offset,
              byteLength,
              noAssert
            ) {
              value = +value
              offset = offset >>> 0
              byteLength = byteLength >>> 0
              if (!noAssert) {
                var maxBytes = Math.pow(2, 8 * byteLength) - 1
                checkInt(this, value, offset, byteLength, maxBytes, 0)
              }
              var mul = 1
              var i = 0
              this[offset] = value & 0xff
              while (++i < byteLength && (mul *= 0x100)) {
                this[offset + i] = (value / mul) & 0xff
              }
              return offset + byteLength
            }
            Buffer.prototype.writeUIntBE = function writeUIntBE(
              value,
              offset,
              byteLength,
              noAssert
            ) {
              value = +value
              offset = offset >>> 0
              byteLength = byteLength >>> 0
              if (!noAssert) {
                var maxBytes = Math.pow(2, 8 * byteLength) - 1
                checkInt(this, value, offset, byteLength, maxBytes, 0)
              }
              var i = byteLength - 1
              var mul = 1
              this[offset + i] = value & 0xff
              while (--i >= 0 && (mul *= 0x100)) {
                this[offset + i] = (value / mul) & 0xff
              }
              return offset + byteLength
            }
            Buffer.prototype.writeUInt8 = function writeUInt8(
              value,
              offset,
              noAssert
            ) {
              value = +value
              offset = offset >>> 0
              if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
              this[offset] = value & 0xff
              return offset + 1
            }
            Buffer.prototype.writeUInt16LE = function writeUInt16LE(
              value,
              offset,
              noAssert
            ) {
              value = +value
              offset = offset >>> 0
              if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
              this[offset] = value & 0xff
              this[offset + 1] = value >>> 8
              return offset + 2
            }
            Buffer.prototype.writeUInt16BE = function writeUInt16BE(
              value,
              offset,
              noAssert
            ) {
              value = +value
              offset = offset >>> 0
              if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
              this[offset] = value >>> 8
              this[offset + 1] = value & 0xff
              return offset + 2
            }
            Buffer.prototype.writeUInt32LE = function writeUInt32LE(
              value,
              offset,
              noAssert
            ) {
              value = +value
              offset = offset >>> 0
              if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
              this[offset + 3] = value >>> 24
              this[offset + 2] = value >>> 16
              this[offset + 1] = value >>> 8
              this[offset] = value & 0xff
              return offset + 4
            }
            Buffer.prototype.writeUInt32BE = function writeUInt32BE(
              value,
              offset,
              noAssert
            ) {
              value = +value
              offset = offset >>> 0
              if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
              this[offset] = value >>> 24
              this[offset + 1] = value >>> 16
              this[offset + 2] = value >>> 8
              this[offset + 3] = value & 0xff
              return offset + 4
            }
            Buffer.prototype.writeIntLE = function writeIntLE(
              value,
              offset,
              byteLength,
              noAssert
            ) {
              value = +value
              offset = offset >>> 0
              if (!noAssert) {
                var limit = Math.pow(2, 8 * byteLength - 1)
                checkInt(this, value, offset, byteLength, limit - 1, -limit)
              }
              var i = 0
              var mul = 1
              var sub = 0
              this[offset] = value & 0xff
              while (++i < byteLength && (mul *= 0x100)) {
                if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
                  sub = 1
                }
                this[offset + i] = (((value / mul) >> 0) - sub) & 0xff
              }
              return offset + byteLength
            }
            Buffer.prototype.writeIntBE = function writeIntBE(
              value,
              offset,
              byteLength,
              noAssert
            ) {
              value = +value
              offset = offset >>> 0
              if (!noAssert) {
                var limit = Math.pow(2, 8 * byteLength - 1)
                checkInt(this, value, offset, byteLength, limit - 1, -limit)
              }
              var i = byteLength - 1
              var mul = 1
              var sub = 0
              this[offset + i] = value & 0xff
              while (--i >= 0 && (mul *= 0x100)) {
                if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
                  sub = 1
                }
                this[offset + i] = (((value / mul) >> 0) - sub) & 0xff
              }
              return offset + byteLength
            }
            Buffer.prototype.writeInt8 = function writeInt8(
              value,
              offset,
              noAssert
            ) {
              value = +value
              offset = offset >>> 0
              if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
              if (value < 0) value = 0xff + value + 1
              this[offset] = value & 0xff
              return offset + 1
            }
            Buffer.prototype.writeInt16LE = function writeInt16LE(
              value,
              offset,
              noAssert
            ) {
              value = +value
              offset = offset >>> 0
              if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
              this[offset] = value & 0xff
              this[offset + 1] = value >>> 8
              return offset + 2
            }
            Buffer.prototype.writeInt16BE = function writeInt16BE(
              value,
              offset,
              noAssert
            ) {
              value = +value
              offset = offset >>> 0
              if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
              this[offset] = value >>> 8
              this[offset + 1] = value & 0xff
              return offset + 2
            }
            Buffer.prototype.writeInt32LE = function writeInt32LE(
              value,
              offset,
              noAssert
            ) {
              value = +value
              offset = offset >>> 0
              if (!noAssert)
                checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
              this[offset] = value & 0xff
              this[offset + 1] = value >>> 8
              this[offset + 2] = value >>> 16
              this[offset + 3] = value >>> 24
              return offset + 4
            }
            Buffer.prototype.writeInt32BE = function writeInt32BE(
              value,
              offset,
              noAssert
            ) {
              value = +value
              offset = offset >>> 0
              if (!noAssert)
                checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
              if (value < 0) value = 0xffffffff + value + 1
              this[offset] = value >>> 24
              this[offset + 1] = value >>> 16
              this[offset + 2] = value >>> 8
              this[offset + 3] = value & 0xff
              return offset + 4
            }
            function checkIEEE754(buf, value, offset, ext, max, min) {
              if (offset + ext > buf.length)
                throw new RangeError('Index out of range')
              if (offset < 0) throw new RangeError('Index out of range')
            }
            function writeFloat(buf, value, offset, littleEndian, noAssert) {
              value = +value
              offset = offset >>> 0
              if (!noAssert) {
                checkIEEE754(
                  buf,
                  value,
                  offset,
                  4,
                  3.4028234663852886e38,
                  -3.4028234663852886e38
                )
              }
              ieee754.write(buf, value, offset, littleEndian, 23, 4)
              return offset + 4
            }
            Buffer.prototype.writeFloatLE = function writeFloatLE(
              value,
              offset,
              noAssert
            ) {
              return writeFloat(this, value, offset, true, noAssert)
            }
            Buffer.prototype.writeFloatBE = function writeFloatBE(
              value,
              offset,
              noAssert
            ) {
              return writeFloat(this, value, offset, false, noAssert)
            }
            function writeDouble(buf, value, offset, littleEndian, noAssert) {
              value = +value
              offset = offset >>> 0
              if (!noAssert) {
                checkIEEE754(
                  buf,
                  value,
                  offset,
                  8,
                  1.7976931348623157e308,
                  -1.7976931348623157e308
                )
              }
              ieee754.write(buf, value, offset, littleEndian, 52, 8)
              return offset + 8
            }
            Buffer.prototype.writeDoubleLE = function writeDoubleLE(
              value,
              offset,
              noAssert
            ) {
              return writeDouble(this, value, offset, true, noAssert)
            }
            Buffer.prototype.writeDoubleBE = function writeDoubleBE(
              value,
              offset,
              noAssert
            ) {
              return writeDouble(this, value, offset, false, noAssert)
            } // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
            Buffer.prototype.copy = function copy(
              target,
              targetStart,
              start,
              end
            ) {
              if (!Buffer.isBuffer(target))
                throw new TypeError('argument should be a Buffer')
              if (!start) start = 0
              if (!end && end !== 0) end = this.length
              if (targetStart >= target.length) targetStart = target.length
              if (!targetStart) targetStart = 0
              if (end > 0 && end < start) end = start // Copy 0 bytes; we're done
              if (end === start) return 0
              if (target.length === 0 || this.length === 0) return 0 // Fatal error conditions
              if (targetStart < 0) {
                throw new RangeError('targetStart out of bounds')
              }
              if (start < 0 || start >= this.length)
                throw new RangeError('Index out of range')
              if (end < 0) throw new RangeError('sourceEnd out of bounds') // Are we oob?
              if (end > this.length) end = this.length
              if (target.length - targetStart < end - start) {
                end = target.length - targetStart + start
              }
              var len = end - start
              if (
                this === target &&
                typeof Uint8Array.prototype.copyWithin === 'function'
              ) {
                // Use built-in when available, missing from IE11
                this.copyWithin(targetStart, start, end)
              } else if (
                this === target &&
                start < targetStart &&
                targetStart < end
              ) {
                // descending copy from end
                for (var i = len - 1; i >= 0; --i) {
                  target[i + targetStart] = this[i + start]
                }
              } else {
                Uint8Array.prototype.set.call(
                  target,
                  this.subarray(start, end),
                  targetStart
                )
              }
              return len
            } // Usage:
            //    buffer.fill(number[, offset[, end]])
            //    buffer.fill(buffer[, offset[, end]])
            //    buffer.fill(string[, offset[, end]][, encoding])
            Buffer.prototype.fill = function fill(val, start, end, encoding) {
              // Handle string cases:
              if (typeof val === 'string') {
                if (typeof start === 'string') {
                  encoding = start
                  start = 0
                  end = this.length
                } else if (typeof end === 'string') {
                  encoding = end
                  end = this.length
                }
                if (encoding !== undefined && typeof encoding !== 'string') {
                  throw new TypeError('encoding must be a string')
                }
                if (
                  typeof encoding === 'string' &&
                  !Buffer.isEncoding(encoding)
                ) {
                  throw new TypeError('Unknown encoding: ' + encoding)
                }
                if (val.length === 1) {
                  var code = val.charCodeAt(0)
                  if (
                    (encoding === 'utf8' && code < 128) ||
                    encoding === 'latin1'
                  ) {
                    // Fast path: If `val` fits into a single byte, use that numeric value.
                    val = code
                  }
                }
              } else if (typeof val === 'number') {
                val = val & 255
              } else if (typeof val === 'boolean') {
                val = Number(val)
              } // Invalid ranges are not set to a default, so can range check early.
              if (start < 0 || this.length < start || this.length < end) {
                throw new RangeError('Out of range index')
              }
              if (end <= start) {
                return this
              }
              start = start >>> 0
              end = end === undefined ? this.length : end >>> 0
              if (!val) val = 0
              var i
              if (typeof val === 'number') {
                for (i = start; i < end; ++i) {
                  this[i] = val
                }
              } else {
                var bytes = Buffer.isBuffer(val)
                  ? val
                  : Buffer.from(val, encoding)
                var len = bytes.length
                if (len === 0) {
                  throw new TypeError(
                    'The value "' + val + '" is invalid for argument "value"'
                  )
                }
                for (i = 0; i < end - start; ++i) {
                  this[i + start] = bytes[i % len]
                }
              }
              return this
            } // HELPER FUNCTIONS
            // ================
            var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g
            function base64clean(str) {
              // Node takes equal signs as end of the Base64 encoding
              str = str.split('=')[0] // Node strips out invalid characters like \n and \t from the string, base64-js does not
              str = str.trim().replace(INVALID_BASE64_RE, '') // Node converts strings with length < 2 to ''
              if (str.length < 2) return '' // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
              while (str.length % 4 !== 0) {
                str = str + '='
              }
              return str
            }
            function utf8ToBytes(string, units) {
              units = units || Infinity
              var codePoint
              var length = string.length
              var leadSurrogate = null
              var bytes = []
              for (var i = 0; i < length; ++i) {
                codePoint = string.charCodeAt(i) // is surrogate component
                if (codePoint > 0xd7ff && codePoint < 0xe000) {
                  // last char was a lead
                  if (!leadSurrogate) {
                    // no lead yet
                    if (codePoint > 0xdbff) {
                      // unexpected trail
                      if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd)
                      continue
                    } else if (i + 1 === length) {
                      // unpaired lead
                      if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd)
                      continue
                    } // valid lead
                    leadSurrogate = codePoint
                    continue
                  } // 2 leads in a row
                  if (codePoint < 0xdc00) {
                    if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd)
                    leadSurrogate = codePoint
                    continue
                  } // valid surrogate pair
                  codePoint =
                    (((leadSurrogate - 0xd800) << 10) | (codePoint - 0xdc00)) +
                    0x10000
                } else if (leadSurrogate) {
                  // valid bmp char, but last char was a lead
                  if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd)
                }
                leadSurrogate = null // encode utf8
                if (codePoint < 0x80) {
                  if ((units -= 1) < 0) break
                  bytes.push(codePoint)
                } else if (codePoint < 0x800) {
                  if ((units -= 2) < 0) break
                  bytes.push(
                    (codePoint >> 0x6) | 0xc0,
                    (codePoint & 0x3f) | 0x80
                  )
                } else if (codePoint < 0x10000) {
                  if ((units -= 3) < 0) break
                  bytes.push(
                    (codePoint >> 0xc) | 0xe0,
                    ((codePoint >> 0x6) & 0x3f) | 0x80,
                    (codePoint & 0x3f) | 0x80
                  )
                } else if (codePoint < 0x110000) {
                  if ((units -= 4) < 0) break
                  bytes.push(
                    (codePoint >> 0x12) | 0xf0,
                    ((codePoint >> 0xc) & 0x3f) | 0x80,
                    ((codePoint >> 0x6) & 0x3f) | 0x80,
                    (codePoint & 0x3f) | 0x80
                  )
                } else {
                  throw new Error('Invalid code point')
                }
              }
              return bytes
            }
            function asciiToBytes(str) {
              var byteArray = []
              for (var i = 0; i < str.length; ++i) {
                // Node's code seems to be doing this and not & 0x7F..
                byteArray.push(str.charCodeAt(i) & 0xff)
              }
              return byteArray
            }
            function utf16leToBytes(str, units) {
              var c, hi, lo
              var byteArray = []
              for (var i = 0; i < str.length; ++i) {
                if ((units -= 2) < 0) break
                c = str.charCodeAt(i)
                hi = c >> 8
                lo = c % 256
                byteArray.push(lo)
                byteArray.push(hi)
              }
              return byteArray
            }
            function base64ToBytes(str) {
              return base64.toByteArray(base64clean(str))
            }
            function blitBuffer(src, dst, offset, length) {
              for (var i = 0; i < length; ++i) {
                if (i + offset >= dst.length || i >= src.length) break
                dst[i + offset] = src[i]
              }
              return i
            } // ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
            // the `instanceof` check but they should be treated as of that type.
            // See: https://github.com/feross/buffer/issues/166
            function isInstance(obj, type) {
              return (
                obj instanceof type ||
                (obj != null &&
                  obj.constructor != null &&
                  obj.constructor.name != null &&
                  obj.constructor.name === type.name)
              )
            }
            function numberIsNaN(obj) {
              // For IE11 support
              return obj !== obj // eslint-disable-line no-self-compare
            } // Create lookup table for `toString('hex')`
            // See: https://github.com/feross/buffer/issues/219
            var hexSliceLookupTable = (function() {
              var alphabet = '0123456789abcdef'
              var table = new Array(256)
              for (var i = 0; i < 16; ++i) {
                var i16 = i * 16
                for (var j = 0; j < 16; ++j) {
                  table[i16 + j] = alphabet[i] + alphabet[j]
                }
              }
              return table
            })()
          }.call(this, require('buffer').Buffer))
        }.apply(this, arguments))
      },
      { 'base64-js': 32, buffer: 38, ieee754: 60 }
    ],
    39: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/component-bind/index.js',
          module
        )
        ;(function() {
          /**
           * Slice reference.
           */ var slice = [].slice
          /**
           * Bind `obj` to `fn`.
           *
           * @param {Object} obj
           * @param {Function|String} fn or string
           * @return {Function}
           * @api public
           */ module.exports = function(obj, fn) {
            if ('string' == typeof fn) fn = obj[fn]
            if ('function' != typeof fn)
              throw new Error('bind() requires a function')
            var args = slice.call(arguments, 2)
            return function() {
              return fn.apply(obj, args.concat(slice.call(arguments)))
            }
          }
        }.apply(this, arguments))
      },
      {}
    ],
    40: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/component-emitter/index.js',
          module
        )
        ;(function() {
          /**
           * Expose `Emitter`.
           */ if (typeof module !== 'undefined') {
            module.exports = Emitter
          }
          /**
           * Initialize a new `Emitter`.
           *
           * @api public
           */ function Emitter(obj) {
            if (obj) return mixin(obj)
          }
          /**
           * Mixin the emitter properties.
           *
           * @param {Object} obj
           * @return {Object}
           * @api private
           */ function mixin(obj) {
            for (var key in Emitter.prototype) {
              obj[key] = Emitter.prototype[key]
            }
            return obj
          }
          /**
           * Listen on the given `event` with `fn`.
           *
           * @param {String} event
           * @param {Function} fn
           * @return {Emitter}
           * @api public
           */ Emitter.prototype.on = Emitter.prototype.addEventListener = function(
            event,
            fn
          ) {
            this._callbacks = this._callbacks || {}
            ;(this._callbacks['$' + event] =
              this._callbacks['$' + event] || []).push(fn)
            return this
          }
          /**
           * Adds an `event` listener that will be invoked a single
           * time then automatically removed.
           *
           * @param {String} event
           * @param {Function} fn
           * @return {Emitter}
           * @api public
           */ Emitter.prototype.once = function(event, fn) {
            function on() {
              this.off(event, on)
              fn.apply(this, arguments)
            }
            on.fn = fn
            this.on(event, on)
            return this
          }
          /**
           * Remove the given callback for `event` or all
           * registered callbacks.
           *
           * @param {String} event
           * @param {Function} fn
           * @return {Emitter}
           * @api public
           */ Emitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function(
            event,
            fn
          ) {
            this._callbacks = this._callbacks || {} // all
            if (0 == arguments.length) {
              this._callbacks = {}
              return this
            } // specific event
            var callbacks = this._callbacks['$' + event]
            if (!callbacks) return this // remove all handlers
            if (1 == arguments.length) {
              delete this._callbacks['$' + event]
              return this
            } // remove specific handler
            var cb
            for (var i = 0; i < callbacks.length; i++) {
              cb = callbacks[i]
              if (cb === fn || cb.fn === fn) {
                callbacks.splice(i, 1)
                break
              }
            }
            return this
          }
          /**
           * Emit `event` with the given args.
           *
           * @param {String} event
           * @param {Mixed} ...
           * @return {Emitter}
           */ Emitter.prototype.emit = function(event) {
            this._callbacks = this._callbacks || {}
            var args = [].slice.call(arguments, 1),
              callbacks = this._callbacks['$' + event]
            if (callbacks) {
              callbacks = callbacks.slice(0)
              for (var i = 0, len = callbacks.length; i < len; ++i) {
                callbacks[i].apply(this, args)
              }
            }
            return this
          }
          /**
           * Return array of callbacks for `event`.
           *
           * @param {String} event
           * @return {Array}
           * @api public
           */ Emitter.prototype.listeners = function(event) {
            this._callbacks = this._callbacks || {}
            return this._callbacks['$' + event] || []
          }
          /**
           * Check if this emitter has `event` handlers.
           *
           * @param {String} event
           * @return {Boolean}
           * @api public
           */ Emitter.prototype.hasListeners = function(event) {
            return !!this.listeners(event).length
          }
        }.apply(this, arguments))
      },
      {}
    ],
    41: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/component-inherit/index.js',
          module
        )
        ;(function() {
          module.exports = function(a, b) {
            var fn = function fn() {}
            fn.prototype = b.prototype
            a.prototype = new fn()
            a.prototype.constructor = a
          }
        }.apply(this, arguments))
      },
      {}
    ],
    42: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/engine.io-client/lib/index.js',
          module
        )
        ;(function() {
          module.exports = require('./socket')
          /**
           * Exports parser
           *
           * @api public
           *
           */ module.exports.parser = require('engine.io-parser')
        }.apply(this, arguments))
      },
      { './socket': 43, 'engine.io-parser': 54 }
    ],
    43: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/engine.io-client/lib/socket.js',
          module
        )
        ;(function() {
          /**
           * Module dependencies.
           */ var transports = require('./transports/index')
          var Emitter = require('component-emitter')
          var debug = require('debug')('engine.io-client:socket')
          var index = require('indexof')
          var parser = require('engine.io-parser')
          var parseuri = require('parseuri')
          var parseqs = require('parseqs')
          /**
           * Module exports.
           */ module.exports = Socket
          /**
           * Socket constructor.
           *
           * @param {String|Object} uri or options
           * @param {Object} options
           * @api public
           */ function Socket(uri, opts) {
            if (!(this instanceof Socket)) return new Socket(uri, opts)
            opts = opts || {}
            if (uri && 'object' === (0, _typeof3['default'])(uri)) {
              opts = uri
              uri = null
            }
            if (uri) {
              uri = parseuri(uri)
              opts.hostname = uri.host
              opts.secure = uri.protocol === 'https' || uri.protocol === 'wss'
              opts.port = uri.port
              if (uri.query) opts.query = uri.query
            } else if (opts.host) {
              opts.hostname = parseuri(opts.host).host
            }
            this.secure =
              null != opts.secure
                ? opts.secure
                : typeof location !== 'undefined' &&
                  'https:' === location.protocol
            if (opts.hostname && !opts.port) {
              // if no port is specified manually, use the protocol default
              opts.port = this.secure ? '443' : '80'
            }
            this.agent = opts.agent || false
            this.hostname =
              opts.hostname ||
              (typeof location !== 'undefined'
                ? location.hostname
                : 'localhost')
            this.port =
              opts.port ||
              (typeof location !== 'undefined' && location.port
                ? location.port
                : this.secure
                ? 443
                : 80)
            this.query = opts.query || {}
            if ('string' === typeof this.query)
              this.query = parseqs.decode(this.query)
            this.upgrade = false !== opts.upgrade
            this.path = (opts.path || '/engine.io').replace(/\/$/, '') + '/'
            this.forceJSONP = !!opts.forceJSONP
            this.jsonp = false !== opts.jsonp
            this.forceBase64 = !!opts.forceBase64
            this.enablesXDR = !!opts.enablesXDR
            this.withCredentials = false !== opts.withCredentials
            this.timestampParam = opts.timestampParam || 't'
            this.timestampRequests = opts.timestampRequests
            this.transports = opts.transports || ['polling', 'websocket']
            this.transportOptions = opts.transportOptions || {}
            this.readyState = ''
            this.writeBuffer = []
            this.prevBufferLen = 0
            this.policyPort = opts.policyPort || 843
            this.rememberUpgrade = opts.rememberUpgrade || false
            this.binaryType = null
            this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades
            this.perMessageDeflate =
              false !== opts.perMessageDeflate
                ? opts.perMessageDeflate || {}
                : false
            if (true === this.perMessageDeflate) this.perMessageDeflate = {}
            if (
              this.perMessageDeflate &&
              null == this.perMessageDeflate.threshold
            ) {
              this.perMessageDeflate.threshold = 1024
            } // SSL options for Node.js client
            this.pfx = opts.pfx || null
            this.key = opts.key || null
            this.passphrase = opts.passphrase || null
            this.cert = opts.cert || null
            this.ca = opts.ca || null
            this.ciphers = opts.ciphers || null
            this.rejectUnauthorized =
              opts.rejectUnauthorized === undefined
                ? true
                : opts.rejectUnauthorized
            this.forceNode = !!opts.forceNode // detect ReactNative environment
            this.isReactNative =
              typeof navigator !== 'undefined' &&
              typeof navigator.product === 'string' &&
              navigator.product.toLowerCase() === 'reactnative' // other options for Node.js or ReactNative client
            if (typeof self === 'undefined' || this.isReactNative) {
              if (
                opts.extraHeaders &&
                Object.keys(opts.extraHeaders).length > 0
              ) {
                this.extraHeaders = opts.extraHeaders
              }
              if (opts.localAddress) {
                this.localAddress = opts.localAddress
              }
            } // set on handshake
            this.id = null
            this.upgrades = null
            this.pingInterval = null
            this.pingTimeout = null // set on heartbeat
            this.pingIntervalTimer = null
            this.pingTimeoutTimer = null
            this.open()
          }
          Socket.priorWebsocketSuccess = false
          /**
           * Mix in `Emitter`.
           */ Emitter(Socket.prototype)
          /**
           * Protocol version.
           *
           * @api public
           */ Socket.protocol = parser.protocol // this is an int
          /**
           * Expose deps for legacy compatibility
           * and standalone browser access.
           */ Socket.Socket = Socket
          Socket.Transport = require('./transport')
          Socket.transports = require('./transports/index')
          Socket.parser = require('engine.io-parser')
          /**
           * Creates transport of the given type.
           *
           * @param {String} transport name
           * @return {Transport}
           * @api private
           */ Socket.prototype.createTransport = function(name) {
            debug('creating transport "%s"', name)
            var query = clone(this.query) // append engine.io protocol identifier
            query.EIO = parser.protocol // transport name
            query.transport = name // per-transport options
            var options = this.transportOptions[name] || {} // session id if we already have one
            if (this.id) query.sid = this.id
            var transport = new transports[name]({
              query: query,
              socket: this,
              agent: options.agent || this.agent,
              hostname: options.hostname || this.hostname,
              port: options.port || this.port,
              secure: options.secure || this.secure,
              path: options.path || this.path,
              forceJSONP: options.forceJSONP || this.forceJSONP,
              jsonp: options.jsonp || this.jsonp,
              forceBase64: options.forceBase64 || this.forceBase64,
              enablesXDR: options.enablesXDR || this.enablesXDR,
              withCredentials: options.withCredentials || this.withCredentials,
              timestampRequests:
                options.timestampRequests || this.timestampRequests,
              timestampParam: options.timestampParam || this.timestampParam,
              policyPort: options.policyPort || this.policyPort,
              pfx: options.pfx || this.pfx,
              key: options.key || this.key,
              passphrase: options.passphrase || this.passphrase,
              cert: options.cert || this.cert,
              ca: options.ca || this.ca,
              ciphers: options.ciphers || this.ciphers,
              rejectUnauthorized:
                options.rejectUnauthorized || this.rejectUnauthorized,
              perMessageDeflate:
                options.perMessageDeflate || this.perMessageDeflate,
              extraHeaders: options.extraHeaders || this.extraHeaders,
              forceNode: options.forceNode || this.forceNode,
              localAddress: options.localAddress || this.localAddress,
              requestTimeout: options.requestTimeout || this.requestTimeout,
              protocols: options.protocols || void 0,
              isReactNative: this.isReactNative
            })
            return transport
          }
          function clone(obj) {
            var o = {}
            for (var i in obj) {
              if (obj.hasOwnProperty(i)) {
                o[i] = obj[i]
              }
            }
            return o
          }
          /**
           * Initializes transport to use and starts probe.
           *
           * @api private
           */ Socket.prototype.open = function() {
            var transport
            if (
              this.rememberUpgrade &&
              Socket.priorWebsocketSuccess &&
              this.transports.indexOf('websocket') !== -1
            ) {
              transport = 'websocket'
            } else if (0 === this.transports.length) {
              // Emit error on next tick so it can be listened to
              var self = this
              setTimeout(function() {
                self.emit('error', 'No transports available')
              }, 0)
              return
            } else {
              transport = this.transports[0]
            }
            this.readyState = 'opening' // Retry with the next transport if the transport is disabled (jsonp: false)
            try {
              transport = this.createTransport(transport)
            } catch (e) {
              this.transports.shift()
              this.open()
              return
            }
            transport.open()
            this.setTransport(transport)
          }
          /**
           * Sets the current transport. Disables the existing one (if any).
           *
           * @api private
           */ Socket.prototype.setTransport = function(transport) {
            debug('setting transport %s', transport.name)
            var self = this
            if (this.transport) {
              debug('clearing existing transport %s', this.transport.name)
              this.transport.removeAllListeners()
            } // set up transport
            this.transport = transport // set up transport listeners
            transport
              .on('drain', function() {
                self.onDrain()
              })
              .on('packet', function(packet) {
                self.onPacket(packet)
              })
              .on('error', function(e) {
                self.onError(e)
              })
              .on('close', function() {
                self.onClose('transport close')
              })
          }
          /**
           * Probes a transport.
           *
           * @param {String} transport name
           * @api private
           */ Socket.prototype.probe = function(name) {
            debug('probing transport "%s"', name)
            var transport = this.createTransport(name, { probe: 1 })
            var failed = false
            var self = this
            Socket.priorWebsocketSuccess = false
            function onTransportOpen() {
              if (self.onlyBinaryUpgrades) {
                var upgradeLosesBinary =
                  !this.supportsBinary && self.transport.supportsBinary
                failed = failed || upgradeLosesBinary
              }
              if (failed) return
              debug('probe transport "%s" opened', name)
              transport.send([{ type: 'ping', data: 'probe' }])
              transport.once('packet', function(msg) {
                if (failed) return
                if ('pong' === msg.type && 'probe' === msg.data) {
                  debug('probe transport "%s" pong', name)
                  self.upgrading = true
                  self.emit('upgrading', transport)
                  if (!transport) return
                  Socket.priorWebsocketSuccess = 'websocket' === transport.name
                  debug('pausing current transport "%s"', self.transport.name)
                  self.transport.pause(function() {
                    if (failed) return
                    if ('closed' === self.readyState) return
                    debug('changing transport and sending upgrade packet')
                    cleanup()
                    self.setTransport(transport)
                    transport.send([{ type: 'upgrade' }])
                    self.emit('upgrade', transport)
                    transport = null
                    self.upgrading = false
                    self.flush()
                  })
                } else {
                  debug('probe transport "%s" failed', name)
                  var err = new Error('probe error')
                  err.transport = transport.name
                  self.emit('upgradeError', err)
                }
              })
            }
            function freezeTransport() {
              if (failed) return // Any callback called by transport should be ignored since now
              failed = true
              cleanup()
              transport.close()
              transport = null
            } // Handle any error that happens while probing
            function onerror(err) {
              var error = new Error('probe error: ' + err)
              error.transport = transport.name
              freezeTransport()
              debug(
                'probe transport "%s" failed because of error: %s',
                name,
                err
              )
              self.emit('upgradeError', error)
            }
            function onTransportClose() {
              onerror('transport closed')
            } // When the socket is closed while we're probing
            function onclose() {
              onerror('socket closed')
            } // When the socket is upgraded while we're probing
            function onupgrade(to) {
              if (transport && to.name !== transport.name) {
                debug('"%s" works - aborting "%s"', to.name, transport.name)
                freezeTransport()
              }
            } // Remove all listeners on the transport and on self
            function cleanup() {
              transport.removeListener('open', onTransportOpen)
              transport.removeListener('error', onerror)
              transport.removeListener('close', onTransportClose)
              self.removeListener('close', onclose)
              self.removeListener('upgrading', onupgrade)
            }
            transport.once('open', onTransportOpen)
            transport.once('error', onerror)
            transport.once('close', onTransportClose)
            this.once('close', onclose)
            this.once('upgrading', onupgrade)
            transport.open()
          }
          /**
           * Called when connection is deemed open.
           *
           * @api public
           */ Socket.prototype.onOpen = function() {
            debug('socket open')
            this.readyState = 'open'
            Socket.priorWebsocketSuccess = 'websocket' === this.transport.name
            this.emit('open')
            this.flush() // we check for `readyState` in case an `open`
            // listener already closed the socket
            if (
              'open' === this.readyState &&
              this.upgrade &&
              this.transport.pause
            ) {
              debug('starting upgrade probes')
              for (var i = 0, l = this.upgrades.length; i < l; i++) {
                this.probe(this.upgrades[i])
              }
            }
          }
          /**
           * Handles a packet.
           *
           * @api private
           */ Socket.prototype.onPacket = function(packet) {
            if (
              'opening' === this.readyState ||
              'open' === this.readyState ||
              'closing' === this.readyState
            ) {
              debug(
                'socket receive: type "%s", data "%s"',
                packet.type,
                packet.data
              )
              this.emit('packet', packet) // Socket is live - any packet counts
              this.emit('heartbeat')
              switch (packet.type) {
                case 'open':
                  this.onHandshake(JSON.parse(packet.data))
                  break
                case 'pong':
                  this.setPing()
                  this.emit('pong')
                  break
                case 'error':
                  var err = new Error('server error')
                  err.code = packet.data
                  this.onError(err)
                  break
                case 'message':
                  this.emit('data', packet.data)
                  this.emit('message', packet.data)
                  break
              }
            } else {
              debug(
                'packet received with socket readyState "%s"',
                this.readyState
              )
            }
          }
          /**
           * Called upon handshake completion.
           *
           * @param {Object} handshake obj
           * @api private
           */ Socket.prototype.onHandshake = function(data) {
            this.emit('handshake', data)
            this.id = data.sid
            this.transport.query.sid = data.sid
            this.upgrades = this.filterUpgrades(data.upgrades)
            this.pingInterval = data.pingInterval
            this.pingTimeout = data.pingTimeout
            this.onOpen() // In case open handler closes socket
            if ('closed' === this.readyState) return
            this.setPing() // Prolong liveness of socket on heartbeat
            this.removeListener('heartbeat', this.onHeartbeat)
            this.on('heartbeat', this.onHeartbeat)
          }
          /**
           * Resets ping timeout.
           *
           * @api private
           */ Socket.prototype.onHeartbeat = function(timeout) {
            clearTimeout(this.pingTimeoutTimer)
            var self = this
            self.pingTimeoutTimer = setTimeout(function() {
              if ('closed' === self.readyState) return
              self.onClose('ping timeout')
            }, timeout || self.pingInterval + self.pingTimeout)
          }
          /**
           * Pings server every `this.pingInterval` and expects response
           * within `this.pingTimeout` or closes connection.
           *
           * @api private
           */ Socket.prototype.setPing = function() {
            var self = this
            clearTimeout(self.pingIntervalTimer)
            self.pingIntervalTimer = setTimeout(function() {
              debug(
                'writing ping packet - expecting pong within %sms',
                self.pingTimeout
              )
              self.ping()
              self.onHeartbeat(self.pingTimeout)
            }, self.pingInterval)
          }
          /**
           * Sends a ping packet.
           *
           * @api private
           */ Socket.prototype.ping = function() {
            var self = this
            this.sendPacket('ping', function() {
              self.emit('ping')
            })
          }
          /**
           * Called on `drain` event
           *
           * @api private
           */ Socket.prototype.onDrain = function() {
            this.writeBuffer.splice(0, this.prevBufferLen) // setting prevBufferLen = 0 is very important
            // for example, when upgrading, upgrade packet is sent over,
            // and a nonzero prevBufferLen could cause problems on `drain`
            this.prevBufferLen = 0
            if (0 === this.writeBuffer.length) {
              this.emit('drain')
            } else {
              this.flush()
            }
          }
          /**
           * Flush write buffers.
           *
           * @api private
           */ Socket.prototype.flush = function() {
            if (
              'closed' !== this.readyState &&
              this.transport.writable &&
              !this.upgrading &&
              this.writeBuffer.length
            ) {
              debug('flushing %d packets in socket', this.writeBuffer.length)
              this.transport.send(this.writeBuffer) // keep track of current length of writeBuffer
              // splice writeBuffer and callbackBuffer on `drain`
              this.prevBufferLen = this.writeBuffer.length
              this.emit('flush')
            }
          }
          /**
           * Sends a message.
           *
           * @param {String} message.
           * @param {Function} callback function.
           * @param {Object} options.
           * @return {Socket} for chaining.
           * @api public
           */ Socket.prototype.write = Socket.prototype.send = function(
            msg,
            options,
            fn
          ) {
            this.sendPacket('message', msg, options, fn)
            return this
          }
          /**
           * Sends a packet.
           *
           * @param {String} packet type.
           * @param {String} data.
           * @param {Object} options.
           * @param {Function} callback function.
           * @api private
           */ Socket.prototype.sendPacket = function(type, data, options, fn) {
            if ('function' === typeof data) {
              fn = data
              data = undefined
            }
            if ('function' === typeof options) {
              fn = options
              options = null
            }
            if ('closing' === this.readyState || 'closed' === this.readyState) {
              return
            }
            options = options || {}
            options.compress = false !== options.compress
            var packet = { type: type, data: data, options: options }
            this.emit('packetCreate', packet)
            this.writeBuffer.push(packet)
            if (fn) this.once('flush', fn)
            this.flush()
          }
          /**
           * Closes the connection.
           *
           * @api private
           */ Socket.prototype.close = function() {
            if ('opening' === this.readyState || 'open' === this.readyState) {
              this.readyState = 'closing'
              var self = this
              if (this.writeBuffer.length) {
                this.once('drain', function() {
                  if (this.upgrading) {
                    waitForUpgrade()
                  } else {
                    close()
                  }
                })
              } else if (this.upgrading) {
                waitForUpgrade()
              } else {
                close()
              }
            }
            function close() {
              self.onClose('forced close')
              debug('socket closing - telling transport to close')
              self.transport.close()
            }
            function cleanupAndClose() {
              self.removeListener('upgrade', cleanupAndClose)
              self.removeListener('upgradeError', cleanupAndClose)
              close()
            }
            function waitForUpgrade() {
              // wait for upgrade to finish since we can't send packets while pausing a transport
              self.once('upgrade', cleanupAndClose)
              self.once('upgradeError', cleanupAndClose)
            }
            return this
          }
          /**
           * Called upon transport error
           *
           * @api private
           */ Socket.prototype.onError = function(err) {
            debug('socket error %j', err)
            Socket.priorWebsocketSuccess = false
            this.emit('error', err)
            this.onClose('transport error', err)
          }
          /**
           * Called upon transport close.
           *
           * @api private
           */ Socket.prototype.onClose = function(reason, desc) {
            if (
              'opening' === this.readyState ||
              'open' === this.readyState ||
              'closing' === this.readyState
            ) {
              debug('socket close with reason: "%s"', reason)
              var self = this // clear timers
              clearTimeout(this.pingIntervalTimer)
              clearTimeout(this.pingTimeoutTimer) // stop event from firing again for transport
              this.transport.removeAllListeners('close') // ensure transport won't stay open
              this.transport.close() // ignore further transport communication
              this.transport.removeAllListeners() // set ready state
              this.readyState = 'closed' // clear session id
              this.id = null // emit close event
              this.emit('close', reason, desc) // clean buffers after, so users can still
              // grab the buffers on `close` event
              self.writeBuffer = []
              self.prevBufferLen = 0
            }
          }
          /**
           * Filters upgrades, returning only those matching client transports.
           *
           * @param {Array} server upgrades
           * @api private
           *
           */ Socket.prototype.filterUpgrades = function(upgrades) {
            var filteredUpgrades = []
            for (var i = 0, j = upgrades.length; i < j; i++) {
              if (~index(this.transports, upgrades[i]))
                filteredUpgrades.push(upgrades[i])
            }
            return filteredUpgrades
          }
        }.apply(this, arguments))
      },
      {
        './transport': 44,
        './transports/index': 45,
        'component-emitter': 40,
        debug: 51,
        'engine.io-parser': 54,
        indexof: 61,
        parseqs: 208,
        parseuri: 209
      }
    ],
    44: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/engine.io-client/lib/transport.js',
          module
        )
        ;(function() {
          /**
           * Module dependencies.
           */ var parser = require('engine.io-parser')
          var Emitter = require('component-emitter')
          /**
           * Module exports.
           */ module.exports = Transport
          /**
           * Transport abstract constructor.
           *
           * @param {Object} options.
           * @api private
           */ function Transport(opts) {
            this.path = opts.path
            this.hostname = opts.hostname
            this.port = opts.port
            this.secure = opts.secure
            this.query = opts.query
            this.timestampParam = opts.timestampParam
            this.timestampRequests = opts.timestampRequests
            this.readyState = ''
            this.agent = opts.agent || false
            this.socket = opts.socket
            this.enablesXDR = opts.enablesXDR
            this.withCredentials = opts.withCredentials // SSL options for Node.js client
            this.pfx = opts.pfx
            this.key = opts.key
            this.passphrase = opts.passphrase
            this.cert = opts.cert
            this.ca = opts.ca
            this.ciphers = opts.ciphers
            this.rejectUnauthorized = opts.rejectUnauthorized
            this.forceNode = opts.forceNode // results of ReactNative environment detection
            this.isReactNative = opts.isReactNative // other options for Node.js client
            this.extraHeaders = opts.extraHeaders
            this.localAddress = opts.localAddress
          }
          /**
           * Mix in `Emitter`.
           */ Emitter(Transport.prototype)
          /**
           * Emits an error.
           *
           * @param {String} str
           * @return {Transport} for chaining
           * @api public
           */ Transport.prototype.onError = function(msg, desc) {
            var err = new Error(msg)
            err.type = 'TransportError'
            err.description = desc
            this.emit('error', err)
            return this
          }
          /**
           * Opens the transport.
           *
           * @api public
           */ Transport.prototype.open = function() {
            if ('closed' === this.readyState || '' === this.readyState) {
              this.readyState = 'opening'
              this.doOpen()
            }
            return this
          }
          /**
           * Closes the transport.
           *
           * @api private
           */ Transport.prototype.close = function() {
            if ('opening' === this.readyState || 'open' === this.readyState) {
              this.doClose()
              this.onClose()
            }
            return this
          }
          /**
           * Sends multiple packets.
           *
           * @param {Array} packets
           * @api private
           */ Transport.prototype.send = function(packets) {
            if ('open' === this.readyState) {
              this.write(packets)
            } else {
              throw new Error('Transport not open')
            }
          }
          /**
           * Called upon open
           *
           * @api private
           */ Transport.prototype.onOpen = function() {
            this.readyState = 'open'
            this.writable = true
            this.emit('open')
          }
          /**
           * Called with data.
           *
           * @param {String} data
           * @api private
           */ Transport.prototype.onData = function(data) {
            var packet = parser.decodePacket(data, this.socket.binaryType)
            this.onPacket(packet)
          }
          /**
           * Called with a decoded packet.
           */ Transport.prototype.onPacket = function(packet) {
            this.emit('packet', packet)
          }
          /**
           * Called upon close.
           *
           * @api private
           */ Transport.prototype.onClose = function() {
            this.readyState = 'closed'
            this.emit('close')
          }
        }.apply(this, arguments))
      },
      { 'component-emitter': 40, 'engine.io-parser': 54 }
    ],
    45: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/engine.io-client/lib/transports/index.js',
          module
        )
        ;(function() {
          /**
           * Module dependencies
           */ var XMLHttpRequest = require('xmlhttprequest-ssl')
          var XHR = require('./polling-xhr')
          var JSONP = require('./polling-jsonp')
          var websocket = require('./websocket')
          /**
           * Export transports.
           */ exports.polling = polling
          exports.websocket = websocket
          /**
           * Polling transport polymorphic constructor.
           * Decides on xhr vs jsonp based on feature detection.
           *
           * @api private
           */ function polling(opts) {
            var xhr
            var xd = false
            var xs = false
            var jsonp = false !== opts.jsonp
            if (typeof location !== 'undefined') {
              var isSSL = 'https:' === location.protocol
              var port = location.port // some user agents have empty `location.port`
              if (!port) {
                port = isSSL ? 443 : 80
              }
              xd = opts.hostname !== location.hostname || port !== opts.port
              xs = opts.secure !== isSSL
            }
            opts.xdomain = xd
            opts.xscheme = xs
            xhr = new XMLHttpRequest(opts)
            if ('open' in xhr && !opts.forceJSONP) {
              return new XHR(opts)
            } else {
              if (!jsonp) throw new Error('JSONP disabled')
              return new JSONP(opts)
            }
          }
        }.apply(this, arguments))
      },
      {
        './polling-jsonp': 46,
        './polling-xhr': 47,
        './websocket': 49,
        'xmlhttprequest-ssl': 50
      }
    ],
    46: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/engine.io-client/lib/transports/polling-jsonp.js',
          module
        )
        ;(function() {
          ;(function(global) {
            /**
             * Module requirements.
             */ var Polling = require('./polling')
            var inherit = require('component-inherit')
            /**
             * Module exports.
             */ module.exports = JSONPPolling
            /**
             * Cached regular expressions.
             */ var rNewline = /\n/g
            var rEscapedNewline = /\\n/g
            /**
             * Global JSONP callbacks.
             */ var callbacks
            /**
             * Noop.
             */ function empty() {}
            /**
             * Until https://github.com/tc39/proposal-global is shipped.
             */ function glob() {
              return typeof self !== 'undefined'
                ? self
                : typeof window !== 'undefined'
                ? window
                : typeof global !== 'undefined'
                ? global
                : {}
            }
            /**
             * JSONP Polling constructor.
             *
             * @param {Object} opts.
             * @api public
             */ function JSONPPolling(opts) {
              Polling.call(this, opts)
              this.query = this.query || {} // define global callbacks array if not present
              // we do this here (lazily) to avoid unneeded global pollution
              if (!callbacks) {
                // we need to consider multiple engines in the same page
                var global = glob()
                callbacks = global.___eio = global.___eio || []
              } // callback identifier
              this.index = callbacks.length // add callback to jsonp global
              var self = this
              callbacks.push(function(msg) {
                self.onData(msg)
              }) // append to query string
              this.query.j = this.index // prevent spurious errors from being emitted when the window is unloaded
              if (typeof addEventListener === 'function') {
                addEventListener(
                  'beforeunload',
                  function() {
                    if (self.script) self.script.onerror = empty
                  },
                  false
                )
              }
            }
            /**
             * Inherits from Polling.
             */ inherit(JSONPPolling, Polling)
            /*
             * JSONP only supports binary as base64 encoded strings
             */ JSONPPolling.prototype.supportsBinary = false
            /**
             * Closes the socket.
             *
             * @api private
             */ JSONPPolling.prototype.doClose = function() {
              if (this.script) {
                this.script.parentNode.removeChild(this.script)
                this.script = null
              }
              if (this.form) {
                this.form.parentNode.removeChild(this.form)
                this.form = null
                this.iframe = null
              }
              Polling.prototype.doClose.call(this)
            }
            /**
             * Starts a poll cycle.
             *
             * @api private
             */ JSONPPolling.prototype.doPoll = function() {
              var self = this
              var script = document.createElement('script')
              if (this.script) {
                this.script.parentNode.removeChild(this.script)
                this.script = null
              }
              script.async = true
              script.src = this.uri()
              script.onerror = function(e) {
                self.onError('jsonp poll error', e)
              }
              var insertAt = document.getElementsByTagName('script')[0]
              if (insertAt) {
                insertAt.parentNode.insertBefore(script, insertAt)
              } else {
                ;(document.head || document.body).appendChild(script)
              }
              this.script = script
              var isUAgecko =
                'undefined' !== typeof navigator &&
                /gecko/i.test(navigator.userAgent)
              if (isUAgecko) {
                setTimeout(function() {
                  var iframe = document.createElement('iframe')
                  document.body.appendChild(iframe)
                  document.body.removeChild(iframe)
                }, 100)
              }
            }
            /**
             * Writes with a hidden iframe.
             *
             * @param {String} data to send
             * @param {Function} called upon flush.
             * @api private
             */ JSONPPolling.prototype.doWrite = function(data, fn) {
              var self = this
              if (!this.form) {
                var form = document.createElement('form')
                var area = document.createElement('textarea')
                var id = (this.iframeId = 'eio_iframe_' + this.index)
                var iframe
                form.className = 'socketio'
                form.style.position = 'absolute'
                form.style.top = '-1000px'
                form.style.left = '-1000px'
                form.target = id
                form.method = 'POST'
                form.setAttribute('accept-charset', 'utf-8')
                area.name = 'd'
                form.appendChild(area)
                document.body.appendChild(form)
                this.form = form
                this.area = area
              }
              this.form.action = this.uri()
              function complete() {
                initIframe()
                fn()
              }
              function initIframe() {
                if (self.iframe) {
                  try {
                    self.form.removeChild(self.iframe)
                  } catch (e) {
                    self.onError('jsonp polling iframe removal error', e)
                  }
                }
                try {
                  // ie6 dynamic iframes with target="" support (thanks Chris Lambacher)
                  var html =
                    '<iframe src="javascript:0" name="' + self.iframeId + '">'
                  iframe = document.createElement(html)
                } catch (e) {
                  iframe = document.createElement('iframe')
                  iframe.name = self.iframeId
                  iframe.src = 'javascript:0'
                }
                iframe.id = self.iframeId
                self.form.appendChild(iframe)
                self.iframe = iframe
              }
              initIframe() // escape \n to prevent it from being converted into \r\n by some UAs
              // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side
              data = data.replace(rEscapedNewline, '\\\n')
              this.area.value = data.replace(rNewline, '\\n')
              try {
                this.form.submit()
              } catch (e) {}
              if (this.iframe.attachEvent) {
                this.iframe.onreadystatechange = function() {
                  if (self.iframe.readyState === 'complete') {
                    complete()
                  }
                }
              } else {
                this.iframe.onload = complete
              }
            }
          }.call(
            this,
            typeof global !== 'undefined'
              ? global
              : typeof self !== 'undefined'
              ? self
              : typeof window !== 'undefined'
              ? window
              : {}
          ))
        }.apply(this, arguments))
      },
      { './polling': 48, 'component-inherit': 41 }
    ],
    47: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/engine.io-client/lib/transports/polling-xhr.js',
          module
        )
        ;(function() {
          /* global attachEvent */ /**
           * Module requirements.
           */ var XMLHttpRequest = require('xmlhttprequest-ssl')
          var Polling = require('./polling')
          var Emitter = require('component-emitter')
          var inherit = require('component-inherit')
          var debug = require('debug')('engine.io-client:polling-xhr')
          /**
           * Module exports.
           */ module.exports = XHR
          module.exports.Request = Request
          /**
           * Empty function
           */ function empty() {}
          /**
           * XHR Polling constructor.
           *
           * @param {Object} opts
           * @api public
           */ function XHR(opts) {
            Polling.call(this, opts)
            this.requestTimeout = opts.requestTimeout
            this.extraHeaders = opts.extraHeaders
            if (typeof location !== 'undefined') {
              var isSSL = 'https:' === location.protocol
              var port = location.port // some user agents have empty `location.port`
              if (!port) {
                port = isSSL ? 443 : 80
              }
              this.xd =
                (typeof location !== 'undefined' &&
                  opts.hostname !== location.hostname) ||
                port !== opts.port
              this.xs = opts.secure !== isSSL
            }
          }
          /**
           * Inherits from Polling.
           */ inherit(XHR, Polling)
          /**
           * XHR supports binary
           */ XHR.prototype.supportsBinary = true
          /**
           * Creates a request.
           *
           * @param {String} method
           * @api private
           */ XHR.prototype.request = function(opts) {
            opts = opts || {}
            opts.uri = this.uri()
            opts.xd = this.xd
            opts.xs = this.xs
            opts.agent = this.agent || false
            opts.supportsBinary = this.supportsBinary
            opts.enablesXDR = this.enablesXDR
            opts.withCredentials = this.withCredentials // SSL options for Node.js client
            opts.pfx = this.pfx
            opts.key = this.key
            opts.passphrase = this.passphrase
            opts.cert = this.cert
            opts.ca = this.ca
            opts.ciphers = this.ciphers
            opts.rejectUnauthorized = this.rejectUnauthorized
            opts.requestTimeout = this.requestTimeout // other options for Node.js client
            opts.extraHeaders = this.extraHeaders
            return new Request(opts)
          }
          /**
           * Sends data.
           *
           * @param {String} data to send.
           * @param {Function} called upon flush.
           * @api private
           */ XHR.prototype.doWrite = function(data, fn) {
            var isBinary = typeof data !== 'string' && data !== undefined
            var req = this.request({
              method: 'POST',
              data: data,
              isBinary: isBinary
            })
            var self = this
            req.on('success', fn)
            req.on('error', function(err) {
              self.onError('xhr post error', err)
            })
            this.sendXhr = req
          }
          /**
           * Starts a poll cycle.
           *
           * @api private
           */ XHR.prototype.doPoll = function() {
            debug('xhr poll')
            var req = this.request()
            var self = this
            req.on('data', function(data) {
              self.onData(data)
            })
            req.on('error', function(err) {
              self.onError('xhr poll error', err)
            })
            this.pollXhr = req
          }
          /**
           * Request constructor
           *
           * @param {Object} options
           * @api public
           */ function Request(opts) {
            this.method = opts.method || 'GET'
            this.uri = opts.uri
            this.xd = !!opts.xd
            this.xs = !!opts.xs
            this.async = false !== opts.async
            this.data = undefined !== opts.data ? opts.data : null
            this.agent = opts.agent
            this.isBinary = opts.isBinary
            this.supportsBinary = opts.supportsBinary
            this.enablesXDR = opts.enablesXDR
            this.withCredentials = opts.withCredentials
            this.requestTimeout = opts.requestTimeout // SSL options for Node.js client
            this.pfx = opts.pfx
            this.key = opts.key
            this.passphrase = opts.passphrase
            this.cert = opts.cert
            this.ca = opts.ca
            this.ciphers = opts.ciphers
            this.rejectUnauthorized = opts.rejectUnauthorized // other options for Node.js client
            this.extraHeaders = opts.extraHeaders
            this.create()
          }
          /**
           * Mix in `Emitter`.
           */ Emitter(Request.prototype)
          /**
           * Creates the XHR object and sends the request.
           *
           * @api private
           */ Request.prototype.create = function() {
            var opts = {
              agent: this.agent,
              xdomain: this.xd,
              xscheme: this.xs,
              enablesXDR: this.enablesXDR
            } // SSL options for Node.js client
            opts.pfx = this.pfx
            opts.key = this.key
            opts.passphrase = this.passphrase
            opts.cert = this.cert
            opts.ca = this.ca
            opts.ciphers = this.ciphers
            opts.rejectUnauthorized = this.rejectUnauthorized
            var xhr = (this.xhr = new XMLHttpRequest(opts))
            var self = this
            try {
              debug('xhr open %s: %s', this.method, this.uri)
              xhr.open(this.method, this.uri, this.async)
              try {
                if (this.extraHeaders) {
                  xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true)
                  for (var i in this.extraHeaders) {
                    if (this.extraHeaders.hasOwnProperty(i)) {
                      xhr.setRequestHeader(i, this.extraHeaders[i])
                    }
                  }
                }
              } catch (e) {}
              if ('POST' === this.method) {
                try {
                  if (this.isBinary) {
                    xhr.setRequestHeader(
                      'Content-type',
                      'application/octet-stream'
                    )
                  } else {
                    xhr.setRequestHeader(
                      'Content-type',
                      'text/plain;charset=UTF-8'
                    )
                  }
                } catch (e) {}
              }
              try {
                xhr.setRequestHeader('Accept', '*/*')
              } catch (e) {} // ie6 check
              if ('withCredentials' in xhr) {
                xhr.withCredentials = this.withCredentials
              }
              if (this.requestTimeout) {
                xhr.timeout = this.requestTimeout
              }
              if (this.hasXDR()) {
                xhr.onload = function() {
                  self.onLoad()
                }
                xhr.onerror = function() {
                  self.onError(xhr.responseText)
                }
              } else {
                xhr.onreadystatechange = function() {
                  if (xhr.readyState === 2) {
                    try {
                      var contentType = xhr.getResponseHeader('Content-Type')
                      if (
                        (self.supportsBinary &&
                          contentType === 'application/octet-stream') ||
                        contentType ===
                          'application/octet-stream; charset=UTF-8'
                      ) {
                        xhr.responseType = 'arraybuffer'
                      }
                    } catch (e) {}
                  }
                  if (4 !== xhr.readyState) return
                  if (200 === xhr.status || 1223 === xhr.status) {
                    self.onLoad()
                  } else {
                    // make sure the `error` event handler that's user-set
                    // does not throw in the same tick and gets caught here
                    setTimeout(function() {
                      self.onError(
                        typeof xhr.status === 'number' ? xhr.status : 0
                      )
                    }, 0)
                  }
                }
              }
              debug('xhr data %s', this.data)
              xhr.send(this.data)
            } catch (e) {
              // Need to defer since .create() is called directly fhrom the constructor
              // and thus the 'error' event can only be only bound *after* this exception
              // occurs.  Therefore, also, we cannot throw here at all.
              setTimeout(function() {
                self.onError(e)
              }, 0)
              return
            }
            if (typeof document !== 'undefined') {
              this.index = Request.requestsCount++
              Request.requests[this.index] = this
            }
          }
          /**
           * Called upon successful response.
           *
           * @api private
           */ Request.prototype.onSuccess = function() {
            this.emit('success')
            this.cleanup()
          }
          /**
           * Called if we have data.
           *
           * @api private
           */ Request.prototype.onData = function(data) {
            this.emit('data', data)
            this.onSuccess()
          }
          /**
           * Called upon error.
           *
           * @api private
           */ Request.prototype.onError = function(err) {
            this.emit('error', err)
            this.cleanup(true)
          }
          /**
           * Cleans up house.
           *
           * @api private
           */ Request.prototype.cleanup = function(fromError) {
            if ('undefined' === typeof this.xhr || null === this.xhr) {
              return
            } // xmlhttprequest
            if (this.hasXDR()) {
              this.xhr.onload = this.xhr.onerror = empty
            } else {
              this.xhr.onreadystatechange = empty
            }
            if (fromError) {
              try {
                this.xhr.abort()
              } catch (e) {}
            }
            if (typeof document !== 'undefined') {
              delete Request.requests[this.index]
            }
            this.xhr = null
          }
          /**
           * Called upon load.
           *
           * @api private
           */ Request.prototype.onLoad = function() {
            var data
            try {
              var contentType
              try {
                contentType = this.xhr.getResponseHeader('Content-Type')
              } catch (e) {}
              if (
                contentType === 'application/octet-stream' ||
                contentType === 'application/octet-stream; charset=UTF-8'
              ) {
                data = this.xhr.response || this.xhr.responseText
              } else {
                data = this.xhr.responseText
              }
            } catch (e) {
              this.onError(e)
            }
            if (null != data) {
              this.onData(data)
            }
          }
          /**
           * Check if it has XDomainRequest.
           *
           * @api private
           */ Request.prototype.hasXDR = function() {
            return (
              typeof XDomainRequest !== 'undefined' &&
              !this.xs &&
              this.enablesXDR
            )
          }
          /**
           * Aborts the request.
           *
           * @api public
           */ Request.prototype.abort = function() {
            this.cleanup()
          }
          /**
           * Aborts pending requests when unloading the window. This is needed to prevent
           * memory leaks (e.g. when using IE) and to ensure that no spurious error is
           * emitted.
           */ Request.requestsCount = 0
          Request.requests = {}
          if (typeof document !== 'undefined') {
            if (typeof attachEvent === 'function') {
              attachEvent('onunload', unloadHandler)
            } else if (typeof addEventListener === 'function') {
              var terminationEvent =
                'onpagehide' in self ? 'pagehide' : 'unload'
              addEventListener(terminationEvent, unloadHandler, false)
            }
          }
          function unloadHandler() {
            for (var i in Request.requests) {
              if (Request.requests.hasOwnProperty(i)) {
                Request.requests[i].abort()
              }
            }
          }
        }.apply(this, arguments))
      },
      {
        './polling': 48,
        'component-emitter': 40,
        'component-inherit': 41,
        debug: 51,
        'xmlhttprequest-ssl': 50
      }
    ],
    48: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/engine.io-client/lib/transports/polling.js',
          module
        )
        ;(function() {
          /**
           * Module dependencies.
           */ var Transport = require('../transport')
          var parseqs = require('parseqs')
          var parser = require('engine.io-parser')
          var inherit = require('component-inherit')
          var yeast = require('yeast')
          var debug = require('debug')('engine.io-client:polling')
          /**
           * Module exports.
           */ module.exports = Polling
          /**
           * Is XHR2 supported?
           */ var hasXHR2 = (function() {
            var XMLHttpRequest = require('xmlhttprequest-ssl')
            var xhr = new XMLHttpRequest({ xdomain: false })
            return null != xhr.responseType
          })()
          /**
           * Polling interface.
           *
           * @param {Object} opts
           * @api private
           */ function Polling(opts) {
            var forceBase64 = opts && opts.forceBase64
            if (!hasXHR2 || forceBase64) {
              this.supportsBinary = false
            }
            Transport.call(this, opts)
          }
          /**
           * Inherits from Transport.
           */ inherit(Polling, Transport)
          /**
           * Transport name.
           */ Polling.prototype.name = 'polling'
          /**
           * Opens the socket (triggers polling). We write a PING message to determine
           * when the transport is open.
           *
           * @api private
           */ Polling.prototype.doOpen = function() {
            this.poll()
          }
          /**
           * Pauses polling.
           *
           * @param {Function} callback upon buffers are flushed and transport is paused
           * @api private
           */ Polling.prototype.pause = function(onPause) {
            var self = this
            this.readyState = 'pausing'
            function pause() {
              debug('paused')
              self.readyState = 'paused'
              onPause()
            }
            if (this.polling || !this.writable) {
              var total = 0
              if (this.polling) {
                debug('we are currently polling - waiting to pause')
                total++
                this.once('pollComplete', function() {
                  debug('pre-pause polling complete')
                  --total || pause()
                })
              }
              if (!this.writable) {
                debug('we are currently writing - waiting to pause')
                total++
                this.once('drain', function() {
                  debug('pre-pause writing complete')
                  --total || pause()
                })
              }
            } else {
              pause()
            }
          }
          /**
           * Starts polling cycle.
           *
           * @api public
           */ Polling.prototype.poll = function() {
            debug('polling')
            this.polling = true
            this.doPoll()
            this.emit('poll')
          }
          /**
           * Overloads onData to detect payloads.
           *
           * @api private
           */ Polling.prototype.onData = function(data) {
            var self = this
            debug('polling got data %s', data)
            var callback = function callback(packet, index, total) {
              // if its the first message we consider the transport open
              if ('opening' === self.readyState) {
                self.onOpen()
              } // if its a close packet, we close the ongoing requests
              if ('close' === packet.type) {
                self.onClose()
                return false
              } // otherwise bypass onData and handle the message
              self.onPacket(packet)
            } // decode payload
            parser.decodePayload(data, this.socket.binaryType, callback) // if an event did not trigger closing
            if ('closed' !== this.readyState) {
              // if we got data we're not polling
              this.polling = false
              this.emit('pollComplete')
              if ('open' === this.readyState) {
                this.poll()
              } else {
                debug('ignoring poll - transport state "%s"', this.readyState)
              }
            }
          }
          /**
           * For polling, send a close packet.
           *
           * @api private
           */ Polling.prototype.doClose = function() {
            var self = this
            function close() {
              debug('writing close packet')
              self.write([{ type: 'close' }])
            }
            if ('open' === this.readyState) {
              debug('transport open - closing')
              close()
            } else {
              // in case we're trying to close while
              // handshaking is in progress (GH-164)
              debug('transport not open - deferring close')
              this.once('open', close)
            }
          }
          /**
           * Writes a packets payload.
           *
           * @param {Array} data packets
           * @param {Function} drain callback
           * @api private
           */ Polling.prototype.write = function(packets) {
            var self = this
            this.writable = false
            var callbackfn = function callbackfn() {
              self.writable = true
              self.emit('drain')
            }
            parser.encodePayload(packets, this.supportsBinary, function(data) {
              self.doWrite(data, callbackfn)
            })
          }
          /**
           * Generates uri for connection.
           *
           * @api private
           */ Polling.prototype.uri = function() {
            var query = this.query || {}
            var schema = this.secure ? 'https' : 'http'
            var port = '' // cache busting is forced
            if (false !== this.timestampRequests) {
              query[this.timestampParam] = yeast()
            }
            if (!this.supportsBinary && !query.sid) {
              query.b64 = 1
            }
            query = parseqs.encode(query) // avoid port if default for schema
            if (
              this.port &&
              (('https' === schema && Number(this.port) !== 443) ||
                ('http' === schema && Number(this.port) !== 80))
            ) {
              port = ':' + this.port
            } // prepend ? to query
            if (query.length) {
              query = '?' + query
            }
            var ipv6 = this.hostname.indexOf(':') !== -1
            return (
              schema +
              '://' +
              (ipv6 ? '[' + this.hostname + ']' : this.hostname) +
              port +
              this.path +
              query
            )
          }
        }.apply(this, arguments))
      },
      {
        '../transport': 44,
        'component-inherit': 41,
        debug: 51,
        'engine.io-parser': 54,
        parseqs: 208,
        'xmlhttprequest-ssl': 50,
        yeast: 238
      }
    ],
    49: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/engine.io-client/lib/transports/websocket.js',
          module
        )
        ;(function() {
          ;(function(Buffer) {
            /**
             * Module dependencies.
             */ var Transport = require('../transport')
            var parser = require('engine.io-parser')
            var parseqs = require('parseqs')
            var inherit = require('component-inherit')
            var yeast = require('yeast')
            var debug = require('debug')('engine.io-client:websocket')
            var BrowserWebSocket, NodeWebSocket
            if (typeof WebSocket !== 'undefined') {
              BrowserWebSocket = WebSocket
            } else if (typeof self !== 'undefined') {
              BrowserWebSocket = self.WebSocket || self.MozWebSocket
            }
            if (typeof window === 'undefined') {
              try {
                NodeWebSocket = require('ws')
              } catch (e) {}
            }
            /**
             * Get either the `WebSocket` or `MozWebSocket` globals
             * in the browser or try to resolve WebSocket-compatible
             * interface exposed by `ws` for Node-like environment.
             */ var WebSocketImpl = BrowserWebSocket || NodeWebSocket
            /**
             * Module exports.
             */ module.exports = WS
            /**
             * WebSocket transport constructor.
             *
             * @api {Object} connection options
             * @api public
             */ function WS(opts) {
              var forceBase64 = opts && opts.forceBase64
              if (forceBase64) {
                this.supportsBinary = false
              }
              this.perMessageDeflate = opts.perMessageDeflate
              this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode
              this.protocols = opts.protocols
              if (!this.usingBrowserWebSocket) {
                WebSocketImpl = NodeWebSocket
              }
              Transport.call(this, opts)
            }
            /**
             * Inherits from Transport.
             */ inherit(WS, Transport)
            /**
             * Transport name.
             *
             * @api public
             */ WS.prototype.name = 'websocket'
            /*
             * WebSockets support binary
             */ WS.prototype.supportsBinary = true
            /**
             * Opens socket.
             *
             * @api private
             */ WS.prototype.doOpen = function() {
              if (!this.check()) {
                // let probe timeout
                return
              }
              var uri = this.uri()
              var protocols = this.protocols
              var opts = {
                agent: this.agent,
                perMessageDeflate: this.perMessageDeflate
              } // SSL options for Node.js client
              opts.pfx = this.pfx
              opts.key = this.key
              opts.passphrase = this.passphrase
              opts.cert = this.cert
              opts.ca = this.ca
              opts.ciphers = this.ciphers
              opts.rejectUnauthorized = this.rejectUnauthorized
              if (this.extraHeaders) {
                opts.headers = this.extraHeaders
              }
              if (this.localAddress) {
                opts.localAddress = this.localAddress
              }
              try {
                this.ws =
                  this.usingBrowserWebSocket && !this.isReactNative
                    ? protocols
                      ? new WebSocketImpl(uri, protocols)
                      : new WebSocketImpl(uri)
                    : new WebSocketImpl(uri, protocols, opts)
              } catch (err) {
                return this.emit('error', err)
              }
              if (this.ws.binaryType === undefined) {
                this.supportsBinary = false
              }
              if (this.ws.supports && this.ws.supports.binary) {
                this.supportsBinary = true
                this.ws.binaryType = 'nodebuffer'
              } else {
                this.ws.binaryType = 'arraybuffer'
              }
              this.addEventListeners()
            }
            /**
             * Adds event listeners to the socket
             *
             * @api private
             */ WS.prototype.addEventListeners = function() {
              var self = this
              this.ws.onopen = function() {
                self.onOpen()
              }
              this.ws.onclose = function() {
                self.onClose()
              }
              this.ws.onmessage = function(ev) {
                self.onData(ev.data)
              }
              this.ws.onerror = function(e) {
                self.onError('websocket error', e)
              }
            }
            /**
             * Writes data to socket.
             *
             * @param {Array} array of packets.
             * @api private
             */ WS.prototype.write = function(packets) {
              var self = this
              this.writable = false // encodePacket efficient as it uses WS framing
              // no need for encodePayload
              var total = packets.length
              for (var i = 0, l = total; i < l; i++) {
                ;(function(packet) {
                  parser.encodePacket(packet, self.supportsBinary, function(
                    data
                  ) {
                    if (!self.usingBrowserWebSocket) {
                      // always create a new object (GH-437)
                      var opts = {}
                      if (packet.options) {
                        opts.compress = packet.options.compress
                      }
                      if (self.perMessageDeflate) {
                        var len =
                          'string' === typeof data
                            ? Buffer.byteLength(data)
                            : data.length
                        if (len < self.perMessageDeflate.threshold) {
                          opts.compress = false
                        }
                      }
                    } // Sometimes the websocket has already been closed but the browser didn't
                    // have a chance of informing us about it yet, in that case send will
                    // throw an error
                    try {
                      if (self.usingBrowserWebSocket) {
                        // TypeError is thrown when passing the second argument on Safari
                        self.ws.send(data)
                      } else {
                        self.ws.send(data, opts)
                      }
                    } catch (e) {
                      debug('websocket closed before onclose event')
                    }
                    --total || done()
                  })
                })(packets[i])
              }
              function done() {
                self.emit('flush') // fake drain
                // defer to next tick to allow Socket to clear writeBuffer
                setTimeout(function() {
                  self.writable = true
                  self.emit('drain')
                }, 0)
              }
            }
            /**
             * Called upon close
             *
             * @api private
             */ WS.prototype.onClose = function() {
              Transport.prototype.onClose.call(this)
            }
            /**
             * Closes socket.
             *
             * @api private
             */ WS.prototype.doClose = function() {
              if (typeof this.ws !== 'undefined') {
                this.ws.close()
              }
            }
            /**
             * Generates uri for connection.
             *
             * @api private
             */ WS.prototype.uri = function() {
              var query = this.query || {}
              var schema = this.secure ? 'wss' : 'ws'
              var port = '' // avoid port if default for schema
              if (
                this.port &&
                (('wss' === schema && Number(this.port) !== 443) ||
                  ('ws' === schema && Number(this.port) !== 80))
              ) {
                port = ':' + this.port
              } // append timestamp to URI
              if (this.timestampRequests) {
                query[this.timestampParam] = yeast()
              } // communicate binary support capabilities
              if (!this.supportsBinary) {
                query.b64 = 1
              }
              query = parseqs.encode(query) // prepend ? to query
              if (query.length) {
                query = '?' + query
              }
              var ipv6 = this.hostname.indexOf(':') !== -1
              return (
                schema +
                '://' +
                (ipv6 ? '[' + this.hostname + ']' : this.hostname) +
                port +
                this.path +
                query
              )
            }
            /**
             * Feature detection for WebSocket.
             *
             * @return {Boolean} whether this transport is available.
             * @api public
             */ WS.prototype.check = function() {
              return (
                !!WebSocketImpl &&
                !(
                  '__initialize' in WebSocketImpl &&
                  this.name === WS.prototype.name
                )
              )
            }
          }.call(this, require('buffer').Buffer))
        }.apply(this, arguments))
      },
      {
        '../transport': 44,
        buffer: 38,
        'component-inherit': 41,
        debug: 51,
        'engine.io-parser': 54,
        parseqs: 208,
        ws: 34,
        yeast: 238
      }
    ],
    50: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/engine.io-client/lib/xmlhttprequest.js',
          module
        )
        ;(function() {
          // browser shim for xmlhttprequest module
          var hasCORS = require('has-cors')
          module.exports = function(opts) {
            var xdomain = opts.xdomain // scheme must be same when usign XDomainRequest
            // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx
            var xscheme = opts.xscheme // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.
            // https://github.com/Automattic/engine.io-client/pull/217
            var enablesXDR = opts.enablesXDR // XMLHttpRequest can be disabled on IE
            try {
              if (
                'undefined' !== typeof XMLHttpRequest &&
                (!xdomain || hasCORS)
              ) {
                return new XMLHttpRequest()
              }
            } catch (e) {} // Use XDomainRequest for IE8 if enablesXDR is true
            // because loading bar keeps flashing when using jsonp-polling
            // https://github.com/yujiosaka/socke.io-ie8-loading-example
            try {
              if (
                'undefined' !== typeof XDomainRequest &&
                !xscheme &&
                enablesXDR
              ) {
                return new XDomainRequest()
              }
            } catch (e) {}
            if (!xdomain) {
              try {
                return new self[['Active'].concat('Object').join('X')](
                  'Microsoft.XMLHTTP'
                )
              } catch (e) {}
            }
          }
        }.apply(this, arguments))
      },
      { 'has-cors': 59 }
    ],
    51: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/engine.io-client/node_modules/debug/src/browser.js',
          module
        )
        ;(function() {
          ;(function(process) {
            /* eslint-env browser */ /**
             * This is the web browser implementation of `debug()`.
             */ exports.log = log
            exports.formatArgs = formatArgs
            exports.save = save
            exports.load = load
            exports.useColors = useColors
            exports.storage = localstorage()
            /**
             * Colors.
             */ exports.colors = [
              '#0000CC',
              '#0000FF',
              '#0033CC',
              '#0033FF',
              '#0066CC',
              '#0066FF',
              '#0099CC',
              '#0099FF',
              '#00CC00',
              '#00CC33',
              '#00CC66',
              '#00CC99',
              '#00CCCC',
              '#00CCFF',
              '#3300CC',
              '#3300FF',
              '#3333CC',
              '#3333FF',
              '#3366CC',
              '#3366FF',
              '#3399CC',
              '#3399FF',
              '#33CC00',
              '#33CC33',
              '#33CC66',
              '#33CC99',
              '#33CCCC',
              '#33CCFF',
              '#6600CC',
              '#6600FF',
              '#6633CC',
              '#6633FF',
              '#66CC00',
              '#66CC33',
              '#9900CC',
              '#9900FF',
              '#9933CC',
              '#9933FF',
              '#99CC00',
              '#99CC33',
              '#CC0000',
              '#CC0033',
              '#CC0066',
              '#CC0099',
              '#CC00CC',
              '#CC00FF',
              '#CC3300',
              '#CC3333',
              '#CC3366',
              '#CC3399',
              '#CC33CC',
              '#CC33FF',
              '#CC6600',
              '#CC6633',
              '#CC9900',
              '#CC9933',
              '#CCCC00',
              '#CCCC33',
              '#FF0000',
              '#FF0033',
              '#FF0066',
              '#FF0099',
              '#FF00CC',
              '#FF00FF',
              '#FF3300',
              '#FF3333',
              '#FF3366',
              '#FF3399',
              '#FF33CC',
              '#FF33FF',
              '#FF6600',
              '#FF6633',
              '#FF9900',
              '#FF9933',
              '#FFCC00',
              '#FFCC33'
            ]  // eslint-disable-next-line complexity
            /**
             * Currently only WebKit-based Web Inspectors, Firefox >= v31,
             * and the Firebug extension (any Firefox version) are known
             * to support "%c" CSS customizations.
             *
             * TODO: add a `localStorage` variable to explicitly enable/disable colors
             */
            function useColors() {
              // NB: In an Electron preload script, document will be defined but not fully
              // initialized. Since we know we're in Chrome, we'll just detect this case
              // explicitly
              if (
                typeof window !== 'undefined' &&
                window.process &&
                (window.process.type === 'renderer' || window.process.__nwjs)
              ) {
                return true
              } // Internet Explorer and Edge do not support colors.
              if (
                typeof navigator !== 'undefined' &&
                navigator.userAgent &&
                navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)
              ) {
                return false
              } // Is webkit? http://stackoverflow.com/a/16459606/376773
              // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
              return (
                (typeof document !== 'undefined' &&
                  document.documentElement &&
                  document.documentElement.style &&
                  document.documentElement.style.WebkitAppearance) || // Is firebug? http://stackoverflow.com/a/398120/376773
                (typeof window !== 'undefined' &&
                  window.console &&
                  (window.console.firebug ||
                    (window.console.exception && window.console.table))) || // Is firefox >= v31?
                // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
                (typeof navigator !== 'undefined' &&
                  navigator.userAgent &&
                  navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) &&
                  parseInt(RegExp.$1, 10) >= 31) || // Double check webkit in userAgent just in case we are in a worker
                (typeof navigator !== 'undefined' &&
                  navigator.userAgent &&
                  navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))
              )
            }
            /**
             * Colorize log arguments if enabled.
             *
             * @api public
             */ function formatArgs(args) {
              args[0] =
                (this.useColors ? '%c' : '') +
                this.namespace +
                (this.useColors ? ' %c' : ' ') +
                args[0] +
                (this.useColors ? '%c ' : ' ') +
                '+' +
                module.exports.humanize(this.diff)
              if (!this.useColors) {
                return
              }
              var c = 'color: ' + this.color
              args.splice(1, 0, c, 'color: inherit') // The final "%c" is somewhat tricky, because there could be other
              // arguments passed either before or after the %c, so we need to
              // figure out the correct index to insert the CSS into
              var index = 0
              var lastC = 0
              args[0].replace(/%[a-zA-Z%]/g, function(match) {
                if (match === '%%') {
                  return
                }
                index++
                if (match === '%c') {
                  // We only are interested in the *last* %c
                  // (the user may have provided their own)
                  lastC = index
                }
              })
              args.splice(lastC, 0, c)
            }
            /**
             * Invokes `console.log()` when available.
             * No-op when `console.log` is not a "function".
             *
             * @api public
             */ function log() {
              var _console // This hackery is required for IE8/9, where
              // the `console.log` function doesn't have 'apply'
              return (
                (typeof console === 'undefined'
                  ? 'undefined'
                  : (0, _typeof3['default'])(console)) === 'object' &&
                console.log &&
                (_console = console).log.apply(_console, arguments)
              )
            }
            /**
             * Save `namespaces`.
             *
             * @param {String} namespaces
             * @api private
             */ function save(namespaces) {
              try {
                if (namespaces) {
                  exports.storage.setItem('debug', namespaces)
                } else {
                  exports.storage.removeItem('debug')
                }
              } catch (error) {
                // Swallow
                // XXX (@Qix-) should we be logging these?
              }
            }
            /**
             * Load `namespaces`.
             *
             * @return {String} returns the previously persisted debug modes
             * @api private
             */ function load() {
              var r
              try {
                r = exports.storage.getItem('debug')
              } catch (error) {} // Swallow
              // XXX (@Qix-) should we be logging these?
              // If debug isn't set in LS, and we're in Electron, try to load $DEBUG
              if (!r && typeof process !== 'undefined' && 'env' in process) {
                r = process.env.DEBUG
              }
              return r
            }
            /**
             * Localstorage attempts to return the localstorage.
             *
             * This is necessary because safari throws
             * when a user disables cookies/localstorage
             * and you attempt to access it.
             *
             * @return {LocalStorage}
             * @api private
             */ function localstorage() {
              try {
                // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context
                // The Browser also has localStorage in the global context.
                return localStorage
              } catch (error) {
                // Swallow
                // XXX (@Qix-) should we be logging these?
              }
            }
            module.exports = require('./common')(exports)
            var formatters = module.exports.formatters
            /**
             * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
             */ formatters.j = function(v) {
              try {
                return JSON.stringify(v)
              } catch (error) {
                return '[UnexpectedJSONParseError]: ' + error.message
              }
            }
          }.call(this, require('_process')))
        }.apply(this, arguments))
      },
      { './common': 52, _process: 210 }
    ],
    52: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/engine.io-client/node_modules/debug/src/common.js',
          module
        )
        ;(function() {
          /**
           * This is the common logic for both the Node.js and web browser
           * implementations of `debug()`.
           */ function setup(env) {
            createDebug.debug = createDebug
            createDebug['default'] = createDebug
            createDebug.coerce = coerce
            createDebug.disable = disable
            createDebug.enable = enable
            createDebug.enabled = enabled
            createDebug.humanize = require('ms')
            Object.keys(env).forEach(function(key) {
              createDebug[key] = env[key]
            })
            /**
             * Active `debug` instances.
             */ createDebug.instances = []
            /**
             * The currently active debug mode names, and names to skip.
             */ createDebug.names = []
            createDebug.skips = []
            /**
             * Map of special "%n" handling functions, for the debug "format" argument.
             *
             * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
             */ createDebug.formatters = {}
            /**
             * Selects a color for a debug namespace
             * @param {String} namespace The namespace string for the for the debug instance to be colored
             * @return {Number|String} An ANSI color code for the given namespace
             * @api private
             */ function selectColor(namespace) {
              var hash = 0
              for (var i = 0; i < namespace.length; i++) {
                hash = (hash << 5) - hash + namespace.charCodeAt(i)
                hash |= 0 // Convert to 32bit integer
              }
              return createDebug.colors[
                Math.abs(hash) % createDebug.colors.length
              ]
            }
            createDebug.selectColor = selectColor
            /**
             * Create a debugger with the given `namespace`.
             *
             * @param {String} namespace
             * @return {Function}
             * @api public
             */ function createDebug(namespace) {
              var prevTime
              function debug() {
                for (
                  var _len = arguments.length, args = new Array(_len), _key = 0;
                  _key < _len;
                  _key++
                ) {
                  args[_key] = arguments[_key]
                } // Disabled?
                if (!debug.enabled) {
                  return
                }
                var self = debug // Set `diff` timestamp
                var curr = Number(new Date())
                var ms = curr - (prevTime || curr)
                self.diff = ms
                self.prev = prevTime
                self.curr = curr
                prevTime = curr
                args[0] = createDebug.coerce(args[0])
                if (typeof args[0] !== 'string') {
                  // Anything else let's inspect with %O
                  args.unshift('%O')
                } // Apply any `formatters` transformations
                var index = 0
                args[0] = args[0].replace(/%([a-zA-Z%])/g, function(
                  match,
                  format
                ) {
                  // If we encounter an escaped % then don't increase the array index
                  if (match === '%%') {
                    return match
                  }
                  index++
                  var formatter = createDebug.formatters[format]
                  if (typeof formatter === 'function') {
                    var val = args[index]
                    match = formatter.call(self, val) // Now we need to remove `args[index]` since it's inlined in the `format`
                    args.splice(index, 1)
                    index--
                  }
                  return match
                }) // Apply env-specific formatting (colors, etc.)
                createDebug.formatArgs.call(self, args)
                var logFn = self.log || createDebug.log
                logFn.apply(self, args)
              }
              debug.namespace = namespace
              debug.enabled = createDebug.enabled(namespace)
              debug.useColors = createDebug.useColors()
              debug.color = selectColor(namespace)
              debug.destroy = destroy
              debug.extend = extend // Debug.formatArgs = formatArgs;
              // debug.rawLog = rawLog;
              // env-specific initialization logic for debug instances
              if (typeof createDebug.init === 'function') {
                createDebug.init(debug)
              }
              createDebug.instances.push(debug)
              return debug
            }
            function destroy() {
              var index = createDebug.instances.indexOf(this)
              if (index !== -1) {
                createDebug.instances.splice(index, 1)
                return true
              }
              return false
            }
            function extend(namespace, delimiter) {
              var newDebug = createDebug(
                this.namespace +
                  (typeof delimiter === 'undefined' ? ':' : delimiter) +
                  namespace
              )
              newDebug.log = this.log
              return newDebug
            }
            /**
             * Enables a debug mode by namespaces. This can include modes
             * separated by a colon and wildcards.
             *
             * @param {String} namespaces
             * @api public
             */ function enable(namespaces) {
              createDebug.save(namespaces)
              createDebug.names = []
              createDebug.skips = []
              var i
              var split = (typeof namespaces === 'string'
                ? namespaces
                : ''
              ).split(/[\s,]+/)
              var len = split.length
              for (i = 0; i < len; i++) {
                if (!split[i]) {
                  // ignore empty strings
                  continue
                }
                namespaces = split[i].replace(/\*/g, '.*?')
                if (namespaces[0] === '-') {
                  createDebug.skips.push(
                    new RegExp('^' + namespaces.substr(1) + '$')
                  )
                } else {
                  createDebug.names.push(new RegExp('^' + namespaces + '$'))
                }
              }
              for (i = 0; i < createDebug.instances.length; i++) {
                var instance = createDebug.instances[i]
                instance.enabled = createDebug.enabled(instance.namespace)
              }
            }
            /**
             * Disable debug output.
             *
             * @return {String} namespaces
             * @api public
             */ function disable() {
              var namespaces = []
                .concat(
                  (0, _toConsumableArray2['default'])(
                    createDebug.names.map(toNamespace)
                  ),
                  (0, _toConsumableArray2['default'])(
                    createDebug.skips.map(toNamespace).map(function(namespace) {
                      return '-' + namespace
                    })
                  )
                )
                .join(',')
              createDebug.enable('')
              return namespaces
            }
            /**
             * Returns true if the given mode name is enabled, false otherwise.
             *
             * @param {String} name
             * @return {Boolean}
             * @api public
             */ function enabled(name) {
              if (name[name.length - 1] === '*') {
                return true
              }
              var i
              var len
              for (i = 0, len = createDebug.skips.length; i < len; i++) {
                if (createDebug.skips[i].test(name)) {
                  return false
                }
              }
              for (i = 0, len = createDebug.names.length; i < len; i++) {
                if (createDebug.names[i].test(name)) {
                  return true
                }
              }
              return false
            }
            /**
             * Convert regexp to namespace
             *
             * @param {RegExp} regxep
             * @return {String} namespace
             * @api private
             */ function toNamespace(regexp) {
              return regexp
                .toString()
                .substring(2, regexp.toString().length - 2)
                .replace(/\.\*\?$/, '*')
            }
            /**
             * Coerce `val`.
             *
             * @param {Mixed} val
             * @return {Mixed}
             * @api private
             */ function coerce(val) {
              if (val instanceof Error) {
                return val.stack || val.message
              }
              return val
            }
            createDebug.enable(createDebug.load())
            return createDebug
          }
          module.exports = setup
        }.apply(this, arguments))
      },
      { ms: 53 }
    ],
    53: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/engine.io-client/node_modules/ms/index.js',
          module
        )
        ;(function() {
          /**
           * Helpers.
           */ var s = 1000
          var m = s * 60
          var h = m * 60
          var d = h * 24
          var w = d * 7
          var y = d * 365.25
          /**
           * Parse or format the given `val`.
           *
           * Options:
           *
           *  - `long` verbose formatting [false]
           *
           * @param {String|Number} val
           * @param {Object} [options]
           * @throws {Error} throw an error if val is not a non-empty string or a number
           * @return {String|Number}
           * @api public
           */ module.exports = function(val, options) {
            options = options || {}
            var type = (0, _typeof3['default'])(val)
            if (type === 'string' && val.length > 0) {
              return parse(val)
            } else if (type === 'number' && isFinite(val)) {
              return options['long'] ? fmtLong(val) : fmtShort(val)
            }
            throw new Error(
              'val is not a non-empty string or a valid number. val=' +
                JSON.stringify(val)
            )
          }
          /**
           * Parse the given `str` and return milliseconds.
           *
           * @param {String} str
           * @return {Number}
           * @api private
           */ function parse(str) {
            str = String(str)
            if (str.length > 100) {
              return
            }
            var match = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
              str
            )
            if (!match) {
              return
            }
            var n = parseFloat(match[1])
            var type = (match[2] || 'ms').toLowerCase()
            switch (type) {
              case 'years':
              case 'year':
              case 'yrs':
              case 'yr':
              case 'y':
                return n * y
              case 'weeks':
              case 'week':
              case 'w':
                return n * w
              case 'days':
              case 'day':
              case 'd':
                return n * d
              case 'hours':
              case 'hour':
              case 'hrs':
              case 'hr':
              case 'h':
                return n * h
              case 'minutes':
              case 'minute':
              case 'mins':
              case 'min':
              case 'm':
                return n * m
              case 'seconds':
              case 'second':
              case 'secs':
              case 'sec':
              case 's':
                return n * s
              case 'milliseconds':
              case 'millisecond':
              case 'msecs':
              case 'msec':
              case 'ms':
                return n
              default:
                return undefined
            }
          }
          /**
           * Short format for `ms`.
           *
           * @param {Number} ms
           * @return {String}
           * @api private
           */ function fmtShort(ms) {
            var msAbs = Math.abs(ms)
            if (msAbs >= d) {
              return Math.round(ms / d) + 'd'
            }
            if (msAbs >= h) {
              return Math.round(ms / h) + 'h'
            }
            if (msAbs >= m) {
              return Math.round(ms / m) + 'm'
            }
            if (msAbs >= s) {
              return Math.round(ms / s) + 's'
            }
            return ms + 'ms'
          }
          /**
           * Long format for `ms`.
           *
           * @param {Number} ms
           * @return {String}
           * @api private
           */ function fmtLong(ms) {
            var msAbs = Math.abs(ms)
            if (msAbs >= d) {
              return plural(ms, msAbs, d, 'day')
            }
            if (msAbs >= h) {
              return plural(ms, msAbs, h, 'hour')
            }
            if (msAbs >= m) {
              return plural(ms, msAbs, m, 'minute')
            }
            if (msAbs >= s) {
              return plural(ms, msAbs, s, 'second')
            }
            return ms + ' ms'
          }
          /**
           * Pluralization helper.
           */ function plural(ms, msAbs, n, name) {
            var isPlural = msAbs >= n * 1.5
            return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '')
          }
        }.apply(this, arguments))
      },
      {}
    ],
    54: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/engine.io-parser/lib/browser.js',
          module
        )
        ;(function() {
          /**
           * Module dependencies.
           */ var keys = require('./keys')
          var hasBinary = require('has-binary2')
          var sliceBuffer = require('arraybuffer.slice')
          var after = require('after')
          var utf8 = require('./utf8')
          var base64encoder
          if (typeof ArrayBuffer !== 'undefined') {
            base64encoder = require('base64-arraybuffer')
          }
          /**
           * Check if we are running an android browser. That requires us to use
           * ArrayBuffer with polling transports...
           *
           * http://ghinda.net/jpeg-blob-ajax-android/
           */ var isAndroid =
            typeof navigator !== 'undefined' &&
            /Android/i.test(navigator.userAgent)
          /**
           * Check if we are running in PhantomJS.
           * Uploading a Blob with PhantomJS does not work correctly, as reported here:
           * https://github.com/ariya/phantomjs/issues/11395
           * @type boolean
           */ var isPhantomJS =
            typeof navigator !== 'undefined' &&
            /PhantomJS/i.test(navigator.userAgent)
          /**
           * When true, avoids using Blobs to encode payloads.
           * @type boolean
           */ var dontSendBlobs = isAndroid || isPhantomJS
          /**
           * Current protocol version.
           */ exports.protocol = 3
          /**
           * Packet types.
           */ var packets = (exports.packets = {
            open: 0, // non-ws
            close: 1, // non-ws
            ping: 2,
            pong: 3,
            message: 4,
            upgrade: 5,
            noop: 6
          })
          var packetslist = keys(packets)
          /**
           * Premade error packet.
           */ var err = { type: 'error', data: 'parser error' }
          /**
           * Create a blob api even for blob builder when vendor prefixes exist
           */ var Blob = require('blob')
          /**
           * Encodes a packet.
           *
           *     <packet type id> [ <data> ]
           *
           * Example:
           *
           *     5hello world
           *     3
           *     4
           *
           * Binary is encoded in an identical principle
           *
           * @api private
           */ exports.encodePacket = function(
            packet,
            supportsBinary,
            utf8encode,
            callback
          ) {
            if (typeof supportsBinary === 'function') {
              callback = supportsBinary
              supportsBinary = false
            }
            if (typeof utf8encode === 'function') {
              callback = utf8encode
              utf8encode = null
            }
            var data =
              packet.data === undefined
                ? undefined
                : packet.data.buffer || packet.data
            if (
              typeof ArrayBuffer !== 'undefined' &&
              data instanceof ArrayBuffer
            ) {
              return encodeArrayBuffer(packet, supportsBinary, callback)
            } else if (typeof Blob !== 'undefined' && data instanceof Blob) {
              return encodeBlob(packet, supportsBinary, callback)
            } // might be an object with { base64: true, data: dataAsBase64String }
            if (data && data.base64) {
              return encodeBase64Object(packet, callback)
            } // Sending data as a utf-8 string
            var encoded = packets[packet.type] // data fragment is optional
            if (undefined !== packet.data) {
              encoded += utf8encode
                ? utf8.encode(String(packet.data), { strict: false })
                : String(packet.data)
            }
            return callback('' + encoded)
          }
          function encodeBase64Object(packet, callback) {
            // packet data is an object { base64: true, data: dataAsBase64String }
            var message = 'b' + exports.packets[packet.type] + packet.data.data
            return callback(message)
          }
          /**
           * Encode packet helpers for binary types
           */ function encodeArrayBuffer(packet, supportsBinary, callback) {
            if (!supportsBinary) {
              return exports.encodeBase64Packet(packet, callback)
            }
            var data = packet.data
            var contentArray = new Uint8Array(data)
            var resultBuffer = new Uint8Array(1 + data.byteLength)
            resultBuffer[0] = packets[packet.type]
            for (var i = 0; i < contentArray.length; i++) {
              resultBuffer[i + 1] = contentArray[i]
            }
            return callback(resultBuffer.buffer)
          }
          function encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {
            if (!supportsBinary) {
              return exports.encodeBase64Packet(packet, callback)
            }
            var fr = new FileReader()
            fr.onload = function() {
              exports.encodePacket(
                { type: packet.type, data: fr.result },
                supportsBinary,
                true,
                callback
              )
            }
            return fr.readAsArrayBuffer(packet.data)
          }
          function encodeBlob(packet, supportsBinary, callback) {
            if (!supportsBinary) {
              return exports.encodeBase64Packet(packet, callback)
            }
            if (dontSendBlobs) {
              return encodeBlobAsArrayBuffer(packet, supportsBinary, callback)
            }
            var length = new Uint8Array(1)
            length[0] = packets[packet.type]
            var blob = new Blob([length.buffer, packet.data])
            return callback(blob)
          }
          /**
           * Encodes a packet with binary data in a base64 string
           *
           * @param {Object} packet, has `type` and `data`
           * @return {String} base64 encoded message
           */ exports.encodeBase64Packet = function(packet, callback) {
            var message = 'b' + exports.packets[packet.type]
            if (typeof Blob !== 'undefined' && packet.data instanceof Blob) {
              var fr = new FileReader()
              fr.onload = function() {
                var b64 = fr.result.split(',')[1]
                callback(message + b64)
              }
              return fr.readAsDataURL(packet.data)
            }
            var b64data
            try {
              b64data = String.fromCharCode.apply(
                null,
                new Uint8Array(packet.data)
              )
            } catch (e) {
              // iPhone Safari doesn't let you apply with typed arrays
              var typed = new Uint8Array(packet.data)
              var basic = new Array(typed.length)
              for (var i = 0; i < typed.length; i++) {
                basic[i] = typed[i]
              }
              b64data = String.fromCharCode.apply(null, basic)
            }
            message += btoa(b64data)
            return callback(message)
          }
          /**
           * Decodes a packet. Changes format to Blob if requested.
           *
           * @return {Object} with `type` and `data` (if any)
           * @api private
           */ exports.decodePacket = function(data, binaryType, utf8decode) {
            if (data === undefined) {
              return err
            } // String data
            if (typeof data === 'string') {
              if (data.charAt(0) === 'b') {
                return exports.decodeBase64Packet(data.substr(1), binaryType)
              }
              if (utf8decode) {
                data = tryDecode(data)
                if (data === false) {
                  return err
                }
              }
              var type = data.charAt(0)
              if (Number(type) != type || !packetslist[type]) {
                return err
              }
              if (data.length > 1) {
                return { type: packetslist[type], data: data.substring(1) }
              } else {
                return { type: packetslist[type] }
              }
            }
            var asArray = new Uint8Array(data)
            var type = asArray[0]
            var rest = sliceBuffer(data, 1)
            if (Blob && binaryType === 'blob') {
              rest = new Blob([rest])
            }
            return { type: packetslist[type], data: rest }
          }
          function tryDecode(data) {
            try {
              data = utf8.decode(data, { strict: false })
            } catch (e) {
              return false
            }
            return data
          }
          /**
           * Decodes a packet encoded in a base64 string
           *
           * @param {String} base64 encoded message
           * @return {Object} with `type` and `data` (if any)
           */ exports.decodeBase64Packet = function(msg, binaryType) {
            var type = packetslist[msg.charAt(0)]
            if (!base64encoder) {
              return { type: type, data: { base64: true, data: msg.substr(1) } }
            }
            var data = base64encoder.decode(msg.substr(1))
            if (binaryType === 'blob' && Blob) {
              data = new Blob([data])
            }
            return { type: type, data: data }
          }
          /**
           * Encodes multiple messages (payload).
           *
           *     <length>:data
           *
           * Example:
           *
           *     11:hello world2:hi
           *
           * If any contents are binary, they will be encoded as base64 strings. Base64
           * encoded strings are marked with a b before the length specifier
           *
           * @param {Array} packets
           * @api private
           */ exports.encodePayload = function(
            packets,
            supportsBinary,
            callback
          ) {
            if (typeof supportsBinary === 'function') {
              callback = supportsBinary
              supportsBinary = null
            }
            var isBinary = hasBinary(packets)
            if (supportsBinary && isBinary) {
              if (Blob && !dontSendBlobs) {
                return exports.encodePayloadAsBlob(packets, callback)
              }
              return exports.encodePayloadAsArrayBuffer(packets, callback)
            }
            if (!packets.length) {
              return callback('0:')
            }
            function setLengthHeader(message) {
              return message.length + ':' + message
            }
            function encodeOne(packet, doneCallback) {
              exports.encodePacket(
                packet,
                !isBinary ? false : supportsBinary,
                false,
                function(message) {
                  doneCallback(null, setLengthHeader(message))
                }
              )
            }
            map(packets, encodeOne, function(err, results) {
              return callback(results.join(''))
            })
          }
          /**
           * Async array map using after
           */ function map(ary, each, done) {
            var result = new Array(ary.length)
            var next = after(ary.length, done)
            var eachWithIndex = function eachWithIndex(i, el, cb) {
              each(el, function(error, msg) {
                result[i] = msg
                cb(error, result)
              })
            }
            for (var i = 0; i < ary.length; i++) {
              eachWithIndex(i, ary[i], next)
            }
          }
          /*
           * Decodes data when a payload is maybe expected. Possible binary contents are
           * decoded from their base64 representation
           *
           * @param {String} data, callback method
           * @api public
           */ exports.decodePayload = function(data, binaryType, callback) {
            if (typeof data !== 'string') {
              return exports.decodePayloadAsBinary(data, binaryType, callback)
            }
            if (typeof binaryType === 'function') {
              callback = binaryType
              binaryType = null
            }
            var packet
            if (data === '') {
              // parser error - ignoring payload
              return callback(err, 0, 1)
            }
            var length = '',
              n,
              msg
            for (var i = 0, l = data.length; i < l; i++) {
              var chr = data.charAt(i)
              if (chr !== ':') {
                length += chr
                continue
              }
              if (length === '' || length != (n = Number(length))) {
                // parser error - ignoring payload
                return callback(err, 0, 1)
              }
              msg = data.substr(i + 1, n)
              if (length != msg.length) {
                // parser error - ignoring payload
                return callback(err, 0, 1)
              }
              if (msg.length) {
                packet = exports.decodePacket(msg, binaryType, false)
                if (err.type === packet.type && err.data === packet.data) {
                  // parser error in individual packet - ignoring payload
                  return callback(err, 0, 1)
                }
                var ret = callback(packet, i + n, l)
                if (false === ret) return
              } // advance cursor
              i += n
              length = ''
            }
            if (length !== '') {
              // parser error - ignoring payload
              return callback(err, 0, 1)
            }
          }
          /**
           * Encodes multiple messages (payload) as binary.
           *
           * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number
           * 255><data>
           *
           * Example:
           * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers
           *
           * @param {Array} packets
           * @return {ArrayBuffer} encoded payload
           * @api private
           */ exports.encodePayloadAsArrayBuffer = function(packets, callback) {
            if (!packets.length) {
              return callback(new ArrayBuffer(0))
            }
            function encodeOne(packet, doneCallback) {
              exports.encodePacket(packet, true, true, function(data) {
                return doneCallback(null, data)
              })
            }
            map(packets, encodeOne, function(err, encodedPackets) {
              var totalLength = encodedPackets.reduce(function(acc, p) {
                var len
                if (typeof p === 'string') {
                  len = p.length
                } else {
                  len = p.byteLength
                }
                return acc + len.toString().length + len + 2 // string/binary identifier + separator = 2
              }, 0)
              var resultArray = new Uint8Array(totalLength)
              var bufferIndex = 0
              encodedPackets.forEach(function(p) {
                var isString = typeof p === 'string'
                var ab = p
                if (isString) {
                  var view = new Uint8Array(p.length)
                  for (var i = 0; i < p.length; i++) {
                    view[i] = p.charCodeAt(i)
                  }
                  ab = view.buffer
                }
                if (isString) {
                  // not true binary
                  resultArray[bufferIndex++] = 0
                } else {
                  // true binary
                  resultArray[bufferIndex++] = 1
                }
                var lenStr = ab.byteLength.toString()
                for (var i = 0; i < lenStr.length; i++) {
                  resultArray[bufferIndex++] = parseInt(lenStr[i])
                }
                resultArray[bufferIndex++] = 255
                var view = new Uint8Array(ab)
                for (var i = 0; i < view.length; i++) {
                  resultArray[bufferIndex++] = view[i]
                }
              })
              return callback(resultArray.buffer)
            })
          }
          /**
           * Encode as Blob
           */ exports.encodePayloadAsBlob = function(packets, callback) {
            function encodeOne(packet, doneCallback) {
              exports.encodePacket(packet, true, true, function(encoded) {
                var binaryIdentifier = new Uint8Array(1)
                binaryIdentifier[0] = 1
                if (typeof encoded === 'string') {
                  var view = new Uint8Array(encoded.length)
                  for (var i = 0; i < encoded.length; i++) {
                    view[i] = encoded.charCodeAt(i)
                  }
                  encoded = view.buffer
                  binaryIdentifier[0] = 0
                }
                var len =
                  encoded instanceof ArrayBuffer
                    ? encoded.byteLength
                    : encoded.size
                var lenStr = len.toString()
                var lengthAry = new Uint8Array(lenStr.length + 1)
                for (var i = 0; i < lenStr.length; i++) {
                  lengthAry[i] = parseInt(lenStr[i])
                }
                lengthAry[lenStr.length] = 255
                if (Blob) {
                  var blob = new Blob([
                    binaryIdentifier.buffer,
                    lengthAry.buffer,
                    encoded
                  ])
                  doneCallback(null, blob)
                }
              })
            }
            map(packets, encodeOne, function(err, results) {
              return callback(new Blob(results))
            })
          }
          /*
           * Decodes data when a payload is maybe expected. Strings are decoded by
           * interpreting each byte as a key code for entries marked to start with 0. See
           * description of encodePayloadAsBinary
           *
           * @param {ArrayBuffer} data, callback method
           * @api public
           */ exports.decodePayloadAsBinary = function(
            data,
            binaryType,
            callback
          ) {
            if (typeof binaryType === 'function') {
              callback = binaryType
              binaryType = null
            }
            var bufferTail = data
            var buffers = []
            while (bufferTail.byteLength > 0) {
              var tailArray = new Uint8Array(bufferTail)
              var isString = tailArray[0] === 0
              var msgLength = ''
              for (var i = 1; ; i++) {
                if (tailArray[i] === 255) break // 310 = char length of Number.MAX_VALUE
                if (msgLength.length > 310) {
                  return callback(err, 0, 1)
                }
                msgLength += tailArray[i]
              }
              bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length)
              msgLength = parseInt(msgLength)
              var msg = sliceBuffer(bufferTail, 0, msgLength)
              if (isString) {
                try {
                  msg = String.fromCharCode.apply(null, new Uint8Array(msg))
                } catch (e) {
                  // iPhone Safari doesn't let you apply to typed arrays
                  var typed = new Uint8Array(msg)
                  msg = ''
                  for (var i = 0; i < typed.length; i++) {
                    msg += String.fromCharCode(typed[i])
                  }
                }
              }
              buffers.push(msg)
              bufferTail = sliceBuffer(bufferTail, msgLength)
            }
            var total = buffers.length
            buffers.forEach(function(buffer, i) {
              callback(exports.decodePacket(buffer, binaryType, true), i, total)
            })
          }
        }.apply(this, arguments))
      },
      {
        './keys': 55,
        './utf8': 56,
        after: 2,
        'arraybuffer.slice': 3,
        'base64-arraybuffer': 31,
        blob: 33,
        'has-binary2': 57
      }
    ],
    55: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/engine.io-parser/lib/keys.js',
          module
        )
        ;(function() {
          /**
           * Gets the keys for an object.
           *
           * @return {Array} keys
           * @api private
           */ module.exports =
            Object.keys ||
            function keys(obj) {
              var arr = []
              var has = Object.prototype.hasOwnProperty
              for (var i in obj) {
                if (has.call(obj, i)) {
                  arr.push(i)
                }
              }
              return arr
            }
        }.apply(this, arguments))
      },
      {}
    ],
    56: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/engine.io-parser/lib/utf8.js',
          module
        )
        ;(function() {
          /*! https://mths.be/utf8js v2.1.2 by @mathias */ var stringFromCharCode =
            String.fromCharCode // Taken from https://mths.be/punycode
          function ucs2decode(string) {
            var output = []
            var counter = 0
            var length = string.length
            var value
            var extra
            while (counter < length) {
              value = string.charCodeAt(counter++)
              if (value >= 0xd800 && value <= 0xdbff && counter < length) {
                // high surrogate, and there is a next character
                extra = string.charCodeAt(counter++)
                if ((extra & 0xfc00) == 0xdc00) {
                  // low surrogate
                  output.push(
                    ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000
                  )
                } else {
                  // unmatched surrogate; only append this code unit, in case the next
                  // code unit is the high surrogate of a surrogate pair
                  output.push(value)
                  counter--
                }
              } else {
                output.push(value)
              }
            }
            return output
          } // Taken from https://mths.be/punycode
          function ucs2encode(array) {
            var length = array.length
            var index = -1
            var value
            var output = ''
            while (++index < length) {
              value = array[index]
              if (value > 0xffff) {
                value -= 0x10000
                output += stringFromCharCode(((value >>> 10) & 0x3ff) | 0xd800)
                value = 0xdc00 | (value & 0x3ff)
              }
              output += stringFromCharCode(value)
            }
            return output
          }
          function checkScalarValue(codePoint, strict) {
            if (codePoint >= 0xd800 && codePoint <= 0xdfff) {
              if (strict) {
                throw Error(
                  'Lone surrogate U+' +
                    codePoint.toString(16).toUpperCase() +
                    ' is not a scalar value'
                )
              }
              return false
            }
            return true
          }
          /*--------------------------------------------------------------------------*/ function createByte(
            codePoint,
            shift
          ) {
            return stringFromCharCode(((codePoint >> shift) & 0x3f) | 0x80)
          }
          function encodeCodePoint(codePoint, strict) {
            if ((codePoint & 0xffffff80) == 0) {
              // 1-byte sequence
              return stringFromCharCode(codePoint)
            }
            var symbol = ''
            if ((codePoint & 0xfffff800) == 0) {
              // 2-byte sequence
              symbol = stringFromCharCode(((codePoint >> 6) & 0x1f) | 0xc0)
            } else if ((codePoint & 0xffff0000) == 0) {
              // 3-byte sequence
              if (!checkScalarValue(codePoint, strict)) {
                codePoint = 0xfffd
              }
              symbol = stringFromCharCode(((codePoint >> 12) & 0x0f) | 0xe0)
              symbol += createByte(codePoint, 6)
            } else if ((codePoint & 0xffe00000) == 0) {
              // 4-byte sequence
              symbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xf0)
              symbol += createByte(codePoint, 12)
              symbol += createByte(codePoint, 6)
            }
            symbol += stringFromCharCode((codePoint & 0x3f) | 0x80)
            return symbol
          }
          function utf8encode(string, opts) {
            opts = opts || {}
            var strict = false !== opts.strict
            var codePoints = ucs2decode(string)
            var length = codePoints.length
            var index = -1
            var codePoint
            var byteString = ''
            while (++index < length) {
              codePoint = codePoints[index]
              byteString += encodeCodePoint(codePoint, strict)
            }
            return byteString
          }
          /*--------------------------------------------------------------------------*/ function readContinuationByte() {
            if (byteIndex >= byteCount) {
              throw Error('Invalid byte index')
            }
            var continuationByte = byteArray[byteIndex] & 0xff
            byteIndex++
            if ((continuationByte & 0xc0) == 0x80) {
              return continuationByte & 0x3f
            } // If we end up here, it’s not a continuation byte
            throw Error('Invalid continuation byte')
          }
          function decodeSymbol(strict) {
            var byte1
            var byte2
            var byte3
            var byte4
            var codePoint
            if (byteIndex > byteCount) {
              throw Error('Invalid byte index')
            }
            if (byteIndex == byteCount) {
              return false
            } // Read first byte
            byte1 = byteArray[byteIndex] & 0xff
            byteIndex++ // 1-byte sequence (no continuation bytes)
            if ((byte1 & 0x80) == 0) {
              return byte1
            } // 2-byte sequence
            if ((byte1 & 0xe0) == 0xc0) {
              byte2 = readContinuationByte()
              codePoint = ((byte1 & 0x1f) << 6) | byte2
              if (codePoint >= 0x80) {
                return codePoint
              } else {
                throw Error('Invalid continuation byte')
              }
            } // 3-byte sequence (may include unpaired surrogates)
            if ((byte1 & 0xf0) == 0xe0) {
              byte2 = readContinuationByte()
              byte3 = readContinuationByte()
              codePoint = ((byte1 & 0x0f) << 12) | (byte2 << 6) | byte3
              if (codePoint >= 0x0800) {
                return checkScalarValue(codePoint, strict) ? codePoint : 0xfffd
              } else {
                throw Error('Invalid continuation byte')
              }
            } // 4-byte sequence
            if ((byte1 & 0xf8) == 0xf0) {
              byte2 = readContinuationByte()
              byte3 = readContinuationByte()
              byte4 = readContinuationByte()
              codePoint =
                ((byte1 & 0x07) << 0x12) |
                (byte2 << 0x0c) |
                (byte3 << 0x06) |
                byte4
              if (codePoint >= 0x010000 && codePoint <= 0x10ffff) {
                return codePoint
              }
            }
            throw Error('Invalid UTF-8 detected')
          }
          var byteArray
          var byteCount
          var byteIndex
          function utf8decode(byteString, opts) {
            opts = opts || {}
            var strict = false !== opts.strict
            byteArray = ucs2decode(byteString)
            byteCount = byteArray.length
            byteIndex = 0
            var codePoints = []
            var tmp
            while ((tmp = decodeSymbol(strict)) !== false) {
              codePoints.push(tmp)
            }
            return ucs2encode(codePoints)
          }
          module.exports = {
            version: '2.1.2',
            encode: utf8encode,
            decode: utf8decode
          }
        }.apply(this, arguments))
      },
      {}
    ],
    57: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/has-binary2/index.js',
          module
        )
        ;(function() {
          ;(function(Buffer) {
            /* global Blob File */ /*
             * Module requirements.
             */ var isArray = require('isarray')
            var toString = Object.prototype.toString
            var withNativeBlob =
              typeof Blob === 'function' ||
              (typeof Blob !== 'undefined' &&
                toString.call(Blob) === '[object BlobConstructor]')
            var withNativeFile =
              typeof File === 'function' ||
              (typeof File !== 'undefined' &&
                toString.call(File) === '[object FileConstructor]')
            /**
             * Module exports.
             */ module.exports = hasBinary
            /**
             * Checks for binary data.
             *
             * Supports Buffer, ArrayBuffer, Blob and File.
             *
             * @param {Object} anything
             * @api public
             */ function hasBinary(obj) {
              if (!obj || (0, _typeof3['default'])(obj) !== 'object') {
                return false
              }
              if (isArray(obj)) {
                for (var i = 0, l = obj.length; i < l; i++) {
                  if (hasBinary(obj[i])) {
                    return true
                  }
                }
                return false
              }
              if (
                (typeof Buffer === 'function' &&
                  Buffer.isBuffer &&
                  Buffer.isBuffer(obj)) ||
                (typeof ArrayBuffer === 'function' &&
                  obj instanceof ArrayBuffer) ||
                (withNativeBlob && obj instanceof Blob) ||
                (withNativeFile && obj instanceof File)
              ) {
                return true
              } // see: https://github.com/Automattic/has-binary/pull/4
              if (
                obj.toJSON &&
                typeof obj.toJSON === 'function' &&
                arguments.length === 1
              ) {
                return hasBinary(obj.toJSON(), true)
              }
              for (var key in obj) {
                if (
                  Object.prototype.hasOwnProperty.call(obj, key) &&
                  hasBinary(obj[key])
                ) {
                  return true
                }
              }
              return false
            }
          }.call(this, require('buffer').Buffer))
        }.apply(this, arguments))
      },
      { buffer: 38, isarray: 58 }
    ],
    58: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/has-binary2/node_modules/isarray/index.js',
          module
        )
        ;(function() {
          var toString = {}.toString
          module.exports =
            Array.isArray ||
            function(arr) {
              return toString.call(arr) == '[object Array]'
            }
        }.apply(this, arguments))
      },
      {}
    ],
    59: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/has-cors/index.js',
          module
        )
        ;(function() {
          /**
           * Module exports.
           *
           * Logic borrowed from Modernizr:
           *
           *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js
           */ try {
            module.exports =
              typeof XMLHttpRequest !== 'undefined' &&
              'withCredentials' in new XMLHttpRequest()
          } catch (err) {
            // if XMLHttp support is disabled in IE then it will throw
            // when trying to create
            module.exports = false
          }
        }.apply(this, arguments))
      },
      {}
    ],
    60: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/ieee754/index.js',
          module
        )
        ;(function() {
          exports.read = function(buffer, offset, isLE, mLen, nBytes) {
            var e, m
            var eLen = nBytes * 8 - mLen - 1
            var eMax = (1 << eLen) - 1
            var eBias = eMax >> 1
            var nBits = -7
            var i = isLE ? nBytes - 1 : 0
            var d = isLE ? -1 : 1
            var s = buffer[offset + i]
            i += d
            e = s & ((1 << -nBits) - 1)
            s >>= -nBits
            nBits += eLen
            for (
              ;
              nBits > 0;
              e = e * 256 + buffer[offset + i], i += d, nBits -= 8
            ) {}
            m = e & ((1 << -nBits) - 1)
            e >>= -nBits
            nBits += mLen
            for (
              ;
              nBits > 0;
              m = m * 256 + buffer[offset + i], i += d, nBits -= 8
            ) {}
            if (e === 0) {
              e = 1 - eBias
            } else if (e === eMax) {
              return m ? NaN : (s ? -1 : 1) * Infinity
            } else {
              m = m + Math.pow(2, mLen)
              e = e - eBias
            }
            return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
          }
          exports.write = function(buffer, value, offset, isLE, mLen, nBytes) {
            var e, m, c
            var eLen = nBytes * 8 - mLen - 1
            var eMax = (1 << eLen) - 1
            var eBias = eMax >> 1
            var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0
            var i = isLE ? 0 : nBytes - 1
            var d = isLE ? 1 : -1
            var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0
            value = Math.abs(value)
            if (isNaN(value) || value === Infinity) {
              m = isNaN(value) ? 1 : 0
              e = eMax
            } else {
              e = Math.floor(Math.log(value) / Math.LN2)
              if (value * (c = Math.pow(2, -e)) < 1) {
                e--
                c *= 2
              }
              if (e + eBias >= 1) {
                value += rt / c
              } else {
                value += rt * Math.pow(2, 1 - eBias)
              }
              if (value * c >= 2) {
                e++
                c /= 2
              }
              if (e + eBias >= eMax) {
                m = 0
                e = eMax
              } else if (e + eBias >= 1) {
                m = (value * c - 1) * Math.pow(2, mLen)
                e = e + eBias
              } else {
                m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
                e = 0
              }
            }
            for (
              ;
              mLen >= 8;
              buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8
            ) {}
            e = (e << mLen) | m
            eLen += mLen
            for (
              ;
              eLen > 0;
              buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8
            ) {}
            buffer[offset + i - d] |= s * 128
          }
        }.apply(this, arguments))
      },
      {}
    ],
    61: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/indexof/index.js',
          module
        )
        ;(function() {
          var indexOf = [].indexOf
          module.exports = function(arr, obj) {
            if (indexOf) return arr.indexOf(obj)
            for (var i = 0; i < arr.length; ++i) {
              if (arr[i] === obj) return i
            }
            return -1
          }
        }.apply(this, arguments))
      },
      {}
    ],
    62: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_DataView.js',
          module
        )
        ;(function() {
          var getNative = require('./_getNative'),
            root = require('./_root')
          /* Built-in method references that are verified to be native. */ var DataView = getNative(
            root,
            'DataView'
          )
          module.exports = DataView
        }.apply(this, arguments))
      },
      { './_getNative': 128, './_root': 165 }
    ],
    63: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_Hash.js',
          module
        )
        ;(function() {
          var hashClear = require('./_hashClear'),
            hashDelete = require('./_hashDelete'),
            hashGet = require('./_hashGet'),
            hashHas = require('./_hashHas'),
            hashSet = require('./_hashSet')
          /**
           * Creates a hash object.
           *
           * @private
           * @constructor
           * @param {Array} [entries] The key-value pairs to cache.
           */ function Hash(entries) {
            var index = -1,
              length = entries == null ? 0 : entries.length
            this.clear()
            while (++index < length) {
              var entry = entries[index]
              this.set(entry[0], entry[1])
            }
          } // Add methods to `Hash`.
          Hash.prototype.clear = hashClear
          Hash.prototype['delete'] = hashDelete
          Hash.prototype.get = hashGet
          Hash.prototype.has = hashHas
          Hash.prototype.set = hashSet
          module.exports = Hash
        }.apply(this, arguments))
      },
      {
        './_hashClear': 134,
        './_hashDelete': 135,
        './_hashGet': 136,
        './_hashHas': 137,
        './_hashSet': 138
      }
    ],
    64: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_ListCache.js',
          module
        )
        ;(function() {
          var listCacheClear = require('./_listCacheClear'),
            listCacheDelete = require('./_listCacheDelete'),
            listCacheGet = require('./_listCacheGet'),
            listCacheHas = require('./_listCacheHas'),
            listCacheSet = require('./_listCacheSet')
          /**
           * Creates an list cache object.
           *
           * @private
           * @constructor
           * @param {Array} [entries] The key-value pairs to cache.
           */ function ListCache(entries) {
            var index = -1,
              length = entries == null ? 0 : entries.length
            this.clear()
            while (++index < length) {
              var entry = entries[index]
              this.set(entry[0], entry[1])
            }
          } // Add methods to `ListCache`.
          ListCache.prototype.clear = listCacheClear
          ListCache.prototype['delete'] = listCacheDelete
          ListCache.prototype.get = listCacheGet
          ListCache.prototype.has = listCacheHas
          ListCache.prototype.set = listCacheSet
          module.exports = ListCache
        }.apply(this, arguments))
      },
      {
        './_listCacheClear': 146,
        './_listCacheDelete': 147,
        './_listCacheGet': 148,
        './_listCacheHas': 149,
        './_listCacheSet': 150
      }
    ],
    65: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule('node_modules/lodash/_Map.js', module)
        ;(function() {
          var getNative = require('./_getNative'),
            root = require('./_root')
          /* Built-in method references that are verified to be native. */ var Map = getNative(
            root,
            'Map'
          )
          module.exports = Map
        }.apply(this, arguments))
      },
      { './_getNative': 128, './_root': 165 }
    ],
    66: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_MapCache.js',
          module
        )
        ;(function() {
          var mapCacheClear = require('./_mapCacheClear'),
            mapCacheDelete = require('./_mapCacheDelete'),
            mapCacheGet = require('./_mapCacheGet'),
            mapCacheHas = require('./_mapCacheHas'),
            mapCacheSet = require('./_mapCacheSet')
          /**
           * Creates a map cache object to store key-value pairs.
           *
           * @private
           * @constructor
           * @param {Array} [entries] The key-value pairs to cache.
           */ function MapCache(entries) {
            var index = -1,
              length = entries == null ? 0 : entries.length
            this.clear()
            while (++index < length) {
              var entry = entries[index]
              this.set(entry[0], entry[1])
            }
          } // Add methods to `MapCache`.
          MapCache.prototype.clear = mapCacheClear
          MapCache.prototype['delete'] = mapCacheDelete
          MapCache.prototype.get = mapCacheGet
          MapCache.prototype.has = mapCacheHas
          MapCache.prototype.set = mapCacheSet
          module.exports = MapCache
        }.apply(this, arguments))
      },
      {
        './_mapCacheClear': 151,
        './_mapCacheDelete': 152,
        './_mapCacheGet': 153,
        './_mapCacheHas': 154,
        './_mapCacheSet': 155
      }
    ],
    67: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_Promise.js',
          module
        )
        ;(function() {
          var getNative = require('./_getNative'),
            root = require('./_root')
          /* Built-in method references that are verified to be native. */ var Promise = getNative(
            root,
            'Promise'
          )
          module.exports = Promise
        }.apply(this, arguments))
      },
      { './_getNative': 128, './_root': 165 }
    ],
    68: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule('node_modules/lodash/_Set.js', module)
        ;(function() {
          var getNative = require('./_getNative'),
            root = require('./_root')
          /* Built-in method references that are verified to be native. */ var Set = getNative(
            root,
            'Set'
          )
          module.exports = Set
        }.apply(this, arguments))
      },
      { './_getNative': 128, './_root': 165 }
    ],
    69: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_SetCache.js',
          module
        )
        ;(function() {
          var MapCache = require('./_MapCache'),
            setCacheAdd = require('./_setCacheAdd'),
            setCacheHas = require('./_setCacheHas')
          /**
           *
           * Creates an array cache object to store unique values.
           *
           * @private
           * @constructor
           * @param {Array} [values] The values to cache.
           */ function SetCache(values) {
            var index = -1,
              length = values == null ? 0 : values.length
            this.__data__ = new MapCache()
            while (++index < length) {
              this.add(values[index])
            }
          } // Add methods to `SetCache`.
          SetCache.prototype.add = SetCache.prototype.push = setCacheAdd
          SetCache.prototype.has = setCacheHas
          module.exports = SetCache
        }.apply(this, arguments))
      },
      { './_MapCache': 66, './_setCacheAdd': 166, './_setCacheHas': 167 }
    ],
    70: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_Stack.js',
          module
        )
        ;(function() {
          var ListCache = require('./_ListCache'),
            stackClear = require('./_stackClear'),
            stackDelete = require('./_stackDelete'),
            stackGet = require('./_stackGet'),
            stackHas = require('./_stackHas'),
            stackSet = require('./_stackSet')
          /**
           * Creates a stack cache object to store key-value pairs.
           *
           * @private
           * @constructor
           * @param {Array} [entries] The key-value pairs to cache.
           */ function Stack(entries) {
            var data = (this.__data__ = new ListCache(entries))
            this.size = data.size
          } // Add methods to `Stack`.
          Stack.prototype.clear = stackClear
          Stack.prototype['delete'] = stackDelete
          Stack.prototype.get = stackGet
          Stack.prototype.has = stackHas
          Stack.prototype.set = stackSet
          module.exports = Stack
        }.apply(this, arguments))
      },
      {
        './_ListCache': 64,
        './_stackClear': 171,
        './_stackDelete': 172,
        './_stackGet': 173,
        './_stackHas': 174,
        './_stackSet': 175
      }
    ],
    71: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_Symbol.js',
          module
        )
        ;(function() {
          var root = require('./_root')
          /** Built-in value references. */ var _Symbol = root.Symbol
          module.exports = _Symbol
        }.apply(this, arguments))
      },
      { './_root': 165 }
    ],
    72: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_Uint8Array.js',
          module
        )
        ;(function() {
          var root = require('./_root')
          /** Built-in value references. */ var Uint8Array = root.Uint8Array
          module.exports = Uint8Array
        }.apply(this, arguments))
      },
      { './_root': 165 }
    ],
    73: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_WeakMap.js',
          module
        )
        ;(function() {
          var getNative = require('./_getNative'),
            root = require('./_root')
          /* Built-in method references that are verified to be native. */ var WeakMap = getNative(
            root,
            'WeakMap'
          )
          module.exports = WeakMap
        }.apply(this, arguments))
      },
      { './_getNative': 128, './_root': 165 }
    ],
    74: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_apply.js',
          module
        )
        ;(function() {
          /**
           * A faster alternative to `Function#apply`, this function invokes `func`
           * with the `this` binding of `thisArg` and the arguments of `args`.
           *
           * @private
           * @param {Function} func The function to invoke.
           * @param {*} thisArg The `this` binding of `func`.
           * @param {Array} args The arguments to invoke `func` with.
           * @returns {*} Returns the result of `func`.
           */ function apply(func, thisArg, args) {
            switch (args.length) {
              case 0:
                return func.call(thisArg)
              case 1:
                return func.call(thisArg, args[0])
              case 2:
                return func.call(thisArg, args[0], args[1])
              case 3:
                return func.call(thisArg, args[0], args[1], args[2])
            }
            return func.apply(thisArg, args)
          }
          module.exports = apply
        }.apply(this, arguments))
      },
      {}
    ],
    75: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_arrayEach.js',
          module
        )
        ;(function() {
          /**
           * A specialized version of `_.forEach` for arrays without support for
           * iteratee shorthands.
           *
           * @private
           * @param {Array} [array] The array to iterate over.
           * @param {Function} iteratee The function invoked per iteration.
           * @returns {Array} Returns `array`.
           */ function arrayEach(array, iteratee) {
            var index = -1,
              length = array == null ? 0 : array.length
            while (++index < length) {
              if (iteratee(array[index], index, array) === false) {
                break
              }
            }
            return array
          }
          module.exports = arrayEach
        }.apply(this, arguments))
      },
      {}
    ],
    76: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_arrayFilter.js',
          module
        )
        ;(function() {
          /**
           * A specialized version of `_.filter` for arrays without support for
           * iteratee shorthands.
           *
           * @private
           * @param {Array} [array] The array to iterate over.
           * @param {Function} predicate The function invoked per iteration.
           * @returns {Array} Returns the new filtered array.
           */ function arrayFilter(array, predicate) {
            var index = -1,
              length = array == null ? 0 : array.length,
              resIndex = 0,
              result = []
            while (++index < length) {
              var value = array[index]
              if (predicate(value, index, array)) {
                result[resIndex++] = value
              }
            }
            return result
          }
          module.exports = arrayFilter
        }.apply(this, arguments))
      },
      {}
    ],
    77: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_arrayLikeKeys.js',
          module
        )
        ;(function() {
          var baseTimes = require('./_baseTimes'),
            isArguments = require('./isArguments'),
            isArray = require('./isArray'),
            isBuffer = require('./isBuffer'),
            isIndex = require('./_isIndex'),
            isTypedArray = require('./isTypedArray')
          /** Used for built-in method references. */ var objectProto =
            Object.prototype
          /** Used to check objects for own properties. */ var hasOwnProperty =
            objectProto.hasOwnProperty
          /**
           * Creates an array of the enumerable property names of the array-like `value`.
           *
           * @private
           * @param {*} value The value to query.
           * @param {boolean} inherited Specify returning inherited property names.
           * @returns {Array} Returns the array of property names.
           */ function arrayLikeKeys(value, inherited) {
            var isArr = isArray(value),
              isArg = !isArr && isArguments(value),
              isBuff = !isArr && !isArg && isBuffer(value),
              isType = !isArr && !isArg && !isBuff && isTypedArray(value),
              skipIndexes = isArr || isArg || isBuff || isType,
              result = skipIndexes ? baseTimes(value.length, String) : [],
              length = result.length
            for (var key in value) {
              if (
                (inherited || hasOwnProperty.call(value, key)) &&
                !(
                  skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
                  (key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.
                  (isBuff && (key == 'offset' || key == 'parent')) || // PhantomJS 2 has enumerable non-index properties on typed arrays.
                  (isType &&
                    (key == 'buffer' ||
                      key == 'byteLength' ||
                      key == 'byteOffset')) || // Skip index properties.
                    isIndex(key, length))
                )
              ) {
                result.push(key)
              }
            }
            return result
          }
          module.exports = arrayLikeKeys
        }.apply(this, arguments))
      },
      {
        './_baseTimes': 108,
        './_isIndex': 139,
        './isArguments': 188,
        './isArray': 189,
        './isBuffer': 191,
        './isTypedArray': 197
      }
    ],
    78: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_arrayMap.js',
          module
        )
        ;(function() {
          /**
           * A specialized version of `_.map` for arrays without support for iteratee
           * shorthands.
           *
           * @private
           * @param {Array} [array] The array to iterate over.
           * @param {Function} iteratee The function invoked per iteration.
           * @returns {Array} Returns the new mapped array.
           */ function arrayMap(array, iteratee) {
            var index = -1,
              length = array == null ? 0 : array.length,
              result = Array(length)
            while (++index < length) {
              result[index] = iteratee(array[index], index, array)
            }
            return result
          }
          module.exports = arrayMap
        }.apply(this, arguments))
      },
      {}
    ],
    79: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_arrayPush.js',
          module
        )
        ;(function() {
          /**
           * Appends the elements of `values` to `array`.
           *
           * @private
           * @param {Array} array The array to modify.
           * @param {Array} values The values to append.
           * @returns {Array} Returns `array`.
           */ function arrayPush(array, values) {
            var index = -1,
              length = values.length,
              offset = array.length
            while (++index < length) {
              array[offset + index] = values[index]
            }
            return array
          }
          module.exports = arrayPush
        }.apply(this, arguments))
      },
      {}
    ],
    80: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_arraySome.js',
          module
        )
        ;(function() {
          /**
           * A specialized version of `_.some` for arrays without support for iteratee
           * shorthands.
           *
           * @private
           * @param {Array} [array] The array to iterate over.
           * @param {Function} predicate The function invoked per iteration.
           * @returns {boolean} Returns `true` if any element passes the predicate check,
           *  else `false`.
           */ function arraySome(array, predicate) {
            var index = -1,
              length = array == null ? 0 : array.length
            while (++index < length) {
              if (predicate(array[index], index, array)) {
                return true
              }
            }
            return false
          }
          module.exports = arraySome
        }.apply(this, arguments))
      },
      {}
    ],
    81: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_assignValue.js',
          module
        )
        ;(function() {
          var baseAssignValue = require('./_baseAssignValue'),
            eq = require('./eq')
          /** Used for built-in method references. */ var objectProto =
            Object.prototype
          /** Used to check objects for own properties. */ var hasOwnProperty =
            objectProto.hasOwnProperty
          /**
           * Assigns `value` to `key` of `object` if the existing value is not equivalent
           * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
           * for equality comparisons.
           *
           * @private
           * @param {Object} object The object to modify.
           * @param {string} key The key of the property to assign.
           * @param {*} value The value to assign.
           */ function assignValue(object, key, value) {
            var objValue = object[key]
            if (
              !(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
              (value === undefined && !(key in object))
            ) {
              baseAssignValue(object, key, value)
            }
          }
          module.exports = assignValue
        }.apply(this, arguments))
      },
      { './_baseAssignValue': 83, './eq': 181 }
    ],
    82: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_assocIndexOf.js',
          module
        )
        ;(function() {
          var eq = require('./eq')
          /**
           * Gets the index at which the `key` is found in `array` of key-value pairs.
           *
           * @private
           * @param {Array} array The array to inspect.
           * @param {*} key The key to search for.
           * @returns {number} Returns the index of the matched value, else `-1`.
           */ function assocIndexOf(array, key) {
            var length = array.length
            while (length--) {
              if (eq(array[length][0], key)) {
                return length
              }
            }
            return -1
          }
          module.exports = assocIndexOf
        }.apply(this, arguments))
      },
      { './eq': 181 }
    ],
    83: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_baseAssignValue.js',
          module
        )
        ;(function() {
          var defineProperty = require('./_defineProperty')
          /**
           * The base implementation of `assignValue` and `assignMergeValue` without
           * value checks.
           *
           * @private
           * @param {Object} object The object to modify.
           * @param {string} key The key of the property to assign.
           * @param {*} value The value to assign.
           */ function baseAssignValue(object, key, value) {
            if (key == '__proto__' && defineProperty) {
              defineProperty(object, key, {
                configurable: true,
                enumerable: true,
                value: value,
                writable: true
              })
            } else {
              object[key] = value
            }
          }
          module.exports = baseAssignValue
        }.apply(this, arguments))
      },
      { './_defineProperty': 120 }
    ],
    84: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_baseEach.js',
          module
        )
        ;(function() {
          var baseForOwn = require('./_baseForOwn'),
            createBaseEach = require('./_createBaseEach')
          /**
           * The base implementation of `_.forEach` without support for iteratee shorthands.
           *
           * @private
           * @param {Array|Object} collection The collection to iterate over.
           * @param {Function} iteratee The function invoked per iteration.
           * @returns {Array|Object} Returns `collection`.
           */ var baseEach = createBaseEach(baseForOwn)
          module.exports = baseEach
        }.apply(this, arguments))
      },
      { './_baseForOwn': 87, './_createBaseEach': 118 }
    ],
    85: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_baseFilter.js',
          module
        )
        ;(function() {
          var baseEach = require('./_baseEach')
          /**
           * The base implementation of `_.filter` without support for iteratee shorthands.
           *
           * @private
           * @param {Array|Object} collection The collection to iterate over.
           * @param {Function} predicate The function invoked per iteration.
           * @returns {Array} Returns the new filtered array.
           */ function baseFilter(collection, predicate) {
            var result = []
            baseEach(collection, function(value, index, collection) {
              if (predicate(value, index, collection)) {
                result.push(value)
              }
            })
            return result
          }
          module.exports = baseFilter
        }.apply(this, arguments))
      },
      { './_baseEach': 84 }
    ],
    86: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_baseFor.js',
          module
        )
        ;(function() {
          var createBaseFor = require('./_createBaseFor')
          /**
           * The base implementation of `baseForOwn` which iterates over `object`
           * properties returned by `keysFunc` and invokes `iteratee` for each property.
           * Iteratee functions may exit iteration early by explicitly returning `false`.
           *
           * @private
           * @param {Object} object The object to iterate over.
           * @param {Function} iteratee The function invoked per iteration.
           * @param {Function} keysFunc The function to get the keys of `object`.
           * @returns {Object} Returns `object`.
           */ var baseFor = createBaseFor()
          module.exports = baseFor
        }.apply(this, arguments))
      },
      { './_createBaseFor': 119 }
    ],
    87: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_baseForOwn.js',
          module
        )
        ;(function() {
          var baseFor = require('./_baseFor'),
            keys = require('./keys')
          /**
           * The base implementation of `_.forOwn` without support for iteratee shorthands.
           *
           * @private
           * @param {Object} object The object to iterate over.
           * @param {Function} iteratee The function invoked per iteration.
           * @returns {Object} Returns `object`.
           */ function baseForOwn(object, iteratee) {
            return object && baseFor(object, iteratee, keys)
          }
          module.exports = baseForOwn
        }.apply(this, arguments))
      },
      { './_baseFor': 86, './keys': 198 }
    ],
    88: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_baseGet.js',
          module
        )
        ;(function() {
          var castPath = require('./_castPath'),
            toKey = require('./_toKey')
          /**
           * The base implementation of `_.get` without support for default values.
           *
           * @private
           * @param {Object} object The object to query.
           * @param {Array|string} path The path of the property to get.
           * @returns {*} Returns the resolved value.
           */ function baseGet(object, path) {
            path = castPath(path, object)
            var index = 0,
              length = path.length
            while (object != null && index < length) {
              object = object[toKey(path[index++])]
            }
            return index && index == length ? object : undefined
          }
          module.exports = baseGet
        }.apply(this, arguments))
      },
      { './_castPath': 114, './_toKey': 177 }
    ],
    89: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_baseGetAllKeys.js',
          module
        )
        ;(function() {
          var arrayPush = require('./_arrayPush'),
            isArray = require('./isArray')
          /**
           * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
           * `keysFunc` and `symbolsFunc` to get the enumerable property names and
           * symbols of `object`.
           *
           * @private
           * @param {Object} object The object to query.
           * @param {Function} keysFunc The function to get the keys of `object`.
           * @param {Function} symbolsFunc The function to get the symbols of `object`.
           * @returns {Array} Returns the array of property names and symbols.
           */ function baseGetAllKeys(object, keysFunc, symbolsFunc) {
            var result = keysFunc(object)
            return isArray(object)
              ? result
              : arrayPush(result, symbolsFunc(object))
          }
          module.exports = baseGetAllKeys
        }.apply(this, arguments))
      },
      { './_arrayPush': 79, './isArray': 189 }
    ],
    90: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_baseGetTag.js',
          module
        )
        ;(function() {
          var _Symbol2 = require('./_Symbol'),
            getRawTag = require('./_getRawTag'),
            objectToString = require('./_objectToString')
          /** `Object#toString` result references. */ var nullTag =
              '[object Null]',
            undefinedTag = '[object Undefined]'
          /** Built-in value references. */ var symToStringTag = _Symbol2
            ? _Symbol2.toStringTag
            : undefined
          /**
           * The base implementation of `getTag` without fallbacks for buggy environments.
           *
           * @private
           * @param {*} value The value to query.
           * @returns {string} Returns the `toStringTag`.
           */ function baseGetTag(value) {
            if (value == null) {
              return value === undefined ? undefinedTag : nullTag
            }
            return symToStringTag && symToStringTag in Object(value)
              ? getRawTag(value)
              : objectToString(value)
          }
          module.exports = baseGetTag
        }.apply(this, arguments))
      },
      { './_Symbol': 71, './_getRawTag': 129, './_objectToString': 162 }
    ],
    91: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_baseHasIn.js',
          module
        )
        ;(function() {
          /**
           * The base implementation of `_.hasIn` without support for deep paths.
           *
           * @private
           * @param {Object} [object] The object to query.
           * @param {Array|string} key The key to check.
           * @returns {boolean} Returns `true` if `key` exists, else `false`.
           */ function baseHasIn(object, key) {
            return object != null && key in Object(object)
          }
          module.exports = baseHasIn
        }.apply(this, arguments))
      },
      {}
    ],
    92: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_baseIsArguments.js',
          module
        )
        ;(function() {
          var baseGetTag = require('./_baseGetTag'),
            isObjectLike = require('./isObjectLike')
          /** `Object#toString` result references. */ var argsTag =
            '[object Arguments]'
          /**
           * The base implementation of `_.isArguments`.
           *
           * @private
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is an `arguments` object,
           */ function baseIsArguments(value) {
            return isObjectLike(value) && baseGetTag(value) == argsTag
          }
          module.exports = baseIsArguments
        }.apply(this, arguments))
      },
      { './_baseGetTag': 90, './isObjectLike': 195 }
    ],
    93: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_baseIsEqual.js',
          module
        )
        ;(function() {
          var baseIsEqualDeep = require('./_baseIsEqualDeep'),
            isObjectLike = require('./isObjectLike')
          /**
           * The base implementation of `_.isEqual` which supports partial comparisons
           * and tracks traversed objects.
           *
           * @private
           * @param {*} value The value to compare.
           * @param {*} other The other value to compare.
           * @param {boolean} bitmask The bitmask flags.
           *  1 - Unordered comparison
           *  2 - Partial comparison
           * @param {Function} [customizer] The function to customize comparisons.
           * @param {Object} [stack] Tracks traversed `value` and `other` objects.
           * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
           */ function baseIsEqual(value, other, bitmask, customizer, stack) {
            if (value === other) {
              return true
            }
            if (
              value == null ||
              other == null ||
              (!isObjectLike(value) && !isObjectLike(other))
            ) {
              return value !== value && other !== other
            }
            return baseIsEqualDeep(
              value,
              other,
              bitmask,
              customizer,
              baseIsEqual,
              stack
            )
          }
          module.exports = baseIsEqual
        }.apply(this, arguments))
      },
      { './_baseIsEqualDeep': 94, './isObjectLike': 195 }
    ],
    94: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_baseIsEqualDeep.js',
          module
        )
        ;(function() {
          var Stack = require('./_Stack'),
            equalArrays = require('./_equalArrays'),
            equalByTag = require('./_equalByTag'),
            equalObjects = require('./_equalObjects'),
            getTag = require('./_getTag'),
            isArray = require('./isArray'),
            isBuffer = require('./isBuffer'),
            isTypedArray = require('./isTypedArray')
          /** Used to compose bitmasks for value comparisons. */ var COMPARE_PARTIAL_FLAG = 1
          /** `Object#toString` result references. */ var argsTag =
              '[object Arguments]',
            arrayTag = '[object Array]',
            objectTag = '[object Object]'
          /** Used for built-in method references. */ var objectProto =
            Object.prototype
          /** Used to check objects for own properties. */ var hasOwnProperty =
            objectProto.hasOwnProperty
          /**
           * A specialized version of `baseIsEqual` for arrays and objects which performs
           * deep comparisons and tracks traversed objects enabling objects with circular
           * references to be compared.
           *
           * @private
           * @param {Object} object The object to compare.
           * @param {Object} other The other object to compare.
           * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
           * @param {Function} customizer The function to customize comparisons.
           * @param {Function} equalFunc The function to determine equivalents of values.
           * @param {Object} [stack] Tracks traversed `object` and `other` objects.
           * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
           */ function baseIsEqualDeep(
            object,
            other,
            bitmask,
            customizer,
            equalFunc,
            stack
          ) {
            var objIsArr = isArray(object),
              othIsArr = isArray(other),
              objTag = objIsArr ? arrayTag : getTag(object),
              othTag = othIsArr ? arrayTag : getTag(other)
            objTag = objTag == argsTag ? objectTag : objTag
            othTag = othTag == argsTag ? objectTag : othTag
            var objIsObj = objTag == objectTag,
              othIsObj = othTag == objectTag,
              isSameTag = objTag == othTag
            if (isSameTag && isBuffer(object)) {
              if (!isBuffer(other)) {
                return false
              }
              objIsArr = true
              objIsObj = false
            }
            if (isSameTag && !objIsObj) {
              stack || (stack = new Stack())
              return objIsArr || isTypedArray(object)
                ? equalArrays(
                    object,
                    other,
                    bitmask,
                    customizer,
                    equalFunc,
                    stack
                  )
                : equalByTag(
                    object,
                    other,
                    objTag,
                    bitmask,
                    customizer,
                    equalFunc,
                    stack
                  )
            }
            if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
              var objIsWrapped =
                  objIsObj && hasOwnProperty.call(object, '__wrapped__'),
                othIsWrapped =
                  othIsObj && hasOwnProperty.call(other, '__wrapped__')
              if (objIsWrapped || othIsWrapped) {
                var objUnwrapped = objIsWrapped ? object.value() : object,
                  othUnwrapped = othIsWrapped ? other.value() : other
                stack || (stack = new Stack())
                return equalFunc(
                  objUnwrapped,
                  othUnwrapped,
                  bitmask,
                  customizer,
                  stack
                )
              }
            }
            if (!isSameTag) {
              return false
            }
            stack || (stack = new Stack())
            return equalObjects(
              object,
              other,
              bitmask,
              customizer,
              equalFunc,
              stack
            )
          }
          module.exports = baseIsEqualDeep
        }.apply(this, arguments))
      },
      {
        './_Stack': 70,
        './_equalArrays': 121,
        './_equalByTag': 122,
        './_equalObjects': 123,
        './_getTag': 131,
        './isArray': 189,
        './isBuffer': 191,
        './isTypedArray': 197
      }
    ],
    95: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_baseIsMatch.js',
          module
        )
        ;(function() {
          var Stack = require('./_Stack'),
            baseIsEqual = require('./_baseIsEqual')
          /** Used to compose bitmasks for value comparisons. */ var COMPARE_PARTIAL_FLAG = 1,
            COMPARE_UNORDERED_FLAG = 2
          /**
           * The base implementation of `_.isMatch` without support for iteratee shorthands.
           *
           * @private
           * @param {Object} object The object to inspect.
           * @param {Object} source The object of property values to match.
           * @param {Array} matchData The property names, values, and compare flags to match.
           * @param {Function} [customizer] The function to customize comparisons.
           * @returns {boolean} Returns `true` if `object` is a match, else `false`.
           */ function baseIsMatch(object, source, matchData, customizer) {
            var index = matchData.length,
              length = index,
              noCustomizer = !customizer
            if (object == null) {
              return !length
            }
            object = Object(object)
            while (index--) {
              var data = matchData[index]
              if (
                noCustomizer && data[2]
                  ? data[1] !== object[data[0]]
                  : !(data[0] in object)
              ) {
                return false
              }
            }
            while (++index < length) {
              data = matchData[index]
              var key = data[0],
                objValue = object[key],
                srcValue = data[1]
              if (noCustomizer && data[2]) {
                if (objValue === undefined && !(key in object)) {
                  return false
                }
              } else {
                var stack = new Stack()
                if (customizer) {
                  var result = customizer(
                    objValue,
                    srcValue,
                    key,
                    object,
                    source,
                    stack
                  )
                }
                if (
                  !(result === undefined
                    ? baseIsEqual(
                        srcValue,
                        objValue,
                        COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG,
                        customizer,
                        stack
                      )
                    : result)
                ) {
                  return false
                }
              }
            }
            return true
          }
          module.exports = baseIsMatch
        }.apply(this, arguments))
      },
      { './_Stack': 70, './_baseIsEqual': 93 }
    ],
    96: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_baseIsNative.js',
          module
        )
        ;(function() {
          var isFunction = require('./isFunction'),
            isMasked = require('./_isMasked'),
            isObject = require('./isObject'),
            toSource = require('./_toSource')
          /**
           * Used to match `RegExp`
           * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
           */ var reRegExpChar = /[\\^$.*+?()[\]{}|]/g
          /** Used to detect host constructors (Safari). */ var reIsHostCtor = /^\[object .+?Constructor\]$/
          /** Used for built-in method references. */ var funcProto =
              Function.prototype,
            objectProto = Object.prototype
          /** Used to resolve the decompiled source of functions. */ var funcToString =
            funcProto.toString
          /** Used to check objects for own properties. */ var hasOwnProperty =
            objectProto.hasOwnProperty
          /** Used to detect if a method is native. */ var reIsNative = RegExp(
            '^' +
              funcToString
                .call(hasOwnProperty)
                .replace(reRegExpChar, '\\$&')
                .replace(
                  /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
                  '$1.*?'
                ) +
              '$'
          )
          /**
           * The base implementation of `_.isNative` without bad shim checks.
           *
           * @private
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a native function,
           *  else `false`.
           */ function baseIsNative(value) {
            if (!isObject(value) || isMasked(value)) {
              return false
            }
            var pattern = isFunction(value) ? reIsNative : reIsHostCtor
            return pattern.test(toSource(value))
          }
          module.exports = baseIsNative
        }.apply(this, arguments))
      },
      {
        './_isMasked': 143,
        './_toSource': 178,
        './isFunction': 192,
        './isObject': 194
      }
    ],
    97: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_baseIsTypedArray.js',
          module
        )
        ;(function() {
          var baseGetTag = require('./_baseGetTag'),
            isLength = require('./isLength'),
            isObjectLike = require('./isObjectLike')
          /** `Object#toString` result references. */ var argsTag =
              '[object Arguments]',
            arrayTag = '[object Array]',
            boolTag = '[object Boolean]',
            dateTag = '[object Date]',
            errorTag = '[object Error]',
            funcTag = '[object Function]',
            mapTag = '[object Map]',
            numberTag = '[object Number]',
            objectTag = '[object Object]',
            regexpTag = '[object RegExp]',
            setTag = '[object Set]',
            stringTag = '[object String]',
            weakMapTag = '[object WeakMap]'
          var arrayBufferTag = '[object ArrayBuffer]',
            dataViewTag = '[object DataView]',
            float32Tag = '[object Float32Array]',
            float64Tag = '[object Float64Array]',
            int8Tag = '[object Int8Array]',
            int16Tag = '[object Int16Array]',
            int32Tag = '[object Int32Array]',
            uint8Tag = '[object Uint8Array]',
            uint8ClampedTag = '[object Uint8ClampedArray]',
            uint16Tag = '[object Uint16Array]',
            uint32Tag = '[object Uint32Array]'
          /** Used to identify `toStringTag` values of typed arrays. */ var typedArrayTags = {}
          typedArrayTags[float32Tag] = typedArrayTags[
            float64Tag
          ] = typedArrayTags[int8Tag] = typedArrayTags[
            int16Tag
          ] = typedArrayTags[int32Tag] = typedArrayTags[
            uint8Tag
          ] = typedArrayTags[uint8ClampedTag] = typedArrayTags[
            uint16Tag
          ] = typedArrayTags[uint32Tag] = true
          typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[
            arrayBufferTag
          ] = typedArrayTags[boolTag] = typedArrayTags[
            dataViewTag
          ] = typedArrayTags[dateTag] = typedArrayTags[
            errorTag
          ] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[
            numberTag
          ] = typedArrayTags[objectTag] = typedArrayTags[
            regexpTag
          ] = typedArrayTags[setTag] = typedArrayTags[
            stringTag
          ] = typedArrayTags[weakMapTag] = false
          /**
           * The base implementation of `_.isTypedArray` without Node.js optimizations.
           *
           * @private
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
           */ function baseIsTypedArray(value) {
            return (
              isObjectLike(value) &&
              isLength(value.length) &&
              !!typedArrayTags[baseGetTag(value)]
            )
          }
          module.exports = baseIsTypedArray
        }.apply(this, arguments))
      },
      { './_baseGetTag': 90, './isLength': 193, './isObjectLike': 195 }
    ],
    98: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_baseIteratee.js',
          module
        )
        ;(function() {
          var baseMatches = require('./_baseMatches'),
            baseMatchesProperty = require('./_baseMatchesProperty'),
            identity = require('./identity'),
            isArray = require('./isArray'),
            property = require('./property')
          /**
           * The base implementation of `_.iteratee`.
           *
           * @private
           * @param {*} [value=_.identity] The value to convert to an iteratee.
           * @returns {Function} Returns the iteratee.
           */ function baseIteratee(value) {
            // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
            // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
            if (typeof value == 'function') {
              return value
            }
            if (value == null) {
              return identity
            }
            if ((0, _typeof3['default'])(value) == 'object') {
              return isArray(value)
                ? baseMatchesProperty(value[0], value[1])
                : baseMatches(value)
            }
            return property(value)
          }
          module.exports = baseIteratee
        }.apply(this, arguments))
      },
      {
        './_baseMatches': 101,
        './_baseMatchesProperty': 102,
        './identity': 187,
        './isArray': 189,
        './property': 202
      }
    ],
    99: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_baseKeys.js',
          module
        )
        ;(function() {
          var isPrototype = require('./_isPrototype'),
            nativeKeys = require('./_nativeKeys')
          /** Used for built-in method references. */ var objectProto =
            Object.prototype
          /** Used to check objects for own properties. */ var hasOwnProperty =
            objectProto.hasOwnProperty
          /**
           * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
           *
           * @private
           * @param {Object} object The object to query.
           * @returns {Array} Returns the array of property names.
           */ function baseKeys(object) {
            if (!isPrototype(object)) {
              return nativeKeys(object)
            }
            var result = []
            for (var key in Object(object)) {
              if (hasOwnProperty.call(object, key) && key != 'constructor') {
                result.push(key)
              }
            }
            return result
          }
          module.exports = baseKeys
        }.apply(this, arguments))
      },
      { './_isPrototype': 144, './_nativeKeys': 160 }
    ],
    100: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_baseMap.js',
          module
        )
        ;(function() {
          var baseEach = require('./_baseEach'),
            isArrayLike = require('./isArrayLike')
          /**
           * The base implementation of `_.map` without support for iteratee shorthands.
           *
           * @private
           * @param {Array|Object} collection The collection to iterate over.
           * @param {Function} iteratee The function invoked per iteration.
           * @returns {Array} Returns the new mapped array.
           */ function baseMap(collection, iteratee) {
            var index = -1,
              result = isArrayLike(collection) ? Array(collection.length) : []
            baseEach(collection, function(value, key, collection) {
              result[++index] = iteratee(value, key, collection)
            })
            return result
          }
          module.exports = baseMap
        }.apply(this, arguments))
      },
      { './_baseEach': 84, './isArrayLike': 190 }
    ],
    101: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_baseMatches.js',
          module
        )
        ;(function() {
          var baseIsMatch = require('./_baseIsMatch'),
            getMatchData = require('./_getMatchData'),
            matchesStrictComparable = require('./_matchesStrictComparable')
          /**
           * The base implementation of `_.matches` which doesn't clone `source`.
           *
           * @private
           * @param {Object} source The object of property values to match.
           * @returns {Function} Returns the new spec function.
           */ function baseMatches(source) {
            var matchData = getMatchData(source)
            if (matchData.length == 1 && matchData[0][2]) {
              return matchesStrictComparable(matchData[0][0], matchData[0][1])
            }
            return function(object) {
              return object === source || baseIsMatch(object, source, matchData)
            }
          }
          module.exports = baseMatches
        }.apply(this, arguments))
      },
      {
        './_baseIsMatch': 95,
        './_getMatchData': 127,
        './_matchesStrictComparable': 157
      }
    ],
    102: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_baseMatchesProperty.js',
          module
        )
        ;(function() {
          var baseIsEqual = require('./_baseIsEqual'),
            get = require('./get'),
            hasIn = require('./hasIn'),
            isKey = require('./_isKey'),
            isStrictComparable = require('./_isStrictComparable'),
            matchesStrictComparable = require('./_matchesStrictComparable'),
            toKey = require('./_toKey')
          /** Used to compose bitmasks for value comparisons. */ var COMPARE_PARTIAL_FLAG = 1,
            COMPARE_UNORDERED_FLAG = 2
          /**
           * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
           *
           * @private
           * @param {string} path The path of the property to get.
           * @param {*} srcValue The value to match.
           * @returns {Function} Returns the new spec function.
           */ function baseMatchesProperty(path, srcValue) {
            if (isKey(path) && isStrictComparable(srcValue)) {
              return matchesStrictComparable(toKey(path), srcValue)
            }
            return function(object) {
              var objValue = get(object, path)
              return objValue === undefined && objValue === srcValue
                ? hasIn(object, path)
                : baseIsEqual(
                    srcValue,
                    objValue,
                    COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG
                  )
            }
          }
          module.exports = baseMatchesProperty
        }.apply(this, arguments))
      },
      {
        './_baseIsEqual': 93,
        './_isKey': 141,
        './_isStrictComparable': 145,
        './_matchesStrictComparable': 157,
        './_toKey': 177,
        './get': 185,
        './hasIn': 186
      }
    ],
    103: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_baseProperty.js',
          module
        )
        ;(function() {
          /**
           * The base implementation of `_.property` without support for deep paths.
           *
           * @private
           * @param {string} key The key of the property to get.
           * @returns {Function} Returns the new accessor function.
           */ function baseProperty(key) {
            return function(object) {
              return object == null ? undefined : object[key]
            }
          }
          module.exports = baseProperty
        }.apply(this, arguments))
      },
      {}
    ],
    104: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_basePropertyDeep.js',
          module
        )
        ;(function() {
          var baseGet = require('./_baseGet')
          /**
           * A specialized version of `baseProperty` which supports deep paths.
           *
           * @private
           * @param {Array|string} path The path of the property to get.
           * @returns {Function} Returns the new accessor function.
           */ function basePropertyDeep(path) {
            return function(object) {
              return baseGet(object, path)
            }
          }
          module.exports = basePropertyDeep
        }.apply(this, arguments))
      },
      { './_baseGet': 88 }
    ],
    105: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_baseRest.js',
          module
        )
        ;(function() {
          var identity = require('./identity'),
            overRest = require('./_overRest'),
            setToString = require('./_setToString')
          /**
           * The base implementation of `_.rest` which doesn't validate or coerce arguments.
           *
           * @private
           * @param {Function} func The function to apply a rest parameter to.
           * @param {number} [start=func.length-1] The start position of the rest parameter.
           * @returns {Function} Returns the new function.
           */ function baseRest(func, start) {
            return setToString(overRest(func, start, identity), func + '')
          }
          module.exports = baseRest
        }.apply(this, arguments))
      },
      { './_overRest': 164, './_setToString': 169, './identity': 187 }
    ],
    106: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_baseSetToString.js',
          module
        )
        ;(function() {
          var constant = require('./constant'),
            defineProperty = require('./_defineProperty'),
            identity = require('./identity')
          /**
           * The base implementation of `setToString` without support for hot loop shorting.
           *
           * @private
           * @param {Function} func The function to modify.
           * @param {Function} string The `toString` result.
           * @returns {Function} Returns `func`.
           */ var baseSetToString = !defineProperty
            ? identity
            : function(func, string) {
                return defineProperty(func, 'toString', {
                  configurable: true,
                  enumerable: false,
                  value: constant(string),
                  writable: true
                })
              }
          module.exports = baseSetToString
        }.apply(this, arguments))
      },
      { './_defineProperty': 120, './constant': 180, './identity': 187 }
    ],
    107: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_baseSome.js',
          module
        )
        ;(function() {
          var baseEach = require('./_baseEach')
          /**
           * The base implementation of `_.some` without support for iteratee shorthands.
           *
           * @private
           * @param {Array|Object} collection The collection to iterate over.
           * @param {Function} predicate The function invoked per iteration.
           * @returns {boolean} Returns `true` if any element passes the predicate check,
           *  else `false`.
           */ function baseSome(collection, predicate) {
            var result
            baseEach(collection, function(value, index, collection) {
              result = predicate(value, index, collection)
              return !result
            })
            return !!result
          }
          module.exports = baseSome
        }.apply(this, arguments))
      },
      { './_baseEach': 84 }
    ],
    108: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_baseTimes.js',
          module
        )
        ;(function() {
          /**
           * The base implementation of `_.times` without support for iteratee shorthands
           * or max array length checks.
           *
           * @private
           * @param {number} n The number of times to invoke `iteratee`.
           * @param {Function} iteratee The function invoked per iteration.
           * @returns {Array} Returns the array of results.
           */ function baseTimes(n, iteratee) {
            var index = -1,
              result = Array(n)
            while (++index < n) {
              result[index] = iteratee(index)
            }
            return result
          }
          module.exports = baseTimes
        }.apply(this, arguments))
      },
      {}
    ],
    109: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_baseToString.js',
          module
        )
        ;(function() {
          var _Symbol3 = require('./_Symbol'),
            arrayMap = require('./_arrayMap'),
            isArray = require('./isArray'),
            isSymbol = require('./isSymbol')
          /** Used as references for various `Number` constants. */ var INFINITY =
            1 / 0
          /** Used to convert symbols to primitives and strings. */ var symbolProto = _Symbol3
              ? _Symbol3.prototype
              : undefined,
            symbolToString = symbolProto ? symbolProto.toString : undefined
          /**
           * The base implementation of `_.toString` which doesn't convert nullish
           * values to empty strings.
           *
           * @private
           * @param {*} value The value to process.
           * @returns {string} Returns the string.
           */ function baseToString(value) {
            // Exit early for strings to avoid a performance hit in some environments.
            if (typeof value == 'string') {
              return value
            }
            if (isArray(value)) {
              // Recursively convert values (susceptible to call stack limits).
              return arrayMap(value, baseToString) + ''
            }
            if (isSymbol(value)) {
              return symbolToString ? symbolToString.call(value) : ''
            }
            var result = value + ''
            return result == '0' && 1 / value == -INFINITY ? '-0' : result
          }
          module.exports = baseToString
        }.apply(this, arguments))
      },
      {
        './_Symbol': 71,
        './_arrayMap': 78,
        './isArray': 189,
        './isSymbol': 196
      }
    ],
    110: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_baseUnary.js',
          module
        )
        ;(function() {
          /**
           * The base implementation of `_.unary` without support for storing metadata.
           *
           * @private
           * @param {Function} func The function to cap arguments for.
           * @returns {Function} Returns the new capped function.
           */ function baseUnary(func) {
            return function(value) {
              return func(value)
            }
          }
          module.exports = baseUnary
        }.apply(this, arguments))
      },
      {}
    ],
    111: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_baseZipObject.js',
          module
        )
        ;(function() {
          /**
           * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
           *
           * @private
           * @param {Array} props The property identifiers.
           * @param {Array} values The property values.
           * @param {Function} assignFunc The function to assign values.
           * @returns {Object} Returns the new object.
           */ function baseZipObject(props, values, assignFunc) {
            var index = -1,
              length = props.length,
              valsLength = values.length,
              result = {}
            while (++index < length) {
              var value = index < valsLength ? values[index] : undefined
              assignFunc(result, props[index], value)
            }
            return result
          }
          module.exports = baseZipObject
        }.apply(this, arguments))
      },
      {}
    ],
    112: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_cacheHas.js',
          module
        )
        ;(function() {
          /**
           * Checks if a `cache` value for `key` exists.
           *
           * @private
           * @param {Object} cache The cache to query.
           * @param {string} key The key of the entry to check.
           * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
           */ function cacheHas(cache, key) {
            return cache.has(key)
          }
          module.exports = cacheHas
        }.apply(this, arguments))
      },
      {}
    ],
    113: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_castFunction.js',
          module
        )
        ;(function() {
          var identity = require('./identity')
          /**
           * Casts `value` to `identity` if it's not a function.
           *
           * @private
           * @param {*} value The value to inspect.
           * @returns {Function} Returns cast function.
           */ function castFunction(value) {
            return typeof value == 'function' ? value : identity
          }
          module.exports = castFunction
        }.apply(this, arguments))
      },
      { './identity': 187 }
    ],
    114: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_castPath.js',
          module
        )
        ;(function() {
          var isArray = require('./isArray'),
            isKey = require('./_isKey'),
            stringToPath = require('./_stringToPath'),
            toString = require('./toString')
          /**
           * Casts `value` to a path array if it's not one.
           *
           * @private
           * @param {*} value The value to inspect.
           * @param {Object} [object] The object to query keys on.
           * @returns {Array} Returns the cast property path array.
           */ function castPath(value, object) {
            if (isArray(value)) {
              return value
            }
            return isKey(value, object)
              ? [value]
              : stringToPath(toString(value))
          }
          module.exports = castPath
        }.apply(this, arguments))
      },
      {
        './_isKey': 141,
        './_stringToPath': 176,
        './isArray': 189,
        './toString': 206
      }
    ],
    115: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_copyObject.js',
          module
        )
        ;(function() {
          var assignValue = require('./_assignValue'),
            baseAssignValue = require('./_baseAssignValue')
          /**
           * Copies properties of `source` to `object`.
           *
           * @private
           * @param {Object} source The object to copy properties from.
           * @param {Array} props The property identifiers to copy.
           * @param {Object} [object={}] The object to copy properties to.
           * @param {Function} [customizer] The function to customize copied values.
           * @returns {Object} Returns `object`.
           */ function copyObject(source, props, object, customizer) {
            var isNew = !object
            object || (object = {})
            var index = -1,
              length = props.length
            while (++index < length) {
              var key = props[index]
              var newValue = customizer
                ? customizer(object[key], source[key], key, object, source)
                : undefined
              if (newValue === undefined) {
                newValue = source[key]
              }
              if (isNew) {
                baseAssignValue(object, key, newValue)
              } else {
                assignValue(object, key, newValue)
              }
            }
            return object
          }
          module.exports = copyObject
        }.apply(this, arguments))
      },
      { './_assignValue': 81, './_baseAssignValue': 83 }
    ],
    116: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_coreJsData.js',
          module
        )
        ;(function() {
          var root = require('./_root')
          /** Used to detect overreaching core-js shims. */ var coreJsData =
            root['__core-js_shared__']
          module.exports = coreJsData
        }.apply(this, arguments))
      },
      { './_root': 165 }
    ],
    117: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_createAssigner.js',
          module
        )
        ;(function() {
          var baseRest = require('./_baseRest'),
            isIterateeCall = require('./_isIterateeCall')
          /**
           * Creates a function like `_.assign`.
           *
           * @private
           * @param {Function} assigner The function to assign values.
           * @returns {Function} Returns the new assigner function.
           */ function createAssigner(assigner) {
            return baseRest(function(object, sources) {
              var index = -1,
                length = sources.length,
                customizer = length > 1 ? sources[length - 1] : undefined,
                guard = length > 2 ? sources[2] : undefined
              customizer =
                assigner.length > 3 && typeof customizer == 'function'
                  ? (length--, customizer)
                  : undefined
              if (guard && isIterateeCall(sources[0], sources[1], guard)) {
                customizer = length < 3 ? undefined : customizer
                length = 1
              }
              object = Object(object)
              while (++index < length) {
                var source = sources[index]
                if (source) {
                  assigner(object, source, index, customizer)
                }
              }
              return object
            })
          }
          module.exports = createAssigner
        }.apply(this, arguments))
      },
      { './_baseRest': 105, './_isIterateeCall': 140 }
    ],
    118: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_createBaseEach.js',
          module
        )
        ;(function() {
          var isArrayLike = require('./isArrayLike')
          /**
           * Creates a `baseEach` or `baseEachRight` function.
           *
           * @private
           * @param {Function} eachFunc The function to iterate over a collection.
           * @param {boolean} [fromRight] Specify iterating from right to left.
           * @returns {Function} Returns the new base function.
           */ function createBaseEach(eachFunc, fromRight) {
            return function(collection, iteratee) {
              if (collection == null) {
                return collection
              }
              if (!isArrayLike(collection)) {
                return eachFunc(collection, iteratee)
              }
              var length = collection.length,
                index = fromRight ? length : -1,
                iterable = Object(collection)
              while (fromRight ? index-- : ++index < length) {
                if (iteratee(iterable[index], index, iterable) === false) {
                  break
                }
              }
              return collection
            }
          }
          module.exports = createBaseEach
        }.apply(this, arguments))
      },
      { './isArrayLike': 190 }
    ],
    119: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_createBaseFor.js',
          module
        )
        ;(function() {
          /**
           * Creates a base function for methods like `_.forIn` and `_.forOwn`.
           *
           * @private
           * @param {boolean} [fromRight] Specify iterating from right to left.
           * @returns {Function} Returns the new base function.
           */ function createBaseFor(fromRight) {
            return function(object, iteratee, keysFunc) {
              var index = -1,
                iterable = Object(object),
                props = keysFunc(object),
                length = props.length
              while (length--) {
                var key = props[fromRight ? length : ++index]
                if (iteratee(iterable[key], key, iterable) === false) {
                  break
                }
              }
              return object
            }
          }
          module.exports = createBaseFor
        }.apply(this, arguments))
      },
      {}
    ],
    120: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_defineProperty.js',
          module
        )
        ;(function() {
          var getNative = require('./_getNative')
          var defineProperty = (function() {
            try {
              var func = getNative(Object, 'defineProperty')
              func({}, '', {})
              return func
            } catch (e) {}
          })()
          module.exports = defineProperty
        }.apply(this, arguments))
      },
      { './_getNative': 128 }
    ],
    121: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_equalArrays.js',
          module
        )
        ;(function() {
          var SetCache = require('./_SetCache'),
            arraySome = require('./_arraySome'),
            cacheHas = require('./_cacheHas')
          /** Used to compose bitmasks for value comparisons. */ var COMPARE_PARTIAL_FLAG = 1,
            COMPARE_UNORDERED_FLAG = 2
          /**
           * A specialized version of `baseIsEqualDeep` for arrays with support for
           * partial deep comparisons.
           *
           * @private
           * @param {Array} array The array to compare.
           * @param {Array} other The other array to compare.
           * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
           * @param {Function} customizer The function to customize comparisons.
           * @param {Function} equalFunc The function to determine equivalents of values.
           * @param {Object} stack Tracks traversed `array` and `other` objects.
           * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
           */ function equalArrays(
            array,
            other,
            bitmask,
            customizer,
            equalFunc,
            stack
          ) {
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
              arrLength = array.length,
              othLength = other.length
            if (
              arrLength != othLength &&
              !(isPartial && othLength > arrLength)
            ) {
              return false
            } // Assume cyclic values are equal.
            var stacked = stack.get(array)
            if (stacked && stack.get(other)) {
              return stacked == other
            }
            var index = -1,
              result = true,
              seen =
                bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined
            stack.set(array, other)
            stack.set(other, array) // Ignore non-index properties.
            while (++index < arrLength) {
              var arrValue = array[index],
                othValue = other[index]
              if (customizer) {
                var compared = isPartial
                  ? customizer(othValue, arrValue, index, other, array, stack)
                  : customizer(arrValue, othValue, index, array, other, stack)
              }
              if (compared !== undefined) {
                if (compared) {
                  continue
                }
                result = false
                break
              } // Recursively compare arrays (susceptible to call stack limits).
              if (seen) {
                if (
                  !arraySome(other, function(othValue, othIndex) {
                    if (
                      !cacheHas(seen, othIndex) &&
                      (arrValue === othValue ||
                        equalFunc(
                          arrValue,
                          othValue,
                          bitmask,
                          customizer,
                          stack
                        ))
                    ) {
                      return seen.push(othIndex)
                    }
                  })
                ) {
                  result = false
                  break
                }
              } else if (
                !(
                  arrValue === othValue ||
                  equalFunc(arrValue, othValue, bitmask, customizer, stack)
                )
              ) {
                result = false
                break
              }
            }
            stack['delete'](array)
            stack['delete'](other)
            return result
          }
          module.exports = equalArrays
        }.apply(this, arguments))
      },
      { './_SetCache': 69, './_arraySome': 80, './_cacheHas': 112 }
    ],
    122: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_equalByTag.js',
          module
        )
        ;(function() {
          var _Symbol4 = require('./_Symbol'),
            Uint8Array = require('./_Uint8Array'),
            eq = require('./eq'),
            equalArrays = require('./_equalArrays'),
            mapToArray = require('./_mapToArray'),
            setToArray = require('./_setToArray')
          /** Used to compose bitmasks for value comparisons. */ var COMPARE_PARTIAL_FLAG = 1,
            COMPARE_UNORDERED_FLAG = 2
          /** `Object#toString` result references. */ var boolTag =
              '[object Boolean]',
            dateTag = '[object Date]',
            errorTag = '[object Error]',
            mapTag = '[object Map]',
            numberTag = '[object Number]',
            regexpTag = '[object RegExp]',
            setTag = '[object Set]',
            stringTag = '[object String]',
            symbolTag = '[object Symbol]'
          var arrayBufferTag = '[object ArrayBuffer]',
            dataViewTag = '[object DataView]'
          /** Used to convert symbols to primitives and strings. */ var symbolProto = _Symbol4
              ? _Symbol4.prototype
              : undefined,
            symbolValueOf = symbolProto ? symbolProto.valueOf : undefined
          /**
           * A specialized version of `baseIsEqualDeep` for comparing objects of
           * the same `toStringTag`.
           *
           * **Note:** This function only supports comparing values with tags of
           * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
           *
           * @private
           * @param {Object} object The object to compare.
           * @param {Object} other The other object to compare.
           * @param {string} tag The `toStringTag` of the objects to compare.
           * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
           * @param {Function} customizer The function to customize comparisons.
           * @param {Function} equalFunc The function to determine equivalents of values.
           * @param {Object} stack Tracks traversed `object` and `other` objects.
           * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
           */ function equalByTag(
            object,
            other,
            tag,
            bitmask,
            customizer,
            equalFunc,
            stack
          ) {
            switch (tag) {
              case dataViewTag:
                if (
                  object.byteLength != other.byteLength ||
                  object.byteOffset != other.byteOffset
                ) {
                  return false
                }
                object = object.buffer
                other = other.buffer
              case arrayBufferTag:
                if (
                  object.byteLength != other.byteLength ||
                  !equalFunc(new Uint8Array(object), new Uint8Array(other))
                ) {
                  return false
                }
                return true
              case boolTag:
              case dateTag:
              case numberTag: // Coerce booleans to `1` or `0` and dates to milliseconds.
                // Invalid dates are coerced to `NaN`.
                return eq(+object, +other)
              case errorTag:
                return (
                  object.name == other.name && object.message == other.message
                )
              case regexpTag:
              case stringTag: // Coerce regexes to strings and treat strings, primitives and objects,
                // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
                // for more details.
                return object == other + ''
              case mapTag:
                var convert = mapToArray
              case setTag:
                var isPartial = bitmask & COMPARE_PARTIAL_FLAG
                convert || (convert = setToArray)
                if (object.size != other.size && !isPartial) {
                  return false
                } // Assume cyclic values are equal.
                var stacked = stack.get(object)
                if (stacked) {
                  return stacked == other
                }
                bitmask |= COMPARE_UNORDERED_FLAG // Recursively compare objects (susceptible to call stack limits).
                stack.set(object, other)
                var result = equalArrays(
                  convert(object),
                  convert(other),
                  bitmask,
                  customizer,
                  equalFunc,
                  stack
                )
                stack['delete'](object)
                return result
              case symbolTag:
                if (symbolValueOf) {
                  return symbolValueOf.call(object) == symbolValueOf.call(other)
                }
            }
            return false
          }
          module.exports = equalByTag
        }.apply(this, arguments))
      },
      {
        './_Symbol': 71,
        './_Uint8Array': 72,
        './_equalArrays': 121,
        './_mapToArray': 156,
        './_setToArray': 168,
        './eq': 181
      }
    ],
    123: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_equalObjects.js',
          module
        )
        ;(function() {
          var getAllKeys = require('./_getAllKeys')
          /** Used to compose bitmasks for value comparisons. */ var COMPARE_PARTIAL_FLAG = 1
          /** Used for built-in method references. */ var objectProto =
            Object.prototype
          /** Used to check objects for own properties. */ var hasOwnProperty =
            objectProto.hasOwnProperty
          /**
           * A specialized version of `baseIsEqualDeep` for objects with support for
           * partial deep comparisons.
           *
           * @private
           * @param {Object} object The object to compare.
           * @param {Object} other The other object to compare.
           * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
           * @param {Function} customizer The function to customize comparisons.
           * @param {Function} equalFunc The function to determine equivalents of values.
           * @param {Object} stack Tracks traversed `object` and `other` objects.
           * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
           */ function equalObjects(
            object,
            other,
            bitmask,
            customizer,
            equalFunc,
            stack
          ) {
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
              objProps = getAllKeys(object),
              objLength = objProps.length,
              othProps = getAllKeys(other),
              othLength = othProps.length
            if (objLength != othLength && !isPartial) {
              return false
            }
            var index = objLength
            while (index--) {
              var key = objProps[index]
              if (
                !(isPartial ? key in other : hasOwnProperty.call(other, key))
              ) {
                return false
              }
            } // Assume cyclic values are equal.
            var stacked = stack.get(object)
            if (stacked && stack.get(other)) {
              return stacked == other
            }
            var result = true
            stack.set(object, other)
            stack.set(other, object)
            var skipCtor = isPartial
            while (++index < objLength) {
              key = objProps[index]
              var objValue = object[key],
                othValue = other[key]
              if (customizer) {
                var compared = isPartial
                  ? customizer(othValue, objValue, key, other, object, stack)
                  : customizer(objValue, othValue, key, object, other, stack)
              } // Recursively compare objects (susceptible to call stack limits).
              if (
                !(compared === undefined
                  ? objValue === othValue ||
                    equalFunc(objValue, othValue, bitmask, customizer, stack)
                  : compared)
              ) {
                result = false
                break
              }
              skipCtor || (skipCtor = key == 'constructor')
            }
            if (result && !skipCtor) {
              var objCtor = object.constructor,
                othCtor = other.constructor // Non `Object` object instances with different constructors are not equal.
              if (
                objCtor != othCtor &&
                'constructor' in object &&
                'constructor' in other &&
                !(
                  typeof objCtor == 'function' &&
                  objCtor instanceof objCtor &&
                  typeof othCtor == 'function' &&
                  othCtor instanceof othCtor
                )
              ) {
                result = false
              }
            }
            stack['delete'](object)
            stack['delete'](other)
            return result
          }
          module.exports = equalObjects
        }.apply(this, arguments))
      },
      { './_getAllKeys': 125 }
    ],
    124: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_freeGlobal.js',
          module
        )
        ;(function() {
          ;(function(global) {
            /** Detect free variable `global` from Node.js. */ var freeGlobal =
              (0, _typeof3['default'])(global) == 'object' &&
              global &&
              global.Object === Object &&
              global
            module.exports = freeGlobal
          }.call(
            this,
            typeof global !== 'undefined'
              ? global
              : typeof self !== 'undefined'
              ? self
              : typeof window !== 'undefined'
              ? window
              : {}
          ))
        }.apply(this, arguments))
      },
      {}
    ],
    125: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_getAllKeys.js',
          module
        )
        ;(function() {
          var baseGetAllKeys = require('./_baseGetAllKeys'),
            getSymbols = require('./_getSymbols'),
            keys = require('./keys')
          /**
           * Creates an array of own enumerable property names and symbols of `object`.
           *
           * @private
           * @param {Object} object The object to query.
           * @returns {Array} Returns the array of property names and symbols.
           */ function getAllKeys(object) {
            return baseGetAllKeys(object, keys, getSymbols)
          }
          module.exports = getAllKeys
        }.apply(this, arguments))
      },
      { './_baseGetAllKeys': 89, './_getSymbols': 130, './keys': 198 }
    ],
    126: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_getMapData.js',
          module
        )
        ;(function() {
          var isKeyable = require('./_isKeyable')
          /**
           * Gets the data for `map`.
           *
           * @private
           * @param {Object} map The map to query.
           * @param {string} key The reference key.
           * @returns {*} Returns the map data.
           */ function getMapData(map, key) {
            var data = map.__data__
            return isKeyable(key)
              ? data[typeof key == 'string' ? 'string' : 'hash']
              : data.map
          }
          module.exports = getMapData
        }.apply(this, arguments))
      },
      { './_isKeyable': 142 }
    ],
    127: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_getMatchData.js',
          module
        )
        ;(function() {
          var isStrictComparable = require('./_isStrictComparable'),
            keys = require('./keys')
          /**
           * Gets the property names, values, and compare flags of `object`.
           *
           * @private
           * @param {Object} object The object to query.
           * @returns {Array} Returns the match data of `object`.
           */ function getMatchData(object) {
            var result = keys(object),
              length = result.length
            while (length--) {
              var key = result[length],
                value = object[key]
              result[length] = [key, value, isStrictComparable(value)]
            }
            return result
          }
          module.exports = getMatchData
        }.apply(this, arguments))
      },
      { './_isStrictComparable': 145, './keys': 198 }
    ],
    128: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_getNative.js',
          module
        )
        ;(function() {
          var baseIsNative = require('./_baseIsNative'),
            getValue = require('./_getValue')
          /**
           * Gets the native function at `key` of `object`.
           *
           * @private
           * @param {Object} object The object to query.
           * @param {string} key The key of the method to get.
           * @returns {*} Returns the function if it's native, else `undefined`.
           */ function getNative(object, key) {
            var value = getValue(object, key)
            return baseIsNative(value) ? value : undefined
          }
          module.exports = getNative
        }.apply(this, arguments))
      },
      { './_baseIsNative': 96, './_getValue': 132 }
    ],
    129: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_getRawTag.js',
          module
        )
        ;(function() {
          var _Symbol5 = require('./_Symbol')
          /** Used for built-in method references. */ var objectProto =
            Object.prototype
          /** Used to check objects for own properties. */ var hasOwnProperty =
            objectProto.hasOwnProperty
          /**
           * Used to resolve the
           * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
           * of values.
           */ var nativeObjectToString = objectProto.toString
          /** Built-in value references. */ var symToStringTag = _Symbol5
            ? _Symbol5.toStringTag
            : undefined
          /**
           * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
           *
           * @private
           * @param {*} value The value to query.
           * @returns {string} Returns the raw `toStringTag`.
           */ function getRawTag(value) {
            var isOwn = hasOwnProperty.call(value, symToStringTag),
              tag = value[symToStringTag]
            try {
              value[symToStringTag] = undefined
              var unmasked = true
            } catch (e) {}
            var result = nativeObjectToString.call(value)
            if (unmasked) {
              if (isOwn) {
                value[symToStringTag] = tag
              } else {
                delete value[symToStringTag]
              }
            }
            return result
          }
          module.exports = getRawTag
        }.apply(this, arguments))
      },
      { './_Symbol': 71 }
    ],
    130: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_getSymbols.js',
          module
        )
        ;(function() {
          var arrayFilter = require('./_arrayFilter'),
            stubArray = require('./stubArray')
          /** Used for built-in method references. */ var objectProto =
            Object.prototype
          /** Built-in value references. */ var propertyIsEnumerable =
            objectProto.propertyIsEnumerable
          /* Built-in method references for those with the same name as other `lodash` methods. */ var nativeGetSymbols =
            Object.getOwnPropertySymbols
          /**
           * Creates an array of the own enumerable symbols of `object`.
           *
           * @private
           * @param {Object} object The object to query.
           * @returns {Array} Returns the array of symbols.
           */ var getSymbols = !nativeGetSymbols
            ? stubArray
            : function(object) {
                if (object == null) {
                  return []
                }
                object = Object(object)
                return arrayFilter(nativeGetSymbols(object), function(symbol) {
                  return propertyIsEnumerable.call(object, symbol)
                })
              }
          module.exports = getSymbols
        }.apply(this, arguments))
      },
      { './_arrayFilter': 76, './stubArray': 204 }
    ],
    131: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_getTag.js',
          module
        )
        ;(function() {
          var DataView = require('./_DataView'),
            Map = require('./_Map'),
            Promise = require('./_Promise'),
            Set = require('./_Set'),
            WeakMap = require('./_WeakMap'),
            baseGetTag = require('./_baseGetTag'),
            toSource = require('./_toSource')
          /** `Object#toString` result references. */ var mapTag =
              '[object Map]',
            objectTag = '[object Object]',
            promiseTag = '[object Promise]',
            setTag = '[object Set]',
            weakMapTag = '[object WeakMap]'
          var dataViewTag = '[object DataView]'
          /** Used to detect maps, sets, and weakmaps. */ var dataViewCtorString = toSource(
              DataView
            ),
            mapCtorString = toSource(Map),
            promiseCtorString = toSource(Promise),
            setCtorString = toSource(Set),
            weakMapCtorString = toSource(WeakMap)
          /**
           * Gets the `toStringTag` of `value`.
           *
           * @private
           * @param {*} value The value to query.
           * @returns {string} Returns the `toStringTag`.
           */ var getTag = baseGetTag // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
          if (
            (DataView &&
              getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
            (Map && getTag(new Map()) != mapTag) ||
            (Promise && getTag(Promise.resolve()) != promiseTag) ||
            (Set && getTag(new Set()) != setTag) ||
            (WeakMap && getTag(new WeakMap()) != weakMapTag)
          ) {
            getTag = function getTag(value) {
              var result = baseGetTag(value),
                Ctor = result == objectTag ? value.constructor : undefined,
                ctorString = Ctor ? toSource(Ctor) : ''
              if (ctorString) {
                switch (ctorString) {
                  case dataViewCtorString:
                    return dataViewTag
                  case mapCtorString:
                    return mapTag
                  case promiseCtorString:
                    return promiseTag
                  case setCtorString:
                    return setTag
                  case weakMapCtorString:
                    return weakMapTag
                }
              }
              return result
            }
          }
          module.exports = getTag
        }.apply(this, arguments))
      },
      {
        './_DataView': 62,
        './_Map': 65,
        './_Promise': 67,
        './_Set': 68,
        './_WeakMap': 73,
        './_baseGetTag': 90,
        './_toSource': 178
      }
    ],
    132: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_getValue.js',
          module
        )
        ;(function() {
          /**
           * Gets the value at `key` of `object`.
           *
           * @private
           * @param {Object} [object] The object to query.
           * @param {string} key The key of the property to get.
           * @returns {*} Returns the property value.
           */ function getValue(object, key) {
            return object == null ? undefined : object[key]
          }
          module.exports = getValue
        }.apply(this, arguments))
      },
      {}
    ],
    133: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_hasPath.js',
          module
        )
        ;(function() {
          var castPath = require('./_castPath'),
            isArguments = require('./isArguments'),
            isArray = require('./isArray'),
            isIndex = require('./_isIndex'),
            isLength = require('./isLength'),
            toKey = require('./_toKey')
          /**
           * Checks if `path` exists on `object`.
           *
           * @private
           * @param {Object} object The object to query.
           * @param {Array|string} path The path to check.
           * @param {Function} hasFunc The function to check properties.
           * @returns {boolean} Returns `true` if `path` exists, else `false`.
           */ function hasPath(object, path, hasFunc) {
            path = castPath(path, object)
            var index = -1,
              length = path.length,
              result = false
            while (++index < length) {
              var key = toKey(path[index])
              if (!(result = object != null && hasFunc(object, key))) {
                break
              }
              object = object[key]
            }
            if (result || ++index != length) {
              return result
            }
            length = object == null ? 0 : object.length
            return (
              !!length &&
              isLength(length) &&
              isIndex(key, length) &&
              (isArray(object) || isArguments(object))
            )
          }
          module.exports = hasPath
        }.apply(this, arguments))
      },
      {
        './_castPath': 114,
        './_isIndex': 139,
        './_toKey': 177,
        './isArguments': 188,
        './isArray': 189,
        './isLength': 193
      }
    ],
    134: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_hashClear.js',
          module
        )
        ;(function() {
          var nativeCreate = require('./_nativeCreate')
          /**
           * Removes all key-value entries from the hash.
           *
           * @private
           * @name clear
           * @memberOf Hash
           */ function hashClear() {
            this.__data__ = nativeCreate ? nativeCreate(null) : {}
            this.size = 0
          }
          module.exports = hashClear
        }.apply(this, arguments))
      },
      { './_nativeCreate': 159 }
    ],
    135: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_hashDelete.js',
          module
        )
        ;(function() {
          /**
           * Removes `key` and its value from the hash.
           *
           * @private
           * @name delete
           * @memberOf Hash
           * @param {Object} hash The hash to modify.
           * @param {string} key The key of the value to remove.
           * @returns {boolean} Returns `true` if the entry was removed, else `false`.
           */ function hashDelete(key) {
            var result = this.has(key) && delete this.__data__[key]
            this.size -= result ? 1 : 0
            return result
          }
          module.exports = hashDelete
        }.apply(this, arguments))
      },
      {}
    ],
    136: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_hashGet.js',
          module
        )
        ;(function() {
          var nativeCreate = require('./_nativeCreate')
          /** Used to stand-in for `undefined` hash values. */ var HASH_UNDEFINED =
            '__lodash_hash_undefined__'
          /** Used for built-in method references. */ var objectProto =
            Object.prototype
          /** Used to check objects for own properties. */ var hasOwnProperty =
            objectProto.hasOwnProperty
          /**
           * Gets the hash value for `key`.
           *
           * @private
           * @name get
           * @memberOf Hash
           * @param {string} key The key of the value to get.
           * @returns {*} Returns the entry value.
           */ function hashGet(key) {
            var data = this.__data__
            if (nativeCreate) {
              var result = data[key]
              return result === HASH_UNDEFINED ? undefined : result
            }
            return hasOwnProperty.call(data, key) ? data[key] : undefined
          }
          module.exports = hashGet
        }.apply(this, arguments))
      },
      { './_nativeCreate': 159 }
    ],
    137: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_hashHas.js',
          module
        )
        ;(function() {
          var nativeCreate = require('./_nativeCreate')
          /** Used for built-in method references. */ var objectProto =
            Object.prototype
          /** Used to check objects for own properties. */ var hasOwnProperty =
            objectProto.hasOwnProperty
          /**
           * Checks if a hash value for `key` exists.
           *
           * @private
           * @name has
           * @memberOf Hash
           * @param {string} key The key of the entry to check.
           * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
           */ function hashHas(key) {
            var data = this.__data__
            return nativeCreate
              ? data[key] !== undefined
              : hasOwnProperty.call(data, key)
          }
          module.exports = hashHas
        }.apply(this, arguments))
      },
      { './_nativeCreate': 159 }
    ],
    138: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_hashSet.js',
          module
        )
        ;(function() {
          var nativeCreate = require('./_nativeCreate')
          /** Used to stand-in for `undefined` hash values. */ var HASH_UNDEFINED =
            '__lodash_hash_undefined__'
          /**
           * Sets the hash `key` to `value`.
           *
           * @private
           * @name set
           * @memberOf Hash
           * @param {string} key The key of the value to set.
           * @param {*} value The value to set.
           * @returns {Object} Returns the hash instance.
           */ function hashSet(key, value) {
            var data = this.__data__
            this.size += this.has(key) ? 0 : 1
            data[key] =
              nativeCreate && value === undefined ? HASH_UNDEFINED : value
            return this
          }
          module.exports = hashSet
        }.apply(this, arguments))
      },
      { './_nativeCreate': 159 }
    ],
    139: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_isIndex.js',
          module
        )
        ;(function() {
          /** Used as references for various `Number` constants. */ var MAX_SAFE_INTEGER = 9007199254740991
          /** Used to detect unsigned integer values. */ var reIsUint = /^(?:0|[1-9]\d*)$/
          /**
           * Checks if `value` is a valid array-like index.
           *
           * @private
           * @param {*} value The value to check.
           * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
           * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
           */ function isIndex(value, length) {
            var type = (0, _typeof3['default'])(value)
            length = length == null ? MAX_SAFE_INTEGER : length
            return (
              !!length &&
              (type == 'number' ||
                (type != 'symbol' && reIsUint.test(value))) &&
              value > -1 &&
              value % 1 == 0 &&
              value < length
            )
          }
          module.exports = isIndex
        }.apply(this, arguments))
      },
      {}
    ],
    140: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_isIterateeCall.js',
          module
        )
        ;(function() {
          var eq = require('./eq'),
            isArrayLike = require('./isArrayLike'),
            isIndex = require('./_isIndex'),
            isObject = require('./isObject')
          /**
           * Checks if the given arguments are from an iteratee call.
           *
           * @private
           * @param {*} value The potential iteratee value argument.
           * @param {*} index The potential iteratee index or key argument.
           * @param {*} object The potential iteratee object argument.
           * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
           *  else `false`.
           */ function isIterateeCall(value, index, object) {
            if (!isObject(object)) {
              return false
            }
            var type = (0, _typeof3['default'])(index)
            if (
              type == 'number'
                ? isArrayLike(object) && isIndex(index, object.length)
                : type == 'string' && index in object
            ) {
              return eq(object[index], value)
            }
            return false
          }
          module.exports = isIterateeCall
        }.apply(this, arguments))
      },
      {
        './_isIndex': 139,
        './eq': 181,
        './isArrayLike': 190,
        './isObject': 194
      }
    ],
    141: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_isKey.js',
          module
        )
        ;(function() {
          var isArray = require('./isArray'),
            isSymbol = require('./isSymbol')
          /** Used to match property names within property paths. */ var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
            reIsPlainProp = /^\w*$/
          /**
           * Checks if `value` is a property name and not a property path.
           *
           * @private
           * @param {*} value The value to check.
           * @param {Object} [object] The object to query keys on.
           * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
           */ function isKey(value, object) {
            if (isArray(value)) {
              return false
            }
            var type = (0, _typeof3['default'])(value)
            if (
              type == 'number' ||
              type == 'symbol' ||
              type == 'boolean' ||
              value == null ||
              isSymbol(value)
            ) {
              return true
            }
            return (
              reIsPlainProp.test(value) ||
              !reIsDeepProp.test(value) ||
              (object != null && value in Object(object))
            )
          }
          module.exports = isKey
        }.apply(this, arguments))
      },
      { './isArray': 189, './isSymbol': 196 }
    ],
    142: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_isKeyable.js',
          module
        )
        ;(function() {
          /**
           * Checks if `value` is suitable for use as unique object key.
           *
           * @private
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
           */ function isKeyable(value) {
            var type = (0, _typeof3['default'])(value)
            return type == 'string' ||
              type == 'number' ||
              type == 'symbol' ||
              type == 'boolean'
              ? value !== '__proto__'
              : value === null
          }
          module.exports = isKeyable
        }.apply(this, arguments))
      },
      {}
    ],
    143: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_isMasked.js',
          module
        )
        ;(function() {
          var coreJsData = require('./_coreJsData')
          /** Used to detect methods masquerading as native. */ var maskSrcKey = (function() {
            var uid = /[^.]+$/.exec(
              (coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO) || ''
            )
            return uid ? 'Symbol(src)_1.' + uid : ''
          })()
          /**
           * Checks if `func` has its source masked.
           *
           * @private
           * @param {Function} func The function to check.
           * @returns {boolean} Returns `true` if `func` is masked, else `false`.
           */ function isMasked(func) {
            return !!maskSrcKey && maskSrcKey in func
          }
          module.exports = isMasked
        }.apply(this, arguments))
      },
      { './_coreJsData': 116 }
    ],
    144: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_isPrototype.js',
          module
        )
        ;(function() {
          /** Used for built-in method references. */ var objectProto =
            Object.prototype
          /**
           * Checks if `value` is likely a prototype object.
           *
           * @private
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
           */ function isPrototype(value) {
            var Ctor = value && value.constructor,
              proto =
                (typeof Ctor == 'function' && Ctor.prototype) || objectProto
            return value === proto
          }
          module.exports = isPrototype
        }.apply(this, arguments))
      },
      {}
    ],
    145: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_isStrictComparable.js',
          module
        )
        ;(function() {
          var isObject = require('./isObject')
          /**
           * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
           *
           * @private
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` if suitable for strict
           *  equality comparisons, else `false`.
           */ function isStrictComparable(value) {
            return value === value && !isObject(value)
          }
          module.exports = isStrictComparable
        }.apply(this, arguments))
      },
      { './isObject': 194 }
    ],
    146: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_listCacheClear.js',
          module
        )
        ;(function() {
          /**
           * Removes all key-value entries from the list cache.
           *
           * @private
           * @name clear
           * @memberOf ListCache
           */ function listCacheClear() {
            this.__data__ = []
            this.size = 0
          }
          module.exports = listCacheClear
        }.apply(this, arguments))
      },
      {}
    ],
    147: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_listCacheDelete.js',
          module
        )
        ;(function() {
          var assocIndexOf = require('./_assocIndexOf')
          /** Used for built-in method references. */ var arrayProto =
            Array.prototype
          /** Built-in value references. */ var splice = arrayProto.splice
          /**
           * Removes `key` and its value from the list cache.
           *
           * @private
           * @name delete
           * @memberOf ListCache
           * @param {string} key The key of the value to remove.
           * @returns {boolean} Returns `true` if the entry was removed, else `false`.
           */ function listCacheDelete(key) {
            var data = this.__data__,
              index = assocIndexOf(data, key)
            if (index < 0) {
              return false
            }
            var lastIndex = data.length - 1
            if (index == lastIndex) {
              data.pop()
            } else {
              splice.call(data, index, 1)
            }
            --this.size
            return true
          }
          module.exports = listCacheDelete
        }.apply(this, arguments))
      },
      { './_assocIndexOf': 82 }
    ],
    148: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_listCacheGet.js',
          module
        )
        ;(function() {
          var assocIndexOf = require('./_assocIndexOf')
          /**
           * Gets the list cache value for `key`.
           *
           * @private
           * @name get
           * @memberOf ListCache
           * @param {string} key The key of the value to get.
           * @returns {*} Returns the entry value.
           */ function listCacheGet(key) {
            var data = this.__data__,
              index = assocIndexOf(data, key)
            return index < 0 ? undefined : data[index][1]
          }
          module.exports = listCacheGet
        }.apply(this, arguments))
      },
      { './_assocIndexOf': 82 }
    ],
    149: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_listCacheHas.js',
          module
        )
        ;(function() {
          var assocIndexOf = require('./_assocIndexOf')
          /**
           * Checks if a list cache value for `key` exists.
           *
           * @private
           * @name has
           * @memberOf ListCache
           * @param {string} key The key of the entry to check.
           * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
           */ function listCacheHas(key) {
            return assocIndexOf(this.__data__, key) > -1
          }
          module.exports = listCacheHas
        }.apply(this, arguments))
      },
      { './_assocIndexOf': 82 }
    ],
    150: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_listCacheSet.js',
          module
        )
        ;(function() {
          var assocIndexOf = require('./_assocIndexOf')
          /**
           * Sets the list cache `key` to `value`.
           *
           * @private
           * @name set
           * @memberOf ListCache
           * @param {string} key The key of the value to set.
           * @param {*} value The value to set.
           * @returns {Object} Returns the list cache instance.
           */ function listCacheSet(key, value) {
            var data = this.__data__,
              index = assocIndexOf(data, key)
            if (index < 0) {
              ++this.size
              data.push([key, value])
            } else {
              data[index][1] = value
            }
            return this
          }
          module.exports = listCacheSet
        }.apply(this, arguments))
      },
      { './_assocIndexOf': 82 }
    ],
    151: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_mapCacheClear.js',
          module
        )
        ;(function() {
          var Hash = require('./_Hash'),
            ListCache = require('./_ListCache'),
            Map = require('./_Map')
          /**
           * Removes all key-value entries from the map.
           *
           * @private
           * @name clear
           * @memberOf MapCache
           */ function mapCacheClear() {
            this.size = 0
            this.__data__ = {
              hash: new Hash(),
              map: new (Map || ListCache)(),
              string: new Hash()
            }
          }
          module.exports = mapCacheClear
        }.apply(this, arguments))
      },
      { './_Hash': 63, './_ListCache': 64, './_Map': 65 }
    ],
    152: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_mapCacheDelete.js',
          module
        )
        ;(function() {
          var getMapData = require('./_getMapData')
          /**
           * Removes `key` and its value from the map.
           *
           * @private
           * @name delete
           * @memberOf MapCache
           * @param {string} key The key of the value to remove.
           * @returns {boolean} Returns `true` if the entry was removed, else `false`.
           */ function mapCacheDelete(key) {
            var result = getMapData(this, key)['delete'](key)
            this.size -= result ? 1 : 0
            return result
          }
          module.exports = mapCacheDelete
        }.apply(this, arguments))
      },
      { './_getMapData': 126 }
    ],
    153: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_mapCacheGet.js',
          module
        )
        ;(function() {
          var getMapData = require('./_getMapData')
          /**
           * Gets the map value for `key`.
           *
           * @private
           * @name get
           * @memberOf MapCache
           * @param {string} key The key of the value to get.
           * @returns {*} Returns the entry value.
           */ function mapCacheGet(key) {
            return getMapData(this, key).get(key)
          }
          module.exports = mapCacheGet
        }.apply(this, arguments))
      },
      { './_getMapData': 126 }
    ],
    154: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_mapCacheHas.js',
          module
        )
        ;(function() {
          var getMapData = require('./_getMapData')
          /**
           * Checks if a map value for `key` exists.
           *
           * @private
           * @name has
           * @memberOf MapCache
           * @param {string} key The key of the entry to check.
           * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
           */ function mapCacheHas(key) {
            return getMapData(this, key).has(key)
          }
          module.exports = mapCacheHas
        }.apply(this, arguments))
      },
      { './_getMapData': 126 }
    ],
    155: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_mapCacheSet.js',
          module
        )
        ;(function() {
          var getMapData = require('./_getMapData')
          /**
           * Sets the map `key` to `value`.
           *
           * @private
           * @name set
           * @memberOf MapCache
           * @param {string} key The key of the value to set.
           * @param {*} value The value to set.
           * @returns {Object} Returns the map cache instance.
           */ function mapCacheSet(key, value) {
            var data = getMapData(this, key),
              size = data.size
            data.set(key, value)
            this.size += data.size == size ? 0 : 1
            return this
          }
          module.exports = mapCacheSet
        }.apply(this, arguments))
      },
      { './_getMapData': 126 }
    ],
    156: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_mapToArray.js',
          module
        )
        ;(function() {
          /**
           * Converts `map` to its key-value pairs.
           *
           * @private
           * @param {Object} map The map to convert.
           * @returns {Array} Returns the key-value pairs.
           */ function mapToArray(map) {
            var index = -1,
              result = Array(map.size)
            map.forEach(function(value, key) {
              result[++index] = [key, value]
            })
            return result
          }
          module.exports = mapToArray
        }.apply(this, arguments))
      },
      {}
    ],
    157: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_matchesStrictComparable.js',
          module
        )
        ;(function() {
          /**
           * A specialized version of `matchesProperty` for source values suitable
           * for strict equality comparisons, i.e. `===`.
           *
           * @private
           * @param {string} key The key of the property to get.
           * @param {*} srcValue The value to match.
           * @returns {Function} Returns the new spec function.
           */ function matchesStrictComparable(key, srcValue) {
            return function(object) {
              if (object == null) {
                return false
              }
              return (
                object[key] === srcValue &&
                (srcValue !== undefined || key in Object(object))
              )
            }
          }
          module.exports = matchesStrictComparable
        }.apply(this, arguments))
      },
      {}
    ],
    158: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_memoizeCapped.js',
          module
        )
        ;(function() {
          var memoize = require('./memoize')
          /** Used as the maximum memoize cache size. */ var MAX_MEMOIZE_SIZE = 500
          /**
           * A specialized version of `_.memoize` which clears the memoized function's
           * cache when it exceeds `MAX_MEMOIZE_SIZE`.
           *
           * @private
           * @param {Function} func The function to have its output memoized.
           * @returns {Function} Returns the new memoized function.
           */ function memoizeCapped(func) {
            var result = memoize(func, function(key) {
              if (cache.size === MAX_MEMOIZE_SIZE) {
                cache.clear()
              }
              return key
            })
            var cache = result.cache
            return result
          }
          module.exports = memoizeCapped
        }.apply(this, arguments))
      },
      { './memoize': 201 }
    ],
    159: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_nativeCreate.js',
          module
        )
        ;(function() {
          var getNative = require('./_getNative')
          /* Built-in method references that are verified to be native. */ var nativeCreate = getNative(
            Object,
            'create'
          )
          module.exports = nativeCreate
        }.apply(this, arguments))
      },
      { './_getNative': 128 }
    ],
    160: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_nativeKeys.js',
          module
        )
        ;(function() {
          var overArg = require('./_overArg')
          /* Built-in method references for those with the same name as other `lodash` methods. */ var nativeKeys = overArg(
            Object.keys,
            Object
          )
          module.exports = nativeKeys
        }.apply(this, arguments))
      },
      { './_overArg': 163 }
    ],
    161: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_nodeUtil.js',
          module
        )
        ;(function() {
          var freeGlobal = require('./_freeGlobal')
          /** Detect free variable `exports`. */ var freeExports =
            (0, _typeof3['default'])(exports) == 'object' &&
            exports &&
            !exports.nodeType &&
            exports
          /** Detect free variable `module`. */ var freeModule =
            freeExports &&
            (0, _typeof3['default'])(module) == 'object' &&
            module &&
            !module.nodeType &&
            module
          /** Detect the popular CommonJS extension `module.exports`. */ var moduleExports =
            freeModule && freeModule.exports === freeExports
          /** Detect free variable `process` from Node.js. */ var freeProcess =
            moduleExports && freeGlobal.process
          /** Used to access faster Node.js helpers. */ var nodeUtil = (function() {
            try {
              // Use `util.types` for Node.js 10+.
              var types =
                freeModule &&
                freeModule.require &&
                freeModule.require('util').types
              if (types) {
                return types
              } // Legacy `process.binding('util')` for Node.js < 10.
              return (
                freeProcess &&
                freeProcess.binding &&
                freeProcess.binding('util')
              )
            } catch (e) {}
          })()
          module.exports = nodeUtil
        }.apply(this, arguments))
      },
      { './_freeGlobal': 124 }
    ],
    162: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_objectToString.js',
          module
        )
        ;(function() {
          /** Used for built-in method references. */ var objectProto =
            Object.prototype
          /**
           * Used to resolve the
           * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
           * of values.
           */ var nativeObjectToString = objectProto.toString
          /**
           * Converts `value` to a string using `Object.prototype.toString`.
           *
           * @private
           * @param {*} value The value to convert.
           * @returns {string} Returns the converted string.
           */ function objectToString(value) {
            return nativeObjectToString.call(value)
          }
          module.exports = objectToString
        }.apply(this, arguments))
      },
      {}
    ],
    163: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_overArg.js',
          module
        )
        ;(function() {
          /**
           * Creates a unary function that invokes `func` with its argument transformed.
           *
           * @private
           * @param {Function} func The function to wrap.
           * @param {Function} transform The argument transform.
           * @returns {Function} Returns the new function.
           */ function overArg(func, transform) {
            return function(arg) {
              return func(transform(arg))
            }
          }
          module.exports = overArg
        }.apply(this, arguments))
      },
      {}
    ],
    164: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_overRest.js',
          module
        )
        ;(function() {
          var apply = require('./_apply')
          /* Built-in method references for those with the same name as other `lodash` methods. */ var nativeMax =
            Math.max
          /**
           * A specialized version of `baseRest` which transforms the rest array.
           *
           * @private
           * @param {Function} func The function to apply a rest parameter to.
           * @param {number} [start=func.length-1] The start position of the rest parameter.
           * @param {Function} transform The rest array transform.
           * @returns {Function} Returns the new function.
           */ function overRest(func, start, transform) {
            start = nativeMax(start === undefined ? func.length - 1 : start, 0)
            return function() {
              var args = arguments,
                index = -1,
                length = nativeMax(args.length - start, 0),
                array = Array(length)
              while (++index < length) {
                array[index] = args[start + index]
              }
              index = -1
              var otherArgs = Array(start + 1)
              while (++index < start) {
                otherArgs[index] = args[index]
              }
              otherArgs[start] = transform(array)
              return apply(func, this, otherArgs)
            }
          }
          module.exports = overRest
        }.apply(this, arguments))
      },
      { './_apply': 74 }
    ],
    165: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_root.js',
          module
        )
        ;(function() {
          var freeGlobal = require('./_freeGlobal')
          /** Detect free variable `self`. */ var freeSelf =
            (typeof self === 'undefined'
              ? 'undefined'
              : (0, _typeof3['default'])(self)) == 'object' &&
            self &&
            self.Object === Object &&
            self
          /** Used as a reference to the global object. */ var root =
            freeGlobal || freeSelf || Function('return this')()
          module.exports = root
        }.apply(this, arguments))
      },
      { './_freeGlobal': 124 }
    ],
    166: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_setCacheAdd.js',
          module
        )
        ;(function() {
          /** Used to stand-in for `undefined` hash values. */ var HASH_UNDEFINED =
            '__lodash_hash_undefined__'
          /**
           * Adds `value` to the array cache.
           *
           * @private
           * @name add
           * @memberOf SetCache
           * @alias push
           * @param {*} value The value to cache.
           * @returns {Object} Returns the cache instance.
           */ function setCacheAdd(value) {
            this.__data__.set(value, HASH_UNDEFINED)
            return this
          }
          module.exports = setCacheAdd
        }.apply(this, arguments))
      },
      {}
    ],
    167: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_setCacheHas.js',
          module
        )
        ;(function() {
          /**
           * Checks if `value` is in the array cache.
           *
           * @private
           * @name has
           * @memberOf SetCache
           * @param {*} value The value to search for.
           * @returns {number} Returns `true` if `value` is found, else `false`.
           */ function setCacheHas(value) {
            return this.__data__.has(value)
          }
          module.exports = setCacheHas
        }.apply(this, arguments))
      },
      {}
    ],
    168: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_setToArray.js',
          module
        )
        ;(function() {
          /**
           * Converts `set` to an array of its values.
           *
           * @private
           * @param {Object} set The set to convert.
           * @returns {Array} Returns the values.
           */ function setToArray(set) {
            var index = -1,
              result = Array(set.size)
            set.forEach(function(value) {
              result[++index] = value
            })
            return result
          }
          module.exports = setToArray
        }.apply(this, arguments))
      },
      {}
    ],
    169: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_setToString.js',
          module
        )
        ;(function() {
          var baseSetToString = require('./_baseSetToString'),
            shortOut = require('./_shortOut')
          /**
           * Sets the `toString` method of `func` to return `string`.
           *
           * @private
           * @param {Function} func The function to modify.
           * @param {Function} string The `toString` result.
           * @returns {Function} Returns `func`.
           */ var setToString = shortOut(baseSetToString)
          module.exports = setToString
        }.apply(this, arguments))
      },
      { './_baseSetToString': 106, './_shortOut': 170 }
    ],
    170: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_shortOut.js',
          module
        )
        ;(function() {
          /** Used to detect hot functions by number of calls within a span of milliseconds. */ var HOT_COUNT = 800,
            HOT_SPAN = 16
          /* Built-in method references for those with the same name as other `lodash` methods. */ var nativeNow =
            Date.now
          /**
           * Creates a function that'll short out and invoke `identity` instead
           * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
           * milliseconds.
           *
           * @private
           * @param {Function} func The function to restrict.
           * @returns {Function} Returns the new shortable function.
           */ function shortOut(func) {
            var count = 0,
              lastCalled = 0
            return function() {
              var stamp = nativeNow(),
                remaining = HOT_SPAN - (stamp - lastCalled)
              lastCalled = stamp
              if (remaining > 0) {
                if (++count >= HOT_COUNT) {
                  return arguments[0]
                }
              } else {
                count = 0
              }
              return func.apply(undefined, arguments)
            }
          }
          module.exports = shortOut
        }.apply(this, arguments))
      },
      {}
    ],
    171: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_stackClear.js',
          module
        )
        ;(function() {
          var ListCache = require('./_ListCache')
          /**
           * Removes all key-value entries from the stack.
           *
           * @private
           * @name clear
           * @memberOf Stack
           */ function stackClear() {
            this.__data__ = new ListCache()
            this.size = 0
          }
          module.exports = stackClear
        }.apply(this, arguments))
      },
      { './_ListCache': 64 }
    ],
    172: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_stackDelete.js',
          module
        )
        ;(function() {
          /**
           * Removes `key` and its value from the stack.
           *
           * @private
           * @name delete
           * @memberOf Stack
           * @param {string} key The key of the value to remove.
           * @returns {boolean} Returns `true` if the entry was removed, else `false`.
           */ function stackDelete(key) {
            var data = this.__data__,
              result = data['delete'](key)
            this.size = data.size
            return result
          }
          module.exports = stackDelete
        }.apply(this, arguments))
      },
      {}
    ],
    173: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_stackGet.js',
          module
        )
        ;(function() {
          /**
           * Gets the stack value for `key`.
           *
           * @private
           * @name get
           * @memberOf Stack
           * @param {string} key The key of the value to get.
           * @returns {*} Returns the entry value.
           */ function stackGet(key) {
            return this.__data__.get(key)
          }
          module.exports = stackGet
        }.apply(this, arguments))
      },
      {}
    ],
    174: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_stackHas.js',
          module
        )
        ;(function() {
          /**
           * Checks if a stack value for `key` exists.
           *
           * @private
           * @name has
           * @memberOf Stack
           * @param {string} key The key of the entry to check.
           * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
           */ function stackHas(key) {
            return this.__data__.has(key)
          }
          module.exports = stackHas
        }.apply(this, arguments))
      },
      {}
    ],
    175: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_stackSet.js',
          module
        )
        ;(function() {
          var ListCache = require('./_ListCache'),
            Map = require('./_Map'),
            MapCache = require('./_MapCache')
          /** Used as the size to enable large array optimizations. */ var LARGE_ARRAY_SIZE = 200
          /**
           * Sets the stack `key` to `value`.
           *
           * @private
           * @name set
           * @memberOf Stack
           * @param {string} key The key of the value to set.
           * @param {*} value The value to set.
           * @returns {Object} Returns the stack cache instance.
           */ function stackSet(key, value) {
            var data = this.__data__
            if (data instanceof ListCache) {
              var pairs = data.__data__
              if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
                pairs.push([key, value])
                this.size = ++data.size
                return this
              }
              data = this.__data__ = new MapCache(pairs)
            }
            data.set(key, value)
            this.size = data.size
            return this
          }
          module.exports = stackSet
        }.apply(this, arguments))
      },
      { './_ListCache': 64, './_Map': 65, './_MapCache': 66 }
    ],
    176: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_stringToPath.js',
          module
        )
        ;(function() {
          var memoizeCapped = require('./_memoizeCapped')
          /** Used to match property names within property paths. */ var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g
          /** Used to match backslashes in property paths. */ var reEscapeChar = /\\(\\)?/g
          /**
           * Converts `string` to a property path array.
           *
           * @private
           * @param {string} string The string to convert.
           * @returns {Array} Returns the property path array.
           */ var stringToPath = memoizeCapped(function(string) {
            var result = []
            if (string.charCodeAt(0) === 46 /* . */) {
              result.push('')
            }
            string.replace(rePropName, function(
              match,
              number,
              quote,
              subString
            ) {
              result.push(
                quote ? subString.replace(reEscapeChar, '$1') : number || match
              )
            })
            return result
          })
          module.exports = stringToPath
        }.apply(this, arguments))
      },
      { './_memoizeCapped': 158 }
    ],
    177: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_toKey.js',
          module
        )
        ;(function() {
          var isSymbol = require('./isSymbol')
          /** Used as references for various `Number` constants. */ var INFINITY =
            1 / 0
          /**
           * Converts `value` to a string key if it's not a string or symbol.
           *
           * @private
           * @param {*} value The value to inspect.
           * @returns {string|symbol} Returns the key.
           */ function toKey(value) {
            if (typeof value == 'string' || isSymbol(value)) {
              return value
            }
            var result = value + ''
            return result == '0' && 1 / value == -INFINITY ? '-0' : result
          }
          module.exports = toKey
        }.apply(this, arguments))
      },
      { './isSymbol': 196 }
    ],
    178: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/_toSource.js',
          module
        )
        ;(function() {
          /** Used for built-in method references. */ var funcProto =
            Function.prototype
          /** Used to resolve the decompiled source of functions. */ var funcToString =
            funcProto.toString
          /**
           * Converts `func` to its source code.
           *
           * @private
           * @param {Function} func The function to convert.
           * @returns {string} Returns the source code.
           */ function toSource(func) {
            if (func != null) {
              try {
                return funcToString.call(func)
              } catch (e) {}
              try {
                return func + ''
              } catch (e) {}
            }
            return ''
          }
          module.exports = toSource
        }.apply(this, arguments))
      },
      {}
    ],
    179: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/assign.js',
          module
        )
        ;(function() {
          var assignValue = require('./_assignValue'),
            copyObject = require('./_copyObject'),
            createAssigner = require('./_createAssigner'),
            isArrayLike = require('./isArrayLike'),
            isPrototype = require('./_isPrototype'),
            keys = require('./keys')
          /** Used for built-in method references. */ var objectProto =
            Object.prototype
          /** Used to check objects for own properties. */ var hasOwnProperty =
            objectProto.hasOwnProperty
          /**
           * Assigns own enumerable string keyed properties of source objects to the
           * destination object. Source objects are applied from left to right.
           * Subsequent sources overwrite property assignments of previous sources.
           *
           * **Note:** This method mutates `object` and is loosely based on
           * [`Object.assign`](https://mdn.io/Object/assign).
           *
           * @static
           * @memberOf _
           * @since 0.10.0
           * @category Object
           * @param {Object} object The destination object.
           * @param {...Object} [sources] The source objects.
           * @returns {Object} Returns `object`.
           * @see _.assignIn
           * @example
           *
           * function Foo() {
           *   this.a = 1;
           * }
           *
           * function Bar() {
           *   this.c = 3;
           * }
           *
           * Foo.prototype.b = 2;
           * Bar.prototype.d = 4;
           *
           * _.assign({ 'a': 0 }, new Foo, new Bar);
           * // => { 'a': 1, 'c': 3 }
           */ var assign = createAssigner(function(object, source) {
            if (isPrototype(source) || isArrayLike(source)) {
              copyObject(source, keys(source), object)
              return
            }
            for (var key in source) {
              if (hasOwnProperty.call(source, key)) {
                assignValue(object, key, source[key])
              }
            }
          })
          module.exports = assign
        }.apply(this, arguments))
      },
      {
        './_assignValue': 81,
        './_copyObject': 115,
        './_createAssigner': 117,
        './_isPrototype': 144,
        './isArrayLike': 190,
        './keys': 198
      }
    ],
    180: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/constant.js',
          module
        )
        ;(function() {
          /**
           * Creates a function that returns `value`.
           *
           * @static
           * @memberOf _
           * @since 2.4.0
           * @category Util
           * @param {*} value The value to return from the new function.
           * @returns {Function} Returns the new constant function.
           * @example
           *
           * var objects = _.times(2, _.constant({ 'a': 1 }));
           *
           * console.log(objects);
           * // => [{ 'a': 1 }, { 'a': 1 }]
           *
           * console.log(objects[0] === objects[1]);
           * // => true
           */ function constant(value) {
            return function() {
              return value
            }
          }
          module.exports = constant
        }.apply(this, arguments))
      },
      {}
    ],
    181: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule('node_modules/lodash/eq.js', module)
        ;(function() {
          /**
           * Performs a
           * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
           * comparison between two values to determine if they are equivalent.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to compare.
           * @param {*} other The other value to compare.
           * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
           * @example
           *
           * var object = { 'a': 1 };
           * var other = { 'a': 1 };
           *
           * _.eq(object, object);
           * // => true
           *
           * _.eq(object, other);
           * // => false
           *
           * _.eq('a', 'a');
           * // => true
           *
           * _.eq('a', Object('a'));
           * // => false
           *
           * _.eq(NaN, NaN);
           * // => true
           */ function eq(value, other) {
            return value === other || (value !== value && other !== other)
          }
          module.exports = eq
        }.apply(this, arguments))
      },
      {}
    ],
    182: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/filter.js',
          module
        )
        ;(function() {
          var arrayFilter = require('./_arrayFilter'),
            baseFilter = require('./_baseFilter'),
            baseIteratee = require('./_baseIteratee'),
            isArray = require('./isArray')
          /**
           * Iterates over elements of `collection`, returning an array of all elements
           * `predicate` returns truthy for. The predicate is invoked with three
           * arguments: (value, index|key, collection).
           *
           * **Note:** Unlike `_.remove`, this method returns a new array.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Collection
           * @param {Array|Object} collection The collection to iterate over.
           * @param {Function} [predicate=_.identity] The function invoked per iteration.
           * @returns {Array} Returns the new filtered array.
           * @see _.reject
           * @example
           *
           * var users = [
           *   { 'user': 'barney', 'age': 36, 'active': true },
           *   { 'user': 'fred',   'age': 40, 'active': false }
           * ];
           *
           * _.filter(users, function(o) { return !o.active; });
           * // => objects for ['fred']
           *
           * // The `_.matches` iteratee shorthand.
           * _.filter(users, { 'age': 36, 'active': true });
           * // => objects for ['barney']
           *
           * // The `_.matchesProperty` iteratee shorthand.
           * _.filter(users, ['active', false]);
           * // => objects for ['fred']
           *
           * // The `_.property` iteratee shorthand.
           * _.filter(users, 'active');
           * // => objects for ['barney']
           */ function filter(collection, predicate) {
            var func = isArray(collection) ? arrayFilter : baseFilter
            return func(collection, baseIteratee(predicate, 3))
          }
          module.exports = filter
        }.apply(this, arguments))
      },
      {
        './_arrayFilter': 76,
        './_baseFilter': 85,
        './_baseIteratee': 98,
        './isArray': 189
      }
    ],
    183: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/forEach.js',
          module
        )
        ;(function() {
          var arrayEach = require('./_arrayEach'),
            baseEach = require('./_baseEach'),
            castFunction = require('./_castFunction'),
            isArray = require('./isArray')
          /**
           * Iterates over elements of `collection` and invokes `iteratee` for each element.
           * The iteratee is invoked with three arguments: (value, index|key, collection).
           * Iteratee functions may exit iteration early by explicitly returning `false`.
           *
           * **Note:** As with other "Collections" methods, objects with a "length"
           * property are iterated like arrays. To avoid this behavior use `_.forIn`
           * or `_.forOwn` for object iteration.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @alias each
           * @category Collection
           * @param {Array|Object} collection The collection to iterate over.
           * @param {Function} [iteratee=_.identity] The function invoked per iteration.
           * @returns {Array|Object} Returns `collection`.
           * @see _.forEachRight
           * @example
           *
           * _.forEach([1, 2], function(value) {
           *   console.log(value);
           * });
           * // => Logs `1` then `2`.
           *
           * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
           *   console.log(key);
           * });
           * // => Logs 'a' then 'b' (iteration order is not guaranteed).
           */ function forEach(collection, iteratee) {
            var func = isArray(collection) ? arrayEach : baseEach
            return func(collection, castFunction(iteratee))
          }
          module.exports = forEach
        }.apply(this, arguments))
      },
      {
        './_arrayEach': 75,
        './_baseEach': 84,
        './_castFunction': 113,
        './isArray': 189
      }
    ],
    184: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/forOwn.js',
          module
        )
        ;(function() {
          var baseForOwn = require('./_baseForOwn'),
            castFunction = require('./_castFunction')
          /**
           * Iterates over own enumerable string keyed properties of an object and
           * invokes `iteratee` for each property. The iteratee is invoked with three
           * arguments: (value, key, object). Iteratee functions may exit iteration
           * early by explicitly returning `false`.
           *
           * @static
           * @memberOf _
           * @since 0.3.0
           * @category Object
           * @param {Object} object The object to iterate over.
           * @param {Function} [iteratee=_.identity] The function invoked per iteration.
           * @returns {Object} Returns `object`.
           * @see _.forOwnRight
           * @example
           *
           * function Foo() {
           *   this.a = 1;
           *   this.b = 2;
           * }
           *
           * Foo.prototype.c = 3;
           *
           * _.forOwn(new Foo, function(value, key) {
           *   console.log(key);
           * });
           * // => Logs 'a' then 'b' (iteration order is not guaranteed).
           */ function forOwn(object, iteratee) {
            return object && baseForOwn(object, castFunction(iteratee))
          }
          module.exports = forOwn
        }.apply(this, arguments))
      },
      { './_baseForOwn': 87, './_castFunction': 113 }
    ],
    185: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule('node_modules/lodash/get.js', module)
        ;(function() {
          var baseGet = require('./_baseGet')
          /**
           * Gets the value at `path` of `object`. If the resolved value is
           * `undefined`, the `defaultValue` is returned in its place.
           *
           * @static
           * @memberOf _
           * @since 3.7.0
           * @category Object
           * @param {Object} object The object to query.
           * @param {Array|string} path The path of the property to get.
           * @param {*} [defaultValue] The value returned for `undefined` resolved values.
           * @returns {*} Returns the resolved value.
           * @example
           *
           * var object = { 'a': [{ 'b': { 'c': 3 } }] };
           *
           * _.get(object, 'a[0].b.c');
           * // => 3
           *
           * _.get(object, ['a', '0', 'b', 'c']);
           * // => 3
           *
           * _.get(object, 'a.b.c', 'default');
           * // => 'default'
           */ function get(object, path, defaultValue) {
            var result = object == null ? undefined : baseGet(object, path)
            return result === undefined ? defaultValue : result
          }
          module.exports = get
        }.apply(this, arguments))
      },
      { './_baseGet': 88 }
    ],
    186: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/hasIn.js',
          module
        )
        ;(function() {
          var baseHasIn = require('./_baseHasIn'),
            hasPath = require('./_hasPath')
          /**
           * Checks if `path` is a direct or inherited property of `object`.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Object
           * @param {Object} object The object to query.
           * @param {Array|string} path The path to check.
           * @returns {boolean} Returns `true` if `path` exists, else `false`.
           * @example
           *
           * var object = _.create({ 'a': _.create({ 'b': 2 }) });
           *
           * _.hasIn(object, 'a');
           * // => true
           *
           * _.hasIn(object, 'a.b');
           * // => true
           *
           * _.hasIn(object, ['a', 'b']);
           * // => true
           *
           * _.hasIn(object, 'b');
           * // => false
           */ function hasIn(object, path) {
            return object != null && hasPath(object, path, baseHasIn)
          }
          module.exports = hasIn
        }.apply(this, arguments))
      },
      { './_baseHasIn': 91, './_hasPath': 133 }
    ],
    187: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/identity.js',
          module
        )
        ;(function() {
          /**
           * This method returns the first argument it receives.
           *
           * @static
           * @since 0.1.0
           * @memberOf _
           * @category Util
           * @param {*} value Any value.
           * @returns {*} Returns `value`.
           * @example
           *
           * var object = { 'a': 1 };
           *
           * console.log(_.identity(object) === object);
           * // => true
           */ function identity(value) {
            return value
          }
          module.exports = identity
        }.apply(this, arguments))
      },
      {}
    ],
    188: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/isArguments.js',
          module
        )
        ;(function() {
          var baseIsArguments = require('./_baseIsArguments'),
            isObjectLike = require('./isObjectLike')
          /** Used for built-in method references. */ var objectProto =
            Object.prototype
          /** Used to check objects for own properties. */ var hasOwnProperty =
            objectProto.hasOwnProperty
          /** Built-in value references. */ var propertyIsEnumerable =
            objectProto.propertyIsEnumerable
          /**
           * Checks if `value` is likely an `arguments` object.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is an `arguments` object,
           *  else `false`.
           * @example
           *
           * _.isArguments(function() { return arguments; }());
           * // => true
           *
           * _.isArguments([1, 2, 3]);
           * // => false
           */ var isArguments = baseIsArguments(
            (function() {
              return arguments
            })()
          )
            ? baseIsArguments
            : function(value) {
                return (
                  isObjectLike(value) &&
                  hasOwnProperty.call(value, 'callee') &&
                  !propertyIsEnumerable.call(value, 'callee')
                )
              }
          module.exports = isArguments
        }.apply(this, arguments))
      },
      { './_baseIsArguments': 92, './isObjectLike': 195 }
    ],
    189: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/isArray.js',
          module
        )
        ;(function() {
          /**
           * Checks if `value` is classified as an `Array` object.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is an array, else `false`.
           * @example
           *
           * _.isArray([1, 2, 3]);
           * // => true
           *
           * _.isArray(document.body.children);
           * // => false
           *
           * _.isArray('abc');
           * // => false
           *
           * _.isArray(_.noop);
           * // => false
           */ var isArray = Array.isArray
          module.exports = isArray
        }.apply(this, arguments))
      },
      {}
    ],
    190: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/isArrayLike.js',
          module
        )
        ;(function() {
          var isFunction = require('./isFunction'),
            isLength = require('./isLength')
          /**
           * Checks if `value` is array-like. A value is considered array-like if it's
           * not a function and has a `value.length` that's an integer greater than or
           * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
           * @example
           *
           * _.isArrayLike([1, 2, 3]);
           * // => true
           *
           * _.isArrayLike(document.body.children);
           * // => true
           *
           * _.isArrayLike('abc');
           * // => true
           *
           * _.isArrayLike(_.noop);
           * // => false
           */ function isArrayLike(value) {
            return value != null && isLength(value.length) && !isFunction(value)
          }
          module.exports = isArrayLike
        }.apply(this, arguments))
      },
      { './isFunction': 192, './isLength': 193 }
    ],
    191: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/isBuffer.js',
          module
        )
        ;(function() {
          var root = require('./_root'),
            stubFalse = require('./stubFalse')
          /** Detect free variable `exports`. */ var freeExports =
            (0, _typeof3['default'])(exports) == 'object' &&
            exports &&
            !exports.nodeType &&
            exports
          /** Detect free variable `module`. */ var freeModule =
            freeExports &&
            (0, _typeof3['default'])(module) == 'object' &&
            module &&
            !module.nodeType &&
            module
          /** Detect the popular CommonJS extension `module.exports`. */ var moduleExports =
            freeModule && freeModule.exports === freeExports
          /** Built-in value references. */ var Buffer = moduleExports
            ? root.Buffer
            : undefined
          /* Built-in method references for those with the same name as other `lodash` methods. */ var nativeIsBuffer = Buffer
            ? Buffer.isBuffer
            : undefined
          /**
           * Checks if `value` is a buffer.
           *
           * @static
           * @memberOf _
           * @since 4.3.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
           * @example
           *
           * _.isBuffer(new Buffer(2));
           * // => true
           *
           * _.isBuffer(new Uint8Array(2));
           * // => false
           */ var isBuffer = nativeIsBuffer || stubFalse
          module.exports = isBuffer
        }.apply(this, arguments))
      },
      { './_root': 165, './stubFalse': 205 }
    ],
    192: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/isFunction.js',
          module
        )
        ;(function() {
          var baseGetTag = require('./_baseGetTag'),
            isObject = require('./isObject')
          /** `Object#toString` result references. */ var asyncTag =
              '[object AsyncFunction]',
            funcTag = '[object Function]',
            genTag = '[object GeneratorFunction]',
            proxyTag = '[object Proxy]'
          /**
           * Checks if `value` is classified as a `Function` object.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a function, else `false`.
           * @example
           *
           * _.isFunction(_);
           * // => true
           *
           * _.isFunction(/abc/);
           * // => false
           */ function isFunction(value) {
            if (!isObject(value)) {
              return false
            } // The use of `Object#toString` avoids issues with the `typeof` operator
            // in Safari 9 which returns 'object' for typed arrays and other constructors.
            var tag = baseGetTag(value)
            return (
              tag == funcTag ||
              tag == genTag ||
              tag == asyncTag ||
              tag == proxyTag
            )
          }
          module.exports = isFunction
        }.apply(this, arguments))
      },
      { './_baseGetTag': 90, './isObject': 194 }
    ],
    193: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/isLength.js',
          module
        )
        ;(function() {
          /** Used as references for various `Number` constants. */ var MAX_SAFE_INTEGER = 9007199254740991
          /**
           * Checks if `value` is a valid array-like length.
           *
           * **Note:** This method is loosely based on
           * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
           * @example
           *
           * _.isLength(3);
           * // => true
           *
           * _.isLength(Number.MIN_VALUE);
           * // => false
           *
           * _.isLength(Infinity);
           * // => false
           *
           * _.isLength('3');
           * // => false
           */ function isLength(value) {
            return (
              typeof value == 'number' &&
              value > -1 &&
              value % 1 == 0 &&
              value <= MAX_SAFE_INTEGER
            )
          }
          module.exports = isLength
        }.apply(this, arguments))
      },
      {}
    ],
    194: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/isObject.js',
          module
        )
        ;(function() {
          /**
           * Checks if `value` is the
           * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
           * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is an object, else `false`.
           * @example
           *
           * _.isObject({});
           * // => true
           *
           * _.isObject([1, 2, 3]);
           * // => true
           *
           * _.isObject(_.noop);
           * // => true
           *
           * _.isObject(null);
           * // => false
           */ function isObject(value) {
            var type = (0, _typeof3['default'])(value)
            return value != null && (type == 'object' || type == 'function')
          }
          module.exports = isObject
        }.apply(this, arguments))
      },
      {}
    ],
    195: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/isObjectLike.js',
          module
        )
        ;(function() {
          /**
           * Checks if `value` is object-like. A value is object-like if it's not `null`
           * and has a `typeof` result of "object".
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
           * @example
           *
           * _.isObjectLike({});
           * // => true
           *
           * _.isObjectLike([1, 2, 3]);
           * // => true
           *
           * _.isObjectLike(_.noop);
           * // => false
           *
           * _.isObjectLike(null);
           * // => false
           */ function isObjectLike(value) {
            return value != null && (0, _typeof3['default'])(value) == 'object'
          }
          module.exports = isObjectLike
        }.apply(this, arguments))
      },
      {}
    ],
    196: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/isSymbol.js',
          module
        )
        ;(function() {
          var baseGetTag = require('./_baseGetTag'),
            isObjectLike = require('./isObjectLike')
          /** `Object#toString` result references. */ var symbolTag =
            '[object Symbol]'
          /**
           * Checks if `value` is classified as a `Symbol` primitive or object.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
           * @example
           *
           * _.isSymbol(Symbol.iterator);
           * // => true
           *
           * _.isSymbol('abc');
           * // => false
           */ function isSymbol(value) {
            return (
              (0, _typeof3['default'])(value) == 'symbol' ||
              (isObjectLike(value) && baseGetTag(value) == symbolTag)
            )
          }
          module.exports = isSymbol
        }.apply(this, arguments))
      },
      { './_baseGetTag': 90, './isObjectLike': 195 }
    ],
    197: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/isTypedArray.js',
          module
        )
        ;(function() {
          var baseIsTypedArray = require('./_baseIsTypedArray'),
            baseUnary = require('./_baseUnary'),
            nodeUtil = require('./_nodeUtil')
          /* Node.js helper references. */ var nodeIsTypedArray =
            nodeUtil && nodeUtil.isTypedArray
          /**
           * Checks if `value` is classified as a typed array.
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
           * @example
           *
           * _.isTypedArray(new Uint8Array);
           * // => true
           *
           * _.isTypedArray([]);
           * // => false
           */ var isTypedArray = nodeIsTypedArray
            ? baseUnary(nodeIsTypedArray)
            : baseIsTypedArray
          module.exports = isTypedArray
        }.apply(this, arguments))
      },
      { './_baseIsTypedArray': 97, './_baseUnary': 110, './_nodeUtil': 161 }
    ],
    198: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule('node_modules/lodash/keys.js', module)
        ;(function() {
          var arrayLikeKeys = require('./_arrayLikeKeys'),
            baseKeys = require('./_baseKeys'),
            isArrayLike = require('./isArrayLike')
          /**
           * Creates an array of the own enumerable property names of `object`.
           *
           * **Note:** Non-object values are coerced to objects. See the
           * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
           * for more details.
           *
           * @static
           * @since 0.1.0
           * @memberOf _
           * @category Object
           * @param {Object} object The object to query.
           * @returns {Array} Returns the array of property names.
           * @example
           *
           * function Foo() {
           *   this.a = 1;
           *   this.b = 2;
           * }
           *
           * Foo.prototype.c = 3;
           *
           * _.keys(new Foo);
           * // => ['a', 'b'] (iteration order is not guaranteed)
           *
           * _.keys('hi');
           * // => ['0', '1']
           */ function keys(object) {
            return isArrayLike(object)
              ? arrayLikeKeys(object)
              : baseKeys(object)
          }
          module.exports = keys
        }.apply(this, arguments))
      },
      { './_arrayLikeKeys': 77, './_baseKeys': 99, './isArrayLike': 190 }
    ],
    199: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule('node_modules/lodash/map.js', module)
        ;(function() {
          var arrayMap = require('./_arrayMap'),
            baseIteratee = require('./_baseIteratee'),
            baseMap = require('./_baseMap'),
            isArray = require('./isArray')
          /**
           * Creates an array of values by running each element in `collection` thru
           * `iteratee`. The iteratee is invoked with three arguments:
           * (value, index|key, collection).
           *
           * Many lodash methods are guarded to work as iteratees for methods like
           * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
           *
           * The guarded methods are:
           * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
           * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
           * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
           * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Collection
           * @param {Array|Object} collection The collection to iterate over.
           * @param {Function} [iteratee=_.identity] The function invoked per iteration.
           * @returns {Array} Returns the new mapped array.
           * @example
           *
           * function square(n) {
           *   return n * n;
           * }
           *
           * _.map([4, 8], square);
           * // => [16, 64]
           *
           * _.map({ 'a': 4, 'b': 8 }, square);
           * // => [16, 64] (iteration order is not guaranteed)
           *
           * var users = [
           *   { 'user': 'barney' },
           *   { 'user': 'fred' }
           * ];
           *
           * // The `_.property` iteratee shorthand.
           * _.map(users, 'user');
           * // => ['barney', 'fred']
           */ function map(collection, iteratee) {
            var func = isArray(collection) ? arrayMap : baseMap
            return func(collection, baseIteratee(iteratee, 3))
          }
          module.exports = map
        }.apply(this, arguments))
      },
      {
        './_arrayMap': 78,
        './_baseIteratee': 98,
        './_baseMap': 100,
        './isArray': 189
      }
    ],
    200: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/mapValues.js',
          module
        )
        ;(function() {
          var baseAssignValue = require('./_baseAssignValue'),
            baseForOwn = require('./_baseForOwn'),
            baseIteratee = require('./_baseIteratee')
          /**
           * Creates an object with the same keys as `object` and values generated
           * by running each own enumerable string keyed property of `object` thru
           * `iteratee`. The iteratee is invoked with three arguments:
           * (value, key, object).
           *
           * @static
           * @memberOf _
           * @since 2.4.0
           * @category Object
           * @param {Object} object The object to iterate over.
           * @param {Function} [iteratee=_.identity] The function invoked per iteration.
           * @returns {Object} Returns the new mapped object.
           * @see _.mapKeys
           * @example
           *
           * var users = {
           *   'fred':    { 'user': 'fred',    'age': 40 },
           *   'pebbles': { 'user': 'pebbles', 'age': 1 }
           * };
           *
           * _.mapValues(users, function(o) { return o.age; });
           * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
           *
           * // The `_.property` iteratee shorthand.
           * _.mapValues(users, 'age');
           * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
           */ function mapValues(object, iteratee) {
            var result = {}
            iteratee = baseIteratee(iteratee, 3)
            baseForOwn(object, function(value, key, object) {
              baseAssignValue(result, key, iteratee(value, key, object))
            })
            return result
          }
          module.exports = mapValues
        }.apply(this, arguments))
      },
      { './_baseAssignValue': 83, './_baseForOwn': 87, './_baseIteratee': 98 }
    ],
    201: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/memoize.js',
          module
        )
        ;(function() {
          var MapCache = require('./_MapCache')
          /** Error message constants. */ var FUNC_ERROR_TEXT =
            'Expected a function'
          /**
           * Creates a function that memoizes the result of `func`. If `resolver` is
           * provided, it determines the cache key for storing the result based on the
           * arguments provided to the memoized function. By default, the first argument
           * provided to the memoized function is used as the map cache key. The `func`
           * is invoked with the `this` binding of the memoized function.
           *
           * **Note:** The cache is exposed as the `cache` property on the memoized
           * function. Its creation may be customized by replacing the `_.memoize.Cache`
           * constructor with one whose instances implement the
           * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
           * method interface of `clear`, `delete`, `get`, `has`, and `set`.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Function
           * @param {Function} func The function to have its output memoized.
           * @param {Function} [resolver] The function to resolve the cache key.
           * @returns {Function} Returns the new memoized function.
           * @example
           *
           * var object = { 'a': 1, 'b': 2 };
           * var other = { 'c': 3, 'd': 4 };
           *
           * var values = _.memoize(_.values);
           * values(object);
           * // => [1, 2]
           *
           * values(other);
           * // => [3, 4]
           *
           * object.a = 2;
           * values(object);
           * // => [1, 2]
           *
           * // Modify the result cache.
           * values.cache.set(object, ['a', 'b']);
           * values(object);
           * // => ['a', 'b']
           *
           * // Replace `_.memoize.Cache`.
           * _.memoize.Cache = WeakMap;
           */ function memoize(func, resolver) {
            if (
              typeof func != 'function' ||
              (resolver != null && typeof resolver != 'function')
            ) {
              throw new TypeError(FUNC_ERROR_TEXT)
            }
            var memoized = function memoized() {
              var args = arguments,
                key = resolver ? resolver.apply(this, args) : args[0],
                cache = memoized.cache
              if (cache.has(key)) {
                return cache.get(key)
              }
              var result = func.apply(this, args)
              memoized.cache = cache.set(key, result) || cache
              return result
            }
            memoized.cache = new (memoize.Cache || MapCache)()
            return memoized
          } // Expose `MapCache`.
          memoize.Cache = MapCache
          module.exports = memoize
        }.apply(this, arguments))
      },
      { './_MapCache': 66 }
    ],
    202: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/property.js',
          module
        )
        ;(function() {
          var baseProperty = require('./_baseProperty'),
            basePropertyDeep = require('./_basePropertyDeep'),
            isKey = require('./_isKey'),
            toKey = require('./_toKey')
          /**
           * Creates a function that returns the value at `path` of a given object.
           *
           * @static
           * @memberOf _
           * @since 2.4.0
           * @category Util
           * @param {Array|string} path The path of the property to get.
           * @returns {Function} Returns the new accessor function.
           * @example
           *
           * var objects = [
           *   { 'a': { 'b': 2 } },
           *   { 'a': { 'b': 1 } }
           * ];
           *
           * _.map(objects, _.property('a.b'));
           * // => [2, 1]
           *
           * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
           * // => [1, 2]
           */ function property(path) {
            return isKey(path)
              ? baseProperty(toKey(path))
              : basePropertyDeep(path)
          }
          module.exports = property
        }.apply(this, arguments))
      },
      {
        './_baseProperty': 103,
        './_basePropertyDeep': 104,
        './_isKey': 141,
        './_toKey': 177
      }
    ],
    203: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule('node_modules/lodash/some.js', module)
        ;(function() {
          var arraySome = require('./_arraySome'),
            baseIteratee = require('./_baseIteratee'),
            baseSome = require('./_baseSome'),
            isArray = require('./isArray'),
            isIterateeCall = require('./_isIterateeCall')
          /**
           * Checks if `predicate` returns truthy for **any** element of `collection`.
           * Iteration is stopped once `predicate` returns truthy. The predicate is
           * invoked with three arguments: (value, index|key, collection).
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Collection
           * @param {Array|Object} collection The collection to iterate over.
           * @param {Function} [predicate=_.identity] The function invoked per iteration.
           * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
           * @returns {boolean} Returns `true` if any element passes the predicate check,
           *  else `false`.
           * @example
           *
           * _.some([null, 0, 'yes', false], Boolean);
           * // => true
           *
           * var users = [
           *   { 'user': 'barney', 'active': true },
           *   { 'user': 'fred',   'active': false }
           * ];
           *
           * // The `_.matches` iteratee shorthand.
           * _.some(users, { 'user': 'barney', 'active': false });
           * // => false
           *
           * // The `_.matchesProperty` iteratee shorthand.
           * _.some(users, ['active', false]);
           * // => true
           *
           * // The `_.property` iteratee shorthand.
           * _.some(users, 'active');
           * // => true
           */ function some(collection, predicate, guard) {
            var func = isArray(collection) ? arraySome : baseSome
            if (guard && isIterateeCall(collection, predicate, guard)) {
              predicate = undefined
            }
            return func(collection, baseIteratee(predicate, 3))
          }
          module.exports = some
        }.apply(this, arguments))
      },
      {
        './_arraySome': 80,
        './_baseIteratee': 98,
        './_baseSome': 107,
        './_isIterateeCall': 140,
        './isArray': 189
      }
    ],
    204: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/stubArray.js',
          module
        )
        ;(function() {
          /**
           * This method returns a new empty array.
           *
           * @static
           * @memberOf _
           * @since 4.13.0
           * @category Util
           * @returns {Array} Returns the new empty array.
           * @example
           *
           * var arrays = _.times(2, _.stubArray);
           *
           * console.log(arrays);
           * // => [[], []]
           *
           * console.log(arrays[0] === arrays[1]);
           * // => false
           */ function stubArray() {
            return []
          }
          module.exports = stubArray
        }.apply(this, arguments))
      },
      {}
    ],
    205: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/stubFalse.js',
          module
        )
        ;(function() {
          /**
           * This method returns `false`.
           *
           * @static
           * @memberOf _
           * @since 4.13.0
           * @category Util
           * @returns {boolean} Returns `false`.
           * @example
           *
           * _.times(2, _.stubFalse);
           * // => [false, false]
           */ function stubFalse() {
            return false
          }
          module.exports = stubFalse
        }.apply(this, arguments))
      },
      {}
    ],
    206: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/toString.js',
          module
        )
        ;(function() {
          var baseToString = require('./_baseToString')
          /**
           * Converts `value` to a string. An empty string is returned for `null`
           * and `undefined` values. The sign of `-0` is preserved.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to convert.
           * @returns {string} Returns the converted string.
           * @example
           *
           * _.toString(null);
           * // => ''
           *
           * _.toString(-0);
           * // => '-0'
           *
           * _.toString([1, 2, 3]);
           * // => '1,2,3'
           */ function toString(value) {
            return value == null ? '' : baseToString(value)
          }
          module.exports = toString
        }.apply(this, arguments))
      },
      { './_baseToString': 109 }
    ],
    207: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/lodash/zipObject.js',
          module
        )
        ;(function() {
          var assignValue = require('./_assignValue'),
            baseZipObject = require('./_baseZipObject')
          /**
           * This method is like `_.fromPairs` except that it accepts two arrays,
           * one of property identifiers and one of corresponding values.
           *
           * @static
           * @memberOf _
           * @since 0.4.0
           * @category Array
           * @param {Array} [props=[]] The property identifiers.
           * @param {Array} [values=[]] The property values.
           * @returns {Object} Returns the new object.
           * @example
           *
           * _.zipObject(['a', 'b'], [1, 2]);
           * // => { 'a': 1, 'b': 2 }
           */ function zipObject(props, values) {
            return baseZipObject(props || [], values || [], assignValue)
          }
          module.exports = zipObject
        }.apply(this, arguments))
      },
      { './_assignValue': 81, './_baseZipObject': 111 }
    ],
    208: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/parseqs/index.js',
          module
        )
        ;(function() {
          /**
           * Compiles a querystring
           * Returns string representation of the object
           *
           * @param {Object}
           * @api private
           */ exports.encode = function(obj) {
            var str = ''
            for (var i in obj) {
              if (obj.hasOwnProperty(i)) {
                if (str.length) str += '&'
                str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i])
              }
            }
            return str
          }
          /**
           * Parses a simple querystring into an object
           *
           * @param {String} qs
           * @api private
           */ exports.decode = function(qs) {
            var qry = {}
            var pairs = qs.split('&')
            for (var i = 0, l = pairs.length; i < l; i++) {
              var pair = pairs[i].split('=')
              qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1])
            }
            return qry
          }
        }.apply(this, arguments))
      },
      {}
    ],
    209: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/parseuri/index.js',
          module
        )
        ;(function() {
          /**
           * Parses an URI
           *
           * @author Steven Levithan <stevenlevithan.com> (MIT license)
           * @api private
           */ var re = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/
          var parts = [
            'source',
            'protocol',
            'authority',
            'userInfo',
            'user',
            'password',
            'host',
            'port',
            'relative',
            'path',
            'directory',
            'file',
            'query',
            'anchor'
          ]
          module.exports = function parseuri(str) {
            var src = str,
              b = str.indexOf('['),
              e = str.indexOf(']')
            if (b != -1 && e != -1) {
              str =
                str.substring(0, b) +
                str.substring(b, e).replace(/:/g, ';') +
                str.substring(e, str.length)
            }
            var m = re.exec(str || ''),
              uri = {},
              i = 14
            while (i--) {
              uri[parts[i]] = m[i] || ''
            }
            if (b != -1 && e != -1) {
              uri.source = src
              uri.host = uri.host
                .substring(1, uri.host.length - 1)
                .replace(/;/g, ':')
              uri.authority = uri.authority
                .replace('[', '')
                .replace(']', '')
                .replace(/;/g, ':')
              uri.ipv6uri = true
            }
            return uri
          }
        }.apply(this, arguments))
      },
      {}
    ],
    210: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/process/browser.js',
          module
        )
        ;(function() {
          // shim for using process in browser
          var process = (module.exports = {}) // cached from whatever global is present so that test runners that stub it
          // don't break things.  But we need to wrap it in a try catch in case it is
          // wrapped in strict mode code which doesn't define any globals.  It's inside a
          // function because try/catches deoptimize in certain engines.
          var cachedSetTimeout
          var cachedClearTimeout
          function defaultSetTimout() {
            throw new Error('setTimeout has not been defined')
          }
          function defaultClearTimeout() {
            throw new Error('clearTimeout has not been defined')
          }
          ;(function() {
            try {
              if (typeof setTimeout === 'function') {
                cachedSetTimeout = setTimeout
              } else {
                cachedSetTimeout = defaultSetTimout
              }
            } catch (e) {
              cachedSetTimeout = defaultSetTimout
            }
            try {
              if (typeof clearTimeout === 'function') {
                cachedClearTimeout = clearTimeout
              } else {
                cachedClearTimeout = defaultClearTimeout
              }
            } catch (e) {
              cachedClearTimeout = defaultClearTimeout
            }
          })()
          function runTimeout(fun) {
            if (cachedSetTimeout === setTimeout) {
              //normal enviroments in sane situations
              return setTimeout(fun, 0)
            } // if setTimeout wasn't available but was latter defined
            if (
              (cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) &&
              setTimeout
            ) {
              cachedSetTimeout = setTimeout
              return setTimeout(fun, 0)
            }
            try {
              // when when somebody has screwed with setTimeout but no I.E. maddness
              return cachedSetTimeout(fun, 0)
            } catch (e) {
              try {
                // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
                return cachedSetTimeout.call(null, fun, 0)
              } catch (e) {
                // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
                return cachedSetTimeout.call(this, fun, 0)
              }
            }
          }
          function runClearTimeout(marker) {
            if (cachedClearTimeout === clearTimeout) {
              //normal enviroments in sane situations
              return clearTimeout(marker)
            } // if clearTimeout wasn't available but was latter defined
            if (
              (cachedClearTimeout === defaultClearTimeout ||
                !cachedClearTimeout) &&
              clearTimeout
            ) {
              cachedClearTimeout = clearTimeout
              return clearTimeout(marker)
            }
            try {
              // when when somebody has screwed with setTimeout but no I.E. maddness
              return cachedClearTimeout(marker)
            } catch (e) {
              try {
                // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
                return cachedClearTimeout.call(null, marker)
              } catch (e) {
                // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
                // Some versions of I.E. have different rules for clearTimeout vs setTimeout
                return cachedClearTimeout.call(this, marker)
              }
            }
          }
          var queue = []
          var draining = false
          var currentQueue
          var queueIndex = -1
          function cleanUpNextTick() {
            if (!draining || !currentQueue) {
              return
            }
            draining = false
            if (currentQueue.length) {
              queue = currentQueue.concat(queue)
            } else {
              queueIndex = -1
            }
            if (queue.length) {
              drainQueue()
            }
          }
          function drainQueue() {
            if (draining) {
              return
            }
            var timeout = runTimeout(cleanUpNextTick)
            draining = true
            var len = queue.length
            while (len) {
              currentQueue = queue
              queue = []
              while (++queueIndex < len) {
                if (currentQueue) {
                  currentQueue[queueIndex].run()
                }
              }
              queueIndex = -1
              len = queue.length
            }
            currentQueue = null
            draining = false
            runClearTimeout(timeout)
          }
          process.nextTick = function(fun) {
            var args = new Array(arguments.length - 1)
            if (arguments.length > 1) {
              for (var i = 1; i < arguments.length; i++) {
                args[i - 1] = arguments[i]
              }
            }
            queue.push(new Item(fun, args))
            if (queue.length === 1 && !draining) {
              runTimeout(drainQueue)
            }
          } // v8 likes predictible objects
          function Item(fun, array) {
            this.fun = fun
            this.array = array
          }
          Item.prototype.run = function() {
            this.fun.apply(null, this.array)
          }
          process.title = 'browser'
          process.browser = true
          process.env = {}
          process.argv = []
          process.version = '' // empty string to avoid regexp issues
          process.versions = {}
          function noop() {}
          process.on = noop
          process.addListener = noop
          process.once = noop
          process.off = noop
          process.removeListener = noop
          process.removeAllListeners = noop
          process.emit = noop
          process.prependListener = noop
          process.prependOnceListener = noop
          process.listeners = function(name) {
            return []
          }
          process.binding = function(name) {
            throw new Error('process.binding is not supported')
          }
          process.cwd = function() {
            return '/'
          }
          process.chdir = function(dir) {
            throw new Error('process.chdir is not supported')
          }
          process.umask = function() {
            return 0
          }
        }.apply(this, arguments))
      },
      {}
    ],
    211: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/socket.io-client/lib/index.js',
          module
        )
        ;(function() {
          /**
           * Module dependencies.
           */ var url = require('./url')
          var parser = require('socket.io-parser')
          var Manager = require('./manager')
          var debug = require('debug')('socket.io-client')
          /**
           * Module exports.
           */ module.exports = exports = lookup
          /**
           * Managers cache.
           */ var cache = (exports.managers = {})
          /**
           * Looks up an existing `Manager` for multiplexing.
           * If the user summons:
           *
           *   `io('http://localhost/a');`
           *   `io('http://localhost/b');`
           *
           * We reuse the existing instance based on same scheme/port/host,
           * and we initialize sockets for each namespace.
           *
           * @api public
           */ function lookup(uri, opts) {
            if ((0, _typeof3['default'])(uri) === 'object') {
              opts = uri
              uri = undefined
            }
            opts = opts || {}
            var parsed = url(uri)
            var source = parsed.source
            var id = parsed.id
            var path = parsed.path
            var sameNamespace = cache[id] && path in cache[id].nsps
            var newConnection =
              opts.forceNew ||
              opts['force new connection'] ||
              false === opts.multiplex ||
              sameNamespace
            var io
            if (newConnection) {
              debug('ignoring socket cache for %s', source)
              io = Manager(source, opts)
            } else {
              if (!cache[id]) {
                debug('new io instance for %s', source)
                cache[id] = Manager(source, opts)
              }
              io = cache[id]
            }
            if (parsed.query && !opts.query) {
              opts.query = parsed.query
            }
            return io.socket(parsed.path, opts)
          }
          /**
           * Protocol version.
           *
           * @api public
           */ exports.protocol = parser.protocol
          /**
           * `connect`.
           *
           * @param {String} uri
           * @api public
           */ exports.connect = lookup
          /**
           * Expose constructors for standalone build.
           *
           * @api public
           */ exports.Manager = require('./manager')
          exports.Socket = require('./socket')
        }.apply(this, arguments))
      },
      {
        './manager': 212,
        './socket': 214,
        './url': 215,
        debug: 216,
        'socket.io-parser': 221
      }
    ],
    212: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/socket.io-client/lib/manager.js',
          module
        )
        ;(function() {
          /**
           * Module dependencies.
           */ var eio = require('engine.io-client')
          var Socket = require('./socket')
          var Emitter = require('component-emitter')
          var parser = require('socket.io-parser')
          var on = require('./on')
          var bind = require('component-bind')
          var debug = require('debug')('socket.io-client:manager')
          var indexOf = require('indexof')
          var Backoff = require('backo2')
          /**
           * IE6+ hasOwnProperty
           */ var has = Object.prototype.hasOwnProperty
          /**
           * Module exports
           */ module.exports = Manager
          /**
           * `Manager` constructor.
           *
           * @param {String} engine instance or engine uri/opts
           * @param {Object} options
           * @api public
           */ function Manager(uri, opts) {
            if (!(this instanceof Manager)) return new Manager(uri, opts)
            if (uri && 'object' === (0, _typeof3['default'])(uri)) {
              opts = uri
              uri = undefined
            }
            opts = opts || {}
            opts.path = opts.path || '/socket.io'
            this.nsps = {}
            this.subs = []
            this.opts = opts
            this.reconnection(opts.reconnection !== false)
            this.reconnectionAttempts(opts.reconnectionAttempts || Infinity)
            this.reconnectionDelay(opts.reconnectionDelay || 1000)
            this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000)
            this.randomizationFactor(opts.randomizationFactor || 0.5)
            this.backoff = new Backoff({
              min: this.reconnectionDelay(),
              max: this.reconnectionDelayMax(),
              jitter: this.randomizationFactor()
            })
            this.timeout(null == opts.timeout ? 20000 : opts.timeout)
            this.readyState = 'closed'
            this.uri = uri
            this.connecting = []
            this.lastPing = null
            this.encoding = false
            this.packetBuffer = []
            var _parser = opts.parser || parser
            this.encoder = new _parser.Encoder()
            this.decoder = new _parser.Decoder()
            this.autoConnect = opts.autoConnect !== false
            if (this.autoConnect) this.open()
          }
          /**
           * Propagate given event to sockets and emit on `this`
           *
           * @api private
           */ Manager.prototype.emitAll = function() {
            this.emit.apply(this, arguments)
            for (var nsp in this.nsps) {
              if (has.call(this.nsps, nsp)) {
                this.nsps[nsp].emit.apply(this.nsps[nsp], arguments)
              }
            }
          }
          /**
           * Update `socket.id` of all sockets
           *
           * @api private
           */ Manager.prototype.updateSocketIds = function() {
            for (var nsp in this.nsps) {
              if (has.call(this.nsps, nsp)) {
                this.nsps[nsp].id = this.generateId(nsp)
              }
            }
          }
          /**
           * generate `socket.id` for the given `nsp`
           *
           * @param {String} nsp
           * @return {String}
           * @api private
           */ Manager.prototype.generateId = function(nsp) {
            return (nsp === '/' ? '' : nsp + '#') + this.engine.id
          }
          /**
           * Mix in `Emitter`.
           */ Emitter(Manager.prototype)
          /**
           * Sets the `reconnection` config.
           *
           * @param {Boolean} true/false if it should automatically reconnect
           * @return {Manager} self or value
           * @api public
           */ Manager.prototype.reconnection = function(v) {
            if (!arguments.length) return this._reconnection
            this._reconnection = !!v
            return this
          }
          /**
           * Sets the reconnection attempts config.
           *
           * @param {Number} max reconnection attempts before giving up
           * @return {Manager} self or value
           * @api public
           */ Manager.prototype.reconnectionAttempts = function(v) {
            if (!arguments.length) return this._reconnectionAttempts
            this._reconnectionAttempts = v
            return this
          }
          /**
           * Sets the delay between reconnections.
           *
           * @param {Number} delay
           * @return {Manager} self or value
           * @api public
           */ Manager.prototype.reconnectionDelay = function(v) {
            if (!arguments.length) return this._reconnectionDelay
            this._reconnectionDelay = v
            this.backoff && this.backoff.setMin(v)
            return this
          }
          Manager.prototype.randomizationFactor = function(v) {
            if (!arguments.length) return this._randomizationFactor
            this._randomizationFactor = v
            this.backoff && this.backoff.setJitter(v)
            return this
          }
          /**
           * Sets the maximum delay between reconnections.
           *
           * @param {Number} delay
           * @return {Manager} self or value
           * @api public
           */ Manager.prototype.reconnectionDelayMax = function(v) {
            if (!arguments.length) return this._reconnectionDelayMax
            this._reconnectionDelayMax = v
            this.backoff && this.backoff.setMax(v)
            return this
          }
          /**
           * Sets the connection timeout. `false` to disable
           *
           * @return {Manager} self or value
           * @api public
           */ Manager.prototype.timeout = function(v) {
            if (!arguments.length) return this._timeout
            this._timeout = v
            return this
          }
          /**
           * Starts trying to reconnect if reconnection is enabled and we have not
           * started reconnecting yet
           *
           * @api private
           */ Manager.prototype.maybeReconnectOnOpen = function() {
            // Only try to reconnect if it's the first time we're connecting
            if (
              !this.reconnecting &&
              this._reconnection &&
              this.backoff.attempts === 0
            ) {
              // keeps reconnection from firing twice for the same reconnection loop
              this.reconnect()
            }
          }
          /**
           * Sets the current transport `socket`.
           *
           * @param {Function} optional, callback
           * @return {Manager} self
           * @api public
           */ Manager.prototype.open = Manager.prototype.connect = function(
            fn,
            opts
          ) {
            debug('readyState %s', this.readyState)
            if (~this.readyState.indexOf('open')) return this
            debug('opening %s', this.uri)
            this.engine = eio(this.uri, this.opts)
            var socket = this.engine
            var self = this
            this.readyState = 'opening'
            this.skipReconnect = false // emit `open`
            var openSub = on(socket, 'open', function() {
              self.onopen()
              fn && fn()
            }) // emit `connect_error`
            var errorSub = on(socket, 'error', function(data) {
              debug('connect_error')
              self.cleanup()
              self.readyState = 'closed'
              self.emitAll('connect_error', data)
              if (fn) {
                var err = new Error('Connection error')
                err.data = data
                fn(err)
              } else {
                // Only do this if there is no fn to handle the error
                self.maybeReconnectOnOpen()
              }
            }) // emit `connect_timeout`
            if (false !== this._timeout) {
              var timeout = this._timeout
              debug('connect attempt will timeout after %d', timeout) // set timer
              var timer = setTimeout(function() {
                debug('connect attempt timed out after %d', timeout)
                openSub.destroy()
                socket.close()
                socket.emit('error', 'timeout')
                self.emitAll('connect_timeout', timeout)
              }, timeout)
              this.subs.push({
                destroy: function destroy() {
                  clearTimeout(timer)
                }
              })
            }
            this.subs.push(openSub)
            this.subs.push(errorSub)
            return this
          }
          /**
           * Called upon transport open.
           *
           * @api private
           */ Manager.prototype.onopen = function() {
            debug('open') // clear old subs
            this.cleanup() // mark as open
            this.readyState = 'open'
            this.emit('open') // add new subs
            var socket = this.engine
            this.subs.push(on(socket, 'data', bind(this, 'ondata')))
            this.subs.push(on(socket, 'ping', bind(this, 'onping')))
            this.subs.push(on(socket, 'pong', bind(this, 'onpong')))
            this.subs.push(on(socket, 'error', bind(this, 'onerror')))
            this.subs.push(on(socket, 'close', bind(this, 'onclose')))
            this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')))
          }
          /**
           * Called upon a ping.
           *
           * @api private
           */ Manager.prototype.onping = function() {
            this.lastPing = new Date()
            this.emitAll('ping')
          }
          /**
           * Called upon a packet.
           *
           * @api private
           */ Manager.prototype.onpong = function() {
            this.emitAll('pong', new Date() - this.lastPing)
          }
          /**
           * Called with data.
           *
           * @api private
           */ Manager.prototype.ondata = function(data) {
            this.decoder.add(data)
          }
          /**
           * Called when parser fully decodes a packet.
           *
           * @api private
           */ Manager.prototype.ondecoded = function(packet) {
            this.emit('packet', packet)
          }
          /**
           * Called upon socket error.
           *
           * @api private
           */ Manager.prototype.onerror = function(err) {
            debug('error', err)
            this.emitAll('error', err)
          }
          /**
           * Creates a new socket for the given `nsp`.
           *
           * @return {Socket}
           * @api public
           */ Manager.prototype.socket = function(nsp, opts) {
            var socket = this.nsps[nsp]
            if (!socket) {
              socket = new Socket(this, nsp, opts)
              this.nsps[nsp] = socket
              var self = this
              socket.on('connecting', onConnecting)
              socket.on('connect', function() {
                socket.id = self.generateId(nsp)
              })
              if (this.autoConnect) {
                // manually call here since connecting event is fired before listening
                onConnecting()
              }
            }
            function onConnecting() {
              if (!~indexOf(self.connecting, socket)) {
                self.connecting.push(socket)
              }
            }
            return socket
          }
          /**
           * Called upon a socket close.
           *
           * @param {Socket} socket
           */ Manager.prototype.destroy = function(socket) {
            var index = indexOf(this.connecting, socket)
            if (~index) this.connecting.splice(index, 1)
            if (this.connecting.length) return
            this.close()
          }
          /**
           * Writes a packet.
           *
           * @param {Object} packet
           * @api private
           */ Manager.prototype.packet = function(packet) {
            debug('writing packet %j', packet)
            var self = this
            if (packet.query && packet.type === 0)
              packet.nsp += '?' + packet.query
            if (!self.encoding) {
              // encode, then write to engine with result
              self.encoding = true
              this.encoder.encode(packet, function(encodedPackets) {
                for (var i = 0; i < encodedPackets.length; i++) {
                  self.engine.write(encodedPackets[i], packet.options)
                }
                self.encoding = false
                self.processPacketQueue()
              })
            } else {
              // add packet to the queue
              self.packetBuffer.push(packet)
            }
          }
          /**
           * If packet buffer is non-empty, begins encoding the
           * next packet in line.
           *
           * @api private
           */ Manager.prototype.processPacketQueue = function() {
            if (this.packetBuffer.length > 0 && !this.encoding) {
              var pack = this.packetBuffer.shift()
              this.packet(pack)
            }
          }
          /**
           * Clean up transport subscriptions and packet buffer.
           *
           * @api private
           */ Manager.prototype.cleanup = function() {
            debug('cleanup')
            var subsLength = this.subs.length
            for (var i = 0; i < subsLength; i++) {
              var sub = this.subs.shift()
              sub.destroy()
            }
            this.packetBuffer = []
            this.encoding = false
            this.lastPing = null
            this.decoder.destroy()
          }
          /**
           * Close the current socket.
           *
           * @api private
           */ Manager.prototype.close = Manager.prototype.disconnect = function() {
            debug('disconnect')
            this.skipReconnect = true
            this.reconnecting = false
            if ('opening' === this.readyState) {
              // `onclose` will not fire because
              // an open event never happened
              this.cleanup()
            }
            this.backoff.reset()
            this.readyState = 'closed'
            if (this.engine) this.engine.close()
          }
          /**
           * Called upon engine close.
           *
           * @api private
           */ Manager.prototype.onclose = function(reason) {
            debug('onclose')
            this.cleanup()
            this.backoff.reset()
            this.readyState = 'closed'
            this.emit('close', reason)
            if (this._reconnection && !this.skipReconnect) {
              this.reconnect()
            }
          }
          /**
           * Attempt a reconnection.
           *
           * @api private
           */ Manager.prototype.reconnect = function() {
            if (this.reconnecting || this.skipReconnect) return this
            var self = this
            if (this.backoff.attempts >= this._reconnectionAttempts) {
              debug('reconnect failed')
              this.backoff.reset()
              this.emitAll('reconnect_failed')
              this.reconnecting = false
            } else {
              var delay = this.backoff.duration()
              debug('will wait %dms before reconnect attempt', delay)
              this.reconnecting = true
              var timer = setTimeout(function() {
                if (self.skipReconnect) return
                debug('attempting reconnect')
                self.emitAll('reconnect_attempt', self.backoff.attempts)
                self.emitAll('reconnecting', self.backoff.attempts) // check again for the case socket closed in above events
                if (self.skipReconnect) return
                self.open(function(err) {
                  if (err) {
                    debug('reconnect attempt error')
                    self.reconnecting = false
                    self.reconnect()
                    self.emitAll('reconnect_error', err.data)
                  } else {
                    debug('reconnect success')
                    self.onreconnect()
                  }
                })
              }, delay)
              this.subs.push({
                destroy: function destroy() {
                  clearTimeout(timer)
                }
              })
            }
          }
          /**
           * Called upon successful reconnect.
           *
           * @api private
           */ Manager.prototype.onreconnect = function() {
            var attempt = this.backoff.attempts
            this.reconnecting = false
            this.backoff.reset()
            this.updateSocketIds()
            this.emitAll('reconnect', attempt)
          }
        }.apply(this, arguments))
      },
      {
        './on': 213,
        './socket': 214,
        backo2: 30,
        'component-bind': 39,
        'component-emitter': 40,
        debug: 216,
        'engine.io-client': 42,
        indexof: 61,
        'socket.io-parser': 221
      }
    ],
    213: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/socket.io-client/lib/on.js',
          module
        )
        ;(function() {
          /**
           * Module exports.
           */ module.exports = on
          /**
           * Helper for subscriptions.
           *
           * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`
           * @param {String} event name
           * @param {Function} callback
           * @api public
           */ function on(obj, ev, fn) {
            obj.on(ev, fn)
            return {
              destroy: function destroy() {
                obj.removeListener(ev, fn)
              }
            }
          }
        }.apply(this, arguments))
      },
      {}
    ],
    214: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/socket.io-client/lib/socket.js',
          module
        )
        ;(function() {
          /**
           * Module dependencies.
           */ var parser = require('socket.io-parser')
          var Emitter = require('component-emitter')
          var toArray = require('to-array')
          var on = require('./on')
          var bind = require('component-bind')
          var debug = require('debug')('socket.io-client:socket')
          var parseqs = require('parseqs')
          var hasBin = require('has-binary2')
          /**
           * Module exports.
           */ module.exports = exports = Socket
          /**
           * Internal events (blacklisted).
           * These events can't be emitted by the user.
           *
           * @api private
           */ var events = {
            connect: 1,
            connect_error: 1,
            connect_timeout: 1,
            connecting: 1,
            disconnect: 1,
            error: 1,
            reconnect: 1,
            reconnect_attempt: 1,
            reconnect_failed: 1,
            reconnect_error: 1,
            reconnecting: 1,
            ping: 1,
            pong: 1
          }
          /**
           * Shortcut to `Emitter#emit`.
           */ var emit = Emitter.prototype.emit
          /**
           * `Socket` constructor.
           *
           * @api public
           */ function Socket(io, nsp, opts) {
            this.io = io
            this.nsp = nsp
            this.json = this // compat
            this.ids = 0
            this.acks = {}
            this.receiveBuffer = []
            this.sendBuffer = []
            this.connected = false
            this.disconnected = true
            this.flags = {}
            if (opts && opts.query) {
              this.query = opts.query
            }
            if (this.io.autoConnect) this.open()
          }
          /**
           * Mix in `Emitter`.
           */ Emitter(Socket.prototype)
          /**
           * Subscribe to open, close and packet events
           *
           * @api private
           */ Socket.prototype.subEvents = function() {
            if (this.subs) return
            var io = this.io
            this.subs = [
              on(io, 'open', bind(this, 'onopen')),
              on(io, 'packet', bind(this, 'onpacket')),
              on(io, 'close', bind(this, 'onclose'))
            ]
          }
          /**
           * "Opens" the socket.
           *
           * @api public
           */ Socket.prototype.open = Socket.prototype.connect = function() {
            if (this.connected) return this
            this.subEvents()
            this.io.open() // ensure open
            if ('open' === this.io.readyState) this.onopen()
            this.emit('connecting')
            return this
          }
          /**
           * Sends a `message` event.
           *
           * @return {Socket} self
           * @api public
           */ Socket.prototype.send = function() {
            var args = toArray(arguments)
            args.unshift('message')
            this.emit.apply(this, args)
            return this
          }
          /**
           * Override `emit`.
           * If the event is in `events`, it's emitted normally.
           *
           * @param {String} event name
           * @return {Socket} self
           * @api public
           */ Socket.prototype.emit = function(ev) {
            if (events.hasOwnProperty(ev)) {
              emit.apply(this, arguments)
              return this
            }
            var args = toArray(arguments)
            var packet = {
              type: (this.flags.binary !== undefined
              ? this.flags.binary
              : hasBin(args))
                ? parser.BINARY_EVENT
                : parser.EVENT,
              data: args
            }
            packet.options = {}
            packet.options.compress =
              !this.flags || false !== this.flags.compress // event ack callback
            if ('function' === typeof args[args.length - 1]) {
              debug('emitting packet with ack id %d', this.ids)
              this.acks[this.ids] = args.pop()
              packet.id = this.ids++
            }
            if (this.connected) {
              this.packet(packet)
            } else {
              this.sendBuffer.push(packet)
            }
            this.flags = {}
            return this
          }
          /**
           * Sends a packet.
           *
           * @param {Object} packet
           * @api private
           */ Socket.prototype.packet = function(packet) {
            packet.nsp = this.nsp
            this.io.packet(packet)
          }
          /**
           * Called upon engine `open`.
           *
           * @api private
           */ Socket.prototype.onopen = function() {
            debug('transport is open - connecting') // write connect packet if necessary
            if ('/' !== this.nsp) {
              if (this.query) {
                var query =
                  (0, _typeof3['default'])(this.query) === 'object'
                    ? parseqs.encode(this.query)
                    : this.query
                debug('sending connect packet with query %s', query)
                this.packet({ type: parser.CONNECT, query: query })
              } else {
                this.packet({ type: parser.CONNECT })
              }
            }
          }
          /**
           * Called upon engine `close`.
           *
           * @param {String} reason
           * @api private
           */ Socket.prototype.onclose = function(reason) {
            debug('close (%s)', reason)
            this.connected = false
            this.disconnected = true
            delete this.id
            this.emit('disconnect', reason)
          }
          /**
           * Called with socket packet.
           *
           * @param {Object} packet
           * @api private
           */ Socket.prototype.onpacket = function(packet) {
            var sameNamespace = packet.nsp === this.nsp
            var rootNamespaceError =
              packet.type === parser.ERROR && packet.nsp === '/'
            if (!sameNamespace && !rootNamespaceError) return
            switch (packet.type) {
              case parser.CONNECT:
                this.onconnect()
                break
              case parser.EVENT:
                this.onevent(packet)
                break
              case parser.BINARY_EVENT:
                this.onevent(packet)
                break
              case parser.ACK:
                this.onack(packet)
                break
              case parser.BINARY_ACK:
                this.onack(packet)
                break
              case parser.DISCONNECT:
                this.ondisconnect()
                break
              case parser.ERROR:
                this.emit('error', packet.data)
                break
            }
          }
          /**
           * Called upon a server event.
           *
           * @param {Object} packet
           * @api private
           */ Socket.prototype.onevent = function(packet) {
            var args = packet.data || []
            debug('emitting event %j', args)
            if (null != packet.id) {
              debug('attaching ack callback to event')
              args.push(this.ack(packet.id))
            }
            if (this.connected) {
              emit.apply(this, args)
            } else {
              this.receiveBuffer.push(args)
            }
          }
          /**
           * Produces an ack callback to emit with an event.
           *
           * @api private
           */ Socket.prototype.ack = function(id) {
            var self = this
            var sent = false
            return function() {
              // prevent double callbacks
              if (sent) return
              sent = true
              var args = toArray(arguments)
              debug('sending ack %j', args)
              self.packet({
                type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,
                id: id,
                data: args
              })
            }
          }
          /**
           * Called upon a server acknowlegement.
           *
           * @param {Object} packet
           * @api private
           */ Socket.prototype.onack = function(packet) {
            var ack = this.acks[packet.id]
            if ('function' === typeof ack) {
              debug('calling ack %s with %j', packet.id, packet.data)
              ack.apply(this, packet.data)
              delete this.acks[packet.id]
            } else {
              debug('bad ack %s', packet.id)
            }
          }
          /**
           * Called upon server connect.
           *
           * @api private
           */ Socket.prototype.onconnect = function() {
            this.connected = true
            this.disconnected = false
            this.emit('connect')
            this.emitBuffered()
          }
          /**
           * Emit buffered events (received and emitted).
           *
           * @api private
           */ Socket.prototype.emitBuffered = function() {
            var i
            for (i = 0; i < this.receiveBuffer.length; i++) {
              emit.apply(this, this.receiveBuffer[i])
            }
            this.receiveBuffer = []
            for (i = 0; i < this.sendBuffer.length; i++) {
              this.packet(this.sendBuffer[i])
            }
            this.sendBuffer = []
          }
          /**
           * Called upon server disconnect.
           *
           * @api private
           */ Socket.prototype.ondisconnect = function() {
            debug('server disconnect (%s)', this.nsp)
            this.destroy()
            this.onclose('io server disconnect')
          }
          /**
           * Called upon forced client/server side disconnections,
           * this method ensures the manager stops tracking us and
           * that reconnections don't get triggered for this.
           *
           * @api private.
           */ Socket.prototype.destroy = function() {
            if (this.subs) {
              // clean subscriptions to avoid reconnections
              for (var i = 0; i < this.subs.length; i++) {
                this.subs[i].destroy()
              }
              this.subs = null
            }
            this.io.destroy(this)
          }
          /**
           * Disconnects the socket manually.
           *
           * @return {Socket} self
           * @api public
           */ Socket.prototype.close = Socket.prototype.disconnect = function() {
            if (this.connected) {
              debug('performing disconnect (%s)', this.nsp)
              this.packet({ type: parser.DISCONNECT })
            } // remove socket from pool
            this.destroy()
            if (this.connected) {
              // fire events
              this.onclose('io client disconnect')
            }
            return this
          }
          /**
           * Sets the compress flag.
           *
           * @param {Boolean} if `true`, compresses the sending data
           * @return {Socket} self
           * @api public
           */ Socket.prototype.compress = function(compress) {
            this.flags.compress = compress
            return this
          }
          /**
           * Sets the binary flag
           *
           * @param {Boolean} whether the emitted data contains binary
           * @return {Socket} self
           * @api public
           */ Socket.prototype.binary = function(binary) {
            this.flags.binary = binary
            return this
          }
        }.apply(this, arguments))
      },
      {
        './on': 213,
        'component-bind': 39,
        'component-emitter': 40,
        debug: 216,
        'has-binary2': 57,
        parseqs: 208,
        'socket.io-parser': 221,
        'to-array': 227
      }
    ],
    215: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/socket.io-client/lib/url.js',
          module
        )
        ;(function() {
          /**
           * Module dependencies.
           */ var parseuri = require('parseuri')
          var debug = require('debug')('socket.io-client:url')
          /**
           * Module exports.
           */ module.exports = url
          /**
           * URL parser.
           *
           * @param {String} url
           * @param {Object} An object meant to mimic window.location.
           *                 Defaults to window.location.
           * @api public
           */ function url(uri, loc) {
            var obj = uri // default to window.location
            loc = loc || (typeof location !== 'undefined' && location)
            if (null == uri) uri = loc.protocol + '//' + loc.host // relative path support
            if ('string' === typeof uri) {
              if ('/' === uri.charAt(0)) {
                if ('/' === uri.charAt(1)) {
                  uri = loc.protocol + uri
                } else {
                  uri = loc.host + uri
                }
              }
              if (!/^(https?|wss?):\/\//.test(uri)) {
                debug('protocol-less url %s', uri)
                if ('undefined' !== typeof loc) {
                  uri = loc.protocol + '//' + uri
                } else {
                  uri = 'https://' + uri
                }
              } // parse
              debug('parse %s', uri)
              obj = parseuri(uri)
            } // make sure we treat `localhost:80` and `localhost` equally
            if (!obj.port) {
              if (/^(http|ws)$/.test(obj.protocol)) {
                obj.port = '80'
              } else if (/^(http|ws)s$/.test(obj.protocol)) {
                obj.port = '443'
              }
            }
            obj.path = obj.path || '/'
            var ipv6 = obj.host.indexOf(':') !== -1
            var host = ipv6 ? '[' + obj.host + ']' : obj.host // define unique id
            obj.id = obj.protocol + '://' + host + ':' + obj.port // define href
            obj.href =
              obj.protocol +
              '://' +
              host +
              (loc && loc.port === obj.port ? '' : ':' + obj.port)
            return obj
          }
        }.apply(this, arguments))
      },
      { debug: 216, parseuri: 209 }
    ],
    216: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/socket.io-client/node_modules/debug/src/browser.js',
          module
        )
        ;(function() {
          ;(function(process) {
            /* eslint-env browser */ /**
             * This is the web browser implementation of `debug()`.
             */ exports.log = log
            exports.formatArgs = formatArgs
            exports.save = save
            exports.load = load
            exports.useColors = useColors
            exports.storage = localstorage()
            /**
             * Colors.
             */ exports.colors = [
              '#0000CC',
              '#0000FF',
              '#0033CC',
              '#0033FF',
              '#0066CC',
              '#0066FF',
              '#0099CC',
              '#0099FF',
              '#00CC00',
              '#00CC33',
              '#00CC66',
              '#00CC99',
              '#00CCCC',
              '#00CCFF',
              '#3300CC',
              '#3300FF',
              '#3333CC',
              '#3333FF',
              '#3366CC',
              '#3366FF',
              '#3399CC',
              '#3399FF',
              '#33CC00',
              '#33CC33',
              '#33CC66',
              '#33CC99',
              '#33CCCC',
              '#33CCFF',
              '#6600CC',
              '#6600FF',
              '#6633CC',
              '#6633FF',
              '#66CC00',
              '#66CC33',
              '#9900CC',
              '#9900FF',
              '#9933CC',
              '#9933FF',
              '#99CC00',
              '#99CC33',
              '#CC0000',
              '#CC0033',
              '#CC0066',
              '#CC0099',
              '#CC00CC',
              '#CC00FF',
              '#CC3300',
              '#CC3333',
              '#CC3366',
              '#CC3399',
              '#CC33CC',
              '#CC33FF',
              '#CC6600',
              '#CC6633',
              '#CC9900',
              '#CC9933',
              '#CCCC00',
              '#CCCC33',
              '#FF0000',
              '#FF0033',
              '#FF0066',
              '#FF0099',
              '#FF00CC',
              '#FF00FF',
              '#FF3300',
              '#FF3333',
              '#FF3366',
              '#FF3399',
              '#FF33CC',
              '#FF33FF',
              '#FF6600',
              '#FF6633',
              '#FF9900',
              '#FF9933',
              '#FFCC00',
              '#FFCC33'
            ]  // eslint-disable-next-line complexity
            /**
             * Currently only WebKit-based Web Inspectors, Firefox >= v31,
             * and the Firebug extension (any Firefox version) are known
             * to support "%c" CSS customizations.
             *
             * TODO: add a `localStorage` variable to explicitly enable/disable colors
             */
            function useColors() {
              // NB: In an Electron preload script, document will be defined but not fully
              // initialized. Since we know we're in Chrome, we'll just detect this case
              // explicitly
              if (
                typeof window !== 'undefined' &&
                window.process &&
                (window.process.type === 'renderer' || window.process.__nwjs)
              ) {
                return true
              } // Internet Explorer and Edge do not support colors.
              if (
                typeof navigator !== 'undefined' &&
                navigator.userAgent &&
                navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)
              ) {
                return false
              } // Is webkit? http://stackoverflow.com/a/16459606/376773
              // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
              return (
                (typeof document !== 'undefined' &&
                  document.documentElement &&
                  document.documentElement.style &&
                  document.documentElement.style.WebkitAppearance) || // Is firebug? http://stackoverflow.com/a/398120/376773
                (typeof window !== 'undefined' &&
                  window.console &&
                  (window.console.firebug ||
                    (window.console.exception && window.console.table))) || // Is firefox >= v31?
                // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
                (typeof navigator !== 'undefined' &&
                  navigator.userAgent &&
                  navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) &&
                  parseInt(RegExp.$1, 10) >= 31) || // Double check webkit in userAgent just in case we are in a worker
                (typeof navigator !== 'undefined' &&
                  navigator.userAgent &&
                  navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))
              )
            }
            /**
             * Colorize log arguments if enabled.
             *
             * @api public
             */ function formatArgs(args) {
              args[0] =
                (this.useColors ? '%c' : '') +
                this.namespace +
                (this.useColors ? ' %c' : ' ') +
                args[0] +
                (this.useColors ? '%c ' : ' ') +
                '+' +
                module.exports.humanize(this.diff)
              if (!this.useColors) {
                return
              }
              var c = 'color: ' + this.color
              args.splice(1, 0, c, 'color: inherit') // The final "%c" is somewhat tricky, because there could be other
              // arguments passed either before or after the %c, so we need to
              // figure out the correct index to insert the CSS into
              var index = 0
              var lastC = 0
              args[0].replace(/%[a-zA-Z%]/g, function(match) {
                if (match === '%%') {
                  return
                }
                index++
                if (match === '%c') {
                  // We only are interested in the *last* %c
                  // (the user may have provided their own)
                  lastC = index
                }
              })
              args.splice(lastC, 0, c)
            }
            /**
             * Invokes `console.log()` when available.
             * No-op when `console.log` is not a "function".
             *
             * @api public
             */ function log() {
              var _console2 // This hackery is required for IE8/9, where
              // the `console.log` function doesn't have 'apply'
              return (
                (typeof console === 'undefined'
                  ? 'undefined'
                  : (0, _typeof3['default'])(console)) === 'object' &&
                console.log &&
                (_console2 = console).log.apply(_console2, arguments)
              )
            }
            /**
             * Save `namespaces`.
             *
             * @param {String} namespaces
             * @api private
             */ function save(namespaces) {
              try {
                if (namespaces) {
                  exports.storage.setItem('debug', namespaces)
                } else {
                  exports.storage.removeItem('debug')
                }
              } catch (error) {
                // Swallow
                // XXX (@Qix-) should we be logging these?
              }
            }
            /**
             * Load `namespaces`.
             *
             * @return {String} returns the previously persisted debug modes
             * @api private
             */ function load() {
              var r
              try {
                r = exports.storage.getItem('debug')
              } catch (error) {} // Swallow
              // XXX (@Qix-) should we be logging these?
              // If debug isn't set in LS, and we're in Electron, try to load $DEBUG
              if (!r && typeof process !== 'undefined' && 'env' in process) {
                r = process.env.DEBUG
              }
              return r
            }
            /**
             * Localstorage attempts to return the localstorage.
             *
             * This is necessary because safari throws
             * when a user disables cookies/localstorage
             * and you attempt to access it.
             *
             * @return {LocalStorage}
             * @api private
             */ function localstorage() {
              try {
                // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context
                // The Browser also has localStorage in the global context.
                return localStorage
              } catch (error) {
                // Swallow
                // XXX (@Qix-) should we be logging these?
              }
            }
            module.exports = require('./common')(exports)
            var formatters = module.exports.formatters
            /**
             * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
             */ formatters.j = function(v) {
              try {
                return JSON.stringify(v)
              } catch (error) {
                return '[UnexpectedJSONParseError]: ' + error.message
              }
            }
          }.call(this, require('_process')))
        }.apply(this, arguments))
      },
      { './common': 217, _process: 210 }
    ],
    217: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/socket.io-client/node_modules/debug/src/common.js',
          module
        )
        ;(function() {
          /**
           * This is the common logic for both the Node.js and web browser
           * implementations of `debug()`.
           */ function setup(env) {
            createDebug.debug = createDebug
            createDebug['default'] = createDebug
            createDebug.coerce = coerce
            createDebug.disable = disable
            createDebug.enable = enable
            createDebug.enabled = enabled
            createDebug.humanize = require('ms')
            Object.keys(env).forEach(function(key) {
              createDebug[key] = env[key]
            })
            /**
             * Active `debug` instances.
             */ createDebug.instances = []
            /**
             * The currently active debug mode names, and names to skip.
             */ createDebug.names = []
            createDebug.skips = []
            /**
             * Map of special "%n" handling functions, for the debug "format" argument.
             *
             * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
             */ createDebug.formatters = {}
            /**
             * Selects a color for a debug namespace
             * @param {String} namespace The namespace string for the for the debug instance to be colored
             * @return {Number|String} An ANSI color code for the given namespace
             * @api private
             */ function selectColor(namespace) {
              var hash = 0
              for (var i = 0; i < namespace.length; i++) {
                hash = (hash << 5) - hash + namespace.charCodeAt(i)
                hash |= 0 // Convert to 32bit integer
              }
              return createDebug.colors[
                Math.abs(hash) % createDebug.colors.length
              ]
            }
            createDebug.selectColor = selectColor
            /**
             * Create a debugger with the given `namespace`.
             *
             * @param {String} namespace
             * @return {Function}
             * @api public
             */ function createDebug(namespace) {
              var prevTime
              function debug() {
                for (
                  var _len2 = arguments.length,
                    args = new Array(_len2),
                    _key2 = 0;
                  _key2 < _len2;
                  _key2++
                ) {
                  args[_key2] = arguments[_key2]
                } // Disabled?
                if (!debug.enabled) {
                  return
                }
                var self = debug // Set `diff` timestamp
                var curr = Number(new Date())
                var ms = curr - (prevTime || curr)
                self.diff = ms
                self.prev = prevTime
                self.curr = curr
                prevTime = curr
                args[0] = createDebug.coerce(args[0])
                if (typeof args[0] !== 'string') {
                  // Anything else let's inspect with %O
                  args.unshift('%O')
                } // Apply any `formatters` transformations
                var index = 0
                args[0] = args[0].replace(/%([a-zA-Z%])/g, function(
                  match,
                  format
                ) {
                  // If we encounter an escaped % then don't increase the array index
                  if (match === '%%') {
                    return match
                  }
                  index++
                  var formatter = createDebug.formatters[format]
                  if (typeof formatter === 'function') {
                    var val = args[index]
                    match = formatter.call(self, val) // Now we need to remove `args[index]` since it's inlined in the `format`
                    args.splice(index, 1)
                    index--
                  }
                  return match
                }) // Apply env-specific formatting (colors, etc.)
                createDebug.formatArgs.call(self, args)
                var logFn = self.log || createDebug.log
                logFn.apply(self, args)
              }
              debug.namespace = namespace
              debug.enabled = createDebug.enabled(namespace)
              debug.useColors = createDebug.useColors()
              debug.color = selectColor(namespace)
              debug.destroy = destroy
              debug.extend = extend // Debug.formatArgs = formatArgs;
              // debug.rawLog = rawLog;
              // env-specific initialization logic for debug instances
              if (typeof createDebug.init === 'function') {
                createDebug.init(debug)
              }
              createDebug.instances.push(debug)
              return debug
            }
            function destroy() {
              var index = createDebug.instances.indexOf(this)
              if (index !== -1) {
                createDebug.instances.splice(index, 1)
                return true
              }
              return false
            }
            function extend(namespace, delimiter) {
              var newDebug = createDebug(
                this.namespace +
                  (typeof delimiter === 'undefined' ? ':' : delimiter) +
                  namespace
              )
              newDebug.log = this.log
              return newDebug
            }
            /**
             * Enables a debug mode by namespaces. This can include modes
             * separated by a colon and wildcards.
             *
             * @param {String} namespaces
             * @api public
             */ function enable(namespaces) {
              createDebug.save(namespaces)
              createDebug.names = []
              createDebug.skips = []
              var i
              var split = (typeof namespaces === 'string'
                ? namespaces
                : ''
              ).split(/[\s,]+/)
              var len = split.length
              for (i = 0; i < len; i++) {
                if (!split[i]) {
                  // ignore empty strings
                  continue
                }
                namespaces = split[i].replace(/\*/g, '.*?')
                if (namespaces[0] === '-') {
                  createDebug.skips.push(
                    new RegExp('^' + namespaces.substr(1) + '$')
                  )
                } else {
                  createDebug.names.push(new RegExp('^' + namespaces + '$'))
                }
              }
              for (i = 0; i < createDebug.instances.length; i++) {
                var instance = createDebug.instances[i]
                instance.enabled = createDebug.enabled(instance.namespace)
              }
            }
            /**
             * Disable debug output.
             *
             * @return {String} namespaces
             * @api public
             */ function disable() {
              var namespaces = []
                .concat(
                  (0, _toConsumableArray2['default'])(
                    createDebug.names.map(toNamespace)
                  ),
                  (0, _toConsumableArray2['default'])(
                    createDebug.skips.map(toNamespace).map(function(namespace) {
                      return '-' + namespace
                    })
                  )
                )
                .join(',')
              createDebug.enable('')
              return namespaces
            }
            /**
             * Returns true if the given mode name is enabled, false otherwise.
             *
             * @param {String} name
             * @return {Boolean}
             * @api public
             */ function enabled(name) {
              if (name[name.length - 1] === '*') {
                return true
              }
              var i
              var len
              for (i = 0, len = createDebug.skips.length; i < len; i++) {
                if (createDebug.skips[i].test(name)) {
                  return false
                }
              }
              for (i = 0, len = createDebug.names.length; i < len; i++) {
                if (createDebug.names[i].test(name)) {
                  return true
                }
              }
              return false
            }
            /**
             * Convert regexp to namespace
             *
             * @param {RegExp} regxep
             * @return {String} namespace
             * @api private
             */ function toNamespace(regexp) {
              return regexp
                .toString()
                .substring(2, regexp.toString().length - 2)
                .replace(/\.\*\?$/, '*')
            }
            /**
             * Coerce `val`.
             *
             * @param {Mixed} val
             * @return {Mixed}
             * @api private
             */ function coerce(val) {
              if (val instanceof Error) {
                return val.stack || val.message
              }
              return val
            }
            createDebug.enable(createDebug.load())
            return createDebug
          }
          module.exports = setup
        }.apply(this, arguments))
      },
      { ms: 219 }
    ],
    218: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/socket.io-client/node_modules/isarray/index.js',
          module
        )
        ;(function() {
          var toString = {}.toString
          module.exports =
            Array.isArray ||
            function(arr) {
              return toString.call(arr) == '[object Array]'
            }
        }.apply(this, arguments))
      },
      {}
    ],
    219: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/socket.io-client/node_modules/ms/index.js',
          module
        )
        ;(function() {
          /**
           * Helpers.
           */ var s = 1000
          var m = s * 60
          var h = m * 60
          var d = h * 24
          var w = d * 7
          var y = d * 365.25
          /**
           * Parse or format the given `val`.
           *
           * Options:
           *
           *  - `long` verbose formatting [false]
           *
           * @param {String|Number} val
           * @param {Object} [options]
           * @throws {Error} throw an error if val is not a non-empty string or a number
           * @return {String|Number}
           * @api public
           */ module.exports = function(val, options) {
            options = options || {}
            var type = (0, _typeof3['default'])(val)
            if (type === 'string' && val.length > 0) {
              return parse(val)
            } else if (type === 'number' && isFinite(val)) {
              return options['long'] ? fmtLong(val) : fmtShort(val)
            }
            throw new Error(
              'val is not a non-empty string or a valid number. val=' +
                JSON.stringify(val)
            )
          }
          /**
           * Parse the given `str` and return milliseconds.
           *
           * @param {String} str
           * @return {Number}
           * @api private
           */ function parse(str) {
            str = String(str)
            if (str.length > 100) {
              return
            }
            var match = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
              str
            )
            if (!match) {
              return
            }
            var n = parseFloat(match[1])
            var type = (match[2] || 'ms').toLowerCase()
            switch (type) {
              case 'years':
              case 'year':
              case 'yrs':
              case 'yr':
              case 'y':
                return n * y
              case 'weeks':
              case 'week':
              case 'w':
                return n * w
              case 'days':
              case 'day':
              case 'd':
                return n * d
              case 'hours':
              case 'hour':
              case 'hrs':
              case 'hr':
              case 'h':
                return n * h
              case 'minutes':
              case 'minute':
              case 'mins':
              case 'min':
              case 'm':
                return n * m
              case 'seconds':
              case 'second':
              case 'secs':
              case 'sec':
              case 's':
                return n * s
              case 'milliseconds':
              case 'millisecond':
              case 'msecs':
              case 'msec':
              case 'ms':
                return n
              default:
                return undefined
            }
          }
          /**
           * Short format for `ms`.
           *
           * @param {Number} ms
           * @return {String}
           * @api private
           */ function fmtShort(ms) {
            var msAbs = Math.abs(ms)
            if (msAbs >= d) {
              return Math.round(ms / d) + 'd'
            }
            if (msAbs >= h) {
              return Math.round(ms / h) + 'h'
            }
            if (msAbs >= m) {
              return Math.round(ms / m) + 'm'
            }
            if (msAbs >= s) {
              return Math.round(ms / s) + 's'
            }
            return ms + 'ms'
          }
          /**
           * Long format for `ms`.
           *
           * @param {Number} ms
           * @return {String}
           * @api private
           */ function fmtLong(ms) {
            var msAbs = Math.abs(ms)
            if (msAbs >= d) {
              return plural(ms, msAbs, d, 'day')
            }
            if (msAbs >= h) {
              return plural(ms, msAbs, h, 'hour')
            }
            if (msAbs >= m) {
              return plural(ms, msAbs, m, 'minute')
            }
            if (msAbs >= s) {
              return plural(ms, msAbs, s, 'second')
            }
            return ms + ' ms'
          }
          /**
           * Pluralization helper.
           */ function plural(ms, msAbs, n, name) {
            var isPlural = msAbs >= n * 1.5
            return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '')
          }
        }.apply(this, arguments))
      },
      {}
    ],
    220: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/socket.io-client/node_modules/socket.io-parser/binary.js',
          module
        )
        ;(function() {
          /*global Blob,File*/ /**
           * Module requirements
           */ var isArray = require('isarray')
          var isBuf = require('./is-buffer')
          var toString = Object.prototype.toString
          var withNativeBlob =
            typeof Blob === 'function' ||
            (typeof Blob !== 'undefined' &&
              toString.call(Blob) === '[object BlobConstructor]')
          var withNativeFile =
            typeof File === 'function' ||
            (typeof File !== 'undefined' &&
              toString.call(File) === '[object FileConstructor]')
          /**
           * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.
           * Anything with blobs or files should be fed through removeBlobs before coming
           * here.
           *
           * @param {Object} packet - socket.io event packet
           * @return {Object} with deconstructed packet and list of buffers
           * @api public
           */ exports.deconstructPacket = function(packet) {
            var buffers = []
            var packetData = packet.data
            var pack = packet
            pack.data = _deconstructPacket(packetData, buffers)
            pack.attachments = buffers.length // number of binary 'attachments'
            return { packet: pack, buffers: buffers }
          }
          function _deconstructPacket(data, buffers) {
            if (!data) return data
            if (isBuf(data)) {
              var placeholder = { _placeholder: true, num: buffers.length }
              buffers.push(data)
              return placeholder
            } else if (isArray(data)) {
              var newData = new Array(data.length)
              for (var i = 0; i < data.length; i++) {
                newData[i] = _deconstructPacket(data[i], buffers)
              }
              return newData
            } else if (
              (0, _typeof3['default'])(data) === 'object' &&
              !(data instanceof Date)
            ) {
              var newData = {}
              for (var key in data) {
                newData[key] = _deconstructPacket(data[key], buffers)
              }
              return newData
            }
            return data
          }
          /**
           * Reconstructs a binary packet from its placeholder packet and buffers
           *
           * @param {Object} packet - event packet with placeholders
           * @param {Array} buffers - binary buffers to put in placeholder positions
           * @return {Object} reconstructed packet
           * @api public
           */ exports.reconstructPacket = function(packet, buffers) {
            packet.data = _reconstructPacket(packet.data, buffers)
            packet.attachments = undefined // no longer useful
            return packet
          }
          function _reconstructPacket(data, buffers) {
            if (!data) return data
            if (data && data._placeholder) {
              return buffers[data.num] // appropriate buffer (should be natural order anyway)
            } else if (isArray(data)) {
              for (var i = 0; i < data.length; i++) {
                data[i] = _reconstructPacket(data[i], buffers)
              }
            } else if ((0, _typeof3['default'])(data) === 'object') {
              for (var key in data) {
                data[key] = _reconstructPacket(data[key], buffers)
              }
            }
            return data
          }
          /**
           * Asynchronously removes Blobs or Files from data via
           * FileReader's readAsArrayBuffer method. Used before encoding
           * data as msgpack. Calls callback with the blobless data.
           *
           * @param {Object} data
           * @param {Function} callback
           * @api private
           */ exports.removeBlobs = function(data, callback) {
            function _removeBlobs(obj, curKey, containingObject) {
              if (!obj) return obj // convert any blob
              if (
                (withNativeBlob && obj instanceof Blob) ||
                (withNativeFile && obj instanceof File)
              ) {
                pendingBlobs++ // async filereader
                var fileReader = new FileReader()
                fileReader.onload = function() {
                  // this.result == arraybuffer
                  if (containingObject) {
                    containingObject[curKey] = this.result
                  } else {
                    bloblessData = this.result
                  } // if nothing pending its callback time
                  if (!--pendingBlobs) {
                    callback(bloblessData)
                  }
                }
                fileReader.readAsArrayBuffer(obj) // blob -> arraybuffer
              } else if (isArray(obj)) {
                // handle array
                for (var i = 0; i < obj.length; i++) {
                  _removeBlobs(obj[i], i, obj)
                }
              } else if (
                (0, _typeof3['default'])(obj) === 'object' &&
                !isBuf(obj)
              ) {
                // and object
                for (var key in obj) {
                  _removeBlobs(obj[key], key, obj)
                }
              }
            }
            var pendingBlobs = 0
            var bloblessData = data
            _removeBlobs(bloblessData)
            if (!pendingBlobs) {
              callback(bloblessData)
            }
          }
        }.apply(this, arguments))
      },
      { './is-buffer': 222, isarray: 218 }
    ],
    221: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/socket.io-client/node_modules/socket.io-parser/index.js',
          module
        )
        ;(function() {
          /**
           * Module dependencies.
           */ var debug = require('debug')('socket.io-parser')
          var Emitter = require('component-emitter')
          var binary = require('./binary')
          var isArray = require('isarray')
          var isBuf = require('./is-buffer')
          /**
           * Protocol version.
           *
           * @api public
           */ exports.protocol = 4
          /**
           * Packet types.
           *
           * @api public
           */ exports.types = [
            'CONNECT',
            'DISCONNECT',
            'EVENT',
            'ACK',
            'ERROR',
            'BINARY_EVENT',
            'BINARY_ACK'
          ]
          /**
           * Packet type `connect`.
           *
           * @api public
           */ exports.CONNECT = 0
          /**
           * Packet type `disconnect`.
           *
           * @api public
           */ exports.DISCONNECT = 1
          /**
           * Packet type `event`.
           *
           * @api public
           */ exports.EVENT = 2
          /**
           * Packet type `ack`.
           *
           * @api public
           */ exports.ACK = 3
          /**
           * Packet type `error`.
           *
           * @api public
           */ exports.ERROR = 4
          /**
           * Packet type 'binary event'
           *
           * @api public
           */ exports.BINARY_EVENT = 5
          /**
           * Packet type `binary ack`. For acks with binary arguments.
           *
           * @api public
           */ exports.BINARY_ACK = 6
          /**
           * Encoder constructor.
           *
           * @api public
           */ exports.Encoder = Encoder
          /**
           * Decoder constructor.
           *
           * @api public
           */ exports.Decoder = Decoder
          /**
           * A socket.io Encoder instance
           *
           * @api public
           */ function Encoder() {}
          var ERROR_PACKET = exports.ERROR + '"encode error"'
          /**
           * Encode a packet as a single string if non-binary, or as a
           * buffer sequence, depending on packet type.
           *
           * @param {Object} obj - packet object
           * @param {Function} callback - function to handle encodings (likely engine.write)
           * @return Calls callback with Array of encodings
           * @api public
           */ Encoder.prototype.encode = function(obj, callback) {
            debug('encoding packet %j', obj)
            if (
              exports.BINARY_EVENT === obj.type ||
              exports.BINARY_ACK === obj.type
            ) {
              encodeAsBinary(obj, callback)
            } else {
              var encoding = encodeAsString(obj)
              callback([encoding])
            }
          }
          /**
           * Encode packet as string.
           *
           * @param {Object} packet
           * @return {String} encoded
           * @api private
           */ function encodeAsString(obj) {
            // first is type
            var str = '' + obj.type // attachments if we have them
            if (
              exports.BINARY_EVENT === obj.type ||
              exports.BINARY_ACK === obj.type
            ) {
              str += obj.attachments + '-'
            } // if we have a namespace other than `/`
            // we append it followed by a comma `,`
            if (obj.nsp && '/' !== obj.nsp) {
              str += obj.nsp + ','
            } // immediately followed by the id
            if (null != obj.id) {
              str += obj.id
            } // json data
            if (null != obj.data) {
              var payload = tryStringify(obj.data)
              if (payload !== false) {
                str += payload
              } else {
                return ERROR_PACKET
              }
            }
            debug('encoded %j as %s', obj, str)
            return str
          }
          function tryStringify(str) {
            try {
              return JSON.stringify(str)
            } catch (e) {
              return false
            }
          }
          /**
           * Encode packet as 'buffer sequence' by removing blobs, and
           * deconstructing packet into object with placeholders and
           * a list of buffers.
           *
           * @param {Object} packet
           * @return {Buffer} encoded
           * @api private
           */ function encodeAsBinary(obj, callback) {
            function writeEncoding(bloblessData) {
              var deconstruction = binary.deconstructPacket(bloblessData)
              var pack = encodeAsString(deconstruction.packet)
              var buffers = deconstruction.buffers
              buffers.unshift(pack) // add packet info to beginning of data list
              callback(buffers) // write all the buffers
            }
            binary.removeBlobs(obj, writeEncoding)
          }
          /**
           * A socket.io Decoder instance
           *
           * @return {Object} decoder
           * @api public
           */ function Decoder() {
            this.reconstructor = null
          }
          /**
           * Mix in `Emitter` with Decoder.
           */ Emitter(Decoder.prototype)
          /**
           * Decodes an encoded packet string into packet JSON.
           *
           * @param {String} obj - encoded packet
           * @return {Object} packet
           * @api public
           */ Decoder.prototype.add = function(obj) {
            var packet
            if (typeof obj === 'string') {
              packet = decodeString(obj)
              if (
                exports.BINARY_EVENT === packet.type ||
                exports.BINARY_ACK === packet.type
              ) {
                // binary packet's json
                this.reconstructor = new BinaryReconstructor(packet) // no attachments, labeled binary but no binary data to follow
                if (this.reconstructor.reconPack.attachments === 0) {
                  this.emit('decoded', packet)
                }
              } else {
                // non-binary full packet
                this.emit('decoded', packet)
              }
            } else if (isBuf(obj) || obj.base64) {
              // raw binary data
              if (!this.reconstructor) {
                throw new Error(
                  'got binary data when not reconstructing a packet'
                )
              } else {
                packet = this.reconstructor.takeBinaryData(obj)
                if (packet) {
                  // received final buffer
                  this.reconstructor = null
                  this.emit('decoded', packet)
                }
              }
            } else {
              throw new Error('Unknown type: ' + obj)
            }
          }
          /**
           * Decode a packet String (JSON data)
           *
           * @param {String} str
           * @return {Object} packet
           * @api private
           */ function decodeString(str) {
            var i = 0 // look up type
            var p = { type: Number(str.charAt(0)) }
            if (null == exports.types[p.type]) {
              return error('unknown packet type ' + p.type)
            } // look up attachments if type binary
            if (
              exports.BINARY_EVENT === p.type ||
              exports.BINARY_ACK === p.type
            ) {
              var buf = ''
              while (str.charAt(++i) !== '-') {
                buf += str.charAt(i)
                if (i == str.length) break
              }
              if (buf != Number(buf) || str.charAt(i) !== '-') {
                throw new Error('Illegal attachments')
              }
              p.attachments = Number(buf)
            } // look up namespace (if any)
            if ('/' === str.charAt(i + 1)) {
              p.nsp = ''
              while (++i) {
                var c = str.charAt(i)
                if (',' === c) break
                p.nsp += c
                if (i === str.length) break
              }
            } else {
              p.nsp = '/'
            } // look up id
            var next = str.charAt(i + 1)
            if ('' !== next && Number(next) == next) {
              p.id = ''
              while (++i) {
                var c = str.charAt(i)
                if (null == c || Number(c) != c) {
                  --i
                  break
                }
                p.id += str.charAt(i)
                if (i === str.length) break
              }
              p.id = Number(p.id)
            } // look up json data
            if (str.charAt(++i)) {
              var payload = tryParse(str.substr(i))
              var isPayloadValid =
                payload !== false &&
                (p.type === exports.ERROR || isArray(payload))
              if (isPayloadValid) {
                p.data = payload
              } else {
                return error('invalid payload')
              }
            }
            debug('decoded %s as %j', str, p)
            return p
          }
          function tryParse(str) {
            try {
              return JSON.parse(str)
            } catch (e) {
              return false
            }
          }
          /**
           * Deallocates a parser's resources
           *
           * @api public
           */ Decoder.prototype.destroy = function() {
            if (this.reconstructor) {
              this.reconstructor.finishedReconstruction()
            }
          }
          /**
           * A manager of a binary event's 'buffer sequence'. Should
           * be constructed whenever a packet of type BINARY_EVENT is
           * decoded.
           *
           * @param {Object} packet
           * @return {BinaryReconstructor} initialized reconstructor
           * @api private
           */ function BinaryReconstructor(packet) {
            this.reconPack = packet
            this.buffers = []
          }
          /**
           * Method to be called when binary data received from connection
           * after a BINARY_EVENT packet.
           *
           * @param {Buffer | ArrayBuffer} binData - the raw binary data received
           * @return {null | Object} returns null if more binary data is expected or
           *   a reconstructed packet object if all buffers have been received.
           * @api private
           */ BinaryReconstructor.prototype.takeBinaryData = function(binData) {
            this.buffers.push(binData)
            if (this.buffers.length === this.reconPack.attachments) {
              // done with buffer list
              var packet = binary.reconstructPacket(
                this.reconPack,
                this.buffers
              )
              this.finishedReconstruction()
              return packet
            }
            return null
          }
          /**
           * Cleans up binary packet reconstruction variables.
           *
           * @api private
           */ BinaryReconstructor.prototype.finishedReconstruction = function() {
            this.reconPack = null
            this.buffers = []
          }
          function error(msg) {
            return { type: exports.ERROR, data: 'parser error: ' + msg }
          }
        }.apply(this, arguments))
      },
      {
        './binary': 220,
        './is-buffer': 222,
        'component-emitter': 40,
        debug: 223,
        isarray: 218
      }
    ],
    222: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/socket.io-client/node_modules/socket.io-parser/is-buffer.js',
          module
        )
        ;(function() {
          ;(function(Buffer) {
            module.exports = isBuf
            var withNativeBuffer =
              typeof Buffer === 'function' &&
              typeof Buffer.isBuffer === 'function'
            var withNativeArrayBuffer = typeof ArrayBuffer === 'function'
            var isView = function isView(obj) {
              return typeof ArrayBuffer.isView === 'function'
                ? ArrayBuffer.isView(obj)
                : obj.buffer instanceof ArrayBuffer
            }
            /**
             * Returns true if obj is a buffer or an arraybuffer.
             *
             * @api private
             */ function isBuf(obj) {
              return (
                (withNativeBuffer && Buffer.isBuffer(obj)) ||
                (withNativeArrayBuffer &&
                  (obj instanceof ArrayBuffer || isView(obj)))
              )
            }
          }.call(this, require('buffer').Buffer))
        }.apply(this, arguments))
      },
      { buffer: 38 }
    ],
    223: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/socket.io-client/node_modules/socket.io-parser/node_modules/debug/src/browser.js',
          module
        )
        ;(function() {
          ;(function(process) {
            /**
             * This is the web browser implementation of `debug()`.
             *
             * Expose `debug()` as the module.
             */ exports = module.exports = require('./debug')
            exports.log = log
            exports.formatArgs = formatArgs
            exports.save = save
            exports.load = load
            exports.useColors = useColors
            exports.storage =
              'undefined' != typeof chrome &&
              'undefined' != typeof chrome.storage
                ? chrome.storage.local
                : localstorage()
            /**
             * Colors.
             */ exports.colors = [
              '#0000CC',
              '#0000FF',
              '#0033CC',
              '#0033FF',
              '#0066CC',
              '#0066FF',
              '#0099CC',
              '#0099FF',
              '#00CC00',
              '#00CC33',
              '#00CC66',
              '#00CC99',
              '#00CCCC',
              '#00CCFF',
              '#3300CC',
              '#3300FF',
              '#3333CC',
              '#3333FF',
              '#3366CC',
              '#3366FF',
              '#3399CC',
              '#3399FF',
              '#33CC00',
              '#33CC33',
              '#33CC66',
              '#33CC99',
              '#33CCCC',
              '#33CCFF',
              '#6600CC',
              '#6600FF',
              '#6633CC',
              '#6633FF',
              '#66CC00',
              '#66CC33',
              '#9900CC',
              '#9900FF',
              '#9933CC',
              '#9933FF',
              '#99CC00',
              '#99CC33',
              '#CC0000',
              '#CC0033',
              '#CC0066',
              '#CC0099',
              '#CC00CC',
              '#CC00FF',
              '#CC3300',
              '#CC3333',
              '#CC3366',
              '#CC3399',
              '#CC33CC',
              '#CC33FF',
              '#CC6600',
              '#CC6633',
              '#CC9900',
              '#CC9933',
              '#CCCC00',
              '#CCCC33',
              '#FF0000',
              '#FF0033',
              '#FF0066',
              '#FF0099',
              '#FF00CC',
              '#FF00FF',
              '#FF3300',
              '#FF3333',
              '#FF3366',
              '#FF3399',
              '#FF33CC',
              '#FF33FF',
              '#FF6600',
              '#FF6633',
              '#FF9900',
              '#FF9933',
              '#FFCC00',
              '#FFCC33'
            ]
            /**
             * Currently only WebKit-based Web Inspectors, Firefox >= v31,
             * and the Firebug extension (any Firefox version) are known
             * to support "%c" CSS customizations.
             *
             * TODO: add a `localStorage` variable to explicitly enable/disable colors
             */ function useColors() {
              // NB: In an Electron preload script, document will be defined but not fully
              // initialized. Since we know we're in Chrome, we'll just detect this case
              // explicitly
              if (
                typeof window !== 'undefined' &&
                window.process &&
                window.process.type === 'renderer'
              ) {
                return true
              } // Internet Explorer and Edge do not support colors.
              if (
                typeof navigator !== 'undefined' &&
                navigator.userAgent &&
                navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)
              ) {
                return false
              } // is webkit? http://stackoverflow.com/a/16459606/376773
              // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
              return (
                (typeof document !== 'undefined' &&
                  document.documentElement &&
                  document.documentElement.style &&
                  document.documentElement.style.WebkitAppearance) || // is firebug? http://stackoverflow.com/a/398120/376773
                (typeof window !== 'undefined' &&
                  window.console &&
                  (window.console.firebug ||
                    (window.console.exception && window.console.table))) || // is firefox >= v31?
                // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
                (typeof navigator !== 'undefined' &&
                  navigator.userAgent &&
                  navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) &&
                  parseInt(RegExp.$1, 10) >= 31) || // double check webkit in userAgent just in case we are in a worker
                (typeof navigator !== 'undefined' &&
                  navigator.userAgent &&
                  navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))
              )
            }
            /**
             * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
             */ exports.formatters.j = function(v) {
              try {
                return JSON.stringify(v)
              } catch (err) {
                return '[UnexpectedJSONParseError]: ' + err.message
              }
            }
            /**
             * Colorize log arguments if enabled.
             *
             * @api public
             */ function formatArgs(args) {
              var useColors = this.useColors
              args[0] =
                (useColors ? '%c' : '') +
                this.namespace +
                (useColors ? ' %c' : ' ') +
                args[0] +
                (useColors ? '%c ' : ' ') +
                '+' +
                exports.humanize(this.diff)
              if (!useColors) return
              var c = 'color: ' + this.color
              args.splice(1, 0, c, 'color: inherit') // the final "%c" is somewhat tricky, because there could be other
              // arguments passed either before or after the %c, so we need to
              // figure out the correct index to insert the CSS into
              var index = 0
              var lastC = 0
              args[0].replace(/%[a-zA-Z%]/g, function(match) {
                if ('%%' === match) return
                index++
                if ('%c' === match) {
                  // we only are interested in the *last* %c
                  // (the user may have provided their own)
                  lastC = index
                }
              })
              args.splice(lastC, 0, c)
            }
            /**
             * Invokes `console.log()` when available.
             * No-op when `console.log` is not a "function".
             *
             * @api public
             */ function log() {
              // this hackery is required for IE8/9, where
              // the `console.log` function doesn't have 'apply'
              return (
                'object' ===
                  (typeof console === 'undefined'
                    ? 'undefined'
                    : (0, _typeof3['default'])(console)) &&
                console.log &&
                Function.prototype.apply.call(console.log, console, arguments)
              )
            }
            /**
             * Save `namespaces`.
             *
             * @param {String} namespaces
             * @api private
             */ function save(namespaces) {
              try {
                if (null == namespaces) {
                  exports.storage.removeItem('debug')
                } else {
                  exports.storage.debug = namespaces
                }
              } catch (e) {}
            }
            /**
             * Load `namespaces`.
             *
             * @return {String} returns the previously persisted debug modes
             * @api private
             */ function load() {
              var r
              try {
                r = exports.storage.debug
              } catch (e) {} // If debug isn't set in LS, and we're in Electron, try to load $DEBUG
              if (!r && typeof process !== 'undefined' && 'env' in process) {
                r = process.env.DEBUG
              }
              return r
            }
            /**
             * Enable namespaces listed in `localStorage.debug` initially.
             */ exports.enable(load())
            /**
             * Localstorage attempts to return the localstorage.
             *
             * This is necessary because safari throws
             * when a user disables cookies/localstorage
             * and you attempt to access it.
             *
             * @return {LocalStorage}
             * @api private
             */ function localstorage() {
              try {
                return window.localStorage
              } catch (e) {}
            }
          }.call(this, require('_process')))
        }.apply(this, arguments))
      },
      { './debug': 224, _process: 210 }
    ],
    224: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/socket.io-client/node_modules/socket.io-parser/node_modules/debug/src/debug.js',
          module
        )
        ;(function() {
          /**
           * This is the common logic for both the Node.js and web browser
           * implementations of `debug()`.
           *
           * Expose `debug()` as the module.
           */ exports = module.exports = createDebug.debug = createDebug[
            'default'
          ] = createDebug
          exports.coerce = coerce
          exports.disable = disable
          exports.enable = enable
          exports.enabled = enabled
          exports.humanize = require('ms')
          /**
           * Active `debug` instances.
           */ exports.instances = []
          /**
           * The currently active debug mode names, and names to skip.
           */ exports.names = []
          exports.skips = []
          /**
           * Map of special "%n" handling functions, for the debug "format" argument.
           *
           * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
           */ exports.formatters = {}
          /**
           * Select a color.
           * @param {String} namespace
           * @return {Number}
           * @api private
           */ function selectColor(namespace) {
            var hash = 0,
              i
            for (i in namespace) {
              hash = (hash << 5) - hash + namespace.charCodeAt(i)
              hash |= 0 // Convert to 32bit integer
            }
            return exports.colors[Math.abs(hash) % exports.colors.length]
          }
          /**
           * Create a debugger with the given `namespace`.
           *
           * @param {String} namespace
           * @return {Function}
           * @api public
           */ function createDebug(namespace) {
            var prevTime
            function debug() {
              // disabled?
              if (!debug.enabled) return
              var self = debug // set `diff` timestamp
              var curr = +new Date()
              var ms = curr - (prevTime || curr)
              self.diff = ms
              self.prev = prevTime
              self.curr = curr
              prevTime = curr // turn the `arguments` into a proper Array
              var args = new Array(arguments.length)
              for (var i = 0; i < args.length; i++) {
                args[i] = arguments[i]
              }
              args[0] = exports.coerce(args[0])
              if ('string' !== typeof args[0]) {
                // anything else let's inspect with %O
                args.unshift('%O')
              } // apply any `formatters` transformations
              var index = 0
              args[0] = args[0].replace(/%([a-zA-Z%])/g, function(
                match,
                format
              ) {
                // if we encounter an escaped % then don't increase the array index
                if (match === '%%') return match
                index++
                var formatter = exports.formatters[format]
                if ('function' === typeof formatter) {
                  var val = args[index]
                  match = formatter.call(self, val) // now we need to remove `args[index]` since it's inlined in the `format`
                  args.splice(index, 1)
                  index--
                }
                return match
              }) // apply env-specific formatting (colors, etc.)
              exports.formatArgs.call(self, args)
              var logFn = debug.log || exports.log || console.log.bind(console)
              logFn.apply(self, args)
            }
            debug.namespace = namespace
            debug.enabled = exports.enabled(namespace)
            debug.useColors = exports.useColors()
            debug.color = selectColor(namespace)
            debug.destroy = destroy // env-specific initialization logic for debug instances
            if ('function' === typeof exports.init) {
              exports.init(debug)
            }
            exports.instances.push(debug)
            return debug
          }
          function destroy() {
            var index = exports.instances.indexOf(this)
            if (index !== -1) {
              exports.instances.splice(index, 1)
              return true
            } else {
              return false
            }
          }
          /**
           * Enables a debug mode by namespaces. This can include modes
           * separated by a colon and wildcards.
           *
           * @param {String} namespaces
           * @api public
           */ function enable(namespaces) {
            exports.save(namespaces)
            exports.names = []
            exports.skips = []
            var i
            var split = (typeof namespaces === 'string'
              ? namespaces
              : ''
            ).split(/[\s,]+/)
            var len = split.length
            for (i = 0; i < len; i++) {
              if (!split[i]) continue // ignore empty strings
              namespaces = split[i].replace(/\*/g, '.*?')
              if (namespaces[0] === '-') {
                exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'))
              } else {
                exports.names.push(new RegExp('^' + namespaces + '$'))
              }
            }
            for (i = 0; i < exports.instances.length; i++) {
              var instance = exports.instances[i]
              instance.enabled = exports.enabled(instance.namespace)
            }
          }
          /**
           * Disable debug output.
           *
           * @api public
           */ function disable() {
            exports.enable('')
          }
          /**
           * Returns true if the given mode name is enabled, false otherwise.
           *
           * @param {String} name
           * @return {Boolean}
           * @api public
           */ function enabled(name) {
            if (name[name.length - 1] === '*') {
              return true
            }
            var i, len
            for (i = 0, len = exports.skips.length; i < len; i++) {
              if (exports.skips[i].test(name)) {
                return false
              }
            }
            for (i = 0, len = exports.names.length; i < len; i++) {
              if (exports.names[i].test(name)) {
                return true
              }
            }
            return false
          }
          /**
           * Coerce `val`.
           *
           * @param {Mixed} val
           * @return {Mixed}
           * @api private
           */ function coerce(val) {
            if (val instanceof Error) return val.stack || val.message
            return val
          }
        }.apply(this, arguments))
      },
      { ms: 225 }
    ],
    225: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/socket.io-client/node_modules/socket.io-parser/node_modules/ms/index.js',
          module
        )
        ;(function() {
          /**
           * Helpers.
           */ var s = 1000
          var m = s * 60
          var h = m * 60
          var d = h * 24
          var y = d * 365.25
          /**
           * Parse or format the given `val`.
           *
           * Options:
           *
           *  - `long` verbose formatting [false]
           *
           * @param {String|Number} val
           * @param {Object} [options]
           * @throws {Error} throw an error if val is not a non-empty string or a number
           * @return {String|Number}
           * @api public
           */ module.exports = function(val, options) {
            options = options || {}
            var type = (0, _typeof3['default'])(val)
            if (type === 'string' && val.length > 0) {
              return parse(val)
            } else if (type === 'number' && isNaN(val) === false) {
              return options['long'] ? fmtLong(val) : fmtShort(val)
            }
            throw new Error(
              'val is not a non-empty string or a valid number. val=' +
                JSON.stringify(val)
            )
          }
          /**
           * Parse the given `str` and return milliseconds.
           *
           * @param {String} str
           * @return {Number}
           * @api private
           */ function parse(str) {
            str = String(str)
            if (str.length > 100) {
              return
            }
            var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(
              str
            )
            if (!match) {
              return
            }
            var n = parseFloat(match[1])
            var type = (match[2] || 'ms').toLowerCase()
            switch (type) {
              case 'years':
              case 'year':
              case 'yrs':
              case 'yr':
              case 'y':
                return n * y
              case 'days':
              case 'day':
              case 'd':
                return n * d
              case 'hours':
              case 'hour':
              case 'hrs':
              case 'hr':
              case 'h':
                return n * h
              case 'minutes':
              case 'minute':
              case 'mins':
              case 'min':
              case 'm':
                return n * m
              case 'seconds':
              case 'second':
              case 'secs':
              case 'sec':
              case 's':
                return n * s
              case 'milliseconds':
              case 'millisecond':
              case 'msecs':
              case 'msec':
              case 'ms':
                return n
              default:
                return undefined
            }
          }
          /**
           * Short format for `ms`.
           *
           * @param {Number} ms
           * @return {String}
           * @api private
           */ function fmtShort(ms) {
            if (ms >= d) {
              return Math.round(ms / d) + 'd'
            }
            if (ms >= h) {
              return Math.round(ms / h) + 'h'
            }
            if (ms >= m) {
              return Math.round(ms / m) + 'm'
            }
            if (ms >= s) {
              return Math.round(ms / s) + 's'
            }
            return ms + 'ms'
          }
          /**
           * Long format for `ms`.
           *
           * @param {Number} ms
           * @return {String}
           * @api private
           */ function fmtLong(ms) {
            return (
              plural(ms, d, 'day') ||
              plural(ms, h, 'hour') ||
              plural(ms, m, 'minute') ||
              plural(ms, s, 'second') ||
              ms + ' ms'
            )
          }
          /**
           * Pluralization helper.
           */ function plural(ms, n, name) {
            if (ms < n) {
              return
            }
            if (ms < n * 1.5) {
              return Math.floor(ms / n) + ' ' + name
            }
            return Math.ceil(ms / n) + ' ' + name + 's'
          }
        }.apply(this, arguments))
      },
      {}
    ],
    226: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/timers-browserify/main.js',
          module
        )
        ;(function() {
          ;(function(setImmediate, clearImmediate) {
            var nextTick = require('process/browser.js').nextTick
            var apply = Function.prototype.apply
            var slice = Array.prototype.slice
            var immediateIds = {}
            var nextImmediateId = 0 // DOM APIs, for completeness
            exports.setTimeout = function() {
              return new Timeout(
                apply.call(setTimeout, window, arguments),
                clearTimeout
              )
            }
            exports.setInterval = function() {
              return new Timeout(
                apply.call(setInterval, window, arguments),
                clearInterval
              )
            }
            exports.clearTimeout = exports.clearInterval = function(timeout) {
              timeout.close()
            }
            function Timeout(id, clearFn) {
              this._id = id
              this._clearFn = clearFn
            }
            Timeout.prototype.unref = Timeout.prototype.ref = function() {}
            Timeout.prototype.close = function() {
              this._clearFn.call(window, this._id)
            } // Does not start the time, just sets up the members needed.
            exports.enroll = function(item, msecs) {
              clearTimeout(item._idleTimeoutId)
              item._idleTimeout = msecs
            }
            exports.unenroll = function(item) {
              clearTimeout(item._idleTimeoutId)
              item._idleTimeout = -1
            }
            exports._unrefActive = exports.active = function(item) {
              clearTimeout(item._idleTimeoutId)
              var msecs = item._idleTimeout
              if (msecs >= 0) {
                item._idleTimeoutId = setTimeout(function onTimeout() {
                  if (item._onTimeout) item._onTimeout()
                }, msecs)
              }
            } // That's not how node.js implements it but the exposed api is the same.
            exports.setImmediate =
              typeof setImmediate === 'function'
                ? setImmediate
                : function(fn) {
                    var id = nextImmediateId++
                    var args =
                      arguments.length < 2 ? false : slice.call(arguments, 1)
                    immediateIds[id] = true
                    nextTick(function onNextTick() {
                      if (immediateIds[id]) {
                        // fn.call() is faster so we optimize for the common use-case
                        // @see http://jsperf.com/call-apply-segu
                        if (args) {
                          fn.apply(null, args)
                        } else {
                          fn.call(null)
                        } // Prevent ids from leaking
                        exports.clearImmediate(id)
                      }
                    })
                    return id
                  }
            exports.clearImmediate =
              typeof clearImmediate === 'function'
                ? clearImmediate
                : function(id) {
                    delete immediateIds[id]
                  }
          }.call(
            this,
            require('timers').setImmediate,
            require('timers').clearImmediate
          ))
        }.apply(this, arguments))
      },
      { 'process/browser.js': 210, timers: 226 }
    ],
    227: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/to-array/index.js',
          module
        )
        ;(function() {
          module.exports = toArray
          function toArray(list, index) {
            var array = []
            index = index || 0
            for (var i = index || 0; i < list.length; i++) {
              array[i - index] = list[i]
            }
            return array
          }
        }.apply(this, arguments))
      },
      {}
    ],
    228: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/vee-validate/dist/vee-validate.js',
          module
        )
        ;(function() {
          /**
           * vee-validate v2.2.15
           * (c) 2019 Abdelrahman Awad
           * @license MIT
           */ ;(function(global, factory) {
            ;(0, _typeof3['default'])(exports) === 'object' &&
            typeof module !== 'undefined'
              ? (module.exports = factory())
              : typeof define === 'function' && define.amd
              ? define(factory)
              : ((global = global || self), (global.VeeValidate = factory()))
          })(this, function() {
            'use strict'
            function toInteger(dirtyNumber) {
              if (
                dirtyNumber === null ||
                dirtyNumber === true ||
                dirtyNumber === false
              ) {
                return NaN
              }
              var number = Number(dirtyNumber)
              if (isNaN(number)) {
                return number
              }
              return number < 0 ? Math.ceil(number) : Math.floor(number)
            }
            var MILLISECONDS_IN_MINUTE = 60000
            /**
             * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.
             * They usually appear for dates that denote time before the timezones were introduced
             * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891
             * and GMT+01:00:00 after that date)
             *
             * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,
             * which would lead to incorrect calculations.
             *
             * This function returns the timezone offset in milliseconds that takes seconds in account.
             */ function getTimezoneOffsetInMilliseconds(dirtyDate) {
              var date = new Date(dirtyDate.getTime())
              var baseTimezoneOffset = date.getTimezoneOffset()
              date.setSeconds(0, 0)
              var millisecondsPartOfTimezoneOffset =
                date.getTime() % MILLISECONDS_IN_MINUTE
              return (
                baseTimezoneOffset * MILLISECONDS_IN_MINUTE +
                millisecondsPartOfTimezoneOffset
              )
            }
            var MILLISECONDS_IN_HOUR = 3600000
            var MILLISECONDS_IN_MINUTE$1 = 60000
            var DEFAULT_ADDITIONAL_DIGITS = 2
            var patterns = {
              dateTimeDelimeter: /[T ]/,
              plainTime: /:/,
              timeZoneDelimeter: /[Z ]/i, // year tokens
              YY: /^(\d{2})$/,
              YYY: [
                /^([+-]\d{2})$/, // 0 additional digits
                /^([+-]\d{3})$/, // 1 additional digit
                /^([+-]\d{4})$/ // 2 additional digits
              ],
              YYYY: /^(\d{4})/,
              YYYYY: [
                /^([+-]\d{4})/, // 0 additional digits
                /^([+-]\d{5})/, // 1 additional digit
                /^([+-]\d{6})/ // 2 additional digits
              ], // date tokens
              MM: /^-(\d{2})$/,
              DDD: /^-?(\d{3})$/,
              MMDD: /^-?(\d{2})-?(\d{2})$/,
              Www: /^-?W(\d{2})$/,
              WwwD: /^-?W(\d{2})-?(\d{1})$/,
              HH: /^(\d{2}([.,]\d*)?)$/,
              HHMM: /^(\d{2}):?(\d{2}([.,]\d*)?)$/,
              HHMMSS: /^(\d{2}):?(\d{2}):?(\d{2}([.,]\d*)?)$/, // timezone tokens
              timezone: /([Z+-].*)$/,
              timezoneZ: /^(Z)$/,
              timezoneHH: /^([+-])(\d{2})$/,
              timezoneHHMM: /^([+-])(\d{2}):?(\d{2})$/
            }
            /**
             * @name toDate
             * @category Common Helpers
             * @summary Convert the given argument to an instance of Date.
             *
             * @description
             * Convert the given argument to an instance of Date.
             *
             * If the argument is an instance of Date, the function returns its clone.
             *
             * If the argument is a number, it is treated as a timestamp.
             *
             * If an argument is a string, the function tries to parse it.
             * Function accepts complete ISO 8601 formats as well as partial implementations.
             * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601
             * If the function cannot parse the string or the values are invalid, it returns Invalid Date.
             *
             * If the argument is none of the above, the function returns Invalid Date.
             *
             * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.
             * All *date-fns* functions will throw `RangeError` if `options.additionalDigits` is not 0, 1, 2 or undefined.
             *
             * @param {Date|String|Number} argument - the value to convert
             * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
             * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format
             * @returns {Date} the parsed date in the local time zone
             * @throws {TypeError} 1 argument required
             * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
             *
             * @example
             * // Convert string '2014-02-11T11:30:30' to date:
             * var result = toDate('2014-02-11T11:30:30')
             * //=> Tue Feb 11 2014 11:30:30
             *
             * @example
             * // Convert string '+02014101' to date,
             * // if the additional number of digits in the extended year format is 1:
             * var result = toDate('+02014101', {additionalDigits: 1})
             * //=> Fri Apr 11 2014 00:00:00
             */ function toDate(argument, dirtyOptions) {
              if (arguments.length < 1) {
                throw new TypeError(
                  '1 argument required, but only ' +
                    arguments.length +
                    ' present'
                )
              }
              if (argument === null) {
                return new Date(NaN)
              }
              var options = dirtyOptions || {}
              var additionalDigits =
                options.additionalDigits == null
                  ? DEFAULT_ADDITIONAL_DIGITS
                  : toInteger(options.additionalDigits)
              if (
                additionalDigits !== 2 &&
                additionalDigits !== 1 &&
                additionalDigits !== 0
              ) {
                throw new RangeError('additionalDigits must be 0, 1 or 2')
              } // Clone the date
              if (
                argument instanceof Date ||
                ((0, _typeof3['default'])(argument) === 'object' &&
                  Object.prototype.toString.call(argument) === '[object Date]')
              ) {
                // Prevent the date to lose the milliseconds when passed to new Date() in IE10
                return new Date(argument.getTime())
              } else if (
                typeof argument === 'number' ||
                Object.prototype.toString.call(argument) === '[object Number]'
              ) {
                return new Date(argument)
              } else if (
                !(
                  typeof argument === 'string' ||
                  Object.prototype.toString.call(argument) === '[object String]'
                )
              ) {
                return new Date(NaN)
              }
              var dateStrings = splitDateString(argument)
              var parseYearResult = parseYear(
                dateStrings.date,
                additionalDigits
              )
              var year = parseYearResult.year
              var restDateString = parseYearResult.restDateString
              var date = parseDate(restDateString, year)
              if (isNaN(date)) {
                return new Date(NaN)
              }
              if (date) {
                var timestamp = date.getTime()
                var time = 0
                var offset
                if (dateStrings.time) {
                  time = parseTime(dateStrings.time)
                  if (isNaN(time)) {
                    return new Date(NaN)
                  }
                }
                if (dateStrings.timezone) {
                  offset = parseTimezone(dateStrings.timezone)
                  if (isNaN(offset)) {
                    return new Date(NaN)
                  }
                } else {
                  // get offset accurate to hour in timezones that change offset
                  offset = getTimezoneOffsetInMilliseconds(
                    new Date(timestamp + time)
                  )
                  offset = getTimezoneOffsetInMilliseconds(
                    new Date(timestamp + time + offset)
                  )
                }
                return new Date(timestamp + time + offset)
              } else {
                return new Date(NaN)
              }
            }
            function splitDateString(dateString) {
              var dateStrings = {}
              var array = dateString.split(patterns.dateTimeDelimeter)
              var timeString
              if (patterns.plainTime.test(array[0])) {
                dateStrings.date = null
                timeString = array[0]
              } else {
                dateStrings.date = array[0]
                timeString = array[1]
                if (patterns.timeZoneDelimeter.test(dateStrings.date)) {
                  dateStrings.date = dateString.split(
                    patterns.timeZoneDelimeter
                  )[0]
                  timeString = dateString.substr(
                    dateStrings.date.length,
                    dateString.length
                  )
                }
              }
              if (timeString) {
                var token = patterns.timezone.exec(timeString)
                if (token) {
                  dateStrings.time = timeString.replace(token[1], '')
                  dateStrings.timezone = token[1]
                } else {
                  dateStrings.time = timeString
                }
              }
              return dateStrings
            }
            function parseYear(dateString, additionalDigits) {
              var patternYYY = patterns.YYY[additionalDigits]
              var patternYYYYY = patterns.YYYYY[additionalDigits]
              var token // YYYY or ±YYYYY
              token =
                patterns.YYYY.exec(dateString) || patternYYYYY.exec(dateString)
              if (token) {
                var yearString = token[1]
                return {
                  year: parseInt(yearString, 10),
                  restDateString: dateString.slice(yearString.length)
                }
              } // YY or ±YYY
              token =
                patterns.YY.exec(dateString) || patternYYY.exec(dateString)
              if (token) {
                var centuryString = token[1]
                return {
                  year: parseInt(centuryString, 10) * 100,
                  restDateString: dateString.slice(centuryString.length)
                }
              } // Invalid ISO-formatted year
              return { year: null }
            }
            function parseDate(dateString, year) {
              // Invalid ISO-formatted year
              if (year === null) {
                return null
              }
              var token
              var date
              var month
              var week // YYYY
              if (dateString.length === 0) {
                date = new Date(0)
                date.setUTCFullYear(year)
                return date
              } // YYYY-MM
              token = patterns.MM.exec(dateString)
              if (token) {
                date = new Date(0)
                month = parseInt(token[1], 10) - 1
                if (!validateDate(year, month)) {
                  return new Date(NaN)
                }
                date.setUTCFullYear(year, month)
                return date
              } // YYYY-DDD or YYYYDDD
              token = patterns.DDD.exec(dateString)
              if (token) {
                date = new Date(0)
                var dayOfYear = parseInt(token[1], 10)
                if (!validateDayOfYearDate(year, dayOfYear)) {
                  return new Date(NaN)
                }
                date.setUTCFullYear(year, 0, dayOfYear)
                return date
              } // YYYY-MM-DD or YYYYMMDD
              token = patterns.MMDD.exec(dateString)
              if (token) {
                date = new Date(0)
                month = parseInt(token[1], 10) - 1
                var day = parseInt(token[2], 10)
                if (!validateDate(year, month, day)) {
                  return new Date(NaN)
                }
                date.setUTCFullYear(year, month, day)
                return date
              } // YYYY-Www or YYYYWww
              token = patterns.Www.exec(dateString)
              if (token) {
                week = parseInt(token[1], 10) - 1
                if (!validateWeekDate(year, week)) {
                  return new Date(NaN)
                }
                return dayOfISOWeekYear(year, week)
              } // YYYY-Www-D or YYYYWwwD
              token = patterns.WwwD.exec(dateString)
              if (token) {
                week = parseInt(token[1], 10) - 1
                var dayOfWeek = parseInt(token[2], 10) - 1
                if (!validateWeekDate(year, week, dayOfWeek)) {
                  return new Date(NaN)
                }
                return dayOfISOWeekYear(year, week, dayOfWeek)
              } // Invalid ISO-formatted date
              return null
            }
            function parseTime(timeString) {
              var token
              var hours
              var minutes // hh
              token = patterns.HH.exec(timeString)
              if (token) {
                hours = parseFloat(token[1].replace(',', '.'))
                if (!validateTime(hours)) {
                  return NaN
                }
                return (hours % 24) * MILLISECONDS_IN_HOUR
              } // hh:mm or hhmm
              token = patterns.HHMM.exec(timeString)
              if (token) {
                hours = parseInt(token[1], 10)
                minutes = parseFloat(token[2].replace(',', '.'))
                if (!validateTime(hours, minutes)) {
                  return NaN
                }
                return (
                  (hours % 24) * MILLISECONDS_IN_HOUR +
                  minutes * MILLISECONDS_IN_MINUTE$1
                )
              } // hh:mm:ss or hhmmss
              token = patterns.HHMMSS.exec(timeString)
              if (token) {
                hours = parseInt(token[1], 10)
                minutes = parseInt(token[2], 10)
                var seconds = parseFloat(token[3].replace(',', '.'))
                if (!validateTime(hours, minutes, seconds)) {
                  return NaN
                }
                return (
                  (hours % 24) * MILLISECONDS_IN_HOUR +
                  minutes * MILLISECONDS_IN_MINUTE$1 +
                  seconds * 1000
                )
              } // Invalid ISO-formatted time
              return null
            }
            function parseTimezone(timezoneString) {
              var token
              var absoluteOffset // Z
              token = patterns.timezoneZ.exec(timezoneString)
              if (token) {
                return 0
              }
              var hours // ±hh
              token = patterns.timezoneHH.exec(timezoneString)
              if (token) {
                hours = parseInt(token[2], 10)
                if (!validateTimezone()) {
                  return NaN
                }
                absoluteOffset = hours * MILLISECONDS_IN_HOUR
                return token[1] === '+' ? -absoluteOffset : absoluteOffset
              } // ±hh:mm or ±hhmm
              token = patterns.timezoneHHMM.exec(timezoneString)
              if (token) {
                hours = parseInt(token[2], 10)
                var minutes = parseInt(token[3], 10)
                if (!validateTimezone(hours, minutes)) {
                  return NaN
                }
                absoluteOffset =
                  hours * MILLISECONDS_IN_HOUR +
                  minutes * MILLISECONDS_IN_MINUTE$1
                return token[1] === '+' ? -absoluteOffset : absoluteOffset
              }
              return 0
            }
            function dayOfISOWeekYear(isoWeekYear, week, day) {
              week = week || 0
              day = day || 0
              var date = new Date(0)
              date.setUTCFullYear(isoWeekYear, 0, 4)
              var fourthOfJanuaryDay = date.getUTCDay() || 7
              var diff = week * 7 + day + 1 - fourthOfJanuaryDay
              date.setUTCDate(date.getUTCDate() + diff)
              return date
            } // Validation functions
            var DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
            var DAYS_IN_MONTH_LEAP_YEAR = [
              31,
              29,
              31,
              30,
              31,
              30,
              31,
              31,
              30,
              31,
              30,
              31
            ]
            function isLeapYearIndex(year) {
              return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0)
            }
            function validateDate(year, month, date) {
              if (month < 0 || month > 11) {
                return false
              }
              if (date != null) {
                if (date < 1) {
                  return false
                }
                var isLeapYear = isLeapYearIndex(year)
                if (isLeapYear && date > DAYS_IN_MONTH_LEAP_YEAR[month]) {
                  return false
                }
                if (!isLeapYear && date > DAYS_IN_MONTH[month]) {
                  return false
                }
              }
              return true
            }
            function validateDayOfYearDate(year, dayOfYear) {
              if (dayOfYear < 1) {
                return false
              }
              var isLeapYear = isLeapYearIndex(year)
              if (isLeapYear && dayOfYear > 366) {
                return false
              }
              if (!isLeapYear && dayOfYear > 365) {
                return false
              }
              return true
            }
            function validateWeekDate(year, week, day) {
              if (week < 0 || week > 52) {
                return false
              }
              if (day != null && (day < 0 || day > 6)) {
                return false
              }
              return true
            }
            function validateTime(hours, minutes, seconds) {
              if (hours != null && (hours < 0 || hours >= 25)) {
                return false
              }
              if (minutes != null && (minutes < 0 || minutes >= 60)) {
                return false
              }
              if (seconds != null && (seconds < 0 || seconds >= 60)) {
                return false
              }
              return true
            }
            function validateTimezone(hours, minutes) {
              if (minutes != null && (minutes < 0 || minutes > 59)) {
                return false
              }
              return true
            }
            /**
             * @name addMilliseconds
             * @category Millisecond Helpers
             * @summary Add the specified number of milliseconds to the given date.
             *
             * @description
             * Add the specified number of milliseconds to the given date.
             *
             * @param {Date|String|Number} date - the date to be changed
             * @param {Number} amount - the amount of milliseconds to be added
             * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
             * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
             * @returns {Date} the new date with the milliseconds added
             * @throws {TypeError} 2 arguments required
             * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
             *
             * @example
             * // Add 750 milliseconds to 10 July 2014 12:45:30.000:
             * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
             * //=> Thu Jul 10 2014 12:45:30.750
             */ function addMilliseconds(dirtyDate, dirtyAmount, dirtyOptions) {
              if (arguments.length < 2) {
                throw new TypeError(
                  '2 arguments required, but only ' +
                    arguments.length +
                    ' present'
                )
              }
              var timestamp = toDate(dirtyDate, dirtyOptions).getTime()
              var amount = toInteger(dirtyAmount)
              return new Date(timestamp + amount)
            }
            /**
             * @name isValid
             * @category Common Helpers
             * @summary Is the given date valid?
             *
             * @description
             * Returns false if argument is Invalid Date and true otherwise.
             * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
             * Invalid Date is a Date, whose time value is NaN.
             *
             * Time value of Date: http://es5.github.io/#x15.9.1.1
             *
             * @param {*} date - the date to check
             * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
             * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
             * @returns {Boolean} the date is valid
             * @throws {TypeError} 1 argument required
             * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
             *
             * @example
             * // For the valid date:
             * var result = isValid(new Date(2014, 1, 31))
             * //=> true
             *
             * @example
             * // For the value, convertable into a date:
             * var result = isValid('2014-02-31')
             * //=> true
             *
             * @example
             * // For the invalid date:
             * var result = isValid(new Date(''))
             * //=> false
             */ function isValid(dirtyDate, dirtyOptions) {
              if (arguments.length < 1) {
                throw new TypeError(
                  '1 argument required, but only ' +
                    arguments.length +
                    ' present'
                )
              }
              var date = toDate(dirtyDate, dirtyOptions)
              return !isNaN(date)
            }
            var formatDistanceLocale = {
              lessThanXSeconds: {
                one: 'less than a second',
                other: 'less than {{count}} seconds'
              },
              xSeconds: { one: '1 second', other: '{{count}} seconds' },
              halfAMinute: 'half a minute',
              lessThanXMinutes: {
                one: 'less than a minute',
                other: 'less than {{count}} minutes'
              },
              xMinutes: { one: '1 minute', other: '{{count}} minutes' },
              aboutXHours: {
                one: 'about 1 hour',
                other: 'about {{count}} hours'
              },
              xHours: { one: '1 hour', other: '{{count}} hours' },
              xDays: { one: '1 day', other: '{{count}} days' },
              aboutXMonths: {
                one: 'about 1 month',
                other: 'about {{count}} months'
              },
              xMonths: { one: '1 month', other: '{{count}} months' },
              aboutXYears: {
                one: 'about 1 year',
                other: 'about {{count}} years'
              },
              xYears: { one: '1 year', other: '{{count}} years' },
              overXYears: { one: 'over 1 year', other: 'over {{count}} years' },
              almostXYears: {
                one: 'almost 1 year',
                other: 'almost {{count}} years'
              }
            }
            function formatDistance(token, count, options) {
              options = options || {}
              var result
              if (typeof formatDistanceLocale[token] === 'string') {
                result = formatDistanceLocale[token]
              } else if (count === 1) {
                result = formatDistanceLocale[token].one
              } else {
                result = formatDistanceLocale[token].other.replace(
                  '{{count}}',
                  count
                )
              }
              if (options.addSuffix) {
                if (options.comparison > 0) {
                  return 'in ' + result
                } else {
                  return result + ' ago'
                }
              }
              return result
            }
            function buildFormatLongFn(args) {
              return function(dirtyOptions) {
                var options = dirtyOptions || {}
                var width = options.width
                  ? String(options.width)
                  : args.defaultWidth
                var format =
                  args.formats[width] || args.formats[args.defaultWidth]
                return format
              }
            }
            var dateFormats = {
              full: 'EEEE, MMMM do, y',
              long: 'MMMM do, y',
              medium: 'MMM d, y',
              short: 'MM/dd/yyyy'
            }
            var timeFormats = {
              full: 'h:mm:ss a zzzz',
              long: 'h:mm:ss a z',
              medium: 'h:mm:ss a',
              short: 'h:mm a'
            }
            var dateTimeFormats = {
              full: "{{date}} 'at' {{time}}",
              long: "{{date}} 'at' {{time}}",
              medium: '{{date}}, {{time}}',
              short: '{{date}}, {{time}}'
            }
            var formatLong = {
              date: buildFormatLongFn({
                formats: dateFormats,
                defaultWidth: 'full'
              }),
              time: buildFormatLongFn({
                formats: timeFormats,
                defaultWidth: 'full'
              }),
              dateTime: buildFormatLongFn({
                formats: dateTimeFormats,
                defaultWidth: 'full'
              })
            }
            var formatRelativeLocale = {
              lastWeek: "'last' eeee 'at' p",
              yesterday: "'yesterday at' p",
              today: "'today at' p",
              tomorrow: "'tomorrow at' p",
              nextWeek: "eeee 'at' p",
              other: 'P'
            }
            function formatRelative(token, date, baseDate, options) {
              return formatRelativeLocale[token]
            }
            function buildLocalizeFn(args) {
              return function(dirtyIndex, dirtyOptions) {
                var options = dirtyOptions || {}
                var width = options.width
                  ? String(options.width)
                  : args.defaultWidth
                var context = options.context
                  ? String(options.context)
                  : 'standalone'
                var valuesArray
                if (context === 'formatting' && args.formattingValues) {
                  valuesArray =
                    args.formattingValues[width] ||
                    args.formattingValues[args.defaultFormattingWidth]
                } else {
                  valuesArray =
                    args.values[width] || args.values[args.defaultWidth]
                }
                var index = args.argumentCallback
                  ? args.argumentCallback(dirtyIndex)
                  : dirtyIndex
                return valuesArray[index]
              }
            }
            var eraValues = {
              narrow: ['B', 'A'],
              abbreviated: ['BC', 'AD'],
              wide: ['Before Christ', 'Anno Domini']
            }
            var quarterValues = {
              narrow: ['1', '2', '3', '4'],
              abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],
              wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']
            } // Note: in English, the names of days of the week and months are capitalized.
            // If you are making a new locale based on this one, check if the same is true for the language you're working on.
            // Generally, formatted dates should look like they are in the middle of a sentence,
            // e.g. in Spanish language the weekdays and months should be in the lowercase.
            var monthValues = {
              narrow: [
                'J',
                'F',
                'M',
                'A',
                'M',
                'J',
                'J',
                'A',
                'S',
                'O',
                'N',
                'D'
              ],
              abbreviated: [
                'Jan',
                'Feb',
                'Mar',
                'Apr',
                'May',
                'Jun',
                'Jul',
                'Aug',
                'Sep',
                'Oct',
                'Nov',
                'Dec'
              ],
              wide: [
                'January',
                'February',
                'March',
                'April',
                'May',
                'June',
                'July',
                'August',
                'September',
                'October',
                'November',
                'December'
              ]
            }
            var dayValues = {
              narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
              short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
              abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
              wide: [
                'Sunday',
                'Monday',
                'Tuesday',
                'Wednesday',
                'Thursday',
                'Friday',
                'Saturday'
              ]
            }
            var dayPeriodValues = {
              narrow: {
                am: 'a',
                pm: 'p',
                midnight: 'mi',
                noon: 'n',
                morning: 'morning',
                afternoon: 'afternoon',
                evening: 'evening',
                night: 'night'
              },
              abbreviated: {
                am: 'AM',
                pm: 'PM',
                midnight: 'midnight',
                noon: 'noon',
                morning: 'morning',
                afternoon: 'afternoon',
                evening: 'evening',
                night: 'night'
              },
              wide: {
                am: 'a.m.',
                pm: 'p.m.',
                midnight: 'midnight',
                noon: 'noon',
                morning: 'morning',
                afternoon: 'afternoon',
                evening: 'evening',
                night: 'night'
              }
            }
            var formattingDayPeriodValues = {
              narrow: {
                am: 'a',
                pm: 'p',
                midnight: 'mi',
                noon: 'n',
                morning: 'in the morning',
                afternoon: 'in the afternoon',
                evening: 'in the evening',
                night: 'at night'
              },
              abbreviated: {
                am: 'AM',
                pm: 'PM',
                midnight: 'midnight',
                noon: 'noon',
                morning: 'in the morning',
                afternoon: 'in the afternoon',
                evening: 'in the evening',
                night: 'at night'
              },
              wide: {
                am: 'a.m.',
                pm: 'p.m.',
                midnight: 'midnight',
                noon: 'noon',
                morning: 'in the morning',
                afternoon: 'in the afternoon',
                evening: 'in the evening',
                night: 'at night'
              }
            }
            function ordinalNumber(dirtyNumber, dirtyOptions) {
              var number = Number(dirtyNumber) // If ordinal numbers depend on context, for example,
              // if they are different for different grammatical genders,
              // use `options.unit`:
              //
              //   var options = dirtyOptions || {}
              //   var unit = String(options.unit)
              //
              // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',
              // 'day', 'hour', 'minute', 'second'
              var rem100 = number % 100
              if (rem100 > 20 || rem100 < 10) {
                switch (rem100 % 10) {
                  case 1:
                    return number + 'st'
                  case 2:
                    return number + 'nd'
                  case 3:
                    return number + 'rd'
                }
              }
              return number + 'th'
            }
            var localize = {
              ordinalNumber: ordinalNumber,
              era: buildLocalizeFn({ values: eraValues, defaultWidth: 'wide' }),
              quarter: buildLocalizeFn({
                values: quarterValues,
                defaultWidth: 'wide',
                argumentCallback: function argumentCallback(quarter) {
                  return Number(quarter) - 1
                }
              }),
              month: buildLocalizeFn({
                values: monthValues,
                defaultWidth: 'wide'
              }),
              day: buildLocalizeFn({ values: dayValues, defaultWidth: 'wide' }),
              dayPeriod: buildLocalizeFn({
                values: dayPeriodValues,
                defaultWidth: 'wide',
                formattingValues: formattingDayPeriodValues,
                defaulFormattingWidth: 'wide'
              })
            }
            function buildMatchPatternFn(args) {
              return function(dirtyString, dirtyOptions) {
                var string = String(dirtyString)
                var options = dirtyOptions || {}
                var matchResult = string.match(args.matchPattern)
                if (!matchResult) {
                  return null
                }
                var matchedString = matchResult[0]
                var parseResult = string.match(args.parsePattern)
                if (!parseResult) {
                  return null
                }
                var value = args.valueCallback
                  ? args.valueCallback(parseResult[0])
                  : parseResult[0]
                value = options.valueCallback
                  ? options.valueCallback(value)
                  : value
                return {
                  value: value,
                  rest: string.slice(matchedString.length)
                }
              }
            }
            function buildMatchFn(args) {
              return function(dirtyString, dirtyOptions) {
                var string = String(dirtyString)
                var options = dirtyOptions || {}
                var width = options.width
                var matchPattern =
                  (width && args.matchPatterns[width]) ||
                  args.matchPatterns[args.defaultMatchWidth]
                var matchResult = string.match(matchPattern)
                if (!matchResult) {
                  return null
                }
                var matchedString = matchResult[0]
                var parsePatterns =
                  (width && args.parsePatterns[width]) ||
                  args.parsePatterns[args.defaultParseWidth]
                var value
                if (
                  Object.prototype.toString.call(parsePatterns) ===
                  '[object Array]'
                ) {
                  value = parsePatterns.findIndex(function(pattern) {
                    return pattern.test(string)
                  })
                } else {
                  value = findKey(parsePatterns, function(pattern) {
                    return pattern.test(string)
                  })
                }
                value = args.valueCallback ? args.valueCallback(value) : value
                value = options.valueCallback
                  ? options.valueCallback(value)
                  : value
                return {
                  value: value,
                  rest: string.slice(matchedString.length)
                }
              }
            }
            function findKey(object, predicate) {
              for (var key in object) {
                if (object.hasOwnProperty(key) && predicate(object[key])) {
                  return key
                }
              }
            }
            var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i
            var parseOrdinalNumberPattern = /\d+/i
            var matchEraPatterns = {
              narrow: /^(b|a)/i,
              abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
              wide: /^(before christ|before common era|anno domini|common era)/i
            }
            var parseEraPatterns = { any: [/^b/i, /^(a|c)/i] }
            var matchQuarterPatterns = {
              narrow: /^[1234]/i,
              abbreviated: /^q[1234]/i,
              wide: /^[1234](th|st|nd|rd)? quarter/i
            }
            var parseQuarterPatterns = { any: [/1/i, /2/i, /3/i, /4/i] }
            var matchMonthPatterns = {
              narrow: /^[jfmasond]/i,
              abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
              wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
            }
            var parseMonthPatterns = {
              narrow: [
                /^j/i,
                /^f/i,
                /^m/i,
                /^a/i,
                /^m/i,
                /^j/i,
                /^j/i,
                /^a/i,
                /^s/i,
                /^o/i,
                /^n/i,
                /^d/i
              ],
              any: [
                /^ja/i,
                /^f/i,
                /^mar/i,
                /^ap/i,
                /^may/i,
                /^jun/i,
                /^jul/i,
                /^au/i,
                /^s/i,
                /^o/i,
                /^n/i,
                /^d/i
              ]
            }
            var matchDayPatterns = {
              narrow: /^[smtwf]/i,
              short: /^(su|mo|tu|we|th|fr|sa)/i,
              abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
              wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
            }
            var parseDayPatterns = {
              narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
              any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
            }
            var matchDayPeriodPatterns = {
              narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
              any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
            }
            var parseDayPeriodPatterns = {
              any: {
                am: /^a/i,
                pm: /^p/i,
                midnight: /^mi/i,
                noon: /^no/i,
                morning: /morning/i,
                afternoon: /afternoon/i,
                evening: /evening/i,
                night: /night/i
              }
            }
            var match = {
              ordinalNumber: buildMatchPatternFn({
                matchPattern: matchOrdinalNumberPattern,
                parsePattern: parseOrdinalNumberPattern,
                valueCallback: function valueCallback(value) {
                  return parseInt(value, 10)
                }
              }),
              era: buildMatchFn({
                matchPatterns: matchEraPatterns,
                defaultMatchWidth: 'wide',
                parsePatterns: parseEraPatterns,
                defaultParseWidth: 'any'
              }),
              quarter: buildMatchFn({
                matchPatterns: matchQuarterPatterns,
                defaultMatchWidth: 'wide',
                parsePatterns: parseQuarterPatterns,
                defaultParseWidth: 'any',
                valueCallback: function valueCallback(index) {
                  return index + 1
                }
              }),
              month: buildMatchFn({
                matchPatterns: matchMonthPatterns,
                defaultMatchWidth: 'wide',
                parsePatterns: parseMonthPatterns,
                defaultParseWidth: 'any'
              }),
              day: buildMatchFn({
                matchPatterns: matchDayPatterns,
                defaultMatchWidth: 'wide',
                parsePatterns: parseDayPatterns,
                defaultParseWidth: 'any'
              }),
              dayPeriod: buildMatchFn({
                matchPatterns: matchDayPeriodPatterns,
                defaultMatchWidth: 'any',
                parsePatterns: parseDayPeriodPatterns,
                defaultParseWidth: 'any'
              })
            }
            /**
             * @type {Locale}
             * @category Locales
             * @summary English locale (United States).
             * @language English
             * @iso-639-2 eng
             * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}
             * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}
             */ var locale = {
              formatDistance: formatDistance,
              formatLong: formatLong,
              formatRelative: formatRelative,
              localize: localize,
              match: match,
              options: {
                weekStartsOn: 0 /* Sunday */,
                firstWeekContainsDate: 1
              }
            }
            var MILLISECONDS_IN_DAY = 86400000 // This function will be a part of public API when UTC function will be implemented.
            // See issue: https://github.com/date-fns/date-fns/issues/376
            function getUTCDayOfYear(dirtyDate, dirtyOptions) {
              if (arguments.length < 1) {
                throw new TypeError(
                  '1 argument required, but only ' +
                    arguments.length +
                    ' present'
                )
              }
              var date = toDate(dirtyDate, dirtyOptions)
              var timestamp = date.getTime()
              date.setUTCMonth(0, 1)
              date.setUTCHours(0, 0, 0, 0)
              var startOfYearTimestamp = date.getTime()
              var difference = timestamp - startOfYearTimestamp
              return Math.floor(difference / MILLISECONDS_IN_DAY) + 1
            } // This function will be a part of public API when UTC function will be implemented.
            // See issue: https://github.com/date-fns/date-fns/issues/376
            function startOfUTCISOWeek(dirtyDate, dirtyOptions) {
              if (arguments.length < 1) {
                throw new TypeError(
                  '1 argument required, but only ' +
                    arguments.length +
                    ' present'
                )
              }
              var weekStartsOn = 1
              var date = toDate(dirtyDate, dirtyOptions)
              var day = date.getUTCDay()
              var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn
              date.setUTCDate(date.getUTCDate() - diff)
              date.setUTCHours(0, 0, 0, 0)
              return date
            } // This function will be a part of public API when UTC function will be implemented.
            // See issue: https://github.com/date-fns/date-fns/issues/376
            function getUTCISOWeekYear(dirtyDate, dirtyOptions) {
              if (arguments.length < 1) {
                throw new TypeError(
                  '1 argument required, but only ' +
                    arguments.length +
                    ' present'
                )
              }
              var date = toDate(dirtyDate, dirtyOptions)
              var year = date.getUTCFullYear()
              var fourthOfJanuaryOfNextYear = new Date(0)
              fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4)
              fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0)
              var startOfNextYear = startOfUTCISOWeek(
                fourthOfJanuaryOfNextYear,
                dirtyOptions
              )
              var fourthOfJanuaryOfThisYear = new Date(0)
              fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4)
              fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0)
              var startOfThisYear = startOfUTCISOWeek(
                fourthOfJanuaryOfThisYear,
                dirtyOptions
              )
              if (date.getTime() >= startOfNextYear.getTime()) {
                return year + 1
              } else if (date.getTime() >= startOfThisYear.getTime()) {
                return year
              } else {
                return year - 1
              }
            } // This function will be a part of public API when UTC function will be implemented.
            // See issue: https://github.com/date-fns/date-fns/issues/376
            function startOfUTCISOWeekYear(dirtyDate, dirtyOptions) {
              if (arguments.length < 1) {
                throw new TypeError(
                  '1 argument required, but only ' +
                    arguments.length +
                    ' present'
                )
              }
              var year = getUTCISOWeekYear(dirtyDate, dirtyOptions)
              var fourthOfJanuary = new Date(0)
              fourthOfJanuary.setUTCFullYear(year, 0, 4)
              fourthOfJanuary.setUTCHours(0, 0, 0, 0)
              var date = startOfUTCISOWeek(fourthOfJanuary, dirtyOptions)
              return date
            }
            var MILLISECONDS_IN_WEEK = 604800000 // This function will be a part of public API when UTC function will be implemented.
            // See issue: https://github.com/date-fns/date-fns/issues/376
            function getUTCISOWeek(dirtyDate, dirtyOptions) {
              if (arguments.length < 1) {
                throw new TypeError(
                  '1 argument required, but only ' +
                    arguments.length +
                    ' present'
                )
              }
              var date = toDate(dirtyDate, dirtyOptions)
              var diff =
                startOfUTCISOWeek(date, dirtyOptions).getTime() -
                startOfUTCISOWeekYear(date, dirtyOptions).getTime() // Round the number of days to the nearest integer
              // because the number of milliseconds in a week is not constant
              // (e.g. it's different in the week of the daylight saving time clock shift)
              return Math.round(diff / MILLISECONDS_IN_WEEK) + 1
            } // This function will be a part of public API when UTC function will be implemented.
            // See issue: https://github.com/date-fns/date-fns/issues/376
            function startOfUTCWeek(dirtyDate, dirtyOptions) {
              if (arguments.length < 1) {
                throw new TypeError(
                  '1 argument required, but only ' +
                    arguments.length +
                    ' present'
                )
              }
              var options = dirtyOptions || {}
              var locale = options.locale
              var localeWeekStartsOn =
                locale && locale.options && locale.options.weekStartsOn
              var defaultWeekStartsOn =
                localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn)
              var weekStartsOn =
                options.weekStartsOn == null
                  ? defaultWeekStartsOn
                  : toInteger(options.weekStartsOn) // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
              if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
                throw new RangeError(
                  'weekStartsOn must be between 0 and 6 inclusively'
                )
              }
              var date = toDate(dirtyDate, options)
              var day = date.getUTCDay()
              var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn
              date.setUTCDate(date.getUTCDate() - diff)
              date.setUTCHours(0, 0, 0, 0)
              return date
            } // This function will be a part of public API when UTC function will be implemented.
            // See issue: https://github.com/date-fns/date-fns/issues/376
            function getUTCWeekYear(dirtyDate, dirtyOptions) {
              if (arguments.length < 1) {
                throw new TypeError(
                  '1 argument required, but only ' +
                    arguments.length +
                    ' present'
                )
              }
              var date = toDate(dirtyDate, dirtyOptions)
              var year = date.getUTCFullYear()
              var options = dirtyOptions || {}
              var locale = options.locale
              var localeFirstWeekContainsDate =
                locale && locale.options && locale.options.firstWeekContainsDate
              var defaultFirstWeekContainsDate =
                localeFirstWeekContainsDate == null
                  ? 1
                  : toInteger(localeFirstWeekContainsDate)
              var firstWeekContainsDate =
                options.firstWeekContainsDate == null
                  ? defaultFirstWeekContainsDate
                  : toInteger(options.firstWeekContainsDate) // Test if weekStartsOn is between 1 and 7 _and_ is not NaN
              if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
                throw new RangeError(
                  'firstWeekContainsDate must be between 1 and 7 inclusively'
                )
              }
              var firstWeekOfNextYear = new Date(0)
              firstWeekOfNextYear.setUTCFullYear(
                year + 1,
                0,
                firstWeekContainsDate
              )
              firstWeekOfNextYear.setUTCHours(0, 0, 0, 0)
              var startOfNextYear = startOfUTCWeek(
                firstWeekOfNextYear,
                dirtyOptions
              )
              var firstWeekOfThisYear = new Date(0)
              firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate)
              firstWeekOfThisYear.setUTCHours(0, 0, 0, 0)
              var startOfThisYear = startOfUTCWeek(
                firstWeekOfThisYear,
                dirtyOptions
              )
              if (date.getTime() >= startOfNextYear.getTime()) {
                return year + 1
              } else if (date.getTime() >= startOfThisYear.getTime()) {
                return year
              } else {
                return year - 1
              }
            } // This function will be a part of public API when UTC function will be implemented.
            // See issue: https://github.com/date-fns/date-fns/issues/376
            function startOfUTCWeekYear(dirtyDate, dirtyOptions) {
              if (arguments.length < 1) {
                throw new TypeError(
                  '1 argument required, but only ' +
                    arguments.length +
                    ' present'
                )
              }
              var options = dirtyOptions || {}
              var locale = options.locale
              var localeFirstWeekContainsDate =
                locale && locale.options && locale.options.firstWeekContainsDate
              var defaultFirstWeekContainsDate =
                localeFirstWeekContainsDate == null
                  ? 1
                  : toInteger(localeFirstWeekContainsDate)
              var firstWeekContainsDate =
                options.firstWeekContainsDate == null
                  ? defaultFirstWeekContainsDate
                  : toInteger(options.firstWeekContainsDate)
              var year = getUTCWeekYear(dirtyDate, dirtyOptions)
              var firstWeek = new Date(0)
              firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate)
              firstWeek.setUTCHours(0, 0, 0, 0)
              var date = startOfUTCWeek(firstWeek, dirtyOptions)
              return date
            }
            var MILLISECONDS_IN_WEEK$1 = 604800000 // This function will be a part of public API when UTC function will be implemented.
            // See issue: https://github.com/date-fns/date-fns/issues/376
            function getUTCWeek(dirtyDate, dirtyOptions) {
              if (arguments.length < 1) {
                throw new TypeError(
                  '1 argument required, but only ' +
                    arguments.length +
                    ' present'
                )
              }
              var date = toDate(dirtyDate, dirtyOptions)
              var diff =
                startOfUTCWeek(date, dirtyOptions).getTime() -
                startOfUTCWeekYear(date, dirtyOptions).getTime() // Round the number of days to the nearest integer
              // because the number of milliseconds in a week is not constant
              // (e.g. it's different in the week of the daylight saving time clock shift)
              return Math.round(diff / MILLISECONDS_IN_WEEK$1) + 1
            }
            var dayPeriodEnum = {
              am: 'am',
              pm: 'pm',
              midnight: 'midnight',
              noon: 'noon',
              morning: 'morning',
              afternoon: 'afternoon',
              evening: 'evening',
              night: 'night'
            }
            /*
             * |     | Unit                           |     | Unit                           |
             * |-----|--------------------------------|-----|--------------------------------|
             * |  a  | AM, PM                         |  A* | Milliseconds in day            |
             * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |
             * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |
             * |  d  | Day of month                   |  D  | Day of year                    |
             * |  e  | Local day of week              |  E  | Day of week                    |
             * |  f  |                                |  F* | Day of week in month           |
             * |  g* | Modified Julian day            |  G  | Era                            |
             * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
             * |  i! | ISO day of week                |  I! | ISO week of year               |
             * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |
             * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |
             * |  l* | (deprecated)                   |  L  | Stand-alone month              |
             * |  m  | Minute                         |  M  | Month                          |
             * |  n  |                                |  N  |                                |
             * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |
             * |  p! | Long localized time            |  P! | Long localized date            |
             * |  q  | Stand-alone quarter            |  Q  | Quarter                        |
             * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |
             * |  s  | Second                         |  S  | Fraction of second             |
             * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |
             * |  u  | Extended year                  |  U* | Cyclic year                    |
             * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |
             * |  w  | Local week of year             |  W* | Week of month                  |
             * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |
             * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |
             * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |
             *
             * Letters marked by * are not implemented but reserved by Unicode standard.
             *
             * Letters marked by ! are non-standard, but implemented by date-fns:
             * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)
             * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,
             *   i.e. 7 for Sunday, 1 for Monday, etc.
             * - `I` is ISO week of year, as opposed to `w` which is local week of year.
             * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.
             *   `R` is supposed to be used in conjunction with `I` and `i`
             *   for universal ISO week-numbering date, whereas
             *   `Y` is supposed to be used in conjunction with `w` and `e`
             *   for week-numbering date specific to the locale.
             * - `P` is long localized date format
             * - `p` is long localized time format
             */ var formatters = {
              // Era
              G: function G(date, token, localize) {
                var era = date.getUTCFullYear() > 0 ? 1 : 0
                switch (
                  token // AD, BC
                ) {
                  case 'G':
                  case 'GG':
                  case 'GGG':
                    return localize.era(era, { width: 'abbreviated' }) // A, B
                  case 'GGGGG':
                    return localize.era(era, { width: 'narrow' }) // Anno Domini, Before Christ
                  case 'GGGG':
                  default:
                    return localize.era(era, { width: 'wide' })
                }
              }, // Year
              y: function y(date, token, localize, options) {
                // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens
                // | Year     |     y | yy |   yyy |  yyyy | yyyyy |
                // |----------|-------|----|-------|-------|-------|
                // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |
                // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |
                // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |
                // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |
                // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |
                var signedYear = date.getUTCFullYear() // Returns 1 for 1 BC (which is year 0 in JavaScript)
                var year = signedYear > 0 ? signedYear : 1 - signedYear // Two digit year
                if (token === 'yy') {
                  var twoDigitYear = year % 100
                  return addLeadingZeros(twoDigitYear, 2)
                } // Ordinal number
                if (token === 'yo') {
                  return localize.ordinalNumber(year, { unit: 'year' })
                } // Padding
                return addLeadingZeros(year, token.length)
              }, // Local week-numbering year
              Y: function Y(date, token, localize, options) {
                var signedWeekYear = getUTCWeekYear(date, options)
                var weekYear =
                  signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear // Two digit year
                if (token === 'YY') {
                  var twoDigitYear = weekYear % 100
                  return addLeadingZeros(twoDigitYear, 2)
                } // Ordinal number
                if (token === 'Yo') {
                  return localize.ordinalNumber(weekYear, { unit: 'year' })
                } // Padding
                return addLeadingZeros(weekYear, token.length)
              }, // ISO week-numbering year
              R: function R(date, token, localize, options) {
                var isoWeekYear = getUTCISOWeekYear(date, options) // Padding
                return addLeadingZeros(isoWeekYear, token.length)
              }, // Extended year. This is a single number designating the year of this calendar system.
              // The main difference between `y` and `u` localizers are B.C. years:
              // | Year | `y` | `u` |
              // |------|-----|-----|
              // | AC 1 |   1 |   1 |
              // | BC 1 |   1 |   0 |
              // | BC 2 |   2 |  -1 |
              // Also `yy` always returns the last two digits of a year,
              // while `uu` pads single digit years to 2 characters and returns other years unchanged.
              u: function u(date, token, localize, options) {
                var year = date.getUTCFullYear()
                return addLeadingZeros(year, token.length)
              }, // Quarter
              Q: function Q(date, token, localize, options) {
                var quarter = Math.ceil((date.getUTCMonth() + 1) / 3)
                switch (
                  token // 1, 2, 3, 4
                ) {
                  case 'Q':
                    return String(quarter) // 01, 02, 03, 04
                  case 'QQ':
                    return addLeadingZeros(quarter, 2) // 1st, 2nd, 3rd, 4th
                  case 'Qo':
                    return localize.ordinalNumber(quarter, { unit: 'quarter' }) // Q1, Q2, Q3, Q4
                  case 'QQQ':
                    return localize.quarter(quarter, {
                      width: 'abbreviated',
                      context: 'formatting'
                    }) // 1, 2, 3, 4 (narrow quarter; could be not numerical)
                  case 'QQQQQ':
                    return localize.quarter(quarter, {
                      width: 'narrow',
                      context: 'formatting'
                    }) // 1st quarter, 2nd quarter, ...
                  case 'QQQQ':
                  default:
                    return localize.quarter(quarter, {
                      width: 'wide',
                      context: 'formatting'
                    })
                }
              }, // Stand-alone quarter
              q: function q(date, token, localize, options) {
                var quarter = Math.ceil((date.getUTCMonth() + 1) / 3)
                switch (
                  token // 1, 2, 3, 4
                ) {
                  case 'q':
                    return String(quarter) // 01, 02, 03, 04
                  case 'qq':
                    return addLeadingZeros(quarter, 2) // 1st, 2nd, 3rd, 4th
                  case 'qo':
                    return localize.ordinalNumber(quarter, { unit: 'quarter' }) // Q1, Q2, Q3, Q4
                  case 'qqq':
                    return localize.quarter(quarter, {
                      width: 'abbreviated',
                      context: 'standalone'
                    }) // 1, 2, 3, 4 (narrow quarter; could be not numerical)
                  case 'qqqqq':
                    return localize.quarter(quarter, {
                      width: 'narrow',
                      context: 'standalone'
                    }) // 1st quarter, 2nd quarter, ...
                  case 'qqqq':
                  default:
                    return localize.quarter(quarter, {
                      width: 'wide',
                      context: 'standalone'
                    })
                }
              }, // Month
              M: function M(date, token, localize, options) {
                var month = date.getUTCMonth()
                switch (
                  token // 1, 2, ..., 12
                ) {
                  case 'M':
                    return String(month + 1) // 01, 02, ..., 12
                  case 'MM':
                    return addLeadingZeros(month + 1, 2) // 1st, 2nd, ..., 12th
                  case 'Mo':
                    return localize.ordinalNumber(month + 1, { unit: 'month' }) // Jan, Feb, ..., Dec
                  case 'MMM':
                    return localize.month(month, {
                      width: 'abbreviated',
                      context: 'formatting'
                    }) // J, F, ..., D
                  case 'MMMMM':
                    return localize.month(month, {
                      width: 'narrow',
                      context: 'formatting'
                    }) // January, February, ..., December
                  case 'MMMM':
                  default:
                    return localize.month(month, {
                      width: 'wide',
                      context: 'formatting'
                    })
                }
              }, // Stand-alone month
              L: function L(date, token, localize, options) {
                var month = date.getUTCMonth()
                switch (
                  token // 1, 2, ..., 12
                ) {
                  case 'L':
                    return String(month + 1) // 01, 02, ..., 12
                  case 'LL':
                    return addLeadingZeros(month + 1, 2) // 1st, 2nd, ..., 12th
                  case 'Lo':
                    return localize.ordinalNumber(month + 1, { unit: 'month' }) // Jan, Feb, ..., Dec
                  case 'LLL':
                    return localize.month(month, {
                      width: 'abbreviated',
                      context: 'standalone'
                    }) // J, F, ..., D
                  case 'LLLLL':
                    return localize.month(month, {
                      width: 'narrow',
                      context: 'standalone'
                    }) // January, February, ..., December
                  case 'LLLL':
                  default:
                    return localize.month(month, {
                      width: 'wide',
                      context: 'standalone'
                    })
                }
              }, // Local week of year
              w: function w(date, token, localize, options) {
                var week = getUTCWeek(date, options)
                if (token === 'wo') {
                  return localize.ordinalNumber(week, { unit: 'week' })
                }
                return addLeadingZeros(week, token.length)
              }, // ISO week of year
              I: function I(date, token, localize, options) {
                var isoWeek = getUTCISOWeek(date, options)
                if (token === 'Io') {
                  return localize.ordinalNumber(isoWeek, { unit: 'week' })
                }
                return addLeadingZeros(isoWeek, token.length)
              }, // Day of the month
              d: function d(date, token, localize, options) {
                var dayOfMonth = date.getUTCDate()
                if (token === 'do') {
                  return localize.ordinalNumber(dayOfMonth, { unit: 'date' })
                }
                return addLeadingZeros(dayOfMonth, token.length)
              }, // Day of year
              D: function D(date, token, localize, options) {
                var dayOfYear = getUTCDayOfYear(date, options)
                if (token === 'Do') {
                  return localize.ordinalNumber(dayOfYear, {
                    unit: 'dayOfYear'
                  })
                }
                return addLeadingZeros(dayOfYear, token.length)
              }, // Day of week
              E: function E(date, token, localize, options) {
                var dayOfWeek = date.getUTCDay()
                switch (
                  token // Tue
                ) {
                  case 'E':
                  case 'EE':
                  case 'EEE':
                    return localize.day(dayOfWeek, {
                      width: 'abbreviated',
                      context: 'formatting'
                    }) // T
                  case 'EEEEE':
                    return localize.day(dayOfWeek, {
                      width: 'narrow',
                      context: 'formatting'
                    }) // Tu
                  case 'EEEEEE':
                    return localize.day(dayOfWeek, {
                      width: 'short',
                      context: 'formatting'
                    }) // Tuesday
                  case 'EEEE':
                  default:
                    return localize.day(dayOfWeek, {
                      width: 'wide',
                      context: 'formatting'
                    })
                }
              }, // Local day of week
              e: function e(date, token, localize, options) {
                var dayOfWeek = date.getUTCDay()
                var localDayOfWeek =
                  (dayOfWeek - options.weekStartsOn + 8) % 7 || 7
                switch (
                  token // Numerical value (Nth day of week with current locale or weekStartsOn)
                ) {
                  case 'e':
                    return String(localDayOfWeek) // Padded numerical value
                  case 'ee':
                    return addLeadingZeros(localDayOfWeek, 2) // 1st, 2nd, ..., 7th
                  case 'eo':
                    return localize.ordinalNumber(localDayOfWeek, {
                      unit: 'day'
                    })
                  case 'eee':
                    return localize.day(dayOfWeek, {
                      width: 'abbreviated',
                      context: 'formatting'
                    }) // T
                  case 'eeeee':
                    return localize.day(dayOfWeek, {
                      width: 'narrow',
                      context: 'formatting'
                    }) // Tu
                  case 'eeeeee':
                    return localize.day(dayOfWeek, {
                      width: 'short',
                      context: 'formatting'
                    }) // Tuesday
                  case 'eeee':
                  default:
                    return localize.day(dayOfWeek, {
                      width: 'wide',
                      context: 'formatting'
                    })
                }
              }, // Stand-alone local day of week
              c: function c(date, token, localize, options) {
                var dayOfWeek = date.getUTCDay()
                var localDayOfWeek =
                  (dayOfWeek - options.weekStartsOn + 8) % 7 || 7
                switch (
                  token // Numerical value (same as in `e`)
                ) {
                  case 'c':
                    return String(localDayOfWeek) // Padded numberical value
                  case 'cc':
                    return addLeadingZeros(localDayOfWeek, token.length) // 1st, 2nd, ..., 7th
                  case 'co':
                    return localize.ordinalNumber(localDayOfWeek, {
                      unit: 'day'
                    })
                  case 'ccc':
                    return localize.day(dayOfWeek, {
                      width: 'abbreviated',
                      context: 'standalone'
                    }) // T
                  case 'ccccc':
                    return localize.day(dayOfWeek, {
                      width: 'narrow',
                      context: 'standalone'
                    }) // Tu
                  case 'cccccc':
                    return localize.day(dayOfWeek, {
                      width: 'short',
                      context: 'standalone'
                    }) // Tuesday
                  case 'cccc':
                  default:
                    return localize.day(dayOfWeek, {
                      width: 'wide',
                      context: 'standalone'
                    })
                }
              }, // ISO day of week
              i: function i(date, token, localize, options) {
                var dayOfWeek = date.getUTCDay()
                var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek
                switch (
                  token // 2
                ) {
                  case 'i':
                    return String(isoDayOfWeek) // 02
                  case 'ii':
                    return addLeadingZeros(isoDayOfWeek, token.length) // 2nd
                  case 'io':
                    return localize.ordinalNumber(isoDayOfWeek, { unit: 'day' }) // Tue
                  case 'iii':
                    return localize.day(dayOfWeek, {
                      width: 'abbreviated',
                      context: 'formatting'
                    }) // T
                  case 'iiiii':
                    return localize.day(dayOfWeek, {
                      width: 'narrow',
                      context: 'formatting'
                    }) // Tu
                  case 'iiiiii':
                    return localize.day(dayOfWeek, {
                      width: 'short',
                      context: 'formatting'
                    }) // Tuesday
                  case 'iiii':
                  default:
                    return localize.day(dayOfWeek, {
                      width: 'wide',
                      context: 'formatting'
                    })
                }
              }, // AM or PM
              a: function a(date, token, localize) {
                var hours = date.getUTCHours()
                var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am'
                switch (token) {
                  case 'a':
                  case 'aa':
                  case 'aaa':
                    return localize.dayPeriod(dayPeriodEnumValue, {
                      width: 'abbreviated',
                      context: 'formatting'
                    })
                  case 'aaaaa':
                    return localize.dayPeriod(dayPeriodEnumValue, {
                      width: 'narrow',
                      context: 'formatting'
                    })
                  case 'aaaa':
                  default:
                    return localize.dayPeriod(dayPeriodEnumValue, {
                      width: 'wide',
                      context: 'formatting'
                    })
                }
              }, // AM, PM, midnight, noon
              b: function b(date, token, localize) {
                var hours = date.getUTCHours()
                var dayPeriodEnumValue
                if (hours === 12) {
                  dayPeriodEnumValue = dayPeriodEnum.noon
                } else if (hours === 0) {
                  dayPeriodEnumValue = dayPeriodEnum.midnight
                } else {
                  dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am'
                }
                switch (token) {
                  case 'b':
                  case 'bb':
                  case 'bbb':
                    return localize.dayPeriod(dayPeriodEnumValue, {
                      width: 'abbreviated',
                      context: 'formatting'
                    })
                  case 'bbbbb':
                    return localize.dayPeriod(dayPeriodEnumValue, {
                      width: 'narrow',
                      context: 'formatting'
                    })
                  case 'bbbb':
                  default:
                    return localize.dayPeriod(dayPeriodEnumValue, {
                      width: 'wide',
                      context: 'formatting'
                    })
                }
              }, // in the morning, in the afternoon, in the evening, at night
              B: function B(date, token, localize) {
                var hours = date.getUTCHours()
                var dayPeriodEnumValue
                if (hours >= 17) {
                  dayPeriodEnumValue = dayPeriodEnum.evening
                } else if (hours >= 12) {
                  dayPeriodEnumValue = dayPeriodEnum.afternoon
                } else if (hours >= 4) {
                  dayPeriodEnumValue = dayPeriodEnum.morning
                } else {
                  dayPeriodEnumValue = dayPeriodEnum.night
                }
                switch (token) {
                  case 'B':
                  case 'BB':
                  case 'BBB':
                    return localize.dayPeriod(dayPeriodEnumValue, {
                      width: 'abbreviated',
                      context: 'formatting'
                    })
                  case 'BBBBB':
                    return localize.dayPeriod(dayPeriodEnumValue, {
                      width: 'narrow',
                      context: 'formatting'
                    })
                  case 'BBBB':
                  default:
                    return localize.dayPeriod(dayPeriodEnumValue, {
                      width: 'wide',
                      context: 'formatting'
                    })
                }
              }, // Hour [1-12]
              h: function h(date, token, localize, options) {
                var hours = date.getUTCHours() % 12
                if (hours === 0) {
                  hours = 12
                }
                if (token === 'ho') {
                  return localize.ordinalNumber(hours, { unit: 'hour' })
                }
                return addLeadingZeros(hours, token.length)
              }, // Hour [0-23]
              H: function H(date, token, localize, options) {
                var hours = date.getUTCHours()
                if (token === 'Ho') {
                  return localize.ordinalNumber(hours, { unit: 'hour' })
                }
                return addLeadingZeros(hours, token.length)
              }, // Hour [0-11]
              K: function K(date, token, localize, options) {
                var hours = date.getUTCHours() % 12
                if (token === 'Ko') {
                  return localize.ordinalNumber(hours, { unit: 'hour' })
                }
                return addLeadingZeros(hours, token.length)
              }, // Hour [1-24]
              k: function k(date, token, localize, options) {
                var hours = date.getUTCHours()
                if (hours === 0) {
                  hours = 24
                }
                if (token === 'ko') {
                  return localize.ordinalNumber(hours, { unit: 'hour' })
                }
                return addLeadingZeros(hours, token.length)
              }, // Minute
              m: function m(date, token, localize, options) {
                var minutes = date.getUTCMinutes()
                if (token === 'mo') {
                  return localize.ordinalNumber(minutes, { unit: 'minute' })
                }
                return addLeadingZeros(minutes, token.length)
              }, // Second
              s: function s(date, token, localize, options) {
                var seconds = date.getUTCSeconds()
                if (token === 'so') {
                  return localize.ordinalNumber(seconds, { unit: 'second' })
                }
                return addLeadingZeros(seconds, token.length)
              }, // Fraction of second
              S: function S(date, token, localize, options) {
                var numberOfDigits = token.length
                var milliseconds = date.getUTCMilliseconds()
                var fractionalSeconds = Math.floor(
                  milliseconds * Math.pow(10, numberOfDigits - 3)
                )
                return addLeadingZeros(fractionalSeconds, numberOfDigits)
              }, // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)
              X: function X(date, token, localize, options) {
                var originalDate = options._originalDate || date
                var timezoneOffset = originalDate.getTimezoneOffset()
                if (timezoneOffset === 0) {
                  return 'Z'
                }
                switch (
                  token // Hours and optional minutes
                ) {
                  case 'X':
                    return formatTimezoneWithOptionalMinutes(timezoneOffset) // Hours, minutes and optional seconds without `:` delimeter
                  // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
                  // so this token always has the same output as `XX`
                  case 'XXXX':
                  case 'XX': // Hours and minutes without `:` delimeter
                    return formatTimezone(timezoneOffset) // Hours, minutes and optional seconds with `:` delimeter
                  // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
                  // so this token always has the same output as `XXX`
                  case 'XXXXX':
                  case 'XXX': // Hours and minutes with `:` delimeter
                  default:
                    return formatTimezone(timezoneOffset, ':')
                }
              }, // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)
              x: function x(date, token, localize, options) {
                var originalDate = options._originalDate || date
                var timezoneOffset = originalDate.getTimezoneOffset()
                switch (
                  token // Hours and optional minutes
                ) {
                  case 'x':
                    return formatTimezoneWithOptionalMinutes(timezoneOffset) // Hours, minutes and optional seconds without `:` delimeter
                  // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
                  // so this token always has the same output as `xx`
                  case 'xxxx':
                  case 'xx': // Hours and minutes without `:` delimeter
                    return formatTimezone(timezoneOffset) // Hours, minutes and optional seconds with `:` delimeter
                  // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
                  // so this token always has the same output as `xxx`
                  case 'xxxxx':
                  case 'xxx': // Hours and minutes with `:` delimeter
                  default:
                    return formatTimezone(timezoneOffset, ':')
                }
              }, // Timezone (GMT)
              O: function O(date, token, localize, options) {
                var originalDate = options._originalDate || date
                var timezoneOffset = originalDate.getTimezoneOffset()
                switch (
                  token // Short
                ) {
                  case 'O':
                  case 'OO':
                  case 'OOO':
                    return 'GMT' + formatTimezoneShort(timezoneOffset, ':') // Long
                  case 'OOOO':
                  default:
                    return 'GMT' + formatTimezone(timezoneOffset, ':')
                }
              }, // Timezone (specific non-location)
              z: function z(date, token, localize, options) {
                var originalDate = options._originalDate || date
                var timezoneOffset = originalDate.getTimezoneOffset()
                switch (
                  token // Short
                ) {
                  case 'z':
                  case 'zz':
                  case 'zzz':
                    return 'GMT' + formatTimezoneShort(timezoneOffset, ':') // Long
                  case 'zzzz':
                  default:
                    return 'GMT' + formatTimezone(timezoneOffset, ':')
                }
              }, // Seconds timestamp
              t: function t(date, token, localize, options) {
                var originalDate = options._originalDate || date
                var timestamp = Math.floor(originalDate.getTime() / 1000)
                return addLeadingZeros(timestamp, token.length)
              }, // Milliseconds timestamp
              T: function T(date, token, localize, options) {
                var originalDate = options._originalDate || date
                var timestamp = originalDate.getTime()
                return addLeadingZeros(timestamp, token.length)
              }
            }
            function addLeadingZeros(number, targetLength) {
              var sign = number < 0 ? '-' : ''
              var output = Math.abs(number).toString()
              while (output.length < targetLength) {
                output = '0' + output
              }
              return sign + output
            }
            function formatTimezone(offset, dirtyDelimeter) {
              var delimeter = dirtyDelimeter || ''
              var sign = offset > 0 ? '-' : '+'
              var absOffset = Math.abs(offset)
              var hours = addLeadingZeros(Math.floor(absOffset / 60), 2)
              var minutes = addLeadingZeros(absOffset % 60, 2)
              return sign + hours + delimeter + minutes
            }
            function formatTimezoneWithOptionalMinutes(offset, dirtyDelimeter) {
              if (offset % 60 === 0) {
                var sign = offset > 0 ? '-' : '+'
                return sign + addLeadingZeros(Math.abs(offset) / 60, 2)
              }
              return formatTimezone(offset, dirtyDelimeter)
            }
            function formatTimezoneShort(offset, dirtyDelimeter) {
              var sign = offset > 0 ? '-' : '+'
              var absOffset = Math.abs(offset)
              var hours = Math.floor(absOffset / 60)
              var minutes = absOffset % 60
              if (minutes === 0) {
                return sign + String(hours)
              }
              var delimeter = dirtyDelimeter || ''
              return (
                sign + String(hours) + delimeter + addLeadingZeros(minutes, 2)
              )
            }
            function dateLongFormatter(pattern, formatLong, options) {
              switch (pattern) {
                case 'P':
                  return formatLong.date({ width: 'short' })
                case 'PP':
                  return formatLong.date({ width: 'medium' })
                case 'PPP':
                  return formatLong.date({ width: 'long' })
                case 'PPPP':
                default:
                  return formatLong.date({ width: 'full' })
              }
            }
            function timeLongFormatter(pattern, formatLong, options) {
              switch (pattern) {
                case 'p':
                  return formatLong.time({ width: 'short' })
                case 'pp':
                  return formatLong.time({ width: 'medium' })
                case 'ppp':
                  return formatLong.time({ width: 'long' })
                case 'pppp':
                default:
                  return formatLong.time({ width: 'full' })
              }
            }
            function dateTimeLongFormatter(pattern, formatLong, options) {
              var matchResult = pattern.match(/(P+)(p+)?/)
              var datePattern = matchResult[1]
              var timePattern = matchResult[2]
              if (!timePattern) {
                return dateLongFormatter(pattern, formatLong)
              }
              var dateTimeFormat
              switch (datePattern) {
                case 'P':
                  dateTimeFormat = formatLong.dateTime({ width: 'short' })
                  break
                case 'PP':
                  dateTimeFormat = formatLong.dateTime({ width: 'medium' })
                  break
                case 'PPP':
                  dateTimeFormat = formatLong.dateTime({ width: 'long' })
                  break
                case 'PPPP':
                default:
                  dateTimeFormat = formatLong.dateTime({ width: 'full' })
                  break
              }
              return dateTimeFormat
                .replace('{{date}}', dateLongFormatter(datePattern, formatLong))
                .replace('{{time}}', timeLongFormatter(timePattern, formatLong))
            }
            var longFormatters = {
              p: timeLongFormatter,
              P: dateTimeLongFormatter
            }
            /**
             * @name subMilliseconds
             * @category Millisecond Helpers
             * @summary Subtract the specified number of milliseconds from the given date.
             *
             * @description
             * Subtract the specified number of milliseconds from the given date.
             *
             * @param {Date|String|Number} date - the date to be changed
             * @param {Number} amount - the amount of milliseconds to be subtracted
             * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
             * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
             * @returns {Date} the new date with the milliseconds subtracted
             * @throws {TypeError} 2 arguments required
             * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
             *
             * @example
             * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:
             * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
             * //=> Thu Jul 10 2014 12:45:29.250
             */ function subMilliseconds(dirtyDate, dirtyAmount, dirtyOptions) {
              if (arguments.length < 2) {
                throw new TypeError(
                  '2 arguments required, but only ' +
                    arguments.length +
                    ' present'
                )
              }
              var amount = toInteger(dirtyAmount)
              return addMilliseconds(dirtyDate, -amount, dirtyOptions)
            }
            var protectedTokens = ['D', 'DD', 'YY', 'YYYY']
            function isProtectedToken(token) {
              return protectedTokens.indexOf(token) !== -1
            }
            function throwProtectedError(token) {
              throw new RangeError(
                '`options.awareOfUnicodeTokens` must be set to `true` to use `' +
                  token +
                  '` token; see: https://git.io/fxCyr'
              )
            } // This RegExp consists of three parts separated by `|`:
            // - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token
            //   (one of the certain letters followed by `o`)
            // - (\w)\1* matches any sequences of the same letter
            // - '' matches two quote characters in a row
            // - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
            //   except a single quote symbol, which ends the sequence.
            //   Two quote characters do not end the sequence.
            //   If there is no matching single quote
            //   then the sequence will continue until the end of the string.
            // - . matches any single character unmatched by previous parts of the RegExps
            var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g // This RegExp catches symbols escaped by quotes, and also
            // sequences of symbols P, p, and the combinations like `PPPPPPPppppp`
            var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g
            var escapedStringRegExp = /^'(.*?)'?$/
            var doubleQuoteRegExp = /''/g
            /**
             * @name format
             * @category Common Helpers
             * @summary Format the date.
             *
             * @description
             * Return the formatted date string in the given format. The result may vary by locale.
             *
             * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.
             * > See: https://git.io/fxCyr
             *
             * The characters wrapped between two single quotes characters (') are escaped.
             * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
             * (see the last example)
             *
             * Format of the string is based on Unicode Technical Standard #35:
             * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
             * with a few additions (see note 7 below the table).
             *
             * Accepted patterns:
             * | Unit                            | Pattern | Result examples                   | Notes |
             * |---------------------------------|---------|-----------------------------------|-------|
             * | Era                             | G..GGG  | AD, BC                            |       |
             * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |
             * |                                 | GGGGG   | A, B                              |       |
             * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |
             * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |
             * |                                 | yy      | 44, 01, 00, 17                    | 5     |
             * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |
             * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |
             * |                                 | yyyyy   | ...                               | 3,5   |
             * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |
             * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |
             * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |
             * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |
             * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |
             * |                                 | YYYYY   | ...                               | 3,5   |
             * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |
             * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |
             * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |
             * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |
             * |                                 | RRRRR   | ...                               | 3,5,7 |
             * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |
             * |                                 | uu      | -43, 01, 1900, 2017               | 5     |
             * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |
             * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |
             * |                                 | uuuuu   | ...                               | 3,5   |
             * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |
             * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |
             * |                                 | QQ      | 01, 02, 03, 04                    |       |
             * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |
             * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |
             * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |
             * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |
             * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |
             * |                                 | qq      | 01, 02, 03, 04                    |       |
             * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |
             * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |
             * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |
             * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |
             * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |
             * |                                 | MM      | 01, 02, ..., 12                   |       |
             * |                                 | MMM     | Jan, Feb, ..., Dec                |       |
             * |                                 | MMMM    | January, February, ..., December  | 2     |
             * |                                 | MMMMM   | J, F, ..., D                      |       |
             * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |
             * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |
             * |                                 | LL      | 01, 02, ..., 12                   |       |
             * |                                 | LLL     | Jan, Feb, ..., Dec                |       |
             * |                                 | LLLL    | January, February, ..., December  | 2     |
             * |                                 | LLLLL   | J, F, ..., D                      |       |
             * | Local week of year              | w       | 1, 2, ..., 53                     |       |
             * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |
             * |                                 | ww      | 01, 02, ..., 53                   |       |
             * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |
             * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |
             * |                                 | II      | 01, 02, ..., 53                   | 7     |
             * | Day of month                    | d       | 1, 2, ..., 31                     |       |
             * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |
             * |                                 | dd      | 01, 02, ..., 31                   |       |
             * | Day of year                     | D       | 1, 2, ..., 365, 366               | 8     |
             * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |
             * |                                 | DD      | 01, 02, ..., 365, 366             | 8     |
             * |                                 | DDD     | 001, 002, ..., 365, 366           |       |
             * |                                 | DDDD    | ...                               | 3     |
             * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Su            |       |
             * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |
             * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |
             * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
             * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |
             * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |
             * |                                 | ii      | 01, 02, ..., 07                   | 7     |
             * |                                 | iii     | Mon, Tue, Wed, ..., Su            | 7     |
             * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |
             * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |
             * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |
             * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |
             * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |
             * |                                 | ee      | 02, 03, ..., 01                   |       |
             * |                                 | eee     | Mon, Tue, Wed, ..., Su            |       |
             * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |
             * |                                 | eeeee   | M, T, W, T, F, S, S               |       |
             * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
             * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |
             * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |
             * |                                 | cc      | 02, 03, ..., 01                   |       |
             * |                                 | ccc     | Mon, Tue, Wed, ..., Su            |       |
             * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |
             * |                                 | ccccc   | M, T, W, T, F, S, S               |       |
             * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
             * | AM, PM                          | a..aaa  | AM, PM                            |       |
             * |                                 | aaaa    | a.m., p.m.                        | 2     |
             * |                                 | aaaaa   | a, p                              |       |
             * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |
             * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |
             * |                                 | bbbbb   | a, p, n, mi                       |       |
             * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |
             * |                                 | BBBB    | at night, in the morning, ...     | 2     |
             * |                                 | BBBBB   | at night, in the morning, ...     |       |
             * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |
             * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |
             * |                                 | hh      | 01, 02, ..., 11, 12               |       |
             * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |
             * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |
             * |                                 | HH      | 00, 01, 02, ..., 23               |       |
             * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |
             * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |
             * |                                 | KK      | 1, 2, ..., 11, 0                  |       |
             * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |
             * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |
             * |                                 | kk      | 24, 01, 02, ..., 23               |       |
             * | Minute                          | m       | 0, 1, ..., 59                     |       |
             * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |
             * |                                 | mm      | 00, 01, ..., 59                   |       |
             * | Second                          | s       | 0, 1, ..., 59                     |       |
             * |                                 | so      | 0th, 1st, ..., 59th               | 7     |
             * |                                 | ss      | 00, 01, ..., 59                   |       |
             * | Fraction of second              | S       | 0, 1, ..., 9                      |       |
             * |                                 | SS      | 00, 01, ..., 99                   |       |
             * |                                 | SSS     | 000, 0001, ..., 999               |       |
             * |                                 | SSSS    | ...                               | 3     |
             * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |
             * |                                 | XX      | -0800, +0530, Z                   |       |
             * |                                 | XXX     | -08:00, +05:30, Z                 |       |
             * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |
             * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |
             * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |
             * |                                 | xx      | -0800, +0530, +0000               |       |
             * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |
             * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |
             * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |
             * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |
             * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |
             * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |
             * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |
             * | Seconds timestamp               | t       | 512969520                         | 7     |
             * |                                 | tt      | ...                               | 3,7   |
             * | Milliseconds timestamp          | T       | 512969520900                      | 7     |
             * |                                 | TT      | ...                               | 3,7   |
             * | Long localized date             | P       | 05/29/1453                        | 7     |
             * |                                 | PP      | May 29, 1453                      | 7     |
             * |                                 | PPP     | May 29th, 1453                    | 7     |
             * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |
             * | Long localized time             | p       | 12:00 AM                          | 7     |
             * |                                 | pp      | 12:00:00 AM                       | 7     |
             * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |
             * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |
             * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |
             * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |
             * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |
             * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |
             * Notes:
             * 1. "Formatting" units (e.g. formatting quarter) in the default en-US locale
             *    are the same as "stand-alone" units, but are different in some languages.
             *    "Formatting" units are declined according to the rules of the language
             *    in the context of a date. "Stand-alone" units are always nominative singular:
             *
             *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`
             *
             *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`
             *
             * 2. Any sequence of the identical letters is a pattern, unless it is escaped by
             *    the single quote characters (see below).
             *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)
             *    the output will be the same as default pattern for this unit, usually
             *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units
             *    are marked with "2" in the last column of the table.
             *
             *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`
             *
             *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`
             *
             *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`
             *
             *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`
             *
             *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`
             *
             * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).
             *    The output will be padded with zeros to match the length of the pattern.
             *
             *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`
             *
             * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.
             *    These tokens represent the shortest form of the quarter.
             *
             * 5. The main difference between `y` and `u` patterns are B.C. years:
             *
             *    | Year | `y` | `u` |
             *    |------|-----|-----|
             *    | AC 1 |   1 |   1 |
             *    | BC 1 |   1 |   0 |
             *    | BC 2 |   2 |  -1 |
             *
             *    Also `yy` always returns the last two digits of a year,
             *    while `uu` pads single digit years to 2 characters and returns other years unchanged:
             *
             *    | Year | `yy` | `uu` |
             *    |------|------|------|
             *    | 1    |   01 |   01 |
             *    | 14   |   14 |   14 |
             *    | 376  |   76 |  376 |
             *    | 1453 |   53 | 1453 |
             *
             *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),
             *    except local week-numbering years are dependent on `options.weekStartsOn`
             *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}
             *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).
             *
             * 6. Specific non-location timezones are currently unavailable in `date-fns`,
             *    so right now these tokens fall back to GMT timezones.
             *
             * 7. These patterns are not in the Unicode Technical Standard #35:
             *    - `i`: ISO day of week
             *    - `I`: ISO week of year
             *    - `R`: ISO week-numbering year
             *    - `t`: seconds timestamp
             *    - `T`: milliseconds timestamp
             *    - `o`: ordinal number modifier
             *    - `P`: long localized date
             *    - `p`: long localized time
             *
             * 8. These tokens are often confused with others. See: https://git.io/fxCyr
             *
             * @param {Date|String|Number} date - the original date
             * @param {String} format - the string of tokens
             * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
             * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
             * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
             * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is
             * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
             * @param {Boolean} [options.awareOfUnicodeTokens=false] - if true, allows usage of Unicode tokens causes confusion:
             *   - Some of the day of year tokens (`D`, `DD`) that are confused with the day of month tokens (`d`, `dd`).
             *   - Some of the local week-numbering year tokens (`YY`, `YYYY`) that are confused with the calendar year tokens (`yy`, `yyyy`).
             *   See: https://git.io/fxCyr
             * @returns {String} the formatted date string
             * @throws {TypeError} 2 arguments required
             * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
             * @throws {RangeError} `options.locale` must contain `localize` property
             * @throws {RangeError} `options.locale` must contain `formatLong` property
             * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
             * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
             * @throws {RangeError} `options.awareOfUnicodeTokens` must be set to `true` to use `XX` token; see: https://git.io/fxCyr
             *
             * @example
             * // Represent 11 February 2014 in middle-endian format:
             * var result = format(
             *   new Date(2014, 1, 11),
             *   'MM/dd/yyyy'
             * )
             * //=> '02/11/2014'
             *
             * @example
             * // Represent 2 July 2014 in Esperanto:
             * import { eoLocale } from 'date-fns/locale/eo'
             * var result = format(
             *   new Date(2014, 6, 2),
             *   "do 'de' MMMM yyyy",
             *   {locale: eoLocale}
             * )
             * //=> '2-a de julio 2014'
             *
             * @example
             * // Escape string by single quote characters:
             * var result = format(
             *   new Date(2014, 6, 2, 15),
             *   "h 'o''clock'"
             * )
             * //=> "3 o'clock"
             */ function format(dirtyDate, dirtyFormatStr, dirtyOptions) {
              if (arguments.length < 2) {
                throw new TypeError(
                  '2 arguments required, but only ' +
                    arguments.length +
                    ' present'
                )
              }
              var formatStr = String(dirtyFormatStr)
              var options = dirtyOptions || {}
              var locale$1 = options.locale || locale
              var localeFirstWeekContainsDate =
                locale$1.options && locale$1.options.firstWeekContainsDate
              var defaultFirstWeekContainsDate =
                localeFirstWeekContainsDate == null
                  ? 1
                  : toInteger(localeFirstWeekContainsDate)
              var firstWeekContainsDate =
                options.firstWeekContainsDate == null
                  ? defaultFirstWeekContainsDate
                  : toInteger(options.firstWeekContainsDate) // Test if weekStartsOn is between 1 and 7 _and_ is not NaN
              if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
                throw new RangeError(
                  'firstWeekContainsDate must be between 1 and 7 inclusively'
                )
              }
              var localeWeekStartsOn =
                locale$1.options && locale$1.options.weekStartsOn
              var defaultWeekStartsOn =
                localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn)
              var weekStartsOn =
                options.weekStartsOn == null
                  ? defaultWeekStartsOn
                  : toInteger(options.weekStartsOn) // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
              if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
                throw new RangeError(
                  'weekStartsOn must be between 0 and 6 inclusively'
                )
              }
              if (!locale$1.localize) {
                throw new RangeError('locale must contain localize property')
              }
              if (!locale$1.formatLong) {
                throw new RangeError('locale must contain formatLong property')
              }
              var originalDate = toDate(dirtyDate, options)
              if (!isValid(originalDate, options)) {
                return 'Invalid Date'
              } // Convert the date in system timezone to the same date in UTC+00:00 timezone.
              // This ensures that when UTC functions will be implemented, locales will be compatible with them.
              // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376
              var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate)
              var utcDate = subMilliseconds(
                originalDate,
                timezoneOffset,
                options
              )
              var formatterOptions = {
                firstWeekContainsDate: firstWeekContainsDate,
                weekStartsOn: weekStartsOn,
                locale: locale$1,
                _originalDate: originalDate
              }
              var result = formatStr
                .match(longFormattingTokensRegExp)
                .map(function(substring) {
                  var firstCharacter = substring[0]
                  if (firstCharacter === 'p' || firstCharacter === 'P') {
                    var longFormatter = longFormatters[firstCharacter]
                    return longFormatter(
                      substring,
                      locale$1.formatLong,
                      formatterOptions
                    )
                  }
                  return substring
                })
                .join('')
                .match(formattingTokensRegExp)
                .map(function(substring) {
                  // Replace two single quote characters with one single quote character
                  if (substring === "''") {
                    return "'"
                  }
                  var firstCharacter = substring[0]
                  if (firstCharacter === "'") {
                    return cleanEscapedString(substring)
                  }
                  var formatter = formatters[firstCharacter]
                  if (formatter) {
                    if (
                      !options.awareOfUnicodeTokens &&
                      isProtectedToken(substring)
                    ) {
                      throwProtectedError(substring)
                    }
                    return formatter(
                      utcDate,
                      substring,
                      locale$1.localize,
                      formatterOptions
                    )
                  }
                  return substring
                })
                .join('')
              return result
            }
            function cleanEscapedString(input) {
              return input
                .match(escapedStringRegExp)[1]
                .replace(doubleQuoteRegExp, "'")
            }
            /**
             * @name isAfter
             * @category Common Helpers
             * @summary Is the first date after the second one?
             *
             * @description
             * Is the first date after the second one?
             *
             * @param {Date|String|Number} date - the date that should be after the other one to return true
             * @param {Date|String|Number} dateToCompare - the date to compare with
             * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
             * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
             * @returns {Boolean} the first date is after the second date
             * @throws {TypeError} 2 arguments required
             * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
             *
             * @example
             * // Is 10 July 1989 after 11 February 1987?
             * var result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))
             * //=> true
             */ function isAfter(dirtyDate, dirtyDateToCompare, dirtyOptions) {
              if (arguments.length < 2) {
                throw new TypeError(
                  '2 arguments required, but only ' +
                    arguments.length +
                    ' present'
                )
              }
              var date = toDate(dirtyDate, dirtyOptions)
              var dateToCompare = toDate(dirtyDateToCompare, dirtyOptions)
              return date.getTime() > dateToCompare.getTime()
            }
            /**
             * @name isBefore
             * @category Common Helpers
             * @summary Is the first date before the second one?
             *
             * @description
             * Is the first date before the second one?
             *
             * @param {Date|String|Number} date - the date that should be before the other one to return true
             * @param {Date|String|Number} dateToCompare - the date to compare with
             * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
             * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
             * @returns {Boolean} the first date is before the second date
             * @throws {TypeError} 2 arguments required
             * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
             *
             * @example
             * // Is 10 July 1989 before 11 February 1987?
             * var result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))
             * //=> false
             */ function isBefore(dirtyDate, dirtyDateToCompare, dirtyOptions) {
              if (arguments.length < 2) {
                throw new TypeError(
                  '2 arguments required, but only ' +
                    arguments.length +
                    ' present'
                )
              }
              var date = toDate(dirtyDate, dirtyOptions)
              var dateToCompare = toDate(dirtyDateToCompare, dirtyOptions)
              return date.getTime() < dateToCompare.getTime()
            }
            /**
             * @name isEqual
             * @category Common Helpers
             * @summary Are the given dates equal?
             *
             * @description
             * Are the given dates equal?
             *
             * @param {Date|String|Number} dateLeft - the first date to compare
             * @param {Date|String|Number} dateRight - the second date to compare
             * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
             * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
             * @returns {Boolean} the dates are equal
             * @throws {TypeError} 2 arguments required
             * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
             *
             * @example
             * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?
             * var result = isEqual(
             *   new Date(2014, 6, 2, 6, 30, 45, 0)
             *   new Date(2014, 6, 2, 6, 30, 45, 500)
             * )
             * //=> false
             */ function isEqual(dirtyLeftDate, dirtyRightDate, dirtyOptions) {
              if (arguments.length < 2) {
                throw new TypeError(
                  '2 arguments required, but only ' +
                    arguments.length +
                    ' present'
                )
              }
              var dateLeft = toDate(dirtyLeftDate, dirtyOptions)
              var dateRight = toDate(dirtyRightDate, dirtyOptions)
              return dateLeft.getTime() === dateRight.getTime()
            } // This function will be a part of public API when UTC function will be implemented.
            // See issue: https://github.com/date-fns/date-fns/issues/376
            function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {
              if (arguments.length < 2) {
                throw new TypeError(
                  '2 arguments required, but only ' +
                    arguments.length +
                    ' present'
                )
              }
              var options = dirtyOptions || {}
              var locale = options.locale
              var localeWeekStartsOn =
                locale && locale.options && locale.options.weekStartsOn
              var defaultWeekStartsOn =
                localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn)
              var weekStartsOn =
                options.weekStartsOn == null
                  ? defaultWeekStartsOn
                  : toInteger(options.weekStartsOn) // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
              if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
                throw new RangeError(
                  'weekStartsOn must be between 0 and 6 inclusively'
                )
              }
              var date = toDate(dirtyDate, dirtyOptions)
              var day = toInteger(dirtyDay)
              var currentDay = date.getUTCDay()
              var remainder = day % 7
              var dayIndex = (remainder + 7) % 7
              var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay
              date.setUTCDate(date.getUTCDate() + diff)
              return date
            } // This function will be a part of public API when UTC function will be implemented.
            // See issue: https://github.com/date-fns/date-fns/issues/376
            function setUTCWeek(dirtyDate, dirtyWeek, dirtyOptions) {
              if (arguments.length < 2) {
                throw new TypeError(
                  '2 arguments required, but only ' +
                    arguments.length +
                    ' present'
                )
              }
              var date = toDate(dirtyDate, dirtyOptions)
              var week = toInteger(dirtyWeek)
              var diff = getUTCWeek(date, dirtyOptions) - week
              date.setUTCDate(date.getUTCDate() - diff * 7)
              return date
            } // This function will be a part of public API when UTC function will be implemented.
            // See issue: https://github.com/date-fns/date-fns/issues/376
            function setUTCISODay(dirtyDate, dirtyDay, dirtyOptions) {
              if (arguments.length < 2) {
                throw new TypeError(
                  '2 arguments required, but only ' +
                    arguments.length +
                    ' present'
                )
              }
              var day = toInteger(dirtyDay)
              if (day % 7 === 0) {
                day = day - 7
              }
              var weekStartsOn = 1
              var date = toDate(dirtyDate, dirtyOptions)
              var currentDay = date.getUTCDay()
              var remainder = day % 7
              var dayIndex = (remainder + 7) % 7
              var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay
              date.setUTCDate(date.getUTCDate() + diff)
              return date
            } // This function will be a part of public API when UTC function will be implemented.
            // See issue: https://github.com/date-fns/date-fns/issues/376
            function setUTCISOWeek(dirtyDate, dirtyISOWeek, dirtyOptions) {
              if (arguments.length < 2) {
                throw new TypeError(
                  '2 arguments required, but only ' +
                    arguments.length +
                    ' present'
                )
              }
              var date = toDate(dirtyDate, dirtyOptions)
              var isoWeek = toInteger(dirtyISOWeek)
              var diff = getUTCISOWeek(date, dirtyOptions) - isoWeek
              date.setUTCDate(date.getUTCDate() - diff * 7)
              return date
            }
            var MILLISECONDS_IN_HOUR$1 = 3600000
            var MILLISECONDS_IN_MINUTE$2 = 60000
            var MILLISECONDS_IN_SECOND = 1000
            var numericPatterns = {
              month: /^(1[0-2]|0?\d)/, // 0 to 12
              date: /^(3[0-1]|[0-2]?\d)/, // 0 to 31
              dayOfYear: /^(36[0-6]|3[0-5]\d|[0-2]?\d?\d)/, // 0 to 366
              week: /^(5[0-3]|[0-4]?\d)/, // 0 to 53
              hour23h: /^(2[0-3]|[0-1]?\d)/, // 0 to 23
              hour24h: /^(2[0-4]|[0-1]?\d)/, // 0 to 24
              hour11h: /^(1[0-1]|0?\d)/, // 0 to 11
              hour12h: /^(1[0-2]|0?\d)/, // 0 to 12
              minute: /^[0-5]?\d/, // 0 to 59
              second: /^[0-5]?\d/, // 0 to 59
              singleDigit: /^\d/, // 0 to 9
              twoDigits: /^\d{1,2}/, // 0 to 99
              threeDigits: /^\d{1,3}/, // 0 to 999
              fourDigits: /^\d{1,4}/, // 0 to 9999
              anyDigitsSigned: /^-?\d+/,
              singleDigitSigned: /^-?\d/, // 0 to 9, -0 to -9
              twoDigitsSigned: /^-?\d{1,2}/, // 0 to 99, -0 to -99
              threeDigitsSigned: /^-?\d{1,3}/, // 0 to 999, -0 to -999
              fourDigitsSigned: /^-?\d{1,4}/ // 0 to 9999, -0 to -9999
            }
            var timezonePatterns = {
              basicOptionalMinutes: /^([+-])(\d{2})(\d{2})?|Z/,
              basic: /^([+-])(\d{2})(\d{2})|Z/,
              basicOptionalSeconds: /^([+-])(\d{2})(\d{2})((\d{2}))?|Z/,
              extended: /^([+-])(\d{2}):(\d{2})|Z/,
              extendedOptionalSeconds: /^([+-])(\d{2}):(\d{2})(:(\d{2}))?|Z/
            }
            function parseNumericPattern(pattern, string, valueCallback) {
              var matchResult = string.match(pattern)
              if (!matchResult) {
                return null
              }
              var value = parseInt(matchResult[0], 10)
              return {
                value: valueCallback ? valueCallback(value) : value,
                rest: string.slice(matchResult[0].length)
              }
            }
            function parseTimezonePattern(pattern, string) {
              var matchResult = string.match(pattern)
              if (!matchResult) {
                return null
              } // Input is 'Z'
              if (matchResult[0] === 'Z') {
                return { value: 0, rest: string.slice(1) }
              }
              var sign = matchResult[1] === '+' ? 1 : -1
              var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0
              var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0
              var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0
              return {
                value:
                  sign *
                  (hours * MILLISECONDS_IN_HOUR$1 +
                    minutes * MILLISECONDS_IN_MINUTE$2 +
                    seconds * MILLISECONDS_IN_SECOND),
                rest: string.slice(matchResult[0].length)
              }
            }
            function parseAnyDigitsSigned(string, valueCallback) {
              return parseNumericPattern(
                numericPatterns.anyDigitsSigned,
                string,
                valueCallback
              )
            }
            function parseNDigits(n, string, valueCallback) {
              switch (n) {
                case 1:
                  return parseNumericPattern(
                    numericPatterns.singleDigit,
                    string,
                    valueCallback
                  )
                case 2:
                  return parseNumericPattern(
                    numericPatterns.twoDigits,
                    string,
                    valueCallback
                  )
                case 3:
                  return parseNumericPattern(
                    numericPatterns.threeDigits,
                    string,
                    valueCallback
                  )
                case 4:
                  return parseNumericPattern(
                    numericPatterns.fourDigits,
                    string,
                    valueCallback
                  )
                default:
                  return parseNumericPattern(
                    new RegExp('^\\d{1,' + n + '}'),
                    string,
                    valueCallback
                  )
              }
            }
            function parseNDigitsSigned(n, string, valueCallback) {
              switch (n) {
                case 1:
                  return parseNumericPattern(
                    numericPatterns.singleDigitSigned,
                    string,
                    valueCallback
                  )
                case 2:
                  return parseNumericPattern(
                    numericPatterns.twoDigitsSigned,
                    string,
                    valueCallback
                  )
                case 3:
                  return parseNumericPattern(
                    numericPatterns.threeDigitsSigned,
                    string,
                    valueCallback
                  )
                case 4:
                  return parseNumericPattern(
                    numericPatterns.fourDigitsSigned,
                    string,
                    valueCallback
                  )
                default:
                  return parseNumericPattern(
                    new RegExp('^-?\\d{1,' + n + '}'),
                    string,
                    valueCallback
                  )
              }
            }
            function dayPeriodEnumToHours(enumValue) {
              switch (enumValue) {
                case 'morning':
                  return 4
                case 'evening':
                  return 17
                case 'pm':
                case 'noon':
                case 'afternoon':
                  return 12
                case 'am':
                case 'midnight':
                case 'night':
                default:
                  return 0
              }
            }
            function normalizeTwoDigitYear(twoDigitYear, currentYear) {
              var isCommonEra = currentYear > 0 // Absolute number of the current year:
              // 1 -> 1 AC
              // 0 -> 1 BC
              // -1 -> 2 BC
              var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear
              var result
              if (absCurrentYear <= 50) {
                result = twoDigitYear || 100
              } else {
                var rangeEnd = absCurrentYear + 50
                var rangeEndCentury = Math.floor(rangeEnd / 100) * 100
                var isPreviousCentury = twoDigitYear >= rangeEnd % 100
                result =
                  twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0)
              }
              return isCommonEra ? result : 1 - result
            }
            var DAYS_IN_MONTH$1 = [
              31,
              28,
              31,
              30,
              31,
              30,
              31,
              31,
              30,
              31,
              30,
              31
            ]
            var DAYS_IN_MONTH_LEAP_YEAR$1 = [
              31,
              29,
              31,
              30,
              31,
              30,
              31,
              31,
              30,
              31,
              30,
              31
            ] // User for validation
            function isLeapYearIndex$1(year) {
              return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0)
            }
            /*
             * |     | Unit                           |     | Unit                           |
             * |-----|--------------------------------|-----|--------------------------------|
             * |  a  | AM, PM                         |  A* | Milliseconds in day            |
             * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |
             * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |
             * |  d  | Day of month                   |  D  | Day of year                    |
             * |  e  | Local day of week              |  E  | Day of week                    |
             * |  f  |                                |  F* | Day of week in month           |
             * |  g* | Modified Julian day            |  G  | Era                            |
             * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
             * |  i! | ISO day of week                |  I! | ISO week of year               |
             * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |
             * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |
             * |  l* | (deprecated)                   |  L  | Stand-alone month              |
             * |  m  | Minute                         |  M  | Month                          |
             * |  n  |                                |  N  |                                |
             * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |
             * |  p  |                                |  P  |                                |
             * |  q  | Stand-alone quarter            |  Q  | Quarter                        |
             * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |
             * |  s  | Second                         |  S  | Fraction of second             |
             * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |
             * |  u  | Extended year                  |  U* | Cyclic year                    |
             * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |
             * |  w  | Local week of year             |  W* | Week of month                  |
             * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |
             * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |
             * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |
             *
             * Letters marked by * are not implemented but reserved by Unicode standard.
             *
             * Letters marked by ! are non-standard, but implemented by date-fns:
             * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)
             * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,
             *   i.e. 7 for Sunday, 1 for Monday, etc.
             * - `I` is ISO week of year, as opposed to `w` which is local week of year.
             * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.
             *   `R` is supposed to be used in conjunction with `I` and `i`
             *   for universal ISO week-numbering date, whereas
             *   `Y` is supposed to be used in conjunction with `w` and `e`
             *   for week-numbering date specific to the locale.
             */ var parsers = {
              // Era
              G: {
                priority: 140,
                parse: function parse(string, token, match, options) {
                  switch (
                    token // AD, BC
                  ) {
                    case 'G':
                    case 'GG':
                    case 'GGG':
                      return (
                        match.era(string, { width: 'abbreviated' }) ||
                        match.era(string, { width: 'narrow' })
                      ) // A, B
                    case 'GGGGG':
                      return match.era(string, { width: 'narrow' }) // Anno Domini, Before Christ
                    case 'GGGG':
                    default:
                      return (
                        match.era(string, { width: 'wide' }) ||
                        match.era(string, { width: 'abbreviated' }) ||
                        match.era(string, { width: 'narrow' })
                      )
                  }
                },
                set: function set(date, value, options) {
                  // Sets year 10 BC if BC, or 10 AC if AC
                  date.setUTCFullYear(value === 1 ? 10 : -9, 0, 1)
                  date.setUTCHours(0, 0, 0, 0)
                  return date
                }
              }, // Year
              y: {
                // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns
                // | Year     |     y | yy |   yyy |  yyyy | yyyyy |
                // |----------|-------|----|-------|-------|-------|
                // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |
                // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |
                // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |
                // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |
                // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |
                priority: 130,
                parse: function parse(string, token, match, options) {
                  var valueCallback = function valueCallback(year) {
                    return { year: year, isTwoDigitYear: token === 'yy' }
                  }
                  switch (token) {
                    case 'y':
                      return parseNDigits(4, string, valueCallback)
                    case 'yo':
                      return match.ordinalNumber(string, {
                        unit: 'year',
                        valueCallback: valueCallback
                      })
                    default:
                      return parseNDigits(token.length, string, valueCallback)
                  }
                },
                validate: function validate(date, value, options) {
                  return value.isTwoDigitYear || value.year > 0
                },
                set: function set(date, value, options) {
                  var currentYear = getUTCWeekYear(date, options)
                  if (value.isTwoDigitYear) {
                    var normalizedTwoDigitYear = normalizeTwoDigitYear(
                      value.year,
                      currentYear
                    )
                    date.setUTCFullYear(normalizedTwoDigitYear, 0, 1)
                    date.setUTCHours(0, 0, 0, 0)
                    return date
                  }
                  var year = currentYear > 0 ? value.year : 1 - value.year
                  date.setUTCFullYear(year, 0, 1)
                  date.setUTCHours(0, 0, 0, 0)
                  return date
                }
              }, // Local week-numbering year
              Y: {
                priority: 130,
                parse: function parse(string, token, match, options) {
                  var valueCallback = function valueCallback(year) {
                    return { year: year, isTwoDigitYear: token === 'YY' }
                  }
                  switch (token) {
                    case 'Y':
                      return parseNDigits(4, string, valueCallback)
                    case 'Yo':
                      return match.ordinalNumber(string, {
                        unit: 'year',
                        valueCallback: valueCallback
                      })
                    default:
                      return parseNDigits(token.length, string, valueCallback)
                  }
                },
                validate: function validate(date, value, options) {
                  return value.isTwoDigitYear || value.year > 0
                },
                set: function set(date, value, options) {
                  var currentYear = date.getUTCFullYear()
                  if (value.isTwoDigitYear) {
                    var normalizedTwoDigitYear = normalizeTwoDigitYear(
                      value.year,
                      currentYear
                    )
                    date.setUTCFullYear(
                      normalizedTwoDigitYear,
                      0,
                      options.firstWeekContainsDate
                    )
                    date.setUTCHours(0, 0, 0, 0)
                    return startOfUTCWeek(date, options)
                  }
                  var year = currentYear > 0 ? value.year : 1 - value.year
                  date.setUTCFullYear(year, 0, options.firstWeekContainsDate)
                  date.setUTCHours(0, 0, 0, 0)
                  return startOfUTCWeek(date, options)
                }
              }, // ISO week-numbering year
              R: {
                priority: 130,
                parse: function parse(string, token, match, options) {
                  if (token === 'R') {
                    return parseNDigitsSigned(4, string)
                  }
                  return parseNDigitsSigned(token.length, string)
                },
                set: function set(date, value, options) {
                  var firstWeekOfYear = new Date(0)
                  firstWeekOfYear.setUTCFullYear(value, 0, 4)
                  firstWeekOfYear.setUTCHours(0, 0, 0, 0)
                  return startOfUTCISOWeek(firstWeekOfYear)
                }
              }, // Extended year
              u: {
                priority: 130,
                parse: function parse(string, token, match, options) {
                  if (token === 'u') {
                    return parseNDigitsSigned(4, string)
                  }
                  return parseNDigitsSigned(token.length, string)
                },
                set: function set(date, value, options) {
                  date.setUTCFullYear(value, 0, 1)
                  date.setUTCHours(0, 0, 0, 0)
                  return date
                }
              }, // Quarter
              Q: {
                priority: 120,
                parse: function parse(string, token, match, options) {
                  switch (
                    token // 1, 2, 3, 4
                  ) {
                    case 'Q':
                    case 'QQ': // 01, 02, 03, 04
                      return parseNDigits(token.length, string) // 1st, 2nd, 3rd, 4th
                    case 'Qo':
                      return match.ordinalNumber(string, { unit: 'quarter' }) // Q1, Q2, Q3, Q4
                    case 'QQQ':
                      return (
                        match.quarter(string, {
                          width: 'abbreviated',
                          context: 'formatting'
                        }) ||
                        match.quarter(string, {
                          width: 'narrow',
                          context: 'formatting'
                        })
                      ) // 1, 2, 3, 4 (narrow quarter; could be not numerical)
                    case 'QQQQQ':
                      return match.quarter(string, {
                        width: 'narrow',
                        context: 'formatting'
                      }) // 1st quarter, 2nd quarter, ...
                    case 'QQQQ':
                    default:
                      return (
                        match.quarter(string, {
                          width: 'wide',
                          context: 'formatting'
                        }) ||
                        match.quarter(string, {
                          width: 'abbreviated',
                          context: 'formatting'
                        }) ||
                        match.quarter(string, {
                          width: 'narrow',
                          context: 'formatting'
                        })
                      )
                  }
                },
                validate: function validate(date, value, options) {
                  return value >= 1 && value <= 4
                },
                set: function set(date, value, options) {
                  date.setUTCMonth((value - 1) * 3, 1)
                  date.setUTCHours(0, 0, 0, 0)
                  return date
                }
              }, // Stand-alone quarter
              q: {
                priority: 120,
                parse: function parse(string, token, match, options) {
                  switch (
                    token // 1, 2, 3, 4
                  ) {
                    case 'q':
                    case 'qq': // 01, 02, 03, 04
                      return parseNDigits(token.length, string) // 1st, 2nd, 3rd, 4th
                    case 'qo':
                      return match.ordinalNumber(string, { unit: 'quarter' }) // Q1, Q2, Q3, Q4
                    case 'qqq':
                      return (
                        match.quarter(string, {
                          width: 'abbreviated',
                          context: 'standalone'
                        }) ||
                        match.quarter(string, {
                          width: 'narrow',
                          context: 'standalone'
                        })
                      ) // 1, 2, 3, 4 (narrow quarter; could be not numerical)
                    case 'qqqqq':
                      return match.quarter(string, {
                        width: 'narrow',
                        context: 'standalone'
                      }) // 1st quarter, 2nd quarter, ...
                    case 'qqqq':
                    default:
                      return (
                        match.quarter(string, {
                          width: 'wide',
                          context: 'standalone'
                        }) ||
                        match.quarter(string, {
                          width: 'abbreviated',
                          context: 'standalone'
                        }) ||
                        match.quarter(string, {
                          width: 'narrow',
                          context: 'standalone'
                        })
                      )
                  }
                },
                validate: function validate(date, value, options) {
                  return value >= 1 && value <= 4
                },
                set: function set(date, value, options) {
                  date.setUTCMonth((value - 1) * 3, 1)
                  date.setUTCHours(0, 0, 0, 0)
                  return date
                }
              }, // Month
              M: {
                priority: 110,
                parse: function parse(string, token, match, options) {
                  var valueCallback = function valueCallback(value) {
                    return value - 1
                  }
                  switch (
                    token // 1, 2, ..., 12
                  ) {
                    case 'M':
                      return parseNumericPattern(
                        numericPatterns.month,
                        string,
                        valueCallback
                      ) // 01, 02, ..., 12
                    case 'MM':
                      return parseNDigits(2, string, valueCallback) // 1st, 2nd, ..., 12th
                    case 'Mo':
                      return match.ordinalNumber(string, {
                        unit: 'month',
                        valueCallback: valueCallback
                      }) // Jan, Feb, ..., Dec
                    case 'MMM':
                      return (
                        match.month(string, {
                          width: 'abbreviated',
                          context: 'formatting'
                        }) ||
                        match.month(string, {
                          width: 'narrow',
                          context: 'formatting'
                        })
                      ) // J, F, ..., D
                    case 'MMMMM':
                      return match.month(string, {
                        width: 'narrow',
                        context: 'formatting'
                      }) // January, February, ..., December
                    case 'MMMM':
                    default:
                      return (
                        match.month(string, {
                          width: 'wide',
                          context: 'formatting'
                        }) ||
                        match.month(string, {
                          width: 'abbreviated',
                          context: 'formatting'
                        }) ||
                        match.month(string, {
                          width: 'narrow',
                          context: 'formatting'
                        })
                      )
                  }
                },
                validate: function validate(date, value, options) {
                  return value >= 0 && value <= 11
                },
                set: function set(date, value, options) {
                  date.setUTCMonth(value, 1)
                  date.setUTCHours(0, 0, 0, 0)
                  return date
                }
              }, // Stand-alone month
              L: {
                priority: 110,
                parse: function parse(string, token, match, options) {
                  var valueCallback = function valueCallback(value) {
                    return value - 1
                  }
                  switch (
                    token // 1, 2, ..., 12
                  ) {
                    case 'L':
                      return parseNumericPattern(
                        numericPatterns.month,
                        string,
                        valueCallback
                      ) // 01, 02, ..., 12
                    case 'LL':
                      return parseNDigits(2, string, valueCallback) // 1st, 2nd, ..., 12th
                    case 'Lo':
                      return match.ordinalNumber(string, {
                        unit: 'month',
                        valueCallback: valueCallback
                      }) // Jan, Feb, ..., Dec
                    case 'LLL':
                      return (
                        match.month(string, {
                          width: 'abbreviated',
                          context: 'standalone'
                        }) ||
                        match.month(string, {
                          width: 'narrow',
                          context: 'standalone'
                        })
                      ) // J, F, ..., D
                    case 'LLLLL':
                      return match.month(string, {
                        width: 'narrow',
                        context: 'standalone'
                      }) // January, February, ..., December
                    case 'LLLL':
                    default:
                      return (
                        match.month(string, {
                          width: 'wide',
                          context: 'standalone'
                        }) ||
                        match.month(string, {
                          width: 'abbreviated',
                          context: 'standalone'
                        }) ||
                        match.month(string, {
                          width: 'narrow',
                          context: 'standalone'
                        })
                      )
                  }
                },
                validate: function validate(date, value, options) {
                  return value >= 0 && value <= 11
                },
                set: function set(date, value, options) {
                  date.setUTCMonth(value, 1)
                  date.setUTCHours(0, 0, 0, 0)
                  return date
                }
              }, // Local week of year
              w: {
                priority: 100,
                parse: function parse(string, token, match, options) {
                  switch (token) {
                    case 'w':
                      return parseNumericPattern(numericPatterns.week, string)
                    case 'wo':
                      return match.ordinalNumber(string, { unit: 'week' })
                    default:
                      return parseNDigits(token.length, string)
                  }
                },
                validate: function validate(date, value, options) {
                  return value >= 1 && value <= 53
                },
                set: function set(date, value, options) {
                  return startOfUTCWeek(
                    setUTCWeek(date, value, options),
                    options
                  )
                }
              }, // ISO week of year
              I: {
                priority: 100,
                parse: function parse(string, token, match, options) {
                  switch (token) {
                    case 'I':
                      return parseNumericPattern(numericPatterns.week, string)
                    case 'Io':
                      return match.ordinalNumber(string, { unit: 'week' })
                    default:
                      return parseNDigits(token.length, string)
                  }
                },
                validate: function validate(date, value, options) {
                  return value >= 1 && value <= 53
                },
                set: function set(date, value, options) {
                  return startOfUTCISOWeek(
                    setUTCISOWeek(date, value, options),
                    options
                  )
                }
              }, // Day of the month
              d: {
                priority: 90,
                parse: function parse(string, token, match, options) {
                  switch (token) {
                    case 'd':
                      return parseNumericPattern(numericPatterns.date, string)
                    case 'do':
                      return match.ordinalNumber(string, { unit: 'date' })
                    default:
                      return parseNDigits(token.length, string)
                  }
                },
                validate: function validate(date, value, options) {
                  var year = date.getUTCFullYear()
                  var isLeapYear = isLeapYearIndex$1(year)
                  var month = date.getUTCMonth()
                  if (isLeapYear) {
                    return (
                      value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR$1[month]
                    )
                  } else {
                    return value >= 1 && value <= DAYS_IN_MONTH$1[month]
                  }
                },
                set: function set(date, value, options) {
                  date.setUTCDate(value)
                  date.setUTCHours(0, 0, 0, 0)
                  return date
                }
              }, // Day of year
              D: {
                priority: 90,
                parse: function parse(string, token, match, options) {
                  switch (token) {
                    case 'D':
                    case 'DD':
                      return parseNumericPattern(
                        numericPatterns.dayOfYear,
                        string
                      )
                    case 'Do':
                      return match.ordinalNumber(string, { unit: 'date' })
                    default:
                      return parseNDigits(token.length, string)
                  }
                },
                validate: function validate(date, value, options) {
                  var year = date.getUTCFullYear()
                  var isLeapYear = isLeapYearIndex$1(year)
                  if (isLeapYear) {
                    return value >= 1 && value <= 366
                  } else {
                    return value >= 1 && value <= 365
                  }
                },
                set: function set(date, value, options) {
                  date.setUTCMonth(0, value)
                  date.setUTCHours(0, 0, 0, 0)
                  return date
                }
              }, // Day of week
              E: {
                priority: 90,
                parse: function parse(string, token, match, options) {
                  switch (
                    token // Tue
                  ) {
                    case 'E':
                    case 'EE':
                    case 'EEE':
                      return (
                        match.day(string, {
                          width: 'abbreviated',
                          context: 'formatting'
                        }) ||
                        match.day(string, {
                          width: 'short',
                          context: 'formatting'
                        }) ||
                        match.day(string, {
                          width: 'narrow',
                          context: 'formatting'
                        })
                      ) // T
                    case 'EEEEE':
                      return match.day(string, {
                        width: 'narrow',
                        context: 'formatting'
                      }) // Tu
                    case 'EEEEEE':
                      return (
                        match.day(string, {
                          width: 'short',
                          context: 'formatting'
                        }) ||
                        match.day(string, {
                          width: 'narrow',
                          context: 'formatting'
                        })
                      ) // Tuesday
                    case 'EEEE':
                    default:
                      return (
                        match.day(string, {
                          width: 'wide',
                          context: 'formatting'
                        }) ||
                        match.day(string, {
                          width: 'abbreviated',
                          context: 'formatting'
                        }) ||
                        match.day(string, {
                          width: 'short',
                          context: 'formatting'
                        }) ||
                        match.day(string, {
                          width: 'narrow',
                          context: 'formatting'
                        })
                      )
                  }
                },
                validate: function validate(date, value, options) {
                  return value >= 0 && value <= 6
                },
                set: function set(date, value, options) {
                  date = setUTCDay(date, value, options)
                  date.setUTCHours(0, 0, 0, 0)
                  return date
                }
              }, // Local day of week
              e: {
                priority: 90,
                parse: function parse(string, token, match, options) {
                  var valueCallback = function valueCallback(value) {
                    var wholeWeekDays = Math.floor((value - 1) / 7) * 7
                    return (
                      ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays
                    )
                  }
                  switch (
                    token // 3
                  ) {
                    case 'e':
                    case 'ee': // 03
                      return parseNDigits(token.length, string, valueCallback) // 3rd
                    case 'eo':
                      return match.ordinalNumber(string, {
                        unit: 'day',
                        valueCallback: valueCallback
                      }) // Tue
                    case 'eee':
                      return (
                        match.day(string, {
                          width: 'abbreviated',
                          context: 'formatting'
                        }) ||
                        match.day(string, {
                          width: 'short',
                          context: 'formatting'
                        }) ||
                        match.day(string, {
                          width: 'narrow',
                          context: 'formatting'
                        })
                      ) // T
                    case 'eeeee':
                      return match.day(string, {
                        width: 'narrow',
                        context: 'formatting'
                      }) // Tu
                    case 'eeeeee':
                      return (
                        match.day(string, {
                          width: 'short',
                          context: 'formatting'
                        }) ||
                        match.day(string, {
                          width: 'narrow',
                          context: 'formatting'
                        })
                      ) // Tuesday
                    case 'eeee':
                    default:
                      return (
                        match.day(string, {
                          width: 'wide',
                          context: 'formatting'
                        }) ||
                        match.day(string, {
                          width: 'abbreviated',
                          context: 'formatting'
                        }) ||
                        match.day(string, {
                          width: 'short',
                          context: 'formatting'
                        }) ||
                        match.day(string, {
                          width: 'narrow',
                          context: 'formatting'
                        })
                      )
                  }
                },
                validate: function validate(date, value, options) {
                  return value >= 0 && value <= 6
                },
                set: function set(date, value, options) {
                  date = setUTCDay(date, value, options)
                  date.setUTCHours(0, 0, 0, 0)
                  return date
                }
              }, // Stand-alone local day of week
              c: {
                priority: 90,
                parse: function parse(string, token, match, options) {
                  var valueCallback = function valueCallback(value) {
                    var wholeWeekDays = Math.floor((value - 1) / 7) * 7
                    return (
                      ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays
                    )
                  }
                  switch (
                    token // 3
                  ) {
                    case 'c':
                    case 'cc': // 03
                      return parseNDigits(token.length, string, valueCallback) // 3rd
                    case 'co':
                      return match.ordinalNumber(string, {
                        unit: 'day',
                        valueCallback: valueCallback
                      }) // Tue
                    case 'ccc':
                      return (
                        match.day(string, {
                          width: 'abbreviated',
                          context: 'standalone'
                        }) ||
                        match.day(string, {
                          width: 'short',
                          context: 'standalone'
                        }) ||
                        match.day(string, {
                          width: 'narrow',
                          context: 'standalone'
                        })
                      ) // T
                    case 'ccccc':
                      return match.day(string, {
                        width: 'narrow',
                        context: 'standalone'
                      }) // Tu
                    case 'cccccc':
                      return (
                        match.day(string, {
                          width: 'short',
                          context: 'standalone'
                        }) ||
                        match.day(string, {
                          width: 'narrow',
                          context: 'standalone'
                        })
                      ) // Tuesday
                    case 'cccc':
                    default:
                      return (
                        match.day(string, {
                          width: 'wide',
                          context: 'standalone'
                        }) ||
                        match.day(string, {
                          width: 'abbreviated',
                          context: 'standalone'
                        }) ||
                        match.day(string, {
                          width: 'short',
                          context: 'standalone'
                        }) ||
                        match.day(string, {
                          width: 'narrow',
                          context: 'standalone'
                        })
                      )
                  }
                },
                validate: function validate(date, value, options) {
                  return value >= 0 && value <= 6
                },
                set: function set(date, value, options) {
                  date = setUTCDay(date, value, options)
                  date.setUTCHours(0, 0, 0, 0)
                  return date
                }
              }, // ISO day of week
              i: {
                priority: 90,
                parse: function parse(string, token, match, options) {
                  var valueCallback = function valueCallback(value) {
                    if (value === 0) {
                      return 7
                    }
                    return value
                  }
                  switch (
                    token // 2
                  ) {
                    case 'i':
                    case 'ii': // 02
                      return parseNDigits(token.length, string) // 2nd
                    case 'io':
                      return match.ordinalNumber(string, { unit: 'day' }) // Tue
                    case 'iii':
                      return (
                        match.day(string, {
                          width: 'abbreviated',
                          context: 'formatting',
                          valueCallback: valueCallback
                        }) ||
                        match.day(string, {
                          width: 'short',
                          context: 'formatting',
                          valueCallback: valueCallback
                        }) ||
                        match.day(string, {
                          width: 'narrow',
                          context: 'formatting',
                          valueCallback: valueCallback
                        })
                      ) // T
                    case 'iiiii':
                      return match.day(string, {
                        width: 'narrow',
                        context: 'formatting',
                        valueCallback: valueCallback
                      }) // Tu
                    case 'iiiiii':
                      return (
                        match.day(string, {
                          width: 'short',
                          context: 'formatting',
                          valueCallback: valueCallback
                        }) ||
                        match.day(string, {
                          width: 'narrow',
                          context: 'formatting',
                          valueCallback: valueCallback
                        })
                      ) // Tuesday
                    case 'iiii':
                    default:
                      return (
                        match.day(string, {
                          width: 'wide',
                          context: 'formatting',
                          valueCallback: valueCallback
                        }) ||
                        match.day(string, {
                          width: 'abbreviated',
                          context: 'formatting',
                          valueCallback: valueCallback
                        }) ||
                        match.day(string, {
                          width: 'short',
                          context: 'formatting',
                          valueCallback: valueCallback
                        }) ||
                        match.day(string, {
                          width: 'narrow',
                          context: 'formatting',
                          valueCallback: valueCallback
                        })
                      )
                  }
                },
                validate: function validate(date, value, options) {
                  return value >= 1 && value <= 7
                },
                set: function set(date, value, options) {
                  date = setUTCISODay(date, value, options)
                  date.setUTCHours(0, 0, 0, 0)
                  return date
                }
              }, // AM or PM
              a: {
                priority: 80,
                parse: function parse(string, token, match, options) {
                  switch (token) {
                    case 'a':
                    case 'aa':
                    case 'aaa':
                      return (
                        match.dayPeriod(string, {
                          width: 'abbreviated',
                          context: 'formatting'
                        }) ||
                        match.dayPeriod(string, {
                          width: 'narrow',
                          context: 'formatting'
                        })
                      )
                    case 'aaaaa':
                      return match.dayPeriod(string, {
                        width: 'narrow',
                        context: 'formatting'
                      })
                    case 'aaaa':
                    default:
                      return (
                        match.dayPeriod(string, {
                          width: 'wide',
                          context: 'formatting'
                        }) ||
                        match.dayPeriod(string, {
                          width: 'abbreviated',
                          context: 'formatting'
                        }) ||
                        match.dayPeriod(string, {
                          width: 'narrow',
                          context: 'formatting'
                        })
                      )
                  }
                },
                set: function set(date, value, options) {
                  date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0)
                  return date
                }
              }, // AM, PM, midnight
              b: {
                priority: 80,
                parse: function parse(string, token, match, options) {
                  switch (token) {
                    case 'b':
                    case 'bb':
                    case 'bbb':
                      return (
                        match.dayPeriod(string, {
                          width: 'abbreviated',
                          context: 'formatting'
                        }) ||
                        match.dayPeriod(string, {
                          width: 'narrow',
                          context: 'formatting'
                        })
                      )
                    case 'bbbbb':
                      return match.dayPeriod(string, {
                        width: 'narrow',
                        context: 'formatting'
                      })
                    case 'bbbb':
                    default:
                      return (
                        match.dayPeriod(string, {
                          width: 'wide',
                          context: 'formatting'
                        }) ||
                        match.dayPeriod(string, {
                          width: 'abbreviated',
                          context: 'formatting'
                        }) ||
                        match.dayPeriod(string, {
                          width: 'narrow',
                          context: 'formatting'
                        })
                      )
                  }
                },
                set: function set(date, value, options) {
                  date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0)
                  return date
                }
              }, // in the morning, in the afternoon, in the evening, at night
              B: {
                priority: 80,
                parse: function parse(string, token, match, options) {
                  switch (token) {
                    case 'B':
                    case 'BB':
                    case 'BBB':
                      return (
                        match.dayPeriod(string, {
                          width: 'abbreviated',
                          context: 'formatting'
                        }) ||
                        match.dayPeriod(string, {
                          width: 'narrow',
                          context: 'formatting'
                        })
                      )
                    case 'BBBBB':
                      return match.dayPeriod(string, {
                        width: 'narrow',
                        context: 'formatting'
                      })
                    case 'BBBB':
                    default:
                      return (
                        match.dayPeriod(string, {
                          width: 'wide',
                          context: 'formatting'
                        }) ||
                        match.dayPeriod(string, {
                          width: 'abbreviated',
                          context: 'formatting'
                        }) ||
                        match.dayPeriod(string, {
                          width: 'narrow',
                          context: 'formatting'
                        })
                      )
                  }
                },
                set: function set(date, value, options) {
                  date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0)
                  return date
                }
              }, // Hour [1-12]
              h: {
                priority: 70,
                parse: function parse(string, token, match, options) {
                  switch (token) {
                    case 'h':
                      return parseNumericPattern(
                        numericPatterns.hour12h,
                        string
                      )
                    case 'ho':
                      return match.ordinalNumber(string, { unit: 'hour' })
                    default:
                      return parseNDigits(token.length, string)
                  }
                },
                validate: function validate(date, value, options) {
                  return value >= 1 && value <= 12
                },
                set: function set(date, value, options) {
                  var isPM = date.getUTCHours() >= 12
                  if (isPM && value < 12) {
                    date.setUTCHours(value + 12, 0, 0, 0)
                  } else if (!isPM && value === 12) {
                    date.setUTCHours(0, 0, 0, 0)
                  } else {
                    date.setUTCHours(value, 0, 0, 0)
                  }
                  return date
                }
              }, // Hour [0-23]
              H: {
                priority: 70,
                parse: function parse(string, token, match, options) {
                  switch (token) {
                    case 'H':
                      return parseNumericPattern(
                        numericPatterns.hour23h,
                        string
                      )
                    case 'Ho':
                      return match.ordinalNumber(string, { unit: 'hour' })
                    default:
                      return parseNDigits(token.length, string)
                  }
                },
                validate: function validate(date, value, options) {
                  return value >= 0 && value <= 23
                },
                set: function set(date, value, options) {
                  date.setUTCHours(value, 0, 0, 0)
                  return date
                }
              }, // Hour [0-11]
              K: {
                priority: 70,
                parse: function parse(string, token, match, options) {
                  switch (token) {
                    case 'K':
                      return parseNumericPattern(
                        numericPatterns.hour11h,
                        string
                      )
                    case 'Ko':
                      return match.ordinalNumber(string, { unit: 'hour' })
                    default:
                      return parseNDigits(token.length, string)
                  }
                },
                validate: function validate(date, value, options) {
                  return value >= 0 && value <= 11
                },
                set: function set(date, value, options) {
                  var isPM = date.getUTCHours() >= 12
                  if (isPM && value < 12) {
                    date.setUTCHours(value + 12, 0, 0, 0)
                  } else {
                    date.setUTCHours(value, 0, 0, 0)
                  }
                  return date
                }
              }, // Hour [1-24]
              k: {
                priority: 70,
                parse: function parse(string, token, match, options) {
                  switch (token) {
                    case 'k':
                      return parseNumericPattern(
                        numericPatterns.hour24h,
                        string
                      )
                    case 'ko':
                      return match.ordinalNumber(string, { unit: 'hour' })
                    default:
                      return parseNDigits(token.length, string)
                  }
                },
                validate: function validate(date, value, options) {
                  return value >= 1 && value <= 24
                },
                set: function set(date, value, options) {
                  var hours = value <= 24 ? value % 24 : value
                  date.setUTCHours(hours, 0, 0, 0)
                  return date
                }
              }, // Minute
              m: {
                priority: 60,
                parse: function parse(string, token, match, options) {
                  switch (token) {
                    case 'm':
                      return parseNumericPattern(numericPatterns.minute, string)
                    case 'mo':
                      return match.ordinalNumber(string, { unit: 'minute' })
                    default:
                      return parseNDigits(token.length, string)
                  }
                },
                validate: function validate(date, value, options) {
                  return value >= 0 && value <= 59
                },
                set: function set(date, value, options) {
                  date.setUTCMinutes(value, 0, 0)
                  return date
                }
              }, // Second
              s: {
                priority: 50,
                parse: function parse(string, token, match, options) {
                  switch (token) {
                    case 's':
                      return parseNumericPattern(numericPatterns.second, string)
                    case 'so':
                      return match.ordinalNumber(string, { unit: 'second' })
                    default:
                      return parseNDigits(token.length, string)
                  }
                },
                validate: function validate(date, value, options) {
                  return value >= 0 && value <= 59
                },
                set: function set(date, value, options) {
                  date.setUTCSeconds(value, 0)
                  return date
                }
              }, // Fraction of second
              S: {
                priority: 40,
                parse: function parse(string, token, match, options) {
                  var valueCallback = function valueCallback(value) {
                    return Math.floor(value * Math.pow(10, -token.length + 3))
                  }
                  return parseNDigits(token.length, string, valueCallback)
                },
                set: function set(date, value, options) {
                  date.setUTCMilliseconds(value)
                  return date
                }
              }, // Timezone (ISO-8601. +00:00 is `'Z'`)
              X: {
                priority: 20,
                parse: function parse(string, token, match, options) {
                  switch (token) {
                    case 'X':
                      return parseTimezonePattern(
                        timezonePatterns.basicOptionalMinutes,
                        string
                      )
                    case 'XX':
                      return parseTimezonePattern(
                        timezonePatterns.basic,
                        string
                      )
                    case 'XXXX':
                      return parseTimezonePattern(
                        timezonePatterns.basicOptionalSeconds,
                        string
                      )
                    case 'XXXXX':
                      return parseTimezonePattern(
                        timezonePatterns.extendedOptionalSeconds,
                        string
                      )
                    case 'XXX':
                    default:
                      return parseTimezonePattern(
                        timezonePatterns.extended,
                        string
                      )
                  }
                },
                set: function set(date, value, options) {
                  return new Date(date.getTime() - value)
                }
              }, // Timezone (ISO-8601)
              x: {
                priority: 20,
                parse: function parse(string, token, match, options) {
                  switch (token) {
                    case 'x':
                      return parseTimezonePattern(
                        timezonePatterns.basicOptionalMinutes,
                        string
                      )
                    case 'xx':
                      return parseTimezonePattern(
                        timezonePatterns.basic,
                        string
                      )
                    case 'xxxx':
                      return parseTimezonePattern(
                        timezonePatterns.basicOptionalSeconds,
                        string
                      )
                    case 'xxxxx':
                      return parseTimezonePattern(
                        timezonePatterns.extendedOptionalSeconds,
                        string
                      )
                    case 'xxx':
                    default:
                      return parseTimezonePattern(
                        timezonePatterns.extended,
                        string
                      )
                  }
                },
                set: function set(date, value, options) {
                  return new Date(date.getTime() - value)
                }
              }, // Seconds timestamp
              t: {
                priority: 10,
                parse: function parse(string, token, match, options) {
                  return parseAnyDigitsSigned(string)
                },
                set: function set(date, value, options) {
                  return new Date(value * 1000)
                }
              }, // Milliseconds timestamp
              T: {
                priority: 10,
                parse: function parse(string, token, match, options) {
                  return parseAnyDigitsSigned(string)
                },
                set: function set(date, value, options) {
                  return new Date(value)
                }
              }
            }
            var TIMEZONE_UNIT_PRIORITY = 20 // This RegExp consists of three parts separated by `|`:
            // - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token
            //   (one of the certain letters followed by `o`)
            // - (\w)\1* matches any sequences of the same letter
            // - '' matches two quote characters in a row
            // - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
            //   except a single quote symbol, which ends the sequence.
            //   Two quote characters do not end the sequence.
            //   If there is no matching single quote
            //   then the sequence will continue until the end of the string.
            // - . matches any single character unmatched by previous parts of the RegExps
            var formattingTokensRegExp$1 = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g
            var escapedStringRegExp$1 = /^'(.*?)'?$/
            var doubleQuoteRegExp$1 = /''/g
            var notWhitespaceRegExp = /\S/
            /**
             * @name parse
             * @category Common Helpers
             * @summary Parse the date.
             *
             * @description
             * Return the date parsed from string using the given format string.
             *
             * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.
             * > See: https://git.io/fxCyr
             *
             * The characters in the format string wrapped between two single quotes characters (') are escaped.
             * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
             *
             * Format of the format string is based on Unicode Technical Standard #35:
             * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
             * with a few additions (see note 5 below the table).
             *
             * Accepted format string patterns:
             * | Unit                            |Prior| Pattern | Result examples                   | Notes |
             * |---------------------------------|-----|---------|-----------------------------------|-------|
             * | Era                             | 140 | G..GGG  | AD, BC                            |       |
             * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |
             * |                                 |     | GGGGG   | A, B                              |       |
             * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |
             * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |
             * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |
             * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |
             * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |
             * |                                 |     | yyyyy   | ...                               | 2,4   |
             * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |
             * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |
             * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |
             * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |
             * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |
             * |                                 |     | YYYYY   | ...                               | 2,4   |
             * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |
             * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |
             * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |
             * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |
             * |                                 |     | RRRRR   | ...                               | 2,4,5 |
             * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |
             * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |
             * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |
             * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |
             * |                                 |     | uuuuu   | ...                               | 2,4   |
             * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |
             * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |
             * |                                 |     | QQ      | 01, 02, 03, 04                    |       |
             * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |
             * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |
             * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |
             * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |
             * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |
             * |                                 |     | qq      | 01, 02, 03, 04                    |       |
             * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |
             * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |
             * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |
             * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |
             * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |
             * |                                 |     | MM      | 01, 02, ..., 12                   |       |
             * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |
             * |                                 |     | MMMM    | January, February, ..., December  | 2     |
             * |                                 |     | MMMMM   | J, F, ..., D                      |       |
             * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |
             * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |
             * |                                 |     | LL      | 01, 02, ..., 12                   |       |
             * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |
             * |                                 |     | LLLL    | January, February, ..., December  | 2     |
             * |                                 |     | LLLLL   | J, F, ..., D                      |       |
             * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |
             * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |
             * |                                 |     | ww      | 01, 02, ..., 53                   |       |
             * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |
             * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |
             * |                                 |     | II      | 01, 02, ..., 53                   | 5     |
             * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |
             * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |
             * |                                 |     | dd      | 01, 02, ..., 31                   |       |
             * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 6     |
             * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |
             * |                                 |     | DD      | 01, 02, ..., 365, 366             | 6     |
             * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |
             * |                                 |     | DDDD    | ...                               | 2     |
             * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Su            |       |
             * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |
             * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |
             * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
             * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |
             * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |
             * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |
             * |                                 |     | iii     | Mon, Tue, Wed, ..., Su            | 5     |
             * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |
             * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |
             * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 5     |
             * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |
             * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |
             * |                                 |     | ee      | 02, 03, ..., 01                   |       |
             * |                                 |     | eee     | Mon, Tue, Wed, ..., Su            |       |
             * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |
             * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |
             * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
             * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |
             * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |
             * |                                 |     | cc      | 02, 03, ..., 01                   |       |
             * |                                 |     | ccc     | Mon, Tue, Wed, ..., Su            |       |
             * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |
             * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |
             * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
             * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |
             * |                                 |     | aaaa    | a.m., p.m.                        | 2     |
             * |                                 |     | aaaaa   | a, p                              |       |
             * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |
             * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |
             * |                                 |     | bbbbb   | a, p, n, mi                       |       |
             * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |
             * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |
             * |                                 |     | BBBBB   | at night, in the morning, ...     |       |
             * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |
             * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |
             * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |
             * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |
             * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |
             * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |
             * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |
             * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |
             * |                                 |     | KK      | 1, 2, ..., 11, 0                  |       |
             * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |
             * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |
             * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |
             * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |
             * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |
             * |                                 |     | mm      | 00, 01, ..., 59                   |       |
             * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |
             * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |
             * |                                 |     | ss      | 00, 01, ..., 59                   |       |
             * | Fraction of second              |  40 | S       | 0, 1, ..., 9                      |       |
             * |                                 |     | SS      | 00, 01, ..., 99                   |       |
             * |                                 |     | SSS     | 000, 0001, ..., 999               |       |
             * |                                 |     | SSSS    | ...                               | 2     |
             * | Timezone (ISO-8601 w/ Z)        |  20 | X       | -08, +0530, Z                     |       |
             * |                                 |     | XX      | -0800, +0530, Z                   |       |
             * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |
             * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |
             * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |
             * | Timezone (ISO-8601 w/o Z)       |  20 | x       | -08, +0530, +00                   |       |
             * |                                 |     | xx      | -0800, +0530, +0000               |       |
             * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |
             * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |
             * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |
             * | Seconds timestamp               |  10 | t       | 512969520                         |       |
             * |                                 |     | tt      | ...                               | 2     |
             * | Milliseconds timestamp          |  10 | T       | 512969520900                      |       |
             * |                                 |     | TT      | ...                               | 2     |
             * Notes:
             * 1. "Formatting" units (e.g. formatting quarter) in the default en-US locale
             *    are the same as "stand-alone" units, but are different in some languages.
             *    "Formatting" units are declined according to the rules of the language
             *    in the context of a date. "Stand-alone" units are always nominative singular.
             *    In `format` function, they will produce different result:
             *
             *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`
             *
             *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`
             *
             *    `parse` will try to match both formatting and stand-alone units interchangably.
             *
             * 2. Any sequence of the identical letters is a pattern, unless it is escaped by
             *    the single quote characters (see below).
             *    If the sequence is longer than listed in table:
             *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number
             *      as wide as the sequence
             *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.
             *      These variations are marked with "2" in the last column of the table.
             *
             * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.
             *    These tokens represent the shortest form of the quarter.
             *
             * 4. The main difference between `y` and `u` patterns are B.C. years:
             *
             *    | Year | `y` | `u` |
             *    |------|-----|-----|
             *    | AC 1 |   1 |   1 |
             *    | BC 1 |   1 |   0 |
             *    | BC 2 |   2 |  -1 |
             *
             *    Also `yy` will try to guess the century of two digit year by proximity with `baseDate`:
             *
             *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`
             *
             *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`
             *
             *    while `uu` will just assign the year as is:
             *
             *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`
             *
             *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`
             *
             *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),
             *    except local week-numbering years are dependent on `options.weekStartsOn`
             *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}
             *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).
             *
             * 5. These patterns are not in the Unicode Technical Standard #35:
             *    - `i`: ISO day of week
             *    - `I`: ISO week of year
             *    - `R`: ISO week-numbering year
             *    - `o`: ordinal number modifier
             *
             * 6. These tokens are often confused with others. See: https://git.io/fxCyr
             *
             * Values will be assigned to the date in the descending order of its unit's priority.
             * Units of an equal priority overwrite each other in the order of appearance.
             *
             * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),
             * the values will be taken from 3rd argument `baseDate` which works as a context of parsing.
             *
             * `baseDate` must be passed for correct work of the function.
             * If you're not sure which `baseDate` to supply, create a new instance of Date:
             * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`
             * In this case parsing will be done in the context of the current date.
             * If `baseDate` is `Invalid Date` or a value not convertible to valid `Date`,
             * then `Invalid Date` will be returned.
             *
             * The result may vary by locale.
             *
             * If `formatString` matches with `dateString` but does not provides tokens, `baseDate` will be returned.
             *
             * If parsing failed, `Invalid Date` will be returned.
             * Invalid Date is a Date, whose time value is NaN.
             * Time value of Date: http://es5.github.io/#x15.9.1.1
             *
             * @param {String} dateString - the string to parse
             * @param {String} formatString - the string of tokens
             * @param {Date|String|Number} baseDate - defines values missing from the parsed dateString
             * @param {Options} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}
             * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
             * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
             * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
             * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
             * @param {Boolean} [options.awareOfUnicodeTokens=false] - if true, allows usage of Unicode tokens causes confusion:
             *   - Some of the day of year tokens (`D`, `DD`) that are confused with the day of month tokens (`d`, `dd`).
             *   - Some of the local week-numbering year tokens (`YY`, `YYYY`) that are confused with the calendar year tokens (`yy`, `yyyy`).
             *   See: https://git.io/fxCyr
             * @returns {Date} the parsed date
             * @throws {TypeError} 3 arguments required
             * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
             * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
             * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
             * @throws {RangeError} `options.locale` must contain `match` property
             * @throws {RangeError} `options.awareOfUnicodeTokens` must be set to `true` to use `XX` token; see: https://git.io/fxCyr
             *
             * @example
             * // Parse 11 February 2014 from middle-endian format:
             * var result = parse(
             *   '02/11/2014',
             *   'MM/dd/yyyy',
             *   new Date()
             * )
             * //=> Tue Feb 11 2014 00:00:00
             *
             * @example
             * // Parse 28th of February in Esperanto locale in the context of 2010 year:
             * import eo from 'date-fns/locale/eo'
             * var result = parse(
             *   '28-a de februaro',
             *   "do 'de' MMMM",
             *   new Date(2010, 0, 1),
             *   {locale: eo}
             * )
             * //=> Sun Feb 28 2010 00:00:00
             */ function parse(
              dirtyDateString,
              dirtyFormatString,
              dirtyBaseDate,
              dirtyOptions
            ) {
              if (arguments.length < 3) {
                throw new TypeError(
                  '3 arguments required, but only ' +
                    arguments.length +
                    ' present'
                )
              }
              var dateString = String(dirtyDateString)
              var formatString = String(dirtyFormatString)
              var options = dirtyOptions || {}
              var locale$1 = options.locale || locale
              if (!locale$1.match) {
                throw new RangeError('locale must contain match property')
              }
              var localeFirstWeekContainsDate =
                locale$1.options && locale$1.options.firstWeekContainsDate
              var defaultFirstWeekContainsDate =
                localeFirstWeekContainsDate == null
                  ? 1
                  : toInteger(localeFirstWeekContainsDate)
              var firstWeekContainsDate =
                options.firstWeekContainsDate == null
                  ? defaultFirstWeekContainsDate
                  : toInteger(options.firstWeekContainsDate) // Test if weekStartsOn is between 1 and 7 _and_ is not NaN
              if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
                throw new RangeError(
                  'firstWeekContainsDate must be between 1 and 7 inclusively'
                )
              }
              var localeWeekStartsOn =
                locale$1.options && locale$1.options.weekStartsOn
              var defaultWeekStartsOn =
                localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn)
              var weekStartsOn =
                options.weekStartsOn == null
                  ? defaultWeekStartsOn
                  : toInteger(options.weekStartsOn) // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
              if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
                throw new RangeError(
                  'weekStartsOn must be between 0 and 6 inclusively'
                )
              }
              if (formatString === '') {
                if (dateString === '') {
                  return toDate(dirtyBaseDate, options)
                } else {
                  return new Date(NaN)
                }
              }
              var subFnOptions = {
                firstWeekContainsDate: firstWeekContainsDate,
                weekStartsOn: weekStartsOn,
                locale: locale$1
              } // If timezone isn't specified, it will be set to the system timezone
              var setters = [
                {
                  priority: TIMEZONE_UNIT_PRIORITY,
                  set: dateToSystemTimezone,
                  index: 0
                }
              ]
              var i
              var tokens = formatString.match(formattingTokensRegExp$1)
              for (i = 0; i < tokens.length; i++) {
                var token = tokens[i]
                if (!options.awareOfUnicodeTokens && isProtectedToken(token)) {
                  throwProtectedError(token)
                }
                var firstCharacter = token[0]
                var parser = parsers[firstCharacter]
                if (parser) {
                  var parseResult = parser.parse(
                    dateString,
                    token,
                    locale$1.match,
                    subFnOptions
                  )
                  if (!parseResult) {
                    return new Date(NaN)
                  }
                  setters.push({
                    priority: parser.priority,
                    set: parser.set,
                    validate: parser.validate,
                    value: parseResult.value,
                    index: setters.length
                  })
                  dateString = parseResult.rest
                } else {
                  // Replace two single quote characters with one single quote character
                  if (token === "''") {
                    token = "'"
                  } else if (firstCharacter === "'") {
                    token = cleanEscapedString$1(token)
                  } // Cut token from string, or, if string doesn't match the token, return Invalid Date
                  if (dateString.indexOf(token) === 0) {
                    dateString = dateString.slice(token.length)
                  } else {
                    return new Date(NaN)
                  }
                }
              } // Check if the remaining input contains something other than whitespace
              if (
                dateString.length > 0 &&
                notWhitespaceRegExp.test(dateString)
              ) {
                return new Date(NaN)
              }
              var uniquePrioritySetters = setters
                .map(function(setter) {
                  return setter.priority
                })
                .sort(function(a, b) {
                  return b - a
                })
                .filter(function(priority, index, array) {
                  return array.indexOf(priority) === index
                })
                .map(function(priority) {
                  return setters
                    .filter(function(setter) {
                      return setter.priority === priority
                    })
                    .reverse()
                })
                .map(function(setterArray) {
                  return setterArray[0]
                })
              var date = toDate(dirtyBaseDate, options)
              if (isNaN(date)) {
                return new Date(NaN)
              } // Convert the date in system timezone to the same date in UTC+00:00 timezone.
              // This ensures that when UTC functions will be implemented, locales will be compatible with them.
              // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37
              var utcDate = subMilliseconds(
                date,
                getTimezoneOffsetInMilliseconds(date)
              )
              for (i = 0; i < uniquePrioritySetters.length; i++) {
                var setter = uniquePrioritySetters[i]
                if (
                  setter.validate &&
                  !setter.validate(utcDate, setter.value, subFnOptions)
                ) {
                  return new Date(NaN)
                }
                utcDate = setter.set(utcDate, setter.value, subFnOptions)
              }
              return utcDate
            }
            function dateToSystemTimezone(date) {
              var convertedDate = new Date(0)
              convertedDate.setFullYear(
                date.getUTCFullYear(),
                date.getUTCMonth(),
                date.getUTCDate()
              )
              convertedDate.setHours(
                date.getUTCHours(),
                date.getUTCMinutes(),
                date.getUTCSeconds(),
                date.getUTCMilliseconds()
              )
              return convertedDate
            }
            function cleanEscapedString$1(input) {
              return input
                .match(escapedStringRegExp$1)[1]
                .replace(doubleQuoteRegExp$1, "'")
            } //
            /**
             * Custom parse behavior on top of date-fns parse function.
             */ function parseDate$1(date, format$1) {
              if (typeof date !== 'string') {
                return isValid(date) ? date : null
              }
              var parsed = parse(date, format$1, new Date()) // if date is not valid or the formatted output after parsing does not match
              // the string value passed in (avoids overflows)
              if (!isValid(parsed) || format(parsed, format$1) !== date) {
                return null
              }
              return parsed
            }
            var afterValidator = function afterValidator(value, ref) {
              if (ref === void 0) ref = {}
              var targetValue = ref.targetValue
              var inclusion = ref.inclusion
              if (inclusion === void 0) inclusion = false
              var format = ref.format
              if (typeof format === 'undefined') {
                format = inclusion
                inclusion = false
              }
              value = parseDate$1(value, format)
              targetValue = parseDate$1(targetValue, format) // if either is not valid.
              if (!value || !targetValue) {
                return false
              }
              return (
                isAfter(value, targetValue) ||
                (inclusion && isEqual(value, targetValue))
              )
            }
            var options = { hasTarget: true, isDate: true } // required to convert from a list of array values to an object.
            var paramNames = ['targetValue', 'inclusion', 'format']
            var after = {
              validate: afterValidator,
              options: options,
              paramNames: paramNames
            }
            /**
             * Some Alpha Regex helpers.
             * https://github.com/chriso/validator.js/blob/master/src/lib/alpha.js
             */ var alpha = {
              en: /^[A-Z]*$/i,
              cs: /^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]*$/i,
              da: /^[A-ZÆØÅ]*$/i,
              de: /^[A-ZÄÖÜß]*$/i,
              es: /^[A-ZÁÉÍÑÓÚÜ]*$/i,
              fa: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰپژگچکی]*$/,
              fr: /^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]*$/i,
              it: /^[A-Z\xC0-\xFF]*$/i,
              lt: /^[A-ZĄČĘĖĮŠŲŪŽ]*$/i,
              nl: /^[A-ZÉËÏÓÖÜ]*$/i,
              hu: /^[A-ZÁÉÍÓÖŐÚÜŰ]*$/i,
              pl: /^[A-ZĄĆĘŚŁŃÓŻŹ]*$/i,
              pt: /^[A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]*$/i,
              ru: /^[А-ЯЁ]*$/i,
              sk: /^[A-ZÁÄČĎÉÍĹĽŇÓŔŠŤÚÝŽ]*$/i,
              sr: /^[A-ZČĆŽŠĐ]*$/i,
              sv: /^[A-ZÅÄÖ]*$/i,
              tr: /^[A-ZÇĞİıÖŞÜ]*$/i,
              uk: /^[А-ЩЬЮЯЄІЇҐ]*$/i,
              ar: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]*$/,
              az: /^[A-ZÇƏĞİıÖŞÜ]*$/i
            }
            var alphaSpaces = {
              en: /^[A-Z\s]*$/i,
              cs: /^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ\s]*$/i,
              da: /^[A-ZÆØÅ\s]*$/i,
              de: /^[A-ZÄÖÜß\s]*$/i,
              es: /^[A-ZÁÉÍÑÓÚÜ\s]*$/i,
              fa: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰپژگچکی\s]*$/,
              fr: /^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ\s]*$/i,
              it: /^[A-Z\xC0-\xFF\s]*$/i,
              lt: /^[A-ZĄČĘĖĮŠŲŪŽ\s]*$/i,
              nl: /^[A-ZÉËÏÓÖÜ\s]*$/i,
              hu: /^[A-ZÁÉÍÓÖŐÚÜŰ\s]*$/i,
              pl: /^[A-ZĄĆĘŚŁŃÓŻŹ\s]*$/i,
              pt: /^[A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ\s]*$/i,
              ru: /^[А-ЯЁ\s]*$/i,
              sk: /^[A-ZÁÄČĎÉÍĹĽŇÓŔŠŤÚÝŽ\s]*$/i,
              sr: /^[A-ZČĆŽŠĐ\s]*$/i,
              sv: /^[A-ZÅÄÖ\s]*$/i,
              tr: /^[A-ZÇĞİıÖŞÜ\s]*$/i,
              uk: /^[А-ЩЬЮЯЄІЇҐ\s]*$/i,
              ar: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ\s]*$/,
              az: /^[A-ZÇƏĞİıÖŞÜ\s]*$/i
            }
            var alphanumeric = {
              en: /^[0-9A-Z]*$/i,
              cs: /^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]*$/i,
              da: /^[0-9A-ZÆØÅ]$/i,
              de: /^[0-9A-ZÄÖÜß]*$/i,
              es: /^[0-9A-ZÁÉÍÑÓÚÜ]*$/i,
              fa: /^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰپژگچکی]*$/,
              fr: /^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]*$/i,
              it: /^[0-9A-Z\xC0-\xFF]*$/i,
              lt: /^[0-9A-ZĄČĘĖĮŠŲŪŽ]*$/i,
              hu: /^[0-9A-ZÁÉÍÓÖŐÚÜŰ]*$/i,
              nl: /^[0-9A-ZÉËÏÓÖÜ]*$/i,
              pl: /^[0-9A-ZĄĆĘŚŁŃÓŻŹ]*$/i,
              pt: /^[0-9A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]*$/i,
              ru: /^[0-9А-ЯЁ]*$/i,
              sk: /^[0-9A-ZÁÄČĎÉÍĹĽŇÓŔŠŤÚÝŽ]*$/i,
              sr: /^[0-9A-ZČĆŽŠĐ]*$/i,
              sv: /^[0-9A-ZÅÄÖ]*$/i,
              tr: /^[0-9A-ZÇĞİıÖŞÜ]*$/i,
              uk: /^[0-9А-ЩЬЮЯЄІЇҐ]*$/i,
              ar: /^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]*$/,
              az: /^[0-9A-ZÇƏĞİıÖŞÜ]*$/i
            }
            var alphaDash = {
              en: /^[0-9A-Z_-]*$/i,
              cs: /^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ_-]*$/i,
              da: /^[0-9A-ZÆØÅ_-]*$/i,
              de: /^[0-9A-ZÄÖÜß_-]*$/i,
              es: /^[0-9A-ZÁÉÍÑÓÚÜ_-]*$/i,
              fa: /^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰپژگچکی_-]*$/,
              fr: /^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ_-]*$/i,
              it: /^[0-9A-Z\xC0-\xFF_-]*$/i,
              lt: /^[0-9A-ZĄČĘĖĮŠŲŪŽ_-]*$/i,
              nl: /^[0-9A-ZÉËÏÓÖÜ_-]*$/i,
              hu: /^[0-9A-ZÁÉÍÓÖŐÚÜŰ_-]*$/i,
              pl: /^[0-9A-ZĄĆĘŚŁŃÓŻŹ_-]*$/i,
              pt: /^[0-9A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ_-]*$/i,
              ru: /^[0-9А-ЯЁ_-]*$/i,
              sk: /^[0-9A-ZÁÄČĎÉÍĹĽŇÓŔŠŤÚÝŽ_-]*$/i,
              sr: /^[0-9A-ZČĆŽŠĐ_-]*$/i,
              sv: /^[0-9A-ZÅÄÖ_-]*$/i,
              tr: /^[0-9A-ZÇĞİıÖŞÜ_-]*$/i,
              uk: /^[0-9А-ЩЬЮЯЄІЇҐ_-]*$/i,
              ar: /^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ_-]*$/,
              az: /^[0-9A-ZÇƏĞİıÖŞÜ_-]*$/i
            }
            var validate = function validate(value, ref) {
              if (ref === void 0) ref = {}
              var locale = ref.locale
              if (Array.isArray(value)) {
                return value.every(function(val) {
                  return validate(val, [locale])
                })
              } // Match at least one locale.
              if (!locale) {
                return Object.keys(alpha).some(function(loc) {
                  return alpha[loc].test(value)
                })
              }
              return (alpha[locale] || alpha.en).test(value)
            }
            var paramNames$1 = ['locale']
            var alpha$1 = { validate: validate, paramNames: paramNames$1 }
            var validate$1 = function validate$1(value, ref) {
              if (ref === void 0) ref = {}
              var locale = ref.locale
              if (Array.isArray(value)) {
                return value.every(function(val) {
                  return validate$1(val, [locale])
                })
              } // Match at least one locale.
              if (!locale) {
                return Object.keys(alphaDash).some(function(loc) {
                  return alphaDash[loc].test(value)
                })
              }
              return (alphaDash[locale] || alphaDash.en).test(value)
            }
            var paramNames$2 = ['locale']
            var alpha_dash = { validate: validate$1, paramNames: paramNames$2 }
            var validate$2 = function validate$2(value, ref) {
              if (ref === void 0) ref = {}
              var locale = ref.locale
              if (Array.isArray(value)) {
                return value.every(function(val) {
                  return validate$2(val, [locale])
                })
              } // Match at least one locale.
              if (!locale) {
                return Object.keys(alphanumeric).some(function(loc) {
                  return alphanumeric[loc].test(value)
                })
              }
              return (alphanumeric[locale] || alphanumeric.en).test(value)
            }
            var paramNames$3 = ['locale']
            var alpha_num = { validate: validate$2, paramNames: paramNames$3 }
            var validate$3 = function validate$3(value, ref) {
              if (ref === void 0) ref = {}
              var locale = ref.locale
              if (Array.isArray(value)) {
                return value.every(function(val) {
                  return validate$3(val, [locale])
                })
              } // Match at least one locale.
              if (!locale) {
                return Object.keys(alphaSpaces).some(function(loc) {
                  return alphaSpaces[loc].test(value)
                })
              }
              return (alphaSpaces[locale] || alphaSpaces.en).test(value)
            }
            var paramNames$4 = ['locale']
            var alpha_spaces = {
              validate: validate$3,
              paramNames: paramNames$4
            }
            var validate$4 = function validate$4(value, ref) {
              if (ref === void 0) ref = {}
              var targetValue = ref.targetValue
              var inclusion = ref.inclusion
              if (inclusion === void 0) inclusion = false
              var format = ref.format
              if (typeof format === 'undefined') {
                format = inclusion
                inclusion = false
              }
              value = parseDate$1(value, format)
              targetValue = parseDate$1(targetValue, format) // if either is not valid.
              if (!value || !targetValue) {
                return false
              }
              return (
                isBefore(value, targetValue) ||
                (inclusion && isEqual(value, targetValue))
              )
            }
            var options$1 = { hasTarget: true, isDate: true }
            var paramNames$5 = ['targetValue', 'inclusion', 'format']
            var before = {
              validate: validate$4,
              options: options$1,
              paramNames: paramNames$5
            }
            var validate$5 = function validate$5(value, ref) {
              if (ref === void 0) ref = {}
              var min = ref.min
              var max = ref.max
              if (Array.isArray(value)) {
                return value.every(function(val) {
                  return validate$5(val, { min: min, max: max })
                })
              }
              return Number(min) <= value && Number(max) >= value
            }
            var paramNames$6 = ['min', 'max']
            var between = { validate: validate$5, paramNames: paramNames$6 }
            var validate$6 = function validate$6(value, ref) {
              var targetValue = ref.targetValue
              return String(value) === String(targetValue)
            }
            var options$2 = { hasTarget: true }
            var paramNames$7 = ['targetValue']
            var confirmed = {
              validate: validate$6,
              options: options$2,
              paramNames: paramNames$7
            }
            function unwrapExports(x) {
              return x &&
                x.__esModule &&
                Object.prototype.hasOwnProperty.call(x, 'default')
                ? x['default']
                : x
            }
            function createCommonjsModule(fn, module) {
              return (
                (module = { exports: {} }),
                fn(module, module.exports),
                module.exports
              )
            }
            var assertString_1 = createCommonjsModule(function(
              module,
              exports
            ) {
              Object.defineProperty(exports, '__esModule', { value: true })
              exports['default'] = assertString
              function _typeof(obj) {
                if (
                  typeof Symbol === 'function' &&
                  (0, _typeof3['default'])(Symbol.iterator) === 'symbol'
                ) {
                  _typeof = function _typeof(obj) {
                    return (0, _typeof3['default'])(obj)
                  }
                } else {
                  _typeof = function _typeof(obj) {
                    return obj &&
                      typeof Symbol === 'function' &&
                      obj.constructor === Symbol &&
                      obj !== Symbol.prototype
                      ? 'symbol'
                      : (0, _typeof3['default'])(obj)
                  }
                }
                return _typeof(obj)
              }
              function assertString(input) {
                var isString =
                  typeof input === 'string' || input instanceof String
                if (!isString) {
                  var invalidType
                  if (input === null) {
                    invalidType = 'null'
                  } else {
                    invalidType = _typeof(input)
                    if (
                      invalidType === 'object' &&
                      input.constructor &&
                      input.constructor.hasOwnProperty('name')
                    ) {
                      invalidType = input.constructor.name
                    } else {
                      invalidType = 'a '.concat(invalidType)
                    }
                  }
                  throw new TypeError(
                    'Expected string but received '.concat(invalidType, '.')
                  )
                }
              }
              module.exports = exports['default']
              module.exports['default'] = exports['default']
            })
            unwrapExports(assertString_1)
            var isCreditCard_1 = createCommonjsModule(function(
              module,
              exports
            ) {
              Object.defineProperty(exports, '__esModule', { value: true })
              exports['default'] = isCreditCard
              var _assertString = _interopRequireDefault(assertString_1)
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj }
              }
              /* eslint-disable max-len */ var creditCard = /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11}|6[27][0-9]{14})$/
              /* eslint-enable max-len */ function isCreditCard(str) {
                ;(0, _assertString['default'])(str)
                var sanitized = str.replace(/[- ]+/g, '')
                if (!creditCard.test(sanitized)) {
                  return false
                }
                var sum = 0
                var digit
                var tmpNum
                var shouldDouble
                for (var i = sanitized.length - 1; i >= 0; i--) {
                  digit = sanitized.substring(i, i + 1)
                  tmpNum = parseInt(digit, 10)
                  if (shouldDouble) {
                    tmpNum *= 2
                    if (tmpNum >= 10) {
                      sum += (tmpNum % 10) + 1
                    } else {
                      sum += tmpNum
                    }
                  } else {
                    sum += tmpNum
                  }
                  shouldDouble = !shouldDouble
                }
                return !!(sum % 10 === 0 ? sanitized : false)
              }
              module.exports = exports['default']
              module.exports['default'] = exports['default']
            })
            var isCreditCard = unwrapExports(isCreditCard_1)
            var validate$7 = function validate$7(value) {
              return isCreditCard(String(value))
            }
            var credit_card = { validate: validate$7 }
            var validate$8 = function validate$8(value, ref) {
              if (ref === void 0) ref = {}
              var min = ref.min
              var max = ref.max
              var inclusivity = ref.inclusivity
              if (inclusivity === void 0) inclusivity = '()'
              var format = ref.format
              if (typeof format === 'undefined') {
                format = inclusivity
                inclusivity = '()'
              }
              var minDate = parseDate$1(String(min), format)
              var maxDate = parseDate$1(String(max), format)
              var dateVal = parseDate$1(String(value), format)
              if (!minDate || !maxDate || !dateVal) {
                return false
              }
              if (inclusivity === '()') {
                return isAfter(dateVal, minDate) && isBefore(dateVal, maxDate)
              }
              if (inclusivity === '(]') {
                return (
                  isAfter(dateVal, minDate) &&
                  (isEqual(dateVal, maxDate) || isBefore(dateVal, maxDate))
                )
              }
              if (inclusivity === '[)') {
                return (
                  isBefore(dateVal, maxDate) &&
                  (isEqual(dateVal, minDate) || isAfter(dateVal, minDate))
                )
              }
              return (
                isEqual(dateVal, maxDate) ||
                isEqual(dateVal, minDate) ||
                (isBefore(dateVal, maxDate) && isAfter(dateVal, minDate))
              )
            }
            var options$3 = { isDate: true }
            var paramNames$8 = ['min', 'max', 'inclusivity', 'format']
            var date_between = {
              validate: validate$8,
              options: options$3,
              paramNames: paramNames$8
            }
            var validate$9 = function validate$9(value, ref) {
              var format = ref.format
              return !!parseDate$1(value, format)
            }
            var options$4 = { isDate: true }
            var paramNames$9 = ['format']
            var date_format = {
              validate: validate$9,
              options: options$4,
              paramNames: paramNames$9
            } //
            var isTextInput = function isTextInput(el) {
              return includes(
                [
                  'text',
                  'password',
                  'search',
                  'email',
                  'tel',
                  'url',
                  'textarea',
                  'number'
                ],
                el.type
              )
            }
            var isCheckboxOrRadioInput = function isCheckboxOrRadioInput(el) {
              return includes(['radio', 'checkbox'], el.type)
            }
            var isDateInput = function isDateInput(el) {
              return includes(
                ['date', 'week', 'month', 'datetime-local', 'time'],
                el.type
              )
            }
            /**
             * Gets the data attribute. the name must be kebab-case.
             */ var getDataAttribute = function getDataAttribute(el, name) {
              return el.getAttribute('data-vv-' + name)
            }
            var isNaN$1 = function isNaN$1(value) {
              if ('isNaN' in Number) {
                return Number.isNaN(value)
              } // eslint-disable-next-line
              return typeof value === 'number' && value !== value
            }
            /**
             * Checks if the values are either null or undefined.
             */ var isNullOrUndefined = function isNullOrUndefined() {
              var values = [],
                len = arguments.length
              while (len--) {
                values[len] = arguments[len]
              }
              return values.every(function(value) {
                return value === null || value === undefined
              })
            }
            /**
             * Creates the default flags object.
             */ var createFlags = function createFlags() {
              return {
                untouched: true,
                touched: false,
                dirty: false,
                pristine: true,
                valid: null,
                invalid: null,
                validated: false,
                pending: false,
                required: false,
                changed: false
              }
            }
            /**
             * Shallow object comparison.
             */ var isEqual$1 = function isEqual$1(lhs, rhs) {
              if (lhs instanceof RegExp && rhs instanceof RegExp) {
                return (
                  isEqual$1(lhs.source, rhs.source) &&
                  isEqual$1(lhs.flags, rhs.flags)
                )
              }
              if (Array.isArray(lhs) && Array.isArray(rhs)) {
                if (lhs.length !== rhs.length) {
                  return false
                }
                for (var i = 0; i < lhs.length; i++) {
                  if (!isEqual$1(lhs[i], rhs[i])) {
                    return false
                  }
                }
                return true
              } // if both are objects, compare each key recursively.
              if (isObject(lhs) && isObject(rhs)) {
                return (
                  Object.keys(lhs).every(function(key) {
                    return isEqual$1(lhs[key], rhs[key])
                  }) &&
                  Object.keys(rhs).every(function(key) {
                    return isEqual$1(lhs[key], rhs[key])
                  })
                )
              }
              if (isNaN$1(lhs) && isNaN$1(rhs)) {
                return true
              }
              return lhs === rhs
            }
            /**
             * Determines the input field scope.
             */ var getScope = function getScope(el) {
              var scope = getDataAttribute(el, 'scope')
              if (isNullOrUndefined(scope)) {
                var form = getForm(el)
                if (form) {
                  scope = getDataAttribute(form, 'scope')
                }
              }
              return !isNullOrUndefined(scope) ? scope : null
            }
            /**
             * Get the closest form element.
             */ var getForm = function getForm(el) {
              if (isNullOrUndefined(el)) {
                return null
              }
              if (el.tagName === 'FORM') {
                return el
              }
              if (!isNullOrUndefined(el.form)) {
                return el.form
              }
              return !isNullOrUndefined(el.parentNode)
                ? getForm(el.parentNode)
                : null
            }
            /**
             * Gets the value in an object safely.
             */ var getPath = function getPath(path, target, def) {
              if (def === void 0) def = undefined
              if (!path || !target) {
                return def
              }
              var value = target
              path.split('.').every(function(prop) {
                if (prop in value) {
                  value = value[prop]
                  return true
                }
                value = def
                return false
              })
              return value
            }
            /**
             * Checks if path exists within an object.
             */ var hasPath = function hasPath(path, target) {
              var obj = target
              var previousPath = null
              var isNullOrNonObject = false
              var isValidPath = path.split('.').reduce(function(reducer, prop) {
                if (obj == null || (0, _typeof3['default'])(obj) !== 'object') {
                  isNullOrNonObject = true
                  return reducer && false
                }
                if (prop in obj) {
                  obj = obj[prop]
                  previousPath =
                    previousPath === null ? prop : previousPath + '.' + prop
                  return reducer && true
                }
                return reducer && false
              }, true)
              {
                if (isNullOrNonObject) {
                  throw new Error(previousPath + ' is not an object')
                }
              }
              return isValidPath
            }
            /**
             * Parses a rule string expression.
             */ var parseRule = function parseRule(rule) {
              var params = []
              var name = rule.split(':')[0]
              if (includes(rule, ':')) {
                params = rule
                  .split(':')
                  .slice(1)
                  .join(':')
                  .split(',')
              }
              return { name: name, params: params }
            }
            /**
             * Debounces a function.
             */ var debounce = function debounce(fn, wait, token) {
              if (wait === void 0) wait = 0
              if (token === void 0) token = { cancelled: false }
              if (wait === 0) {
                return fn
              }
              var timeout
              return function() {
                var args = [],
                  len = arguments.length
                while (len--) {
                  args[len] = arguments[len]
                }
                var later = function later() {
                  timeout = null // check if the fn call was cancelled.
                  if (!token.cancelled) {
                    fn.apply(void 0, args)
                  }
                }
                clearTimeout(timeout)
                timeout = setTimeout(later, wait)
                if (!timeout) {
                  fn.apply(void 0, args)
                }
              }
            }
            /**
             * Appends a rule definition to a list of rules.
             */ var appendRule = function appendRule(rule, rules) {
              if (!rules) {
                return normalizeRules(rule)
              }
              if (!rule) {
                return normalizeRules(rules)
              }
              if (typeof rules === 'string') {
                rules = normalizeRules(rules)
              }
              return assign({}, rules, normalizeRules(rule))
            }
            /**
             * Normalizes the given rules expression.
             */ var normalizeRules = function normalizeRules(rules) {
              // if falsy value return an empty object.
              if (!rules) {
                return {}
              }
              if (isObject(rules)) {
                // $FlowFixMe
                return Object.keys(rules).reduce(function(prev, curr) {
                  var params = [] // $FlowFixMe
                  if (rules[curr] === true) {
                    params = []
                  } else if (Array.isArray(rules[curr])) {
                    params = rules[curr]
                  } else if (isObject(rules[curr])) {
                    params = rules[curr]
                  } else {
                    params = [rules[curr]]
                  } // $FlowFixMe
                  if (rules[curr] !== false) {
                    prev[curr] = params
                  }
                  return prev
                }, {})
              }
              if (typeof rules !== 'string') {
                warn('rules must be either a string or an object.')
                return {}
              }
              return rules.split('|').reduce(function(prev, rule) {
                var parsedRule = parseRule(rule)
                if (!parsedRule.name) {
                  return prev
                }
                prev[parsedRule.name] = parsedRule.params
                return prev
              }, {})
            }
            /**
             * Emits a warning to the console.
             */ var warn = function warn(message) {
              console.warn('[vee-validate] ' + message) // eslint-disable-line
            }
            /**
             * Creates a branded error object.
             */ var createError = function createError(message) {
              return new Error('[vee-validate] ' + message)
            }
            /**
             * Checks if the value is an object.
             */ var isObject = function isObject(obj) {
              return (
                obj !== null &&
                obj &&
                (0, _typeof3['default'])(obj) === 'object' &&
                !Array.isArray(obj)
              )
            }
            /**
             * Checks if a function is callable.
             */ var isCallable = function isCallable(func) {
              return typeof func === 'function'
            }
            /**
             * Check if element has the css class on it.
             */ var hasClass = function hasClass(el, className) {
              if (el.classList) {
                return el.classList.contains(className)
              }
              return !!el.className.match(
                new RegExp('(\\s|^)' + className + '(\\s|$)')
              )
            }
            /**
             * Adds the provided css className to the element.
             */ var addClass = function addClass(el, className) {
              if (el.classList) {
                el.classList.add(className)
                return
              }
              if (!hasClass(el, className)) {
                el.className += ' ' + className
              }
            }
            /**
             * Remove the provided css className from the element.
             */ var removeClass = function removeClass(el, className) {
              if (el.classList) {
                el.classList.remove(className)
                return
              }
              if (hasClass(el, className)) {
                var reg = new RegExp('(\\s|^)' + className + '(\\s|$)')
                el.className = el.className.replace(reg, ' ')
              }
            }
            /**
             * Adds or removes a class name on the input depending on the status flag.
             */ var toggleClass = function toggleClass(el, className, status) {
              if (!el || !className) {
                return
              }
              if (Array.isArray(className)) {
                className.forEach(function(item) {
                  return toggleClass(el, item, status)
                })
                return
              }
              if (status) {
                return addClass(el, className)
              }
              removeClass(el, className)
            }
            /**
             * Converts an array-like object to array, provides a simple polyfill for Array.from
             */ var toArray = function toArray(arrayLike) {
              if (isCallable(Array.from)) {
                return Array.from(arrayLike)
              }
              var array = []
              var length = arrayLike.length
              /* istanbul ignore next */ for (var i = 0; i < length; i++) {
                array.push(arrayLike[i])
              }
              /* istanbul ignore next */ return array
            }
            /**
             * Converts an array-like object to array and place other elements in an array
             */ var ensureArray = function ensureArray(arrayLike) {
              if (Array.isArray(arrayLike)) {
                return [].concat(arrayLike)
              }
              var array = toArray(arrayLike)
              return isEmptyArray(array) ? [arrayLike] : array
            }
            /**
             * Assign polyfill from the mdn.
             */ var assign = function assign(target) {
              var others = [],
                len = arguments.length - 1
              while (len-- > 0) {
                others[len] = arguments[len + 1]
              }
              /* istanbul ignore else */ if (isCallable(Object.assign)) {
                return Object.assign.apply(Object, [target].concat(others))
              }
              /* istanbul ignore next */ if (target == null) {
                throw new TypeError(
                  'Cannot convert undefined or null to object'
                )
              }
              /* istanbul ignore next */ var to = Object(target)
              /* istanbul ignore next */ others.forEach(function(arg) {
                // Skip over if undefined or null
                if (arg != null) {
                  Object.keys(arg).forEach(function(key) {
                    to[key] = arg[key]
                  })
                }
              })
              /* istanbul ignore next */ return to
            }
            var id = 0
            var idTemplate = '{id}'
            /**
             * Generates a unique id.
             */ var uniqId = function uniqId() {
              // handle too many uses of uniqId, although unlikely.
              if (id >= 9999) {
                id = 0 // shift the template.
                idTemplate = idTemplate.replace('{id}', '_{id}')
              }
              id++
              var newId = idTemplate.replace('{id}', String(id))
              return newId
            }
            var findIndex = function findIndex(arrayLike, predicate) {
              var array = Array.isArray(arrayLike)
                ? arrayLike
                : toArray(arrayLike)
              for (var i = 0; i < array.length; i++) {
                if (predicate(array[i])) {
                  return i
                }
              }
              return -1
            }
            /**
             * finds the first element that satisfies the predicate callback, polyfills array.find
             */ var find = function find(arrayLike, predicate) {
              var array = Array.isArray(arrayLike)
                ? arrayLike
                : toArray(arrayLike)
              var idx = findIndex(array, predicate)
              return idx === -1 ? undefined : array[idx]
            }
            var isBuiltInComponent = function isBuiltInComponent(vnode) {
              if (!vnode) {
                return false
              }
              var tag = vnode.componentOptions.tag
              return /^(keep-alive|transition|transition-group)$/.test(tag)
            }
            var makeDelayObject = function makeDelayObject(
              events,
              delay,
              delayConfig
            ) {
              if (typeof delay === 'number') {
                return events.reduce(function(prev, e) {
                  prev[e] = delay
                  return prev
                }, {})
              }
              return events.reduce(function(prev, e) {
                if (
                  (0, _typeof3['default'])(delay) === 'object' &&
                  e in delay
                ) {
                  prev[e] = delay[e]
                  return prev
                }
                if (typeof delayConfig === 'number') {
                  prev[e] = delayConfig
                  return prev
                }
                prev[e] = (delayConfig && delayConfig[e]) || 0
                return prev
              }, {})
            }
            var deepParseInt = function deepParseInt(input) {
              if (typeof input === 'number') {
                return input
              }
              if (typeof input === 'string') {
                return parseInt(input)
              }
              var map = {}
              for (var element in input) {
                map[element] = parseInt(input[element])
              }
              return map
            }
            var merge = function merge(target, source) {
              if (!(isObject(target) && isObject(source))) {
                return target
              }
              Object.keys(source).forEach(function(key) {
                var obj, obj$1
                if (isObject(source[key])) {
                  if (!target[key]) {
                    assign(target, ((obj = {}), (obj[key] = {}), obj))
                  }
                  merge(target[key], source[key])
                  return
                }
                assign(
                  target,
                  ((obj$1 = {}), (obj$1[key] = source[key]), obj$1)
                )
              })
              return target
            }
            var fillRulesFromElement = function fillRulesFromElement(
              el,
              rules
            ) {
              if (el.required) {
                rules = appendRule('required', rules)
              }
              if (isTextInput(el)) {
                if (el.type === 'email') {
                  rules = appendRule(
                    'email' + (el.multiple ? ':multiple' : ''),
                    rules
                  )
                }
                if (el.pattern) {
                  rules = appendRule({ regex: el.pattern }, rules)
                } // 524288 is the max on some browsers and test environments.
                if (el.maxLength >= 0 && el.maxLength < 524288) {
                  rules = appendRule('max:' + el.maxLength, rules)
                }
                if (el.minLength > 0) {
                  rules = appendRule('min:' + el.minLength, rules)
                }
                if (el.type === 'number') {
                  rules = appendRule('decimal', rules)
                  if (el.min !== '') {
                    rules = appendRule('min_value:' + el.min, rules)
                  }
                  if (el.max !== '') {
                    rules = appendRule('max_value:' + el.max, rules)
                  }
                }
                return rules
              }
              if (isDateInput(el)) {
                var timeFormat =
                  el.step && Number(el.step) < 60 ? 'HH:mm:ss' : 'HH:mm'
                if (el.type === 'date') {
                  return appendRule('date_format:yyyy-MM-dd', rules)
                }
                if (el.type === 'datetime-local') {
                  return appendRule(
                    'date_format:yyyy-MM-ddT' + timeFormat,
                    rules
                  )
                }
                if (el.type === 'month') {
                  return appendRule('date_format:yyyy-MM', rules)
                }
                if (el.type === 'week') {
                  return appendRule('date_format:yyyy-[W]WW', rules)
                }
                if (el.type === 'time') {
                  return appendRule('date_format:' + timeFormat, rules)
                }
              }
              return rules
            }
            var values = function values(obj) {
              if (isCallable(Object.values)) {
                return Object.values(obj)
              } // fallback to keys()
              /* istanbul ignore next */ return Object.keys(obj).map(function(
                k
              ) {
                return obj[k]
              })
            }
            var parseSelector = function parseSelector(selector) {
              var rule = null
              if (includes(selector, ':')) {
                rule = selector.split(':').pop()
                selector = selector.replace(':' + rule, '')
              }
              if (selector[0] === '#') {
                return {
                  id: selector.slice(1),
                  rule: rule,
                  name: null,
                  scope: null
                }
              }
              var scope = null
              var name = selector
              if (includes(selector, '.')) {
                var parts = selector.split('.')
                scope = parts[0]
                name = parts.slice(1).join('.')
              }
              return { id: null, scope: scope, name: name, rule: rule }
            }
            var includes = function includes(collection, item) {
              return collection.indexOf(item) !== -1
            }
            var isEmptyArray = function isEmptyArray(arr) {
              return Array.isArray(arr) && arr.length === 0
            }
            var defineNonReactive = function defineNonReactive(
              obj,
              prop,
              value
            ) {
              Object.defineProperty(obj, prop, {
                configurable: false,
                writable: true,
                value: value
              })
            }
            var validate$a = function validate$a(value, ref) {
              if (ref === void 0) ref = {}
              var decimals = ref.decimals
              if (decimals === void 0) decimals = '*'
              var separator = ref.separator
              if (separator === void 0) separator = '.'
              if (isNullOrUndefined(value) || value === '') {
                return false
              }
              if (Array.isArray(value)) {
                return value.every(function(val) {
                  return validate$a(val, {
                    decimals: decimals,
                    separator: separator
                  })
                })
              } // if is 0.
              if (Number(decimals) === 0) {
                return /^-?\d*$/.test(value)
              }
              var regexPart = decimals === '*' ? '+' : '{1,' + decimals + '}'
              var regex = new RegExp(
                '^[-+]?\\d*(\\' +
                  separator +
                  '\\d' +
                  regexPart +
                  ')?([eE]{1}[-]?\\d+)?$'
              )
              if (!regex.test(value)) {
                return false
              }
              var parsedValue = parseFloat(value) // eslint-disable-next-line
              return parsedValue === parsedValue
            }
            var paramNames$a = ['decimals', 'separator']
            var decimal = { validate: validate$a, paramNames: paramNames$a }
            var validate$b = function validate$b(value, ref) {
              var length = ref[0]
              if (Array.isArray(value)) {
                return value.every(function(val) {
                  return validate$b(val, [length])
                })
              }
              var strVal = String(value)
              return /^[0-9]*$/.test(strVal) && strVal.length === Number(length)
            }
            var digits = { validate: validate$b }
            var imageRegex = /\.(jpg|svg|jpeg|png|bmp|gif)$/i
            var validateImage = function validateImage(file, width, height) {
              var URL = window.URL || window.webkitURL
              return new Promise(function(resolve) {
                var image = new Image()
                image.onerror = function() {
                  return resolve({ valid: false })
                }
                image.onload = function() {
                  return resolve({
                    valid:
                      image.width === Number(width) &&
                      image.height === Number(height)
                  })
                }
                image.src = URL.createObjectURL(file)
              })
            }
            var validate$c = function validate$c(files, ref) {
              var width = ref[0]
              var height = ref[1]
              var images = ensureArray(files).filter(function(file) {
                return imageRegex.test(file.name)
              })
              if (images.length === 0) {
                return false
              }
              return Promise.all(
                images.map(function(image) {
                  return validateImage(image, width, height)
                })
              )
            }
            var dimensions = { validate: validate$c }
            var merge_1 = createCommonjsModule(function(module, exports) {
              Object.defineProperty(exports, '__esModule', { value: true })
              exports['default'] = merge
              function merge() {
                var obj =
                  arguments.length > 0 && arguments[0] !== undefined
                    ? arguments[0]
                    : {}
                var defaults = arguments.length > 1 ? arguments[1] : undefined
                for (var key in defaults) {
                  if (typeof obj[key] === 'undefined') {
                    obj[key] = defaults[key]
                  }
                }
                return obj
              }
              module.exports = exports['default']
              module.exports['default'] = exports['default']
            })
            unwrapExports(merge_1)
            var isByteLength_1 = createCommonjsModule(function(
              module,
              exports
            ) {
              Object.defineProperty(exports, '__esModule', { value: true })
              exports['default'] = isByteLength
              var _assertString = _interopRequireDefault(assertString_1)
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj }
              }
              function _typeof(obj) {
                if (
                  typeof Symbol === 'function' &&
                  (0, _typeof3['default'])(Symbol.iterator) === 'symbol'
                ) {
                  _typeof = function _typeof(obj) {
                    return (0, _typeof3['default'])(obj)
                  }
                } else {
                  _typeof = function _typeof(obj) {
                    return obj &&
                      typeof Symbol === 'function' &&
                      obj.constructor === Symbol &&
                      obj !== Symbol.prototype
                      ? 'symbol'
                      : (0, _typeof3['default'])(obj)
                  }
                }
                return _typeof(obj)
              }
              /* eslint-disable prefer-rest-params */ function isByteLength(
                str,
                options
              ) {
                ;(0, _assertString['default'])(str)
                var min
                var max
                if (_typeof(options) === 'object') {
                  min = options.min || 0
                  max = options.max
                } else {
                  // backwards compatibility: isByteLength(str, min [, max])
                  min = arguments[1]
                  max = arguments[2]
                }
                var len = encodeURI(str).split(/%..|./).length - 1
                return len >= min && (typeof max === 'undefined' || len <= max)
              }
              module.exports = exports['default']
              module.exports['default'] = exports['default']
            })
            unwrapExports(isByteLength_1)
            var isFQDN_1 = createCommonjsModule(function(module, exports) {
              Object.defineProperty(exports, '__esModule', { value: true })
              exports['default'] = isFQDN
              var _assertString = _interopRequireDefault(assertString_1)
              var _merge = _interopRequireDefault(merge_1)
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj }
              }
              var default_fqdn_options = {
                require_tld: true,
                allow_underscores: false,
                allow_trailing_dot: false
              }
              function isFQDN(str, options) {
                ;(0, _assertString['default'])(str)
                options = (0, _merge['default'])(options, default_fqdn_options)
                /* Remove the optional trailing dot before checking validity */ if (
                  options.allow_trailing_dot &&
                  str[str.length - 1] === '.'
                ) {
                  str = str.substring(0, str.length - 1)
                }
                var parts = str.split('.')
                for (var i = 0; i < parts.length; i++) {
                  if (parts[i].length > 63) {
                    return false
                  }
                }
                if (options.require_tld) {
                  var tld = parts.pop()
                  if (
                    !parts.length ||
                    !/^([a-z\u00a1-\uffff]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)
                  ) {
                    return false
                  } // disallow spaces
                  if (
                    /[\s\u2002-\u200B\u202F\u205F\u3000\uFEFF\uDB40\uDC20]/.test(
                      tld
                    )
                  ) {
                    return false
                  }
                }
                for (var part, _i = 0; _i < parts.length; _i++) {
                  part = parts[_i]
                  if (options.allow_underscores) {
                    part = part.replace(/_/g, '')
                  }
                  if (!/^[a-z\u00a1-\uffff0-9-]+$/i.test(part)) {
                    return false
                  } // disallow full-width chars
                  if (/[\uff01-\uff5e]/.test(part)) {
                    return false
                  }
                  if (part[0] === '-' || part[part.length - 1] === '-') {
                    return false
                  }
                }
                return true
              }
              module.exports = exports['default']
              module.exports['default'] = exports['default']
            })
            var isFQDN = unwrapExports(isFQDN_1)
            var isIP_1 = createCommonjsModule(function(module, exports) {
              Object.defineProperty(exports, '__esModule', { value: true })
              exports['default'] = isIP
              var _assertString = _interopRequireDefault(assertString_1)
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj }
              }
              var ipv4Maybe = /^(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})$/
              var ipv6Block = /^[0-9A-F]{1,4}$/i
              function isIP(str) {
                var version =
                  arguments.length > 1 && arguments[1] !== undefined
                    ? arguments[1]
                    : ''
                ;(0, _assertString['default'])(str)
                version = String(version)
                if (!version) {
                  return isIP(str, 4) || isIP(str, 6)
                } else if (version === '4') {
                  if (!ipv4Maybe.test(str)) {
                    return false
                  }
                  var parts = str.split('.').sort(function(a, b) {
                    return a - b
                  })
                  return parts[3] <= 255
                } else if (version === '6') {
                  var blocks = str.split(':')
                  var foundOmissionBlock = false // marker to indicate ::
                  // At least some OS accept the last 32 bits of an IPv6 address
                  // (i.e. 2 of the blocks) in IPv4 notation, and RFC 3493 says
                  // that '::ffff:a.b.c.d' is valid for IPv4-mapped IPv6 addresses,
                  // and '::a.b.c.d' is deprecated, but also valid.
                  var foundIPv4TransitionBlock = isIP(
                    blocks[blocks.length - 1],
                    4
                  )
                  var expectedNumberOfBlocks = foundIPv4TransitionBlock ? 7 : 8
                  if (blocks.length > expectedNumberOfBlocks) {
                    return false
                  } // initial or final ::
                  if (str === '::') {
                    return true
                  } else if (str.substr(0, 2) === '::') {
                    blocks.shift()
                    blocks.shift()
                    foundOmissionBlock = true
                  } else if (str.substr(str.length - 2) === '::') {
                    blocks.pop()
                    blocks.pop()
                    foundOmissionBlock = true
                  }
                  for (var i = 0; i < blocks.length; ++i) {
                    // test for a :: which can not be at the string start/end
                    // since those cases have been handled above
                    if (blocks[i] === '' && i > 0 && i < blocks.length - 1) {
                      if (foundOmissionBlock) {
                        return false // multiple :: in address
                      }
                      foundOmissionBlock = true
                    } else if (
                      foundIPv4TransitionBlock &&
                      i === blocks.length - 1
                    );
                    else if (!ipv6Block.test(blocks[i])) {
                      return false
                    }
                  }
                  if (foundOmissionBlock) {
                    return blocks.length >= 1
                  }
                  return blocks.length === expectedNumberOfBlocks
                }
                return false
              }
              module.exports = exports['default']
              module.exports['default'] = exports['default']
            })
            var isIP = unwrapExports(isIP_1)
            var isEmail_1 = createCommonjsModule(function(module, exports) {
              Object.defineProperty(exports, '__esModule', { value: true })
              exports['default'] = isEmail
              var _assertString = _interopRequireDefault(assertString_1)
              var _merge = _interopRequireDefault(merge_1)
              var _isByteLength = _interopRequireDefault(isByteLength_1)
              var _isFQDN = _interopRequireDefault(isFQDN_1)
              var _isIP = _interopRequireDefault(isIP_1)
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj }
              }
              var default_email_options = {
                allow_display_name: false,
                require_display_name: false,
                allow_utf8_local_part: true,
                require_tld: true
              }
              /* eslint-disable max-len */ /* eslint-disable no-control-regex */ var displayName = /^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\.\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\,\.\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF\s]*<(.+)>$/i
              var emailUserPart = /^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~]+$/i
              var gmailUserPart = /^[a-z\d]+$/
              var quotedEmailUser = /^([\s\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e]|(\\[\x01-\x09\x0b\x0c\x0d-\x7f]))*$/i
              var emailUserUtf8Part = /^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+$/i
              var quotedEmailUserUtf8 = /^([\s\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|(\\[\x01-\x09\x0b\x0c\x0d-\x7f\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))*$/i
              /* eslint-enable max-len */ /* eslint-enable no-control-regex */ function isEmail(
                str,
                options
              ) {
                ;(0, _assertString['default'])(str)
                options = (0, _merge['default'])(options, default_email_options)
                if (
                  options.require_display_name ||
                  options.allow_display_name
                ) {
                  var display_email = str.match(displayName)
                  if (display_email) {
                    str = display_email[1]
                  } else if (options.require_display_name) {
                    return false
                  }
                }
                var parts = str.split('@')
                var domain = parts.pop()
                var user = parts.join('@')
                var lower_domain = domain.toLowerCase()
                if (
                  options.domain_specific_validation &&
                  (lower_domain === 'gmail.com' ||
                    lower_domain === 'googlemail.com')
                ) {
                  /*
        Previously we removed dots for gmail addresses before validating.
        This was removed because it allows `multiple..dots@gmail.com`
        to be reported as valid, but it is not.
        Gmail only normalizes single dots, removing them from here is pointless,
        should be done in normalizeEmail
      */ user = user.toLowerCase() // Removing sub-address from username before gmail validation
                  var username = user.split('+')[0] // Dots are not included in gmail length restriction
                  if (
                    !(0, _isByteLength['default'])(username.replace('.', ''), {
                      min: 6,
                      max: 30
                    })
                  ) {
                    return false
                  }
                  var _user_parts = username.split('.')
                  for (var i = 0; i < _user_parts.length; i++) {
                    if (!gmailUserPart.test(_user_parts[i])) {
                      return false
                    }
                  }
                }
                if (
                  !(0, _isByteLength['default'])(user, { max: 64 }) ||
                  !(0, _isByteLength['default'])(domain, { max: 254 })
                ) {
                  return false
                }
                if (
                  !(0, _isFQDN['default'])(domain, {
                    require_tld: options.require_tld
                  })
                ) {
                  if (!options.allow_ip_domain) {
                    return false
                  }
                  if (!(0, _isIP['default'])(domain)) {
                    if (!domain.startsWith('[') || !domain.endsWith(']')) {
                      return false
                    }
                    var noBracketdomain = domain.substr(1, domain.length - 2)
                    if (
                      noBracketdomain.length === 0 ||
                      !(0, _isIP['default'])(noBracketdomain)
                    ) {
                      return false
                    }
                  }
                }
                if (user[0] === '"') {
                  user = user.slice(1, user.length - 1)
                  return options.allow_utf8_local_part
                    ? quotedEmailUserUtf8.test(user)
                    : quotedEmailUser.test(user)
                }
                var pattern = options.allow_utf8_local_part
                  ? emailUserUtf8Part
                  : emailUserPart
                var user_parts = user.split('.')
                for (var _i = 0; _i < user_parts.length; _i++) {
                  if (!pattern.test(user_parts[_i])) {
                    return false
                  }
                }
                return true
              }
              module.exports = exports['default']
              module.exports['default'] = exports['default']
            })
            var isEmail = unwrapExports(isEmail_1)
            function objectWithoutProperties(obj, exclude) {
              var target = {}
              for (var k in obj) {
                if (
                  Object.prototype.hasOwnProperty.call(obj, k) &&
                  exclude.indexOf(k) === -1
                )
                  target[k] = obj[k]
              }
              return target
            }
            var validate$d = function validate$d(value, ref) {
              if (ref === void 0) ref = {}
              var multiple = ref.multiple
              if (multiple === void 0) multiple = false
              var rest = objectWithoutProperties(ref, ['multiple'])
              var options = rest
              if (multiple && !Array.isArray(value)) {
                value = String(value)
                  .split(',')
                  .map(function(emailStr) {
                    return emailStr.trim()
                  })
              }
              var validatorOptions = assign({}, options)
              if (Array.isArray(value)) {
                return value.every(function(val) {
                  return isEmail(String(val), validatorOptions)
                })
              }
              return isEmail(String(value), validatorOptions)
            }
            var email = { validate: validate$d }
            var validate$e = function validate$e(value, options) {
              if (Array.isArray(value)) {
                return value.every(function(val) {
                  return validate$e(val, options)
                })
              }
              return toArray(options).some(function(item) {
                // eslint-disable-next-line
                return item == value
              })
            }
            var included = { validate: validate$e }
            var validate$f = function validate$f() {
              var args = [],
                len = arguments.length
              while (len--) {
                args[len] = arguments[len]
              }
              return !validate$e.apply(void 0, args)
            }
            var excluded = { validate: validate$f }
            var validate$g = function validate$g(files, extensions) {
              var regex = new RegExp('.(' + extensions.join('|') + ')$', 'i')
              return ensureArray(files).every(function(file) {
                return regex.test(file.name)
              })
            }
            var ext = { validate: validate$g }
            var validate$h = function validate$h(files) {
              return (Array.isArray(files) ? files : [files]).every(function(
                file
              ) {
                return /\.(jpg|svg|jpeg|png|bmp|gif)$/i.test(file.name)
              })
            }
            var image = { validate: validate$h }
            var validate$i = function validate$i(value) {
              if (Array.isArray(value)) {
                return value.every(function(val) {
                  return /^-?[0-9]+$/.test(String(val))
                })
              }
              return /^-?[0-9]+$/.test(String(value))
            }
            var integer = { validate: validate$i }
            var validate$j = function validate$j(value, ref) {
              if (ref === void 0) ref = {}
              var version = ref.version
              if (version === void 0) version = 4
              if (isNullOrUndefined(value)) {
                value = ''
              }
              if (Array.isArray(value)) {
                return value.every(function(val) {
                  return isIP(val, version)
                })
              }
              return isIP(value, version)
            }
            var paramNames$b = ['version']
            var ip = { validate: validate$j, paramNames: paramNames$b }
            var validate$k = function validate$k(value) {
              if (isNullOrUndefined(value)) {
                value = ''
              }
              if (Array.isArray(value)) {
                return value.every(function(val) {
                  return isIP(val, '') || isFQDN(val)
                })
              }
              return isIP(value, '') || isFQDN(value)
            }
            var ip_or_fqdn = { validate: validate$k }
            var validate$l = function validate$l(value, ref) {
              if (ref === void 0) ref = []
              var other = ref[0]
              return value === other
            }
            var is = { validate: validate$l }
            var validate$m = function validate$m(value, ref) {
              if (ref === void 0) ref = []
              var other = ref[0]
              return value !== other
            }
            var is_not = { validate: validate$m }
            /**
             * @param {Array|String} value
             * @param {Number} length
             * @param {Number} max
             */ var compare = function compare(value, length, max) {
              if (max === undefined) {
                return value.length === length
              } // cast to number.
              max = Number(max)
              return value.length >= length && value.length <= max
            }
            var validate$n = function validate$n(value, ref) {
              var length = ref[0]
              var max = ref[1]
              if (max === void 0) max = undefined
              if (isNullOrUndefined(value)) {
                return false
              }
              length = Number(length)
              if (typeof value === 'number') {
                value = String(value)
              }
              if (!value.length) {
                value = toArray(value)
              }
              return compare(value, length, max)
            }
            var length = { validate: validate$n }
            var validate$o = function validate$o(value, ref) {
              var length = ref[0]
              if (isNullOrUndefined(value)) {
                return length >= 0
              }
              if (Array.isArray(value)) {
                return value.every(function(val) {
                  return validate$o(val, [length])
                })
              }
              return String(value).length <= length
            }
            var max = { validate: validate$o }
            var validate$p = function validate$p(value, ref) {
              var max = ref[0]
              if (isNullOrUndefined(value) || value === '') {
                return false
              }
              if (Array.isArray(value)) {
                return (
                  value.length > 0 &&
                  value.every(function(val) {
                    return validate$p(val, [max])
                  })
                )
              }
              return Number(value) <= max
            }
            var max_value = { validate: validate$p }
            var validate$q = function validate$q(files, mimes) {
              var regex = new RegExp(
                mimes.join('|').replace('*', '.+') + '$',
                'i'
              )
              return ensureArray(files).every(function(file) {
                return regex.test(file.type)
              })
            }
            var mimes = { validate: validate$q }
            var validate$r = function validate$r(value, ref) {
              var length = ref[0]
              if (isNullOrUndefined(value)) {
                return false
              }
              if (Array.isArray(value)) {
                return value.every(function(val) {
                  return validate$r(val, [length])
                })
              }
              return String(value).length >= length
            }
            var min = { validate: validate$r }
            var validate$s = function validate$s(value, ref) {
              var min = ref[0]
              if (isNullOrUndefined(value) || value === '') {
                return false
              }
              if (Array.isArray(value)) {
                return (
                  value.length > 0 &&
                  value.every(function(val) {
                    return validate$s(val, [min])
                  })
                )
              }
              return Number(value) >= min
            }
            var min_value = { validate: validate$s }
            var ar = /^[٠١٢٣٤٥٦٧٨٩]+$/
            var en = /^[0-9]+$/
            var validate$t = function validate$t(value) {
              var testValue = function testValue(val) {
                var strValue = String(val)
                return en.test(strValue) || ar.test(strValue)
              }
              if (Array.isArray(value)) {
                return value.every(testValue)
              }
              return testValue(value)
            }
            var numeric = { validate: validate$t }
            var validate$u = function validate$u(value, ref) {
              var expression = ref.expression
              if (typeof expression === 'string') {
                expression = new RegExp(expression)
              }
              if (Array.isArray(value)) {
                return value.every(function(val) {
                  return validate$u(val, { expression: expression })
                })
              }
              return expression.test(String(value))
            }
            var paramNames$c = ['expression']
            var regex = { validate: validate$u, paramNames: paramNames$c }
            var validate$v = function validate$v(value, ref) {
              if (ref === void 0) ref = []
              var invalidateFalse = ref[0]
              if (invalidateFalse === void 0) invalidateFalse = false
              if (isNullOrUndefined(value) || isEmptyArray(value)) {
                return false
              } // incase a field considers `false` as an empty value like checkboxes.
              if (value === false && invalidateFalse) {
                return false
              }
              return !!String(value).trim().length
            }
            var required = { validate: validate$v }
            var validate$w = function validate$w(value, ref) {
              if (ref === void 0) ref = []
              var otherFieldVal = ref[0]
              var possibleVals = ref.slice(1)
              var required = possibleVals.includes(String(otherFieldVal).trim())
              if (!required) {
                return { valid: true, data: { required: required } }
              }
              var invalid =
                isEmptyArray(value) || [false, null, undefined].includes(value)
              invalid = invalid || !String(value).trim().length
              return { valid: !invalid, data: { required: required } }
            }
            var options$5 = { hasTarget: true, computesRequired: true }
            var required_if = { validate: validate$w, options: options$5 }
            var validate$x = function validate$x(files, ref) {
              var size = ref[0]
              if (isNaN(size)) {
                return false
              }
              var nSize = Number(size) * 1024
              return ensureArray(files).every(function(file) {
                return file.size <= nSize
              })
            }
            var size = { validate: validate$x }
            var isURL_1 = createCommonjsModule(function(module, exports) {
              Object.defineProperty(exports, '__esModule', { value: true })
              exports['default'] = isURL
              var _assertString = _interopRequireDefault(assertString_1)
              var _isFQDN = _interopRequireDefault(isFQDN_1)
              var _isIP = _interopRequireDefault(isIP_1)
              var _merge = _interopRequireDefault(merge_1)
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj }
              }
              var default_url_options = {
                protocols: ['http', 'https', 'ftp'],
                require_tld: true,
                require_protocol: false,
                require_host: true,
                require_valid_protocol: true,
                allow_underscores: false,
                allow_trailing_dot: false,
                allow_protocol_relative_urls: false
              }
              var wrapped_ipv6 = /^\[([^\]]+)\](?::([0-9]+))?$/
              function isRegExp(obj) {
                return Object.prototype.toString.call(obj) === '[object RegExp]'
              }
              function checkHost(host, matches) {
                for (var i = 0; i < matches.length; i++) {
                  var match = matches[i]
                  if (host === match || (isRegExp(match) && match.test(host))) {
                    return true
                  }
                }
                return false
              }
              function isURL(url, options) {
                ;(0, _assertString['default'])(url)
                if (!url || url.length >= 2083 || /[\s<>]/.test(url)) {
                  return false
                }
                if (url.indexOf('mailto:') === 0) {
                  return false
                }
                options = (0, _merge['default'])(options, default_url_options)
                var protocol, auth, host, hostname, port, port_str, split, ipv6
                split = url.split('#')
                url = split.shift()
                split = url.split('?')
                url = split.shift()
                split = url.split('://')
                if (split.length > 1) {
                  protocol = split.shift().toLowerCase()
                  if (
                    options.require_valid_protocol &&
                    options.protocols.indexOf(protocol) === -1
                  ) {
                    return false
                  }
                } else if (options.require_protocol) {
                  return false
                } else if (url.substr(0, 2) === '//') {
                  if (!options.allow_protocol_relative_urls) {
                    return false
                  }
                  split[0] = url.substr(2)
                }
                url = split.join('://')
                if (url === '') {
                  return false
                }
                split = url.split('/')
                url = split.shift()
                if (url === '' && !options.require_host) {
                  return true
                }
                split = url.split('@')
                if (split.length > 1) {
                  if (options.disallow_auth) {
                    return false
                  }
                  auth = split.shift()
                  if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {
                    return false
                  }
                }
                hostname = split.join('@')
                port_str = null
                ipv6 = null
                var ipv6_match = hostname.match(wrapped_ipv6)
                if (ipv6_match) {
                  host = ''
                  ipv6 = ipv6_match[1]
                  port_str = ipv6_match[2] || null
                } else {
                  split = hostname.split(':')
                  host = split.shift()
                  if (split.length) {
                    port_str = split.join(':')
                  }
                }
                if (port_str !== null) {
                  port = parseInt(port_str, 10)
                  if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {
                    return false
                  }
                }
                if (
                  !(0, _isIP['default'])(host) &&
                  !(0, _isFQDN['default'])(host, options) &&
                  (!ipv6 || !(0, _isIP['default'])(ipv6, 6))
                ) {
                  return false
                }
                host = host || ipv6
                if (
                  options.host_whitelist &&
                  !checkHost(host, options.host_whitelist)
                ) {
                  return false
                }
                if (
                  options.host_blacklist &&
                  checkHost(host, options.host_blacklist)
                ) {
                  return false
                }
                return true
              }
              module.exports = exports['default']
              module.exports['default'] = exports['default']
            })
            var isURL = unwrapExports(isURL_1)
            var validate$y = function validate$y(value, options) {
              if (options === void 0) options = {}
              if (isNullOrUndefined(value)) {
                value = ''
              }
              var validatorOptions = assign({}, options)
              if (Array.isArray(value)) {
                return value.every(function(val) {
                  return isURL(val, validatorOptions)
                })
              }
              return isURL(value, validatorOptions)
            }
            var url = { validate: validate$y }
            /* eslint-disable camelcase */ var Rules = /*#__PURE__*/ Object.freeze(
              {
                after: after,
                alpha_dash: alpha_dash,
                alpha_num: alpha_num,
                alpha_spaces: alpha_spaces,
                alpha: alpha$1,
                before: before,
                between: between,
                confirmed: confirmed,
                credit_card: credit_card,
                date_between: date_between,
                date_format: date_format,
                decimal: decimal,
                digits: digits,
                dimensions: dimensions,
                email: email,
                ext: ext,
                image: image,
                included: included,
                integer: integer,
                length: length,
                ip: ip,
                ip_or_fqdn: ip_or_fqdn,
                is_not: is_not,
                is: is,
                max: max,
                max_value: max_value,
                mimes: mimes,
                min: min,
                min_value: min_value,
                excluded: excluded,
                numeric: numeric,
                regex: regex,
                required: required,
                required_if: required_if,
                size: size,
                url: url
              }
            ) //
            var LOCALE = 'en'
            var Dictionary = function Dictionary(dictionary) {
              if (dictionary === void 0) dictionary = {}
              this.container = {}
              this.merge(dictionary)
            }
            var prototypeAccessors = { locale: { configurable: true } }
            prototypeAccessors.locale.get = function() {
              return LOCALE
            }
            prototypeAccessors.locale.set = function(value) {
              LOCALE = value || 'en'
            }
            Dictionary.prototype.hasLocale = function hasLocale(locale) {
              return !!this.container[locale]
            }
            Dictionary.prototype.setDateFormat = function setDateFormat(
              locale,
              format
            ) {
              if (!this.container[locale]) {
                this.container[locale] = {}
              }
              this.container[locale].dateFormat = format
            }
            Dictionary.prototype.getDateFormat = function getDateFormat(
              locale
            ) {
              if (
                !this.container[locale] ||
                !this.container[locale].dateFormat
              ) {
                return null
              }
              return this.container[locale].dateFormat
            }
            Dictionary.prototype.getMessage = function getMessage(
              locale,
              key,
              data
            ) {
              var message = null
              if (!this.hasMessage(locale, key)) {
                message = this._getDefaultMessage(locale)
              } else {
                message = this.container[locale].messages[key]
              }
              return isCallable(message) ? message.apply(void 0, data) : message
            }
            /**
             * Gets a specific message for field. falls back to the rule message.
             */ Dictionary.prototype.getFieldMessage = function getFieldMessage(
              locale,
              field,
              key,
              data
            ) {
              if (!this.hasLocale(locale)) {
                return this.getMessage(locale, key, data)
              }
              var dict =
                this.container[locale].custom &&
                this.container[locale].custom[field]
              if (!dict || !dict[key]) {
                return this.getMessage(locale, key, data)
              }
              var message = dict[key]
              return isCallable(message) ? message.apply(void 0, data) : message
            }
            Dictionary.prototype._getDefaultMessage = function _getDefaultMessage(
              locale
            ) {
              if (this.hasMessage(locale, '_default')) {
                return this.container[locale].messages._default
              }
              return this.container.en.messages._default
            }
            Dictionary.prototype.getAttribute = function getAttribute(
              locale,
              key,
              fallback
            ) {
              if (fallback === void 0) fallback = ''
              if (!this.hasAttribute(locale, key)) {
                return fallback
              }
              return this.container[locale].attributes[key]
            }
            Dictionary.prototype.hasMessage = function hasMessage(locale, key) {
              return !!(
                this.hasLocale(locale) &&
                this.container[locale].messages &&
                this.container[locale].messages[key]
              )
            }
            Dictionary.prototype.hasAttribute = function hasAttribute(
              locale,
              key
            ) {
              return !!(
                this.hasLocale(locale) &&
                this.container[locale].attributes &&
                this.container[locale].attributes[key]
              )
            }
            Dictionary.prototype.merge = function merge$1(dictionary) {
              merge(this.container, dictionary)
            }
            Dictionary.prototype.setMessage = function setMessage(
              locale,
              key,
              message
            ) {
              if (!this.hasLocale(locale)) {
                this.container[locale] = { messages: {}, attributes: {} }
              }
              if (!this.container[locale].messages) {
                this.container[locale].messages = {}
              }
              this.container[locale].messages[key] = message
            }
            Dictionary.prototype.setAttribute = function setAttribute(
              locale,
              key,
              attribute
            ) {
              if (!this.hasLocale(locale)) {
                this.container[locale] = { messages: {}, attributes: {} }
              }
              this.container[locale].attributes[key] = attribute
            }
            Object.defineProperties(Dictionary.prototype, prototypeAccessors)
            var drivers = {
              default: new Dictionary({
                en: { messages: {}, attributes: {}, custom: {} }
              })
            }
            var currentDriver = 'default'
            var DictionaryResolver = function DictionaryResolver() {}
            DictionaryResolver._checkDriverName = function _checkDriverName(
              driver
            ) {
              if (!driver) {
                throw createError(
                  'you must provide a name to the dictionary driver'
                )
              }
            }
            DictionaryResolver.setDriver = function setDriver(
              driver,
              implementation
            ) {
              if (implementation === void 0) implementation = null
              this._checkDriverName(driver)
              if (implementation) {
                drivers[driver] = implementation
              }
              currentDriver = driver
            }
            DictionaryResolver.getDriver = function getDriver() {
              return drivers[currentDriver]
            } //
            var ErrorBag = function ErrorBag(errorBag, id) {
              if (errorBag === void 0) errorBag = null
              if (id === void 0) id = null
              this.vmId = id || null // make this bag a mirror of the provided one, sharing the same items reference.
              if (errorBag && errorBag instanceof ErrorBag) {
                this.items = errorBag.items
              } else {
                this.items = []
              }
            }
            ErrorBag.prototype[
              typeof Symbol === 'function' ? Symbol.iterator : '@@iterator'
            ] = function() {
              var this$1 = this
              var index = 0
              return {
                next: function next() {
                  return {
                    value: this$1.items[index++],
                    done: index > this$1.items.length
                  }
                }
              }
            }
            /**
             * Adds an error to the internal array.
             */ ErrorBag.prototype.add = function add(error) {
              var ref
              ;(ref = this.items).push.apply(ref, this._normalizeError(error))
            }
            /**
             * Normalizes passed errors to an error array.
             */ ErrorBag.prototype._normalizeError = function _normalizeError(
              error
            ) {
              var this$1 = this
              if (Array.isArray(error)) {
                return error.map(function(e) {
                  e.scope = !isNullOrUndefined(e.scope) ? e.scope : null
                  e.vmId = !isNullOrUndefined(e.vmId)
                    ? e.vmId
                    : this$1.vmId || null
                  return e
                })
              }
              error.scope = !isNullOrUndefined(error.scope) ? error.scope : null
              error.vmId = !isNullOrUndefined(error.vmId)
                ? error.vmId
                : this.vmId || null
              return [error]
            }
            /**
             * Regenrates error messages if they have a generator function.
             */ ErrorBag.prototype.regenerate = function regenerate() {
              this.items.forEach(function(i) {
                i.msg = isCallable(i.regenerate) ? i.regenerate() : i.msg
              })
            }
            /**
             * Updates a field error with the new field scope.
             */ ErrorBag.prototype.update = function update(id, error) {
              var item = find(this.items, function(i) {
                return i.id === id
              })
              if (!item) {
                return
              }
              var idx = this.items.indexOf(item)
              this.items.splice(idx, 1)
              item.scope = error.scope
              this.items.push(item)
            }
            /**
             * Gets all error messages from the internal array.
             */ ErrorBag.prototype.all = function all(scope) {
              var this$1 = this
              var filterFn = function filterFn(item) {
                var matchesScope = true
                var matchesVM = true
                if (!isNullOrUndefined(scope)) {
                  matchesScope = item.scope === scope
                }
                if (!isNullOrUndefined(this$1.vmId)) {
                  matchesVM = item.vmId === this$1.vmId
                }
                return matchesVM && matchesScope
              }
              return this.items.filter(filterFn).map(function(e) {
                return e.msg
              })
            }
            /**
             * Checks if there are any errors in the internal array.
             */ ErrorBag.prototype.any = function any(scope) {
              var this$1 = this
              var filterFn = function filterFn(item) {
                var matchesScope = true
                var matchesVM = true
                if (!isNullOrUndefined(scope)) {
                  matchesScope = item.scope === scope
                }
                if (!isNullOrUndefined(this$1.vmId)) {
                  matchesVM = item.vmId === this$1.vmId
                }
                return matchesVM && matchesScope
              }
              return !!this.items.filter(filterFn).length
            }
            /**
             * Removes all items from the internal array.
             */ ErrorBag.prototype.clear = function clear(scope) {
              var this$1 = this
              var matchesVM = isNullOrUndefined(this.vmId)
                ? function() {
                    return true
                  }
                : function(i) {
                    return i.vmId === this$1.vmId
                  }
              var matchesScope = function matchesScope(i) {
                return i.scope === scope
              }
              if (arguments.length === 0) {
                matchesScope = function matchesScope() {
                  return true
                }
              } else if (isNullOrUndefined(scope)) {
                scope = null
              }
              for (var i = 0; i < this.items.length; ++i) {
                if (matchesVM(this.items[i]) && matchesScope(this.items[i])) {
                  this.items.splice(i, 1)
                  --i
                }
              }
            }
            /**
             * Collects errors into groups or for a specific field.
             */ ErrorBag.prototype.collect = function collect(
              field,
              scope,
              map
            ) {
              var this$1 = this
              if (map === void 0) map = true
              var isSingleField =
                !isNullOrUndefined(field) && !field.includes('*')
              var groupErrors = function groupErrors(items) {
                var errors = items.reduce(function(collection, error) {
                  if (
                    !isNullOrUndefined(this$1.vmId) &&
                    error.vmId !== this$1.vmId
                  ) {
                    return collection
                  }
                  if (!collection[error.field]) {
                    collection[error.field] = []
                  }
                  collection[error.field].push(map ? error.msg : error)
                  return collection
                }, {}) // reduce the collection to be a single array.
                if (isSingleField) {
                  return values(errors)[0] || []
                }
                return errors
              }
              if (isNullOrUndefined(field)) {
                return groupErrors(this.items)
              }
              var selector = isNullOrUndefined(scope)
                ? String(field)
                : scope + '.' + field
              var ref = this._makeCandidateFilters(selector)
              var isPrimary = ref.isPrimary
              var isAlt = ref.isAlt
              var collected = this.items.reduce(
                function(prev, curr) {
                  if (isPrimary(curr)) {
                    prev.primary.push(curr)
                  }
                  if (isAlt(curr)) {
                    prev.alt.push(curr)
                  }
                  return prev
                },
                { primary: [], alt: [] }
              )
              collected = collected.primary.length
                ? collected.primary
                : collected.alt
              return groupErrors(collected)
            }
            /**
             * Gets the internal array length.
             */ ErrorBag.prototype.count = function count() {
              var this$1 = this
              if (this.vmId) {
                return this.items.filter(function(e) {
                  return e.vmId === this$1.vmId
                }).length
              }
              return this.items.length
            }
            /**
             * Finds and fetches the first error message for the specified field id.
             */ ErrorBag.prototype.firstById = function firstById(id) {
              var error = find(this.items, function(i) {
                return i.id === id
              })
              return error ? error.msg : undefined
            }
            /**
             * Gets the first error message for a specific field.
             */ ErrorBag.prototype.first = function first(field, scope) {
              if (scope === void 0) scope = null
              var selector = isNullOrUndefined(scope)
                ? field
                : scope + '.' + field
              var match = this._match(selector)
              return match && match.msg
            }
            /**
             * Returns the first error rule for the specified field
             */ ErrorBag.prototype.firstRule = function firstRule(
              field,
              scope
            ) {
              var errors = this.collect(field, scope, false)
              return (errors.length && errors[0].rule) || undefined
            }
            /**
             * Checks if the internal array has at least one error for the specified field.
             */ ErrorBag.prototype.has = function has(field, scope) {
              if (scope === void 0) scope = null
              return !!this.first(field, scope)
            }
            /**
             * Gets the first error message for a specific field and a rule.
             */ ErrorBag.prototype.firstByRule = function firstByRule(
              name,
              rule,
              scope
            ) {
              if (scope === void 0) scope = null
              var error = this.collect(name, scope, false).filter(function(e) {
                return e.rule === rule
              })[0]
              return (error && error.msg) || undefined
            }
            /**
             * Gets the first error message for a specific field that not match the rule.
             */ ErrorBag.prototype.firstNot = function firstNot(
              name,
              rule,
              scope
            ) {
              if (rule === void 0) rule = 'required'
              if (scope === void 0) scope = null
              var error = this.collect(name, scope, false).filter(function(e) {
                return e.rule !== rule
              })[0]
              return (error && error.msg) || undefined
            }
            /**
             * Removes errors by matching against the id or ids.
             */ ErrorBag.prototype.removeById = function removeById(id) {
              var condition = function condition(item) {
                return item.id === id
              }
              if (Array.isArray(id)) {
                condition = function condition(item) {
                  return id.indexOf(item.id) !== -1
                }
              }
              for (var i = 0; i < this.items.length; ++i) {
                if (condition(this.items[i])) {
                  this.items.splice(i, 1)
                  --i
                }
              }
            }
            /**
             * Removes all error messages associated with a specific field.
             */ ErrorBag.prototype.remove = function remove(
              field,
              scope,
              vmId
            ) {
              if (isNullOrUndefined(field)) {
                return
              }
              var selector = isNullOrUndefined(scope)
                ? String(field)
                : scope + '.' + field
              var ref = this._makeCandidateFilters(selector)
              var isPrimary = ref.isPrimary
              var isAlt = ref.isAlt
              var matches = function matches(item) {
                return isPrimary(item) || isAlt(item)
              }
              var shouldRemove = function shouldRemove(item) {
                if (isNullOrUndefined(vmId)) {
                  return matches(item)
                }
                return matches(item) && item.vmId === vmId
              }
              for (var i = 0; i < this.items.length; ++i) {
                if (shouldRemove(this.items[i])) {
                  this.items.splice(i, 1)
                  --i
                }
              }
            }
            ErrorBag.prototype._makeCandidateFilters = function _makeCandidateFilters(
              selector
            ) {
              var this$1 = this
              var matchesRule = function matchesRule() {
                return true
              }
              var matchesScope = function matchesScope() {
                return true
              }
              var matchesName = function matchesName() {
                return true
              }
              var matchesVM = function matchesVM() {
                return true
              }
              var ref = parseSelector(selector)
              var id = ref.id
              var rule = ref.rule
              var scope = ref.scope
              var name = ref.name
              if (rule) {
                matchesRule = function matchesRule(item) {
                  return item.rule === rule
                }
              } // match by id, can be combined with rule selection.
              if (id) {
                return {
                  isPrimary: function isPrimary(item) {
                    return (
                      matchesRule(item) &&
                      function(item) {
                        return id === item.id
                      }
                    )
                  },
                  isAlt: function isAlt() {
                    return false
                  }
                }
              }
              if (isNullOrUndefined(scope)) {
                // if no scope specified, make sure the found error has no scope.
                matchesScope = function matchesScope(item) {
                  return isNullOrUndefined(item.scope)
                }
              } else {
                matchesScope = function matchesScope(item) {
                  return item.scope === scope
                }
              }
              if (!isNullOrUndefined(name) && name !== '*') {
                matchesName = function matchesName(item) {
                  return item.field === name
                }
              }
              if (!isNullOrUndefined(this.vmId)) {
                matchesVM = function matchesVM(item) {
                  return item.vmId === this$1.vmId
                }
              } // matches the first candidate.
              var isPrimary = function isPrimary(item) {
                return (
                  matchesVM(item) &&
                  matchesName(item) &&
                  matchesRule(item) &&
                  matchesScope(item)
                )
              } // matches a second candidate, which is a field with a name containing the '.' character.
              var isAlt = function isAlt(item) {
                return (
                  matchesVM(item) &&
                  matchesRule(item) &&
                  item.field === scope + '.' + name
                )
              }
              return { isPrimary: isPrimary, isAlt: isAlt }
            }
            ErrorBag.prototype._match = function _match(selector) {
              if (isNullOrUndefined(selector)) {
                return undefined
              }
              var ref = this._makeCandidateFilters(selector)
              var isPrimary = ref.isPrimary
              var isAlt = ref.isAlt
              return this.items.reduce(function(prev, item, idx, arr) {
                var isLast = idx === arr.length - 1
                if (prev.primary) {
                  return isLast ? prev.primary : prev
                }
                if (isPrimary(item)) {
                  prev.primary = item
                }
                if (isAlt(item)) {
                  prev.alt = item
                } // keep going.
                if (!isLast) {
                  return prev
                }
                return prev.primary || prev.alt
              }, {})
            }
            var DEFAULT_CONFIG = {
              locale: 'en',
              delay: 0,
              errorBagName: 'errors',
              dictionary: null,
              fieldsBagName: 'fields',
              classes: false,
              classNames: null,
              events: 'input',
              inject: true,
              fastExit: true,
              aria: true,
              validity: false,
              mode: 'aggressive',
              useConstraintAttrs: true,
              i18n: null,
              i18nRootKey: 'validation'
            }
            var currentConfig = assign({}, DEFAULT_CONFIG)
            var resolveConfig = function resolveConfig(ctx) {
              var selfConfig = getPath('$options.$_veeValidate', ctx, {})
              return assign({}, currentConfig, selfConfig)
            }
            var getConfig = function getConfig() {
              return currentConfig
            }
            var setConfig = function setConfig(newConf) {
              currentConfig = assign({}, currentConfig, newConf)
            } // VNode Utils
            // Gets the model object on the vnode.
            function findModel(vnode) {
              if (!vnode.data) {
                return null
              } // Component Model
              if (vnode.data.model) {
                return vnode.data.model
              }
              return (
                !!vnode.data.directives &&
                find(vnode.data.directives, function(d) {
                  return d.name === 'model'
                })
              )
            }
            function extractChildren(vnode) {
              if (Array.isArray(vnode)) {
                return vnode
              }
              if (Array.isArray(vnode.children)) {
                return vnode.children
              }
              if (
                vnode.componentOptions &&
                Array.isArray(vnode.componentOptions.children)
              ) {
                return vnode.componentOptions.children
              }
              return []
            }
            function extractVNodes(vnode) {
              if (findModel(vnode)) {
                return [vnode]
              }
              var children = extractChildren(vnode)
              return children.reduce(function(nodes, node) {
                var candidates = extractVNodes(node)
                if (candidates.length) {
                  nodes.push.apply(nodes, candidates)
                }
                return nodes
              }, [])
            } // Resolves v-model config if exists.
            function findModelConfig(vnode) {
              if (!vnode.componentOptions) {
                return null
              }
              return vnode.componentOptions.Ctor.options.model
            } // Adds a listener to vnode listener object.
            function mergeVNodeListeners(obj, eventName, handler) {
              // Has a single listener, convert to array.
              if (isCallable(obj[eventName])) {
                var prevHandler = obj[eventName]
                obj[eventName] = [prevHandler]
              } // no listeners, create the array.
              if (isNullOrUndefined(obj[eventName])) {
                obj[eventName] = []
              }
              obj[eventName].push(handler)
            } // Adds a listener to a native HTML vnode.
            function addNativeNodeListener(node, eventName, handler) {
              if (isNullOrUndefined(node.data.on)) {
                node.data.on = {}
              }
              mergeVNodeListeners(node.data.on, eventName, handler)
            } // Adds a listener to a Vue component vnode.
            function addComponentNodeListener(node, eventName, handler) {
              /* istanbul ignore next */ if (!node.componentOptions.listeners) {
                node.componentOptions.listeners = {}
              }
              mergeVNodeListeners(
                node.componentOptions.listeners,
                eventName,
                handler
              )
            }
            function addVNodeListener(vnode, eventName, handler) {
              if (vnode.componentOptions) {
                addComponentNodeListener(vnode, eventName, handler)
                return
              }
              addNativeNodeListener(vnode, eventName, handler)
            } // Determines if `change` should be used over `input` for listeners.
            function getInputEventName(vnode, model) {
              // Is a component.
              if (vnode.componentOptions) {
                var ref = findModelConfig(vnode) || { event: 'input' }
                var event = ref.event
                return event
              } // Lazy Models and select tag typically use change event
              if (
                (model && model.modifiers && model.modifiers.lazy) ||
                vnode.tag === 'select'
              ) {
                return 'change'
              } // is a textual-type input.
              if (
                vnode.data.attrs &&
                isTextInput({ type: vnode.data.attrs.type || 'text' })
              ) {
                return 'input'
              }
              return 'change'
            }
            function normalizeSlots(slots, ctx) {
              return Object.keys(slots).reduce(function(arr, key) {
                slots[key].forEach(function(vnode) {
                  if (!vnode.context) {
                    slots[key].context = ctx
                    if (!vnode.data) {
                      vnode.data = {}
                    }
                    vnode.data.slot = key
                  }
                })
                return arr.concat(slots[key])
              }, [])
            }
            function createRenderless(h, children) {
              // Only render the first item of the node.
              if (Array.isArray(children) && children[0]) {
                return children[0]
              } // a single node.
              if (children) {
                return children
              } // No slots, render nothing.
              return h()
            }
            /**
             * Generates the options required to construct a field.
             */ var Resolver = function Resolver() {}
            Resolver.generate = function generate(el, binding, vnode) {
              var model = Resolver.resolveModel(binding, vnode)
              var options = resolveConfig(vnode.context)
              return {
                name: Resolver.resolveName(el, vnode),
                el: el,
                listen: !binding.modifiers.disable,
                bails: binding.modifiers.bails
                  ? true
                  : binding.modifiers.continues === true
                  ? false
                  : undefined,
                scope: Resolver.resolveScope(el, binding, vnode),
                vm: vnode.context,
                expression: binding.value,
                component: vnode.componentInstance,
                classes: options.classes,
                classNames: options.classNames,
                getter: Resolver.resolveGetter(el, vnode, model),
                events: Resolver.resolveEvents(el, vnode) || options.events,
                model: model,
                delay: Resolver.resolveDelay(el, vnode, options),
                rules: Resolver.resolveRules(el, binding, vnode),
                immediate:
                  !!binding.modifiers.initial || !!binding.modifiers.immediate,
                persist: !!binding.modifiers.persist,
                validity: options.validity && !vnode.componentInstance,
                aria: options.aria && !vnode.componentInstance,
                initialValue: Resolver.resolveInitialValue(vnode)
              }
            }
            Resolver.getCtorConfig = function getCtorConfig(vnode) {
              if (!vnode.componentInstance) {
                return null
              }
              var config = getPath(
                'componentInstance.$options.$_veeValidate',
                vnode
              )
              return config
            }
            /**
             * Resolves the rules defined on an element.
             */ Resolver.resolveRules = function resolveRules(
              el,
              binding,
              vnode
            ) {
              var rules = ''
              if (!binding.value && (!binding || !binding.expression)) {
                rules = getDataAttribute(el, 'rules')
              }
              if (
                binding.value &&
                includes(
                  ['string', 'object'],
                  (0, _typeof3['default'])(binding.value.rules)
                )
              ) {
                rules = binding.value.rules
              } else if (binding.value) {
                rules = binding.value
              }
              if (vnode.componentInstance) {
                return rules
              } // If validity is disabled, ignore field rules.
              var normalized = normalizeRules(rules)
              if (!getConfig().useConstraintAttrs) {
                return normalized
              }
              return assign({}, fillRulesFromElement(el, {}), normalized)
            }
            /**
             * @param {*} vnode
             */ Resolver.resolveInitialValue = function resolveInitialValue(
              vnode
            ) {
              var model =
                vnode.data.model ||
                find(vnode.data.directives, function(d) {
                  return d.name === 'model'
                })
              return model && model.value
            }
            /**
             * Resolves the delay value.
             * @param {*} el
             * @param {*} vnode
             * @param {Object} options
             */ Resolver.resolveDelay = function resolveDelay(
              el,
              vnode,
              options
            ) {
              var delay = getDataAttribute(el, 'delay')
              var globalDelay =
                options && 'delay' in options ? options.delay : 0
              if (
                !delay &&
                vnode.componentInstance &&
                vnode.componentInstance.$attrs
              ) {
                delay = vnode.componentInstance.$attrs['data-vv-delay']
              }
              if (!isObject(globalDelay)) {
                return deepParseInt(delay || globalDelay)
              }
              if (!isNullOrUndefined(delay)) {
                globalDelay.input = delay
              }
              return deepParseInt(globalDelay)
            }
            /**
             * Resolves the events to validate in response to.
             * @param {*} el
             * @param {*} vnode
             */ Resolver.resolveEvents = function resolveEvents(el, vnode) {
              // resolve it from the root element.
              var events = getDataAttribute(el, 'validate-on') // resolve from data-vv-validate-on if its a vue component.
              if (
                !events &&
                vnode.componentInstance &&
                vnode.componentInstance.$attrs
              ) {
                events = vnode.componentInstance.$attrs['data-vv-validate-on']
              } // resolve it from $_veeValidate options.
              if (!events && vnode.componentInstance) {
                var config = Resolver.getCtorConfig(vnode)
                events = config && config.events
              }
              if (!events && getConfig().events) {
                events = getConfig().events
              } // resolve the model event if its configured for custom components.
              if (
                events &&
                vnode.componentInstance &&
                includes(events, 'input')
              ) {
                var ref = vnode.componentInstance.$options.model || {
                  event: 'input'
                }
                var event = ref.event // if the prop was configured but not the model.
                if (!event) {
                  return events
                }
                events = events.replace('input', event)
              }
              return events
            }
            /**
             * Resolves the scope for the field.
             * @param {*} el
             * @param {*} binding
             */ Resolver.resolveScope = function resolveScope(
              el,
              binding,
              vnode
            ) {
              if (vnode === void 0) vnode = {}
              var scope = null
              if (vnode.componentInstance && isNullOrUndefined(scope)) {
                scope =
                  vnode.componentInstance.$attrs &&
                  vnode.componentInstance.$attrs['data-vv-scope']
              }
              return !isNullOrUndefined(scope) ? scope : getScope(el)
            }
            /**
             * Checks if the node directives contains a v-model or a specified arg.
             * Args take priority over models.
             *
             * @return {Object}
             */ Resolver.resolveModel = function resolveModel(binding, vnode) {
              if (binding.arg) {
                return { expression: binding.arg }
              }
              var model = findModel(vnode)
              if (!model) {
                return null
              } // https://github.com/vuejs/vue/blob/dev/src/core/util/lang.js#L26
              var watchable =
                !/[^\w.$]/.test(model.expression) &&
                hasPath(model.expression, vnode.context)
              var lazy = !!(model.modifiers && model.modifiers.lazy)
              if (!watchable) {
                return { expression: null, lazy: lazy }
              }
              return { expression: model.expression, lazy: lazy }
            }
            /**
             * Resolves the field name to trigger validations.
             * @return {String} The field name.
             */ Resolver.resolveName = function resolveName(el, vnode) {
              var name = getDataAttribute(el, 'name')
              if (!name && !vnode.componentInstance) {
                return el.name
              }
              if (
                !name &&
                vnode.componentInstance &&
                vnode.componentInstance.$attrs
              ) {
                name =
                  vnode.componentInstance.$attrs['data-vv-name'] ||
                  vnode.componentInstance.$attrs['name']
              }
              if (!name && vnode.componentInstance) {
                var config = Resolver.getCtorConfig(vnode)
                if (config && isCallable(config.name)) {
                  var boundGetter = config.name.bind(vnode.componentInstance)
                  return boundGetter()
                }
                return vnode.componentInstance.name
              }
              return name
            }
            /**
             * Returns a value getter input type.
             */ Resolver.resolveGetter = function resolveGetter(
              el,
              vnode,
              model
            ) {
              if (model && model.expression) {
                return function() {
                  return getPath(model.expression, vnode.context)
                }
              }
              if (vnode.componentInstance) {
                var path =
                  getDataAttribute(el, 'value-path') ||
                  (vnode.componentInstance.$attrs &&
                    vnode.componentInstance.$attrs['data-vv-value-path'])
                if (path) {
                  return function() {
                    return getPath(path, vnode.componentInstance)
                  }
                }
                var config = Resolver.getCtorConfig(vnode)
                if (config && isCallable(config.value)) {
                  var boundGetter = config.value.bind(vnode.componentInstance)
                  return function() {
                    return boundGetter()
                  }
                }
                var ref = vnode.componentInstance.$options.model || {
                  prop: 'value'
                }
                var prop = ref.prop
                return function() {
                  return vnode.componentInstance[prop]
                }
              }
              switch (el.type) {
                case 'checkbox':
                  return function() {
                    var els = document.querySelectorAll(
                      'input[name="' + el.name + '"]'
                    )
                    els = toArray(els).filter(function(el) {
                      return el.checked
                    })
                    if (!els.length) {
                      return undefined
                    }
                    return els.map(function(checkbox) {
                      return checkbox.value
                    })
                  }
                case 'radio':
                  return function() {
                    var els = document.querySelectorAll(
                      'input[name="' + el.name + '"]'
                    )
                    var elm = find(els, function(el) {
                      return el.checked
                    })
                    return elm && elm.value
                  }
                case 'file':
                  return function(context) {
                    return toArray(el.files)
                  }
                case 'select-multiple':
                  return function() {
                    return toArray(el.options)
                      .filter(function(opt) {
                        return opt.selected
                      })
                      .map(function(opt) {
                        return opt.value
                      })
                  }
                default:
                  return function() {
                    return el && el.value
                  }
              }
            }
            var RULES = {}
            var RuleContainer = function RuleContainer() {}
            var staticAccessors = { rules: { configurable: true } }
            RuleContainer.add = function add(name, ref) {
              var validate = ref.validate
              var options = ref.options
              var paramNames = ref.paramNames
              RULES[name] = {
                validate: validate,
                options: options,
                paramNames: paramNames
              }
            }
            staticAccessors.rules.get = function() {
              return RULES
            }
            RuleContainer.has = function has(name) {
              return !!RULES[name]
            }
            RuleContainer.isImmediate = function isImmediate(name) {
              return !!(RULES[name] && RULES[name].options.immediate)
            }
            RuleContainer.isRequireRule = function isRequireRule(name) {
              return !!(RULES[name] && RULES[name].options.computesRequired)
            }
            RuleContainer.isTargetRule = function isTargetRule(name) {
              return !!(RULES[name] && RULES[name].options.hasTarget)
            }
            RuleContainer.remove = function remove(ruleName) {
              delete RULES[ruleName]
            }
            RuleContainer.getParamNames = function getParamNames(ruleName) {
              return RULES[ruleName] && RULES[ruleName].paramNames
            }
            RuleContainer.getOptions = function getOptions(ruleName) {
              return RULES[ruleName] && RULES[ruleName].options
            }
            RuleContainer.getValidatorMethod = function getValidatorMethod(
              ruleName
            ) {
              return RULES[ruleName] ? RULES[ruleName].validate : null
            }
            Object.defineProperties(RuleContainer, staticAccessors) //
            var isEvent = function isEvent(evt) {
              return (
                (typeof Event !== 'undefined' &&
                  isCallable(Event) &&
                  evt instanceof Event) ||
                (evt && evt.srcElement)
              )
            }
            var normalizeEvents = function normalizeEvents(evts) {
              if (!evts) {
                return []
              }
              return typeof evts === 'string' ? evts.split('|') : evts
            }
            var supportsPassive = true
            var detectPassiveSupport = function detectPassiveSupport() {
              try {
                var opts = Object.defineProperty({}, 'passive', {
                  get: function get() {
                    supportsPassive = true
                  }
                })
                window.addEventListener('testPassive', null, opts)
                window.removeEventListener('testPassive', null, opts)
              } catch (e) {
                supportsPassive = false
              }
              return supportsPassive
            }
            var addEventListener = function addEventListener(
              el,
              eventName,
              cb
            ) {
              el.addEventListener(
                eventName,
                cb,
                supportsPassive ? { passive: true } : false
              )
            } //
            var DEFAULT_OPTIONS = {
              targetOf: null,
              immediate: false,
              persist: false,
              scope: null,
              listen: true,
              name: null,
              rules: {},
              vm: null,
              classes: false,
              validity: true,
              aria: true,
              events: 'input|blur',
              delay: 0,
              classNames: {
                touched: 'touched', // the control has been blurred
                untouched: 'untouched', // the control hasn't been blurred
                valid: 'valid', // model is valid
                invalid: 'invalid', // model is invalid
                pristine: 'pristine', // control has not been interacted with
                dirty: 'dirty' // control has been interacted with
              }
            }
            var Field = function Field(options) {
              if (options === void 0) options = {}
              this.id = uniqId()
              this.el = options.el
              this.updated = false
              this.vmId = options.vmId
              defineNonReactive(this, 'dependencies', [])
              defineNonReactive(this, 'watchers', [])
              defineNonReactive(this, 'events', [])
              this.delay = 0
              this.rules = {}
              this.forceRequired = false
              this._cacheId(options)
              this.classNames = assign({}, DEFAULT_OPTIONS.classNames)
              options = assign({}, DEFAULT_OPTIONS, options)
              this._delay = !isNullOrUndefined(options.delay)
                ? options.delay
                : 0 // cache initial delay
              this.validity = options.validity
              this.aria = options.aria
              this.flags = options.flags || createFlags()
              defineNonReactive(this, 'vm', options.vm)
              defineNonReactive(this, 'componentInstance', options.component)
              this.ctorConfig = this.componentInstance
                ? getPath('$options.$_veeValidate', this.componentInstance)
                : undefined
              this.update(options) // set initial value.
              this.initialValue = this.value
              this.updated = false
            }
            var prototypeAccessors$1 = {
              validator: { configurable: true },
              isRequired: { configurable: true },
              isDisabled: { configurable: true },
              alias: { configurable: true },
              value: { configurable: true },
              bails: { configurable: true },
              rejectsFalse: { configurable: true }
            }
            prototypeAccessors$1.validator.get = function() {
              if (!this.vm || !this.vm.$validator) {
                return {
                  validate: function validate() {
                    return Promise.resolve(true)
                  }
                }
              }
              return this.vm.$validator
            }
            prototypeAccessors$1.isRequired.get = function() {
              return !!this.rules.required || this.forceRequired
            }
            prototypeAccessors$1.isDisabled.get = function() {
              return !!(this.el && this.el.disabled)
            }
            /**
             * Gets the display name (user-friendly name).
             */ prototypeAccessors$1.alias.get = function() {
              if (this._alias) {
                return this._alias
              }
              var alias = null
              if (this.ctorConfig && this.ctorConfig.alias) {
                alias = isCallable(this.ctorConfig.alias)
                  ? this.ctorConfig.alias.call(this.componentInstance)
                  : this.ctorConfig.alias
              }
              if (!alias && this.el) {
                alias = getDataAttribute(this.el, 'as')
              }
              if (!alias && this.componentInstance) {
                return (
                  this.componentInstance.$attrs &&
                  this.componentInstance.$attrs['data-vv-as']
                )
              }
              return alias
            }
            /**
             * Gets the input value.
             */ prototypeAccessors$1.value.get = function() {
              if (!isCallable(this.getter)) {
                return undefined
              }
              return this.getter()
            }
            prototypeAccessors$1.bails.get = function() {
              return this._bails
            }
            /**
             * If the field rejects false as a valid value for the required rule.
             */ prototypeAccessors$1.rejectsFalse.get = function() {
              if (this.componentInstance && this.ctorConfig) {
                return !!this.ctorConfig.rejectsFalse
              }
              if (!this.el) {
                return false
              }
              return this.el.type === 'checkbox'
            }
            /**
             * Determines if the instance matches the options provided.
             */ Field.prototype.matches = function matches(options) {
              var this$1 = this
              if (!options) {
                return true
              }
              if (options.id) {
                return this.id === options.id
              }
              var matchesComponentId = isNullOrUndefined(options.vmId)
                ? function() {
                    return true
                  }
                : function(id) {
                    return id === this$1.vmId
                  }
              if (!matchesComponentId(options.vmId)) {
                return false
              }
              if (options.name === undefined && options.scope === undefined) {
                return true
              }
              if (options.scope === undefined) {
                return this.name === options.name
              }
              if (options.name === undefined) {
                return this.scope === options.scope
              }
              return options.name === this.name && options.scope === this.scope
            }
            /**
             * Caches the field id.
             */ Field.prototype._cacheId = function _cacheId(options) {
              if (this.el && !options.targetOf) {
                this.el._veeValidateId = this.id
              }
            }
            /**
             * Keeps a reference of the most current validation run.
             */ Field.prototype.waitFor = function waitFor(pendingPromise) {
              this._waitingFor = pendingPromise
            }
            Field.prototype.isWaitingFor = function isWaitingFor(promise) {
              return this._waitingFor === promise
            }
            /**
             * Updates the field with changed data.
             */ Field.prototype.update = function update(options) {
              var this$1 = this
              this.targetOf = options.targetOf || null
              this.immediate = options.immediate || this.immediate || false
              this.persist = options.persist || this.persist || false // update errors scope if the field scope was changed.
              if (
                !isNullOrUndefined(options.scope) &&
                options.scope !== this.scope &&
                isCallable(this.validator.update)
              ) {
                this.validator.update(this.id, { scope: options.scope })
              }
              this.scope = !isNullOrUndefined(options.scope)
                ? options.scope
                : !isNullOrUndefined(this.scope)
                ? this.scope
                : null
              this.name =
                (!isNullOrUndefined(options.name)
                  ? String(options.name)
                  : options.name) ||
                this.name ||
                null
              this.rules =
                options.rules !== undefined
                  ? normalizeRules(options.rules)
                  : this.rules
              this._bails =
                options.bails !== undefined ? options.bails : this._bails
              this.model = options.model || this.model
              this.listen =
                options.listen !== undefined ? options.listen : this.listen
              this.classes =
                (options.classes || this.classes || false) &&
                !this.componentInstance
              this.classNames = isObject(options.classNames)
                ? merge(this.classNames, options.classNames)
                : this.classNames
              this.getter = isCallable(options.getter)
                ? options.getter
                : this.getter
              this._alias = options.alias || this._alias
              this.events = options.events
                ? normalizeEvents(options.events)
                : this.events
              this.delay = makeDelayObject(
                this.events,
                options.delay || this.delay,
                this._delay
              )
              this.updateDependencies()
              this.addActionListeners()
              if (!this.name && !this.targetOf) {
                warn('A field is missing a "name" or "data-vv-name" attribute')
              } // update required flag flags
              if (options.rules !== undefined) {
                this.flags.required = this.isRequired
              }
              if (
                Object.keys(options.rules || {}).length === 0 &&
                this.updated
              ) {
                var resetFlag = this.flags.validated
                this.validator.validate('#' + this.id).then(function() {
                  this$1.flags.validated = resetFlag
                })
              } // validate if it was validated before and field was updated and there was a rules mutation.
              if (
                this.flags.validated &&
                options.rules !== undefined &&
                this.updated
              ) {
                this.validator.validate('#' + this.id)
              }
              this.updated = true
              this.addValueListeners() // no need to continue.
              if (!this.el) {
                return
              }
              this.updateClasses()
              this.updateAriaAttrs()
            }
            /**
             * Resets field flags and errors.
             */ Field.prototype.reset = function reset() {
              var this$1 = this
              if (this._cancellationToken) {
                this._cancellationToken.cancelled = true
                delete this._cancellationToken
              }
              var defaults = createFlags()
              Object.keys(this.flags)
                .filter(function(flag) {
                  return flag !== 'required'
                })
                .forEach(function(flag) {
                  this$1.flags[flag] = defaults[flag]
                }) // update initial value
              this.initialValue = this.value
              this.flags.changed = false
              this.addValueListeners()
              this.addActionListeners()
              this.updateClasses(true)
              this.updateAriaAttrs()
              this.updateCustomValidity()
            }
            /**
             * Sets the flags and their negated counterparts, and updates the classes and re-adds action listeners.
             */ Field.prototype.setFlags = function setFlags(flags) {
              var this$1 = this
              var negated = {
                pristine: 'dirty',
                dirty: 'pristine',
                valid: 'invalid',
                invalid: 'valid',
                touched: 'untouched',
                untouched: 'touched'
              }
              Object.keys(flags).forEach(function(flag) {
                this$1.flags[flag] = flags[flag] // if it has a negation and was not specified, set it as well.
                if (negated[flag] && flags[negated[flag]] === undefined) {
                  this$1.flags[negated[flag]] = !flags[flag]
                }
              })
              if (
                flags.untouched !== undefined ||
                flags.touched !== undefined ||
                flags.dirty !== undefined ||
                flags.pristine !== undefined
              ) {
                this.addActionListeners()
              }
              this.updateClasses()
              this.updateAriaAttrs()
              this.updateCustomValidity()
            }
            /**
             * Determines if the field requires references to target fields.
             */ Field.prototype.updateDependencies = function updateDependencies() {
              var this$1 = this // reset dependencies.
              this.dependencies.forEach(function(d) {
                return d.field.destroy()
              })
              this.dependencies = [] // we get the selectors for each field.
              var fields = Object.keys(this.rules).reduce(function(prev, r) {
                if (RuleContainer.isTargetRule(r)) {
                  prev.push({ selector: this$1.rules[r][0], name: r })
                }
                return prev
              }, [])
              if (!fields.length || !this.vm || !this.vm.$el) {
                return
              } // must be contained within the same component, so we use the vm root element constrain our dom search.
              fields.forEach(function(ref$1) {
                var selector = ref$1.selector
                var name = ref$1.name
                var ref = this$1.vm.$refs[selector]
                var el = Array.isArray(ref) ? ref[0] : ref
                if (!el) {
                  return
                }
                var options = {
                  vm: this$1.vm,
                  classes: this$1.classes,
                  classNames: this$1.classNames,
                  delay: this$1.delay,
                  scope: this$1.scope,
                  events: this$1.events.join('|'),
                  immediate: this$1.immediate,
                  targetOf: this$1.id
                } // probably a component.
                if (isCallable(el.$watch)) {
                  options.component = el
                  options.el = el.$el
                  options.getter = Resolver.resolveGetter(el.$el, el.$vnode)
                } else {
                  options.el = el
                  options.getter = Resolver.resolveGetter(el, {})
                }
                this$1.dependencies.push({
                  name: name,
                  field: new Field(options)
                })
              })
            }
            /**
             * Removes listeners.
             */ Field.prototype.unwatch = function unwatch(tag) {
              if (tag === void 0) tag = null
              if (!tag) {
                this.watchers.forEach(function(w) {
                  return w.unwatch()
                })
                this.watchers = []
                return
              }
              this.watchers
                .filter(function(w) {
                  return tag.test(w.tag)
                })
                .forEach(function(w) {
                  return w.unwatch()
                })
              this.watchers = this.watchers.filter(function(w) {
                return !tag.test(w.tag)
              })
            }
            /**
             * Updates the element classes depending on each field flag status.
             */ Field.prototype.updateClasses = function updateClasses(
              isReset
            ) {
              var this$1 = this
              if (isReset === void 0) isReset = false
              if (!this.classes || this.isDisabled) {
                return
              }
              var applyClasses = function applyClasses(el) {
                toggleClass(el, this$1.classNames.dirty, this$1.flags.dirty)
                toggleClass(
                  el,
                  this$1.classNames.pristine,
                  this$1.flags.pristine
                )
                toggleClass(el, this$1.classNames.touched, this$1.flags.touched)
                toggleClass(
                  el,
                  this$1.classNames.untouched,
                  this$1.flags.untouched
                ) // remove valid/invalid classes on reset.
                if (isReset) {
                  toggleClass(el, this$1.classNames.valid, false)
                  toggleClass(el, this$1.classNames.invalid, false)
                } // make sure we don't set any classes if the state is undetermined.
                if (
                  !isNullOrUndefined(this$1.flags.valid) &&
                  this$1.flags.validated
                ) {
                  toggleClass(el, this$1.classNames.valid, this$1.flags.valid)
                }
                if (
                  !isNullOrUndefined(this$1.flags.invalid) &&
                  this$1.flags.validated
                ) {
                  toggleClass(
                    el,
                    this$1.classNames.invalid,
                    this$1.flags.invalid
                  )
                }
              }
              if (!isCheckboxOrRadioInput(this.el)) {
                applyClasses(this.el)
                return
              }
              var els = document.querySelectorAll(
                'input[name="' + this.el.name + '"]'
              )
              toArray(els).forEach(applyClasses)
            }
            /**
             * Adds the listeners required for automatic classes and some flags.
             */ Field.prototype.addActionListeners = function addActionListeners() {
              var this$1 = this // remove previous listeners.
              this.unwatch(/class/)
              if (!this.el) {
                return
              }
              var onBlur = function onBlur() {
                this$1.flags.touched = true
                this$1.flags.untouched = false
                if (this$1.classes) {
                  toggleClass(this$1.el, this$1.classNames.touched, true)
                  toggleClass(this$1.el, this$1.classNames.untouched, false)
                } // only needed once.
                this$1.unwatch(/^class_blur$/)
              }
              var inputEvent = isTextInput(this.el) ? 'input' : 'change'
              var onInput = function onInput() {
                this$1.flags.dirty = true
                this$1.flags.pristine = false
                if (this$1.classes) {
                  toggleClass(this$1.el, this$1.classNames.pristine, false)
                  toggleClass(this$1.el, this$1.classNames.dirty, true)
                } // only needed once.
                this$1.unwatch(/^class_input$/)
              }
              if (
                this.componentInstance &&
                isCallable(this.componentInstance.$once)
              ) {
                this.componentInstance.$once('input', onInput)
                this.componentInstance.$once('blur', onBlur)
                this.watchers.push({
                  tag: 'class_input',
                  unwatch: function unwatch() {
                    this$1.componentInstance.$off('input', onInput)
                  }
                })
                this.watchers.push({
                  tag: 'class_blur',
                  unwatch: function unwatch() {
                    this$1.componentInstance.$off('blur', onBlur)
                  }
                })
                return
              }
              if (!this.el) {
                return
              }
              addEventListener(this.el, inputEvent, onInput) // Checkboxes and radio buttons on Mac don't emit blur naturally, so we listen on click instead.
              var blurEvent = isCheckboxOrRadioInput(this.el)
                ? 'change'
                : 'blur'
              addEventListener(this.el, blurEvent, onBlur)
              this.watchers.push({
                tag: 'class_input',
                unwatch: function unwatch() {
                  this$1.el.removeEventListener(inputEvent, onInput)
                }
              })
              this.watchers.push({
                tag: 'class_blur',
                unwatch: function unwatch() {
                  this$1.el.removeEventListener(blurEvent, onBlur)
                }
              })
            }
            Field.prototype.checkValueChanged = function checkValueChanged() {
              // handle some people initialize the value to null, since text inputs have empty string value.
              if (
                this.initialValue === null &&
                this.value === '' &&
                isTextInput(this.el)
              ) {
                return false
              }
              return this.value !== this.initialValue
            }
            /**
             * Determines the suitable primary event to listen for.
             */ Field.prototype._determineInputEvent = function _determineInputEvent() {
              // if its a custom component, use the customized model event or the input event.
              if (this.componentInstance) {
                return (
                  (this.componentInstance.$options.model &&
                    this.componentInstance.$options.model.event) ||
                  'input'
                )
              }
              if (this.model && this.model.lazy) {
                return 'change'
              }
              if (isTextInput(this.el)) {
                return 'input'
              }
              return 'change'
            }
            /**
             * Determines the list of events to listen to.
             */ Field.prototype._determineEventList = function _determineEventList(
              defaultInputEvent
            ) {
              var this$1 = this // if no event is configured, or it is a component or a text input then respect the user choice.
              if (
                !this.events.length ||
                this.componentInstance ||
                isTextInput(this.el)
              ) {
                return [].concat(this.events).map(function(evt) {
                  if (evt === 'input' && this$1.model && this$1.model.lazy) {
                    return 'change'
                  }
                  return evt
                })
              } // force suitable event for non-text type fields.
              return this.events.map(function(e) {
                if (e === 'input') {
                  return defaultInputEvent
                }
                return e
              })
            }
            /**
             * Adds the listeners required for validation.
             */ Field.prototype.addValueListeners = function addValueListeners() {
              var this$1 = this
              this.unwatch(/^input_.+/)
              if (!this.listen || !this.el) {
                return
              }
              var token = { cancelled: false }
              var fn = this.targetOf
                ? function() {
                    var target = this$1.validator._resolveField(
                      '#' + this$1.targetOf
                    )
                    if (target && target.flags.validated) {
                      this$1.validator.validate('#' + this$1.targetOf)
                    }
                  }
                : function() {
                    var args = [],
                      len = arguments.length
                    while (len--) {
                      args[len] = arguments[len]
                    } // if its a DOM event, resolve the value, otherwise use the first parameter as the value.
                    if (args.length === 0 || isEvent(args[0])) {
                      args[0] = this$1.value
                    }
                    this$1.flags.pending = true
                    this$1._cancellationToken = token
                    this$1.validator.validate('#' + this$1.id, args[0])
                  }
              var inputEvent = this._determineInputEvent()
              var events = this._determineEventList(inputEvent) // if on input validation is requested.
              if (includes(events, inputEvent)) {
                var ctx = null
                var expression = null
                var watchCtxVm = false // if its watchable from the context vm.
                if (this.model && this.model.expression) {
                  ctx = this.vm
                  expression = this.model.expression
                  watchCtxVm = true
                } // watch it from the custom component vm instead.
                if (
                  !expression &&
                  this.componentInstance &&
                  this.componentInstance.$options.model
                ) {
                  ctx = this.componentInstance
                  expression =
                    this.componentInstance.$options.model.prop || 'value'
                }
                if (ctx && expression) {
                  var debouncedFn = debounce(fn, this.delay[inputEvent], token)
                  var _unwatch = ctx.$watch(expression, debouncedFn)
                  this.watchers.push({
                    tag: 'input_model',
                    unwatch: function unwatch() {
                      this$1.vm.$nextTick(function() {
                        _unwatch()
                      })
                    }
                  }) // filter out input event when we are watching from the context vm.
                  if (watchCtxVm) {
                    events = events.filter(function(e) {
                      return e !== inputEvent
                    })
                  }
                }
              } // Add events.
              events.forEach(function(e) {
                var debouncedFn = debounce(fn, this$1.delay[e], token)
                this$1._addComponentEventListener(e, debouncedFn)
                this$1._addHTMLEventListener(e, debouncedFn)
              })
            }
            Field.prototype._addComponentEventListener = function _addComponentEventListener(
              evt,
              validate
            ) {
              var this$1 = this
              if (!this.componentInstance) {
                return
              }
              this.componentInstance.$on(evt, validate)
              this.watchers.push({
                tag: 'input_vue',
                unwatch: function unwatch() {
                  this$1.componentInstance.$off(evt, validate)
                }
              })
            }
            Field.prototype._addHTMLEventListener = function _addHTMLEventListener(
              evt,
              validate
            ) {
              var this$1 = this
              if (!this.el || this.componentInstance) {
                return
              } // listen for the current element.
              var addListener = function addListener(el) {
                addEventListener(el, evt, validate)
                this$1.watchers.push({
                  tag: 'input_native',
                  unwatch: function unwatch() {
                    el.removeEventListener(evt, validate)
                  }
                })
              }
              addListener(this.el)
              if (!isCheckboxOrRadioInput(this.el)) {
                return
              }
              var els = document.querySelectorAll(
                'input[name="' + this.el.name + '"]'
              )
              toArray(els).forEach(function(el) {
                // skip if it is added by v-validate and is not the current element.
                if (el._veeValidateId && el !== this$1.el) {
                  return
                }
                addListener(el)
              })
            }
            /**
             * Updates aria attributes on the element.
             */ Field.prototype.updateAriaAttrs = function updateAriaAttrs() {
              var this$1 = this
              if (!this.aria || !this.el || !isCallable(this.el.setAttribute)) {
                return
              }
              var applyAriaAttrs = function applyAriaAttrs(el) {
                el.setAttribute(
                  'aria-required',
                  this$1.isRequired ? 'true' : 'false'
                )
                el.setAttribute(
                  'aria-invalid',
                  this$1.flags.invalid ? 'true' : 'false'
                )
              }
              if (!isCheckboxOrRadioInput(this.el)) {
                applyAriaAttrs(this.el)
                return
              }
              var els = document.querySelectorAll(
                'input[name="' + this.el.name + '"]'
              )
              toArray(els).forEach(applyAriaAttrs)
            }
            /**
             * Updates the custom validity for the field.
             */ Field.prototype.updateCustomValidity = function updateCustomValidity() {
              if (
                !this.validity ||
                !this.el ||
                !isCallable(this.el.setCustomValidity) ||
                !this.validator.errors
              ) {
                return
              }
              this.el.setCustomValidity(
                this.flags.valid
                  ? ''
                  : this.validator.errors.firstById(this.id) || ''
              )
            }
            /**
             * Removes all listeners.
             */ Field.prototype.destroy = function destroy() {
              // ignore the result of any ongoing validation.
              if (this._cancellationToken) {
                this._cancellationToken.cancelled = true
              }
              this.unwatch()
              this.dependencies.forEach(function(d) {
                return d.field.destroy()
              })
              this.dependencies = []
            }
            Object.defineProperties(Field.prototype, prototypeAccessors$1) //
            var FieldBag = function FieldBag(items) {
              if (items === void 0) items = []
              this.items = items || []
              this.itemsById = this.items.reduce(function(itemsById, item) {
                itemsById[item.id] = item
                return itemsById
              }, {})
            }
            var prototypeAccessors$2 = { length: { configurable: true } }
            FieldBag.prototype[
              typeof Symbol === 'function' ? Symbol.iterator : '@@iterator'
            ] = function() {
              var this$1 = this
              var index = 0
              return {
                next: function next() {
                  return {
                    value: this$1.items[index++],
                    done: index > this$1.items.length
                  }
                }
              }
            }
            /**
             * Gets the current items length.
             */ prototypeAccessors$2.length.get = function() {
              return this.items.length
            }
            /**
             * Finds the first field that matches the provided matcher object.
             */ FieldBag.prototype.find = function find$1(matcher) {
              return find(this.items, function(item) {
                return item.matches(matcher)
              })
            }
            /**
             * Finds the field with the given id, using a plain object as a map to link
             * ids to items faster than by looping over the array and matching.
             */ FieldBag.prototype.findById = function findById(id) {
              return this.itemsById[id] || null
            }
            /**
             * Filters the items down to the matched fields.
             */ FieldBag.prototype.filter = function filter(matcher) {
              // multiple matchers to be tried.
              if (Array.isArray(matcher)) {
                return this.items.filter(function(item) {
                  return matcher.some(function(m) {
                    return item.matches(m)
                  })
                })
              }
              return this.items.filter(function(item) {
                return item.matches(matcher)
              })
            }
            /**
             * Maps the field items using the mapping function.
             */ FieldBag.prototype.map = function map(mapper) {
              return this.items.map(mapper)
            }
            /**
             * Finds and removes the first field that matches the provided matcher object, returns the removed item.
             */ FieldBag.prototype.remove = function remove(matcher) {
              var item = null
              if (matcher instanceof Field) {
                item = matcher
              } else {
                item = this.find(matcher)
              }
              if (!item) {
                return null
              }
              var index = this.items.indexOf(item)
              this.items.splice(index, 1)
              delete this.itemsById[item.id]
              return item
            }
            /**
             * Adds a field item to the list.
             */ FieldBag.prototype.push = function push(item) {
              if (!(item instanceof Field)) {
                throw createError(
                  'FieldBag only accepts instances of Field that has an id defined.'
                )
              }
              if (!item.id) {
                throw createError('Field id must be defined.')
              }
              if (this.findById(item.id)) {
                throw createError(
                  'Field with id ' + item.id + ' is already added.'
                )
              }
              this.items.push(item)
              this.itemsById[item.id] = item
            }
            Object.defineProperties(FieldBag.prototype, prototypeAccessors$2)
            var ScopedValidator = function ScopedValidator(base, vm) {
              this.id = vm._uid
              this._base = base
              this._paused = false // create a mirror bag with limited component scope.
              this.errors = new ErrorBag(base.errors, this.id)
            }
            var prototypeAccessors$3 = {
              flags: { configurable: true },
              rules: { configurable: true },
              fields: { configurable: true },
              dictionary: { configurable: true },
              locale: { configurable: true }
            }
            prototypeAccessors$3.flags.get = function() {
              var this$1 = this
              return this._base.fields.items
                .filter(function(f) {
                  return f.vmId === this$1.id
                })
                .reduce(function(acc, field) {
                  if (field.scope) {
                    if (!acc['$' + field.scope]) {
                      acc['$' + field.scope] = {}
                    }
                    acc['$' + field.scope][field.name] = field.flags
                  }
                  acc[field.name] = field.flags
                  return acc
                }, {})
            }
            prototypeAccessors$3.rules.get = function() {
              return this._base.rules
            }
            prototypeAccessors$3.fields.get = function() {
              return new FieldBag(this._base.fields.filter({ vmId: this.id }))
            }
            prototypeAccessors$3.dictionary.get = function() {
              return this._base.dictionary
            }
            prototypeAccessors$3.locale.get = function() {
              return this._base.locale
            }
            prototypeAccessors$3.locale.set = function(val) {
              this._base.locale = val
            }
            ScopedValidator.prototype.localize = function localize() {
              var ref
              var args = [],
                len = arguments.length
              while (len--) {
                args[len] = arguments[len]
              }
              return (ref = this._base).localize.apply(ref, args)
            }
            ScopedValidator.prototype.update = function update() {
              var ref
              var args = [],
                len = arguments.length
              while (len--) {
                args[len] = arguments[len]
              }
              return (ref = this._base).update.apply(ref, args)
            }
            ScopedValidator.prototype.attach = function attach(opts) {
              var attachOpts = assign({}, opts, { vmId: this.id })
              return this._base.attach(attachOpts)
            }
            ScopedValidator.prototype.pause = function pause() {
              this._paused = true
            }
            ScopedValidator.prototype.resume = function resume() {
              this._paused = false
            }
            ScopedValidator.prototype.remove = function remove(ruleName) {
              return this._base.remove(ruleName)
            }
            ScopedValidator.prototype.detach = function detach(name, scope) {
              return this._base.detach(name, scope, this.id)
            }
            ScopedValidator.prototype.extend = function extend() {
              var ref
              var args = [],
                len = arguments.length
              while (len--) {
                args[len] = arguments[len]
              }
              return (ref = this._base).extend.apply(ref, args)
            }
            ScopedValidator.prototype.validate = function validate(
              descriptor,
              value,
              opts
            ) {
              if (opts === void 0) opts = {}
              if (this._paused) {
                return Promise.resolve(true)
              }
              return this._base.validate(
                descriptor,
                value,
                assign({}, { vmId: this.id }, opts || {})
              )
            }
            ScopedValidator.prototype.verify = function verify() {
              var ref
              var args = [],
                len = arguments.length
              while (len--) {
                args[len] = arguments[len]
              }
              return (ref = this._base).verify.apply(ref, args)
            }
            ScopedValidator.prototype.validateAll = function validateAll(
              values,
              opts
            ) {
              if (opts === void 0) opts = {}
              if (this._paused) {
                return Promise.resolve(true)
              }
              return this._base.validateAll(
                values,
                assign({}, { vmId: this.id }, opts || {})
              )
            }
            ScopedValidator.prototype.validateScopes = function validateScopes(
              opts
            ) {
              if (opts === void 0) opts = {}
              if (this._paused) {
                return Promise.resolve(true)
              }
              return this._base.validateScopes(
                assign({}, { vmId: this.id }, opts || {})
              )
            }
            ScopedValidator.prototype.destroy = function destroy() {
              delete this.id
              delete this._base
            }
            ScopedValidator.prototype.reset = function reset(matcher) {
              return this._base.reset(
                Object.assign({}, matcher || {}, { vmId: this.id })
              )
            }
            ScopedValidator.prototype.flag = function flag() {
              var ref
              var args = [],
                len = arguments.length
              while (len--) {
                args[len] = arguments[len]
              }
              return (ref = this._base).flag.apply(ref, args.concat([this.id]))
            }
            ScopedValidator.prototype._resolveField = function _resolveField() {
              var ref
              var args = [],
                len = arguments.length
              while (len--) {
                args[len] = arguments[len]
              }
              return (ref = this._base)._resolveField.apply(ref, args)
            }
            Object.defineProperties(
              ScopedValidator.prototype,
              prototypeAccessors$3
            )
            var VALIDATOR = null
            var getValidator = function getValidator() {
              return VALIDATOR
            }
            var setValidator = function setValidator(value) {
              VALIDATOR = value
              return value
            } //
            /**
             * Checks if a parent validator instance was requested.
             */ var requestsValidator = function requestsValidator(injections) {
              if (isObject(injections) && injections.$validator) {
                return true
              }
              return false
            }
            var mixin = {
              provide: function provide() {
                if (this.$validator && !isBuiltInComponent(this.$vnode)) {
                  return { $validator: this.$validator }
                }
                return {}
              },
              beforeCreate: function beforeCreate() {
                // if built in do nothing.
                if (
                  isBuiltInComponent(this.$vnode) ||
                  this.$options.$__veeInject === false
                ) {
                  return
                } // if its a root instance set the config if it exists.
                if (!this.$parent) {
                  setConfig(this.$options.$_veeValidate || {})
                }
                var options = resolveConfig(this) // if its a root instance, inject anyways, or if it requested a new instance.
                if (
                  !this.$parent ||
                  (this.$options.$_veeValidate &&
                    /new/.test(this.$options.$_veeValidate.validator))
                ) {
                  this.$validator = new ScopedValidator(getValidator(), this)
                }
                var requested = requestsValidator(this.$options.inject) // if automatic injection is enabled and no instance was requested.
                if (!this.$validator && options.inject && !requested) {
                  this.$validator = new ScopedValidator(getValidator(), this)
                } // don't inject errors or fieldBag as no validator was resolved.
                if (!requested && !this.$validator) {
                  return
                } // There is a validator but it isn't injected, mark as reactive.
                if (!requested && this.$validator) {
                  var Vue = this.$options._base // the vue constructor.
                  Vue.util.defineReactive(
                    this.$validator,
                    'errors',
                    this.$validator.errors
                  )
                }
                if (!this.$options.computed) {
                  this.$options.computed = {}
                }
                this.$options.computed[
                  options.errorBagName || 'errors'
                ] = function errorBagGetter() {
                  return this.$validator.errors
                }
                this.$options.computed[
                  options.fieldsBagName || 'fields'
                ] = function fieldBagGetter() {
                  return this.$validator.fields.items.reduce(function(
                    acc,
                    field
                  ) {
                    if (field.scope) {
                      if (!acc['$' + field.scope]) {
                        acc['$' + field.scope] = {}
                      }
                      acc['$' + field.scope][field.name] = field.flags
                      return acc
                    }
                    acc[field.name] = field.flags
                    return acc
                  },
                  {})
                }
              },
              beforeDestroy: function beforeDestroy() {
                if (this.$validator && this._uid === this.$validator.id) {
                  this.$validator.errors.clear() // remove errors generated by this component.
                }
              }
            } //
            /**
             * Finds the requested field by id from the context object.
             */ function findField(el, context) {
              if (!context || !context.$validator) {
                return null
              }
              return context.$validator.fields.findById(el._veeValidateId)
            }
            var directive = {
              bind: function bind(el, binding, vnode) {
                var validator = vnode.context.$validator
                if (!validator) {
                  {
                    warn(
                      "No validator instance is present on vm, did you forget to inject '$validator'?"
                    )
                  }
                  return
                }
                var fieldOptions = Resolver.generate(el, binding, vnode)
                validator.attach(fieldOptions)
              },
              inserted: function inserted(el, binding, vnode) {
                var field = findField(el, vnode.context)
                var scope = Resolver.resolveScope(el, binding, vnode) // skip if scope hasn't changed.
                if (!field || scope === field.scope) {
                  return
                } // only update scope.
                field.update({ scope: scope }) // allows the field to re-evaluated once more in the update hook.
                field.updated = false
              },
              update: function update(el, binding, vnode) {
                var field = findField(el, vnode.context) // make sure we don't do unneccasary work if no important change was done.
                if (
                  !field ||
                  (field.updated && isEqual$1(binding.value, binding.oldValue))
                ) {
                  return
                }
                var scope = Resolver.resolveScope(el, binding, vnode)
                var rules = Resolver.resolveRules(el, binding, vnode)
                field.update({ scope: scope, rules: rules })
              },
              unbind: function unbind(el, binding, ref) {
                var context = ref.context
                var field = findField(el, context)
                if (!field) {
                  return
                }
                context.$validator.detach(field)
              }
            } //
            var Validator = function Validator(
              validations,
              options,
              pluginContainer
            ) {
              if (options === void 0) options = { fastExit: true }
              if (pluginContainer === void 0) pluginContainer = null
              this.errors = new ErrorBag()
              this.fields = new FieldBag()
              this._createFields(validations)
              this.paused = false
              this.fastExit = !isNullOrUndefined(options && options.fastExit)
                ? options.fastExit
                : true
              this.$vee = pluginContainer || {
                _vm: {
                  $nextTick: function $nextTick(cb) {
                    return isCallable(cb) ? cb() : Promise.resolve()
                  },
                  $emit: function $emit() {},
                  $off: function $off() {}
                }
              }
            }
            var prototypeAccessors$4 = {
              rules: { configurable: true },
              dictionary: { configurable: true },
              flags: { configurable: true },
              locale: { configurable: true }
            }
            var staticAccessors$1 = {
              rules: { configurable: true },
              dictionary: { configurable: true },
              locale: { configurable: true }
            }
            /**
             * @deprecated
             */ staticAccessors$1.rules.get = function() {
              {
                warn(
                  'this accessor will be deprecated, use `import { rules } from "vee-validate"` instead.'
                )
              }
              return RuleContainer.rules
            }
            /**
             * @deprecated
             */ prototypeAccessors$4.rules.get = function() {
              {
                warn(
                  'this accessor will be deprecated, use `import { rules } from "vee-validate"` instead.'
                )
              }
              return RuleContainer.rules
            }
            prototypeAccessors$4.dictionary.get = function() {
              return DictionaryResolver.getDriver()
            }
            staticAccessors$1.dictionary.get = function() {
              return DictionaryResolver.getDriver()
            }
            prototypeAccessors$4.flags.get = function() {
              return this.fields.items.reduce(function(acc, field) {
                var obj
                if (field.scope) {
                  acc['$' + field.scope] =
                    ((obj = {}), (obj[field.name] = field.flags), obj)
                  return acc
                }
                acc[field.name] = field.flags
                return acc
              }, {})
            }
            /**
             * Getter for the current locale.
             */ prototypeAccessors$4.locale.get = function() {
              return Validator.locale
            }
            /**
             * Setter for the validator locale.
             */ prototypeAccessors$4.locale.set = function(value) {
              Validator.locale = value
            }
            staticAccessors$1.locale.get = function() {
              return DictionaryResolver.getDriver().locale
            }
            /**
             * Setter for the validator locale.
             */ staticAccessors$1.locale.set = function(value) {
              var hasChanged = value !== DictionaryResolver.getDriver().locale
              DictionaryResolver.getDriver().locale = value
              if (hasChanged && Validator.$vee && Validator.$vee._vm) {
                Validator.$vee._vm.$emit('localeChanged')
              }
            }
            /**
             * Static constructor.
             * @deprecated
             */ Validator.create = function create(validations, options) {
              {
                warn('Please use `new` to create new validator instances.')
              }
              return new Validator(validations, options)
            }
            /**
             * Adds a custom validator to the list of validation rules.
             */ Validator.extend = function extend(name, validator, options) {
              if (options === void 0) options = {}
              Validator._guardExtend(name, validator) // rules imported from the minimal bundle
              // will have the options embedded in them
              var mergedOpts = validator.options || {}
              Validator._merge(name, {
                validator: validator,
                paramNames:
                  (options && options.paramNames) || validator.paramNames,
                options: assign(
                  { hasTarget: false, immediate: true },
                  mergedOpts,
                  options || {}
                )
              })
            }
            /**
             * Removes a rule from the list of validators.
             * @deprecated
             */ Validator.remove = function remove(name) {
              {
                warn(
                  'this method will be deprecated, you can still override your rules with `extend`'
                )
              }
              RuleContainer.remove(name)
            }
            /**
             * Adds and sets the current locale for the validator.
             */ Validator.prototype.localize = function localize(
              lang,
              dictionary
            ) {
              Validator.localize(lang, dictionary)
            }
            /**
             * Adds and sets the current locale for the validator.
             */ Validator.localize = function localize(lang, dictionary) {
              var obj
              if (isObject(lang)) {
                DictionaryResolver.getDriver().merge(lang)
                return
              } // merge the dictionary.
              if (dictionary) {
                var locale = lang || dictionary.name
                dictionary = assign({}, dictionary)
                DictionaryResolver.getDriver().merge(
                  ((obj = {}), (obj[locale] = dictionary), obj)
                )
              }
              if (lang) {
                // set the locale.
                Validator.locale = lang
              }
            }
            /**
             * Registers a field to be validated.
             */ Validator.prototype.attach = function attach(fieldOpts) {
              var this$1 = this // We search for a field with the same name & scope, having persist enabled
              var oldFieldMatcher = {
                name: fieldOpts.name,
                scope: fieldOpts.scope,
                persist: true
              }
              var oldField = fieldOpts.persist
                ? this.fields.find(oldFieldMatcher)
                : null
              if (oldField) {
                // We keep the flags of the old field, then we remove its instance
                fieldOpts.flags = oldField.flags
                oldField.destroy()
                this.fields.remove(oldField)
              } // fixes initial value detection with v-model and select elements.
              var value = fieldOpts.initialValue
              var field = new Field(fieldOpts)
              this.fields.push(field) // validate the field initially
              if (field.immediate) {
                this.$vee._vm.$nextTick(function() {
                  return this$1.validate('#' + field.id, value || field.value, {
                    vmId: fieldOpts.vmId
                  })
                })
              } else {
                this._validate(field, value || field.value, {
                  initial: true
                }).then(function(result) {
                  field.flags.valid = result.valid
                  field.flags.invalid = !result.valid
                })
              }
              return field
            }
            /**
             * Sets the flags on a field.
             */ Validator.prototype.flag = function flag(name, flags, uid) {
              if (uid === void 0) uid = null
              var field = this._resolveField(name, undefined, uid)
              if (!field || !flags) {
                return
              }
              field.setFlags(flags)
            }
            /**
             * Removes a field from the validator.
             */ Validator.prototype.detach = function detach(name, scope, uid) {
              var field = isCallable(name.destroy)
                ? name
                : this._resolveField(name, scope, uid)
              if (!field) {
                return
              } // We destroy/remove the field & error instances if it's not a `persist` one
              if (!field.persist) {
                field.destroy()
                this.errors.remove(field.name, field.scope, field.vmId)
                this.fields.remove(field)
              }
            }
            /**
             * Adds a custom validator to the list of validation rules.
             */ Validator.prototype.extend = function extend(
              name,
              validator,
              options
            ) {
              if (options === void 0) options = {}
              Validator.extend(name, validator, options)
            }
            Validator.prototype.reset = function reset(matcher) {
              var this$1 = this // two ticks
              return this.$vee._vm
                .$nextTick()
                .then(function() {
                  return this$1.$vee._vm.$nextTick()
                })
                .then(function() {
                  this$1.fields.filter(matcher).forEach(function(field) {
                    field.waitFor(null)
                    field.reset() // reset field flags.
                    this$1.errors.remove(
                      field.name,
                      field.scope,
                      matcher && matcher.vmId
                    )
                  })
                })
            }
            /**
             * Updates a field, updating both errors and flags.
             */ Validator.prototype.update = function update(id, ref) {
              var scope = ref.scope
              var field = this._resolveField('#' + id)
              if (!field) {
                return
              } // remove old scope.
              this.errors.update(id, { scope: scope })
            }
            /**
             * Removes a rule from the list of validators.
             * @deprecated
             */ Validator.prototype.remove = function remove(name) {
              Validator.remove(name)
            }
            /**
             * Validates a value against a registered field validations.
             */ Validator.prototype.validate = function validate(
              fieldDescriptor,
              value,
              ref
            ) {
              var this$1 = this
              if (ref === void 0) ref = {}
              var silent = ref.silent
              var vmId = ref.vmId
              if (this.paused) {
                return Promise.resolve(true)
              } // overload to validate all.
              if (isNullOrUndefined(fieldDescriptor)) {
                return this.validateScopes({ silent: silent, vmId: vmId })
              } // overload to validate scope-less fields.
              if (fieldDescriptor === '*') {
                return this.validateAll(undefined, {
                  silent: silent,
                  vmId: vmId
                })
              } // if scope validation was requested.
              if (/^(.+)\.\*$/.test(fieldDescriptor)) {
                var matched = fieldDescriptor.match(/^(.+)\.\*$/)[1]
                return this.validateAll(matched)
              }
              var field = this._resolveField(fieldDescriptor)
              if (!field) {
                return this._handleFieldNotFound(fieldDescriptor)
              }
              if (!silent) {
                field.flags.pending = true
              }
              if (value === undefined) {
                value = field.value
              }
              var validationPromise = this._validate(field, value)
              field.waitFor(validationPromise)
              return validationPromise.then(function(result) {
                if (!silent && field.isWaitingFor(validationPromise)) {
                  // allow next validation to mutate the state.
                  field.waitFor(null)
                  this$1._handleValidationResults([result], vmId)
                }
                return result.valid
              })
            }
            /**
             * Pauses the validator.
             */ Validator.prototype.pause = function pause() {
              this.paused = true
              return this
            }
            /**
             * Resumes the validator.
             */ Validator.prototype.resume = function resume() {
              this.paused = false
              return this
            }
            /**
             * Validates each value against the corresponding field validations.
             */ Validator.prototype.validateAll = function validateAll(
              values,
              ref
            ) {
              var this$1 = this
              if (ref === void 0) ref = {}
              var silent = ref.silent
              var vmId = ref.vmId
              if (this.paused) {
                return Promise.resolve(true)
              }
              var matcher = null
              var providedValues = false
              if (typeof values === 'string') {
                matcher = { scope: values, vmId: vmId }
              } else if (isObject(values)) {
                matcher = Object.keys(values).map(function(key) {
                  return { name: key, vmId: vmId, scope: null }
                })
                providedValues = true
              } else if (Array.isArray(values)) {
                matcher = values.map(function(key) {
                  return (0, _typeof3['default'])(key) === 'object'
                    ? Object.assign({ vmId: vmId }, key)
                    : { name: key, vmId: vmId }
                })
              } else {
                matcher = { scope: null, vmId: vmId }
              }
              return Promise.all(
                this.fields.filter(matcher).map(function(field) {
                  return this$1._validate(
                    field,
                    providedValues ? values[field.name] : field.value
                  )
                })
              ).then(function(results) {
                if (!silent) {
                  this$1._handleValidationResults(results, vmId)
                }
                return results.every(function(t) {
                  return t.valid
                })
              })
            }
            /**
             * Validates all scopes.
             */ Validator.prototype.validateScopes = function validateScopes(
              ref
            ) {
              var this$1 = this
              if (ref === void 0) ref = {}
              var silent = ref.silent
              var vmId = ref.vmId
              if (this.paused) {
                return Promise.resolve(true)
              }
              return Promise.all(
                this.fields.filter({ vmId: vmId }).map(function(field) {
                  return this$1._validate(field, field.value)
                })
              ).then(function(results) {
                if (!silent) {
                  this$1._handleValidationResults(results, vmId)
                }
                return results.every(function(t) {
                  return t.valid
                })
              })
            }
            /**
             * Validates a value against the rules.
             */ Validator.prototype.verify = function verify(
              value,
              rules,
              options
            ) {
              if (options === void 0) options = {}
              var field = {
                name: (options && options.name) || '{field}',
                rules: normalizeRules(rules),
                bails: getPath('bails', options, true),
                forceRequired: false,
                get isRequired() {
                  return !!this.rules.required || this.forceRequired
                }
              }
              var targetRules = Object.keys(field.rules).filter(
                RuleContainer.isTargetRule
              )
              if (targetRules.length && options && isObject(options.values)) {
                field.dependencies = targetRules.map(function(rule) {
                  var ref = field.rules[rule]
                  var targetKey = ref[0]
                  return {
                    name: rule,
                    field: { value: options.values[targetKey] }
                  }
                })
              }
              return this._validate(field, value).then(function(result) {
                var errors = []
                var ruleMap = {}
                result.errors.forEach(function(e) {
                  errors.push(e.msg)
                  ruleMap[e.rule] = e.msg
                })
                return {
                  valid: result.valid,
                  errors: errors,
                  failedRules: ruleMap
                }
              })
            }
            /**
             * Perform cleanup.
             */ Validator.prototype.destroy = function destroy() {
              this.$vee._vm.$off('localeChanged')
            }
            /**
             * Creates the fields to be validated.
             */ Validator.prototype._createFields = function _createFields(
              validations
            ) {
              var this$1 = this
              if (!validations) {
                return
              }
              Object.keys(validations).forEach(function(field) {
                var options = assign(
                  {},
                  { name: field, rules: validations[field] }
                )
                this$1.attach(options)
              })
            }
            /**
             * Date rules need the existence of a format, so date_format must be supplied.
             */ Validator.prototype._getDateFormat = function _getDateFormat(
              validations
            ) {
              var format = null
              if (
                validations.date_format &&
                Array.isArray(validations.date_format)
              ) {
                format = validations.date_format[0]
              }
              return (
                format ||
                DictionaryResolver.getDriver().getDateFormat(this.locale)
              )
            }
            /**
             * Formats an error message for field and a rule.
             */ Validator.prototype._formatErrorMessage = function _formatErrorMessage(
              field,
              rule,
              data,
              targetName
            ) {
              if (data === void 0) data = {}
              if (targetName === void 0) targetName = null
              var name = this._getFieldDisplayName(field)
              var params = this._getLocalizedParams(rule, targetName)
              return DictionaryResolver.getDriver().getFieldMessage(
                this.locale,
                field.name,
                rule.name,
                [name, params, data]
              )
            }
            /**
             * We need to convert any object param to an array format since the locales do not handle params as objects yet.
             */ Validator.prototype._convertParamObjectToArray = function _convertParamObjectToArray(
              obj,
              ruleName
            ) {
              if (Array.isArray(obj)) {
                return obj
              }
              var paramNames = RuleContainer.getParamNames(ruleName)
              if (!paramNames || !isObject(obj)) {
                return obj
              }
              return paramNames.reduce(function(prev, paramName) {
                if (paramName in obj) {
                  prev.push(obj[paramName])
                }
                return prev
              }, [])
            }
            /**
             * Translates the parameters passed to the rule (mainly for target fields).
             */ Validator.prototype._getLocalizedParams = function _getLocalizedParams(
              rule,
              targetName
            ) {
              if (targetName === void 0) targetName = null
              var params = this._convertParamObjectToArray(
                rule.params,
                rule.name
              )
              if (rule.options.hasTarget && params && params[0]) {
                var localizedName =
                  targetName ||
                  DictionaryResolver.getDriver().getAttribute(
                    this.locale,
                    params[0],
                    params[0]
                  )
                return [localizedName].concat(params.slice(1))
              }
              return params
            }
            /**
             * Resolves an appropriate display name, first checking 'data-as' or the registered 'prettyName'
             */ Validator.prototype._getFieldDisplayName = function _getFieldDisplayName(
              field
            ) {
              return (
                field.alias ||
                DictionaryResolver.getDriver().getAttribute(
                  this.locale,
                  field.name,
                  field.name
                )
              )
            }
            /**
             * Converts an array of params to an object with named properties.
             * Only works if the rule is configured with a paramNames array.
             * Returns the same params if it cannot convert it.
             */ Validator.prototype._convertParamArrayToObj = function _convertParamArrayToObj(
              params,
              ruleName
            ) {
              var paramNames = RuleContainer.getParamNames(ruleName)
              if (!paramNames) {
                return params
              }
              if (isObject(params)) {
                // check if the object is either a config object or a single parameter that is an object.
                var hasKeys = paramNames.some(function(name) {
                  return Object.keys(params).indexOf(name) !== -1
                }) // if it has some of the keys, return it as is.
                if (hasKeys) {
                  return params
                } // otherwise wrap the object in an array.
                params = [params]
              } // Reduce the paramsNames to a param object.
              return params.reduce(function(prev, value, idx) {
                prev[paramNames[idx]] = value
                return prev
              }, {})
            }
            /**
             * Tests a single input value against a rule.
             */ Validator.prototype._test = function _test(field, value, rule) {
              var this$1 = this
              var validator = RuleContainer.getValidatorMethod(rule.name)
              var params = Array.isArray(rule.params)
                ? toArray(rule.params)
                : rule.params
              if (!params) {
                params = []
              }
              var targetName = null
              if (!validator || typeof validator !== 'function') {
                return Promise.reject(
                  createError("No such validator '" + rule.name + "' exists.")
                )
              } // has field dependencies.
              if (rule.options.hasTarget && field.dependencies) {
                var target = find(field.dependencies, function(d) {
                  return d.name === rule.name
                })
                if (target) {
                  targetName = target.field.alias
                  params = [target.field.value].concat(params.slice(1))
                }
              } else if (rule.name === 'required' && field.rejectsFalse) {
                // invalidate false if no args were specified and the field rejects false by default.
                params = params.length ? params : [true]
              }
              if (rule.options.isDate) {
                var dateFormat = this._getDateFormat(field.rules)
                if (rule.name !== 'date_format') {
                  params.push(dateFormat)
                }
              }
              var result = validator(
                value,
                this._convertParamArrayToObj(params, rule.name)
              ) // If it is a promise.
              if (isCallable(result.then)) {
                return result.then(function(values) {
                  var allValid = true
                  var data = {}
                  if (Array.isArray(values)) {
                    allValid = values.every(function(t) {
                      return isObject(t) ? t.valid : t
                    })
                  } else {
                    // Is a single object/boolean.
                    allValid = isObject(values) ? values.valid : values
                    data = values.data
                  }
                  return {
                    valid: allValid,
                    data: result.data,
                    errors: allValid
                      ? []
                      : [
                          this$1._createFieldError(
                            field,
                            rule,
                            data,
                            targetName
                          )
                        ]
                  }
                })
              }
              if (!isObject(result)) {
                result = { valid: result, data: {} }
              }
              return {
                valid: result.valid,
                data: result.data,
                errors: result.valid
                  ? []
                  : [
                      this._createFieldError(
                        field,
                        rule,
                        result.data,
                        targetName
                      )
                    ]
              }
            }
            /**
             * Merges a validator object into the RULES and Messages.
             */ Validator._merge = function _merge(name, ref) {
              var validator = ref.validator
              var options = ref.options
              var paramNames = ref.paramNames
              var validate = isCallable(validator)
                ? validator
                : validator.validate
              if (validator.getMessage) {
                DictionaryResolver.getDriver().setMessage(
                  Validator.locale,
                  name,
                  validator.getMessage
                )
              }
              RuleContainer.add(name, {
                validate: validate,
                options: options,
                paramNames: paramNames
              })
            }
            /**
             * Guards from extension violations.
             */ Validator._guardExtend = function _guardExtend(
              name,
              validator
            ) {
              if (isCallable(validator)) {
                return
              }
              if (!isCallable(validator.validate)) {
                throw createError(
                  "Extension Error: The validator '" +
                    name +
                    "' must be a function or have a 'validate' method."
                )
              }
            }
            /**
             * Creates a Field Error Object.
             */ Validator.prototype._createFieldError = function _createFieldError(
              field,
              rule,
              data,
              targetName
            ) {
              var this$1 = this
              return {
                id: field.id,
                vmId: field.vmId,
                field: field.name,
                msg: this._formatErrorMessage(field, rule, data, targetName),
                rule: rule.name,
                scope: field.scope,
                regenerate: function regenerate() {
                  return this$1._formatErrorMessage(
                    field,
                    rule,
                    data,
                    targetName
                  )
                }
              }
            }
            /**
             * Tries different strategies to find a field.
             */ Validator.prototype._resolveField = function _resolveField(
              name,
              scope,
              uid
            ) {
              if (name[0] === '#') {
                return this.fields.findById(name.slice(1))
              }
              if (!isNullOrUndefined(scope)) {
                return this.fields.find({ name: name, scope: scope, vmId: uid })
              }
              if (includes(name, '.')) {
                var ref = name.split('.')
                var fieldScope = ref[0]
                var fieldName = ref.slice(1)
                var field = this.fields.find({
                  name: fieldName.join('.'),
                  scope: fieldScope,
                  vmId: uid
                })
                if (field) {
                  return field
                }
              }
              return this.fields.find({ name: name, scope: null, vmId: uid })
            }
            /**
             * Handles when a field is not found.
             */ Validator.prototype._handleFieldNotFound = function _handleFieldNotFound(
              name,
              scope
            ) {
              var fullName = isNullOrUndefined(scope)
                ? name
                : '' + (!isNullOrUndefined(scope) ? scope + '.' : '') + name
              return Promise.reject(
                createError(
                  'Validating a non-existent field: "' +
                    fullName +
                    '". Use "attach()" first.'
                )
              )
            }
            /**
             * Handles validation results.
             */ Validator.prototype._handleValidationResults = function _handleValidationResults(
              results,
              vmId
            ) {
              var this$1 = this
              var matchers = results.map(function(result) {
                return { id: result.id }
              })
              this.errors.removeById(
                matchers.map(function(m) {
                  return m.id
                })
              ) // remove by name and scope to remove any custom errors added.
              results.forEach(function(result) {
                this$1.errors.remove(result.field, result.scope, vmId)
              })
              var allErrors = results.reduce(function(prev, curr) {
                prev.push.apply(prev, curr.errors)
                return prev
              }, [])
              this.errors.add(allErrors) // handle flags.
              this.fields.filter(matchers).forEach(function(field) {
                var result = find(results, function(r) {
                  return r.id === field.id
                })
                field.setFlags({
                  pending: false,
                  valid: result.valid,
                  validated: true
                })
              })
            }
            Validator.prototype._shouldSkip = function _shouldSkip(
              field,
              value
            ) {
              // field is configured to run through the pipeline regardless
              if (field.bails === false) {
                return false
              } // disabled fields are skipped if useConstraintAttrs is enabled in config
              if (field.isDisabled && getConfig().useConstraintAttrs) {
                return true
              } // skip if the field is not required and has an empty value.
              return (
                !field.isRequired &&
                (isNullOrUndefined(value) ||
                  value === '' ||
                  isEmptyArray(value))
              )
            }
            Validator.prototype._shouldBail = function _shouldBail(field) {
              // if the field was configured explicitly.
              if (field.bails !== undefined) {
                return field.bails
              }
              return this.fastExit
            }
            /**
             * Starts the validation process.
             */ Validator.prototype._validate = function _validate(
              field,
              value,
              ref
            ) {
              var this$1 = this
              if (ref === void 0) ref = {}
              var initial = ref.initial
              var requireRules = Object.keys(field.rules).filter(
                RuleContainer.isRequireRule
              )
              field.forceRequired = false
              requireRules.forEach(function(rule) {
                var ruleOptions = RuleContainer.getOptions(rule)
                var result = this$1._test(field, value, {
                  name: rule,
                  params: field.rules[rule],
                  options: ruleOptions
                })
                if (isCallable(result.then)) {
                  throw createError('Require rules cannot be async')
                }
                if (!isObject(result)) {
                  throw createError(
                    'Require rules has to return an object (see docs)'
                  )
                }
                if (result.data.required === true) {
                  field.forceRequired = true
                }
              })
              if (this._shouldSkip(field, value)) {
                return Promise.resolve({
                  valid: true,
                  id: field.id,
                  field: field.name,
                  scope: field.scope,
                  errors: []
                })
              }
              var promises = []
              var errors = []
              var isExitEarly = false
              if (isCallable(field.checkValueChanged)) {
                field.flags.changed = field.checkValueChanged()
              } // use of '.some()' is to break iteration in middle by returning true
              Object.keys(field.rules)
                .filter(function(rule) {
                  if (!initial || !RuleContainer.has(rule)) {
                    return true
                  }
                  return RuleContainer.isImmediate(rule)
                })
                .some(function(rule) {
                  var ruleOptions = RuleContainer.getOptions(rule)
                  var result = this$1._test(field, value, {
                    name: rule,
                    params: field.rules[rule],
                    options: ruleOptions
                  })
                  if (isCallable(result.then)) {
                    promises.push(result)
                  } else if (!result.valid && this$1._shouldBail(field)) {
                    errors.push.apply(errors, result.errors)
                    isExitEarly = true
                  } else {
                    // promisify the result.
                    promises.push(
                      new Promise(function(resolve) {
                        return resolve(result)
                      })
                    )
                  }
                  return isExitEarly
                })
              if (isExitEarly) {
                return Promise.resolve({
                  valid: false,
                  errors: errors,
                  id: field.id,
                  field: field.name,
                  scope: field.scope
                })
              }
              return Promise.all(promises).then(function(results) {
                return results.reduce(
                  function(prev, v) {
                    var ref
                    if (!v.valid) {
                      ;(ref = prev.errors).push.apply(ref, v.errors)
                    }
                    prev.valid = prev.valid && v.valid
                    return prev
                  },
                  {
                    valid: true,
                    errors: errors,
                    id: field.id,
                    field: field.name,
                    scope: field.scope
                  }
                )
              })
            }
            Object.defineProperties(Validator.prototype, prototypeAccessors$4)
            Object.defineProperties(Validator, staticAccessors$1) //
            var normalizeValue = function normalizeValue(value) {
              if (isObject(value)) {
                return Object.keys(value).reduce(function(prev, key) {
                  prev[key] = normalizeValue(value[key])
                  return prev
                }, {})
              }
              if (isCallable(value)) {
                return value('{0}', ['{1}', '{2}', '{3}'])
              }
              return value
            }
            var normalizeFormat = function normalizeFormat(locale) {
              // normalize messages
              var dictionary = {}
              if (locale.messages) {
                dictionary.messages = normalizeValue(locale.messages)
              }
              if (locale.custom) {
                dictionary.custom = normalizeValue(locale.custom)
              }
              if (locale.attributes) {
                dictionary.attributes = locale.attributes
              }
              if (!isNullOrUndefined(locale.dateFormat)) {
                dictionary.dateFormat = locale.dateFormat
              }
              return dictionary
            }
            var I18nDictionary = function I18nDictionary(i18n, rootKey) {
              this.i18n = i18n
              this.rootKey = rootKey
            }
            var prototypeAccessors$5 = { locale: { configurable: true } }
            prototypeAccessors$5.locale.get = function() {
              return this.i18n.locale
            }
            prototypeAccessors$5.locale.set = function(value) {
              warn(
                'Cannot set locale from the validator when using vue-i18n, use i18n.locale setter instead'
              )
            }
            I18nDictionary.prototype.getDateFormat = function getDateFormat(
              locale
            ) {
              return this.i18n.getDateTimeFormat(locale || this.locale)
            }
            I18nDictionary.prototype.setDateFormat = function setDateFormat(
              locale,
              value
            ) {
              this.i18n.setDateTimeFormat(locale || this.locale, value)
            }
            I18nDictionary.prototype.getMessage = function getMessage(
              _,
              key,
              data
            ) {
              var path = this.rootKey + '.messages.' + key
              var dataOptions = data
              if (Array.isArray(data)) {
                dataOptions = [].concat.apply([], data)
              }
              if (this.i18n.te(path)) {
                return this.i18n.t(path, dataOptions)
              } // fallback to the fallback message
              if (this.i18n.te(path, this.i18n.fallbackLocale)) {
                return this.i18n.t(path, this.i18n.fallbackLocale, dataOptions)
              } // fallback to the root message
              return this.i18n.t(
                this.rootKey + '.messages._default',
                dataOptions
              )
            }
            I18nDictionary.prototype.getAttribute = function getAttribute(
              _,
              key,
              fallback
            ) {
              if (fallback === void 0) fallback = ''
              var path = this.rootKey + '.attributes.' + key
              if (this.i18n.te(path)) {
                return this.i18n.t(path)
              }
              return fallback
            }
            I18nDictionary.prototype.getFieldMessage = function getFieldMessage(
              _,
              field,
              key,
              data
            ) {
              var path = this.rootKey + '.custom.' + field + '.' + key
              if (this.i18n.te(path)) {
                return this.i18n.t(path, data)
              }
              return this.getMessage(_, key, data)
            }
            I18nDictionary.prototype.merge = function merge$1(dictionary) {
              var this$1 = this
              Object.keys(dictionary).forEach(function(localeKey) {
                var obj // i18n doesn't deep merge
                // first clone the existing locale (avoid mutations to locale)
                var clone = merge(
                  {},
                  getPath(
                    localeKey + '.' + this$1.rootKey,
                    this$1.i18n.messages,
                    {}
                  )
                ) // Merge cloned locale with new one
                var locale = merge(
                  clone,
                  normalizeFormat(dictionary[localeKey])
                )
                this$1.i18n.mergeLocaleMessage(
                  localeKey,
                  ((obj = {}), (obj[this$1.rootKey] = locale), obj)
                )
                if (locale.dateFormat) {
                  this$1.i18n.setDateTimeFormat(localeKey, locale.dateFormat)
                }
              })
            }
            I18nDictionary.prototype.setMessage = function setMessage(
              locale,
              key,
              value
            ) {
              var obj, obj$1
              this.merge(
                ((obj$1 = {}),
                (obj$1[locale] = {
                  messages: ((obj = {}), (obj[key] = value), obj)
                }),
                obj$1)
              )
            }
            I18nDictionary.prototype.setAttribute = function setAttribute(
              locale,
              key,
              value
            ) {
              var obj, obj$1
              this.merge(
                ((obj$1 = {}),
                (obj$1[locale] = {
                  attributes: ((obj = {}), (obj[key] = value), obj)
                }),
                obj$1)
              )
            }
            Object.defineProperties(
              I18nDictionary.prototype,
              prototypeAccessors$5
            )
            var aggressive = function aggressive() {
              return { on: ['input'] }
            }
            var lazy = function lazy() {
              return { on: ['change'] }
            }
            var eager = function eager(ref) {
              var errors = ref.errors
              if (errors.length) {
                return { on: ['input'] }
              }
              return { on: ['change', 'blur'] }
            }
            var passive = function passive() {
              return { on: [] }
            }
            var modes = {
              aggressive: aggressive,
              eager: eager,
              passive: passive,
              lazy: lazy
            } //
            var Vue
            var pendingPlugins
            var pluginInstance
            var VeeValidate$1 = function VeeValidate(config, _Vue) {
              this.configure(config)
              pluginInstance = this
              if (_Vue) {
                Vue = _Vue
              }
              this._validator = setValidator(
                new Validator(
                  null,
                  { fastExit: config && config.fastExit },
                  this
                )
              )
              this._initVM(this.config)
              this._initI18n(this.config)
            }
            var prototypeAccessors$6 = {
              i18nDriver: { configurable: true },
              config: { configurable: true }
            }
            var staticAccessors$2 = {
              i18nDriver: { configurable: true },
              config: { configurable: true }
            }
            VeeValidate$1.setI18nDriver = function setI18nDriver(
              driver,
              instance
            ) {
              DictionaryResolver.setDriver(driver, instance)
            }
            VeeValidate$1.configure = function configure(cfg) {
              setConfig(cfg)
            }
            VeeValidate$1.setMode = function setMode(mode, implementation) {
              setConfig({ mode: mode })
              if (!implementation) {
                return
              }
              if (!isCallable(implementation)) {
                throw new Error('A mode implementation must be a function')
              }
              modes[mode] = implementation
            }
            VeeValidate$1.use = function use(plugin, options) {
              if (options === void 0) options = {}
              if (!isCallable(plugin)) {
                return warn('The plugin must be a callable function')
              } // Don't install plugins until vee-validate is installed.
              if (!pluginInstance) {
                if (!pendingPlugins) {
                  pendingPlugins = []
                }
                pendingPlugins.push({ plugin: plugin, options: options })
                return
              }
              plugin(
                {
                  Validator: Validator,
                  ErrorBag: ErrorBag,
                  Rules: Validator.rules
                },
                options
              )
            }
            VeeValidate$1.install = function install(_Vue, opts) {
              if (Vue && _Vue === Vue) {
                {
                  warn(
                    'already installed, Vue.use(VeeValidate) should only be called once.'
                  )
                }
                return
              }
              Vue = _Vue
              pluginInstance = new VeeValidate$1(opts) // inject the plugin container statically into the validator class
              Validator.$vee = pluginInstance
              detectPassiveSupport()
              Vue.mixin(mixin)
              Vue.directive('validate', directive)
              if (pendingPlugins) {
                pendingPlugins.forEach(function(ref) {
                  var plugin = ref.plugin
                  var options = ref.options
                  VeeValidate$1.use(plugin, options)
                })
                pendingPlugins = null
              }
            }
            prototypeAccessors$6.i18nDriver.get = function() {
              return DictionaryResolver.getDriver()
            }
            staticAccessors$2.i18nDriver.get = function() {
              return DictionaryResolver.getDriver()
            }
            prototypeAccessors$6.config.get = function() {
              return getConfig()
            }
            staticAccessors$2.config.get = function() {
              return getConfig()
            }
            VeeValidate$1.prototype._initVM = function _initVM(config) {
              var this$1 = this
              this._vm = new Vue({
                data: function data() {
                  return {
                    errors: this$1._validator.errors,
                    fields: this$1._validator.fields
                  }
                }
              })
            }
            VeeValidate$1.prototype._initI18n = function _initI18n(config) {
              var this$1 = this
              var dictionary = config.dictionary
              var i18n = config.i18n
              var i18nRootKey = config.i18nRootKey
              var locale = config.locale
              var onLocaleChanged = function onLocaleChanged() {
                if (dictionary) {
                  this$1.i18nDriver.merge(dictionary)
                }
                this$1._validator.errors.regenerate()
              } // i18 is being used for localization.
              if (i18n) {
                VeeValidate$1.setI18nDriver(
                  'i18n',
                  new I18nDictionary(i18n, i18nRootKey)
                )
                i18n._vm.$watch('locale', onLocaleChanged)
              } else if (typeof window !== 'undefined') {
                this._vm.$on('localeChanged', onLocaleChanged)
              }
              if (dictionary) {
                this.i18nDriver.merge(dictionary)
              }
              if (locale && !i18n) {
                this._validator.localize(locale)
              }
            }
            VeeValidate$1.prototype.configure = function configure(cfg) {
              setConfig(cfg)
            }
            Object.defineProperties(
              VeeValidate$1.prototype,
              prototypeAccessors$6
            )
            Object.defineProperties(VeeValidate$1, staticAccessors$2)
            VeeValidate$1.mixin = mixin
            VeeValidate$1.directive = directive
            VeeValidate$1.Validator = Validator
            VeeValidate$1.ErrorBag = ErrorBag //
            var normalize = function normalize(fields) {
              if (Array.isArray(fields)) {
                return fields.reduce(function(prev, curr) {
                  if (includes(curr, '.')) {
                    prev[curr.split('.')[1]] = curr
                  } else {
                    prev[curr] = curr
                  }
                  return prev
                }, {})
              }
              return fields
            } // Combines two flags using either AND or OR depending on the flag type.
            var combine = function combine(lhs, rhs) {
              var mapper = {
                pristine: function pristine(lhs, rhs) {
                  return lhs && rhs
                },
                dirty: function dirty(lhs, rhs) {
                  return lhs || rhs
                },
                touched: function touched(lhs, rhs) {
                  return lhs || rhs
                },
                untouched: function untouched(lhs, rhs) {
                  return lhs && rhs
                },
                valid: function valid(lhs, rhs) {
                  return lhs && rhs
                },
                invalid: function invalid(lhs, rhs) {
                  return lhs || rhs
                },
                pending: function pending(lhs, rhs) {
                  return lhs || rhs
                },
                required: function required(lhs, rhs) {
                  return lhs || rhs
                },
                validated: function validated(lhs, rhs) {
                  return lhs && rhs
                }
              }
              return Object.keys(mapper).reduce(function(flags, flag) {
                flags[flag] = mapper[flag](lhs[flag], rhs[flag])
                return flags
              }, {})
            }
            var mapScope = function mapScope(scope, deep) {
              if (deep === void 0) deep = true
              return Object.keys(scope).reduce(function(flags, field) {
                if (!flags) {
                  flags = assign({}, scope[field])
                  return flags
                } // scope.
                var isScope = field.indexOf('$') === 0
                if (deep && isScope) {
                  return combine(mapScope(scope[field]), flags)
                } else if (!deep && isScope) {
                  return flags
                }
                flags = combine(flags, scope[field])
                return flags
              }, null)
            }
            /**
             * Maps fields to computed functions.
             */ var mapFields = function mapFields(fields) {
              if (!fields) {
                return function() {
                  return mapScope(this.$validator.flags)
                }
              }
              var normalized = normalize(fields)
              return Object.keys(normalized).reduce(function(prev, curr) {
                var field = normalized[curr]
                prev[curr] = function mappedField() {
                  // if field exists
                  if (this.$validator.flags[field]) {
                    return this.$validator.flags[field]
                  } // scopeless fields were selected.
                  if (normalized[curr] === '*') {
                    return mapScope(this.$validator.flags, false)
                  } // if it has a scope defined
                  var index = field.indexOf('.')
                  if (index <= 0) {
                    return {}
                  }
                  var ref = field.split('.')
                  var scope = ref[0]
                  var name = ref.slice(1)
                  scope = this.$validator.flags['$' + scope]
                  name = name.join('.') // an entire scope was selected: scope.*
                  if (name === '*' && scope) {
                    return mapScope(scope)
                  }
                  if (scope && scope[name]) {
                    return scope[name]
                  }
                  return {}
                }
                return prev
              }, {})
            }
            var $validator = null
            var PROVIDER_COUNTER = 0
            var ValidationProvider = {
              $__veeInject: false,
              inject: {
                $_veeObserver: {
                  from: '$_veeObserver',
                  default: function default$1() {
                    if (!this.$vnode.context.$_veeObserver) {
                      this.$vnode.context.$_veeObserver = createObserver()
                    }
                    return this.$vnode.context.$_veeObserver
                  }
                }
              },
              props: {
                vid: {
                  type: [String, Number],
                  default: function _default() {
                    PROVIDER_COUNTER++
                    return '_vee_' + PROVIDER_COUNTER
                  }
                },
                name: { type: String, default: null },
                mode: {
                  type: [String, Function],
                  default: function _default() {
                    return getConfig().mode
                  }
                },
                events: {
                  type: Array,
                  validate: function validate() {
                    /* istanbul ignore next */ {
                      warn(
                        'events prop and config will be deprecated in future version please use the interaction modes instead'
                      )
                    }
                    return true
                  },
                  default: function _default() {
                    var events = getConfig().events
                    if (typeof events === 'string') {
                      return events.split('|')
                    }
                    return events
                  }
                },
                rules: { type: [Object, String], default: null },
                immediate: { type: Boolean, default: false },
                persist: { type: Boolean, default: false },
                bails: {
                  type: Boolean,
                  default: function _default() {
                    return getConfig().fastExit
                  }
                },
                debounce: {
                  type: Number,
                  default: function _default() {
                    return getConfig().delay || 0
                  }
                },
                tag: { type: String, default: 'span' },
                slim: { type: Boolean, default: false }
              },
              watch: {
                rules: {
                  deep: true,
                  handler: function handler(val, oldVal) {
                    this._needsValidation = !isEqual$1(val, oldVal)
                  }
                }
              },
              data: function data() {
                return {
                  messages: [],
                  value: undefined,
                  initialized: false,
                  initialValue: undefined,
                  flags: createFlags(),
                  failedRules: {},
                  forceRequired: false,
                  isDeactivated: false,
                  id: null
                }
              },
              computed: {
                isValid: function isValid() {
                  return this.flags.valid
                },
                fieldDeps: function fieldDeps() {
                  var this$1 = this
                  var rules = normalizeRules(this.rules)
                  return Object.keys(rules)
                    .filter(RuleContainer.isTargetRule)
                    .map(function(rule) {
                      var depName = rules[rule][0]
                      watchCrossFieldDep(this$1, depName)
                      return depName
                    })
                },
                normalizedEvents: function normalizedEvents() {
                  var this$1 = this
                  var ref = computeModeSetting(this)
                  var on = ref.on
                  return normalizeEvents(on || this.events || []).map(function(
                    e
                  ) {
                    if (e === 'input') {
                      return this$1._inputEventName
                    }
                    return e
                  })
                },
                isRequired: function isRequired() {
                  var rules = normalizeRules(this.rules)
                  var forceRequired = this.forceRequired
                  var isRequired = rules.required || forceRequired
                  this.flags.required = isRequired
                  return isRequired
                },
                classes: function classes() {
                  var this$1 = this
                  var names = getConfig().classNames
                  return Object.keys(this.flags).reduce(function(
                    classes,
                    flag
                  ) {
                    var className = (names && names[flag]) || flag
                    if (isNullOrUndefined(this$1.flags[flag])) {
                      return classes
                    }
                    if (className) {
                      classes[className] = this$1.flags[flag]
                    }
                    return classes
                  },
                  {})
                }
              },
              render: function render(h) {
                var this$1 = this
                this.registerField()
                var ctx = createValidationCtx(this) // Gracefully handle non-existent scoped slots.
                var slot = this.$scopedSlots['default']
                /* istanbul ignore next */ if (!isCallable(slot)) {
                  {
                    warn(
                      'ValidationProvider expects a scoped slot. Did you forget to add "v-slot" to your slot?'
                    )
                  }
                  return h(this.tag, this.$slots['default'])
                }
                var nodes = slot(ctx) // Handle single-root slot.
                extractVNodes(nodes).forEach(function(input) {
                  addListeners.call(this$1, input)
                })
                return this.slim
                  ? createRenderless(h, nodes)
                  : h(this.tag, nodes)
              },
              beforeDestroy: function beforeDestroy() {
                // cleanup reference.
                this.$_veeObserver.unsubscribe(this)
              },
              activated: function activated() {
                this.$_veeObserver.subscribe(this)
                this.isDeactivated = false
              },
              deactivated: function deactivated() {
                this.$_veeObserver.unsubscribe(this)
                this.isDeactivated = true
              },
              methods: {
                setFlags: function setFlags(flags) {
                  var this$1 = this
                  Object.keys(flags).forEach(function(flag) {
                    this$1.flags[flag] = flags[flag]
                  })
                },
                syncValue: function syncValue(e) {
                  var value = normalizeValue$1(e)
                  this.value = value
                  this.flags.changed = this.initialValue !== value
                },
                reset: function reset() {
                  this.messages = []
                  this._pendingValidation = null
                  this.initialValue = this.value
                  var flags = createFlags()
                  this.setFlags(flags)
                },
                validate: function validate() {
                  var this$1 = this
                  var args = [],
                    len = arguments.length
                  while (len--) {
                    args[len] = arguments[len]
                  }
                  if (args.length > 0) {
                    this.syncValue(args[0])
                  }
                  return this.validateSilent().then(function(result) {
                    this$1.applyResult(result)
                    return result
                  })
                },
                validateSilent: function validateSilent() {
                  var this$1 = this
                  this.setFlags({ pending: true })
                  return $validator
                    .verify(this.value, this.rules, {
                      name: this.name,
                      values: createValuesLookup(this),
                      bails: this.bails
                    })
                    .then(function(result) {
                      this$1.setFlags({ pending: false })
                      if (!this$1.isRequired) {
                        this$1.setFlags({
                          valid: result.valid,
                          invalid: !result.valid
                        })
                      }
                      return result
                    })
                },
                applyResult: function applyResult(ref) {
                  var errors = ref.errors
                  var failedRules = ref.failedRules
                  this.messages = errors
                  this.failedRules = assign({}, failedRules)
                  this.setFlags({
                    valid: !errors.length,
                    changed: this.value !== this.initialValue,
                    invalid: !!errors.length,
                    validated: true
                  })
                },
                registerField: function registerField() {
                  if (!$validator) {
                    $validator =
                      getValidator() ||
                      new Validator(null, { fastExit: getConfig().fastExit })
                  }
                  updateRenderingContextRefs(this)
                }
              }
            }
            function createValidationCtx(ctx) {
              return {
                errors: ctx.messages,
                flags: ctx.flags,
                classes: ctx.classes,
                valid: ctx.isValid,
                failedRules: ctx.failedRules,
                reset: function reset() {
                  return ctx.reset()
                },
                validate: function validate() {
                  var args = [],
                    len = arguments.length
                  while (len--) {
                    args[len] = arguments[len]
                  }
                  return ctx.validate.apply(ctx, args)
                },
                aria: {
                  'aria-invalid': ctx.flags.invalid ? 'true' : 'false',
                  'aria-required': ctx.isRequired ? 'true' : 'false'
                }
              }
            }
            function normalizeValue$1(value) {
              if (isEvent(value)) {
                return value.target.type === 'file'
                  ? toArray(value.target.files)
                  : value.target.value
              }
              return value
            }
            /**
             * Determines if a provider needs to run validation.
             */ function shouldValidate(ctx, model) {
              // when an immediate/initial validation is needed and wasn't done before.
              if (!ctx._ignoreImmediate && ctx.immediate) {
                return true
              } // when the value changes for whatever reason.
              if (ctx.value !== model.value) {
                return true
              } // when it needs validation due to props/cross-fields changes.
              if (ctx._needsValidation) {
                return true
              } // when the initial value is undefined and the field wasn't rendered yet.
              if (!ctx.initialized && model.value === undefined) {
                return true
              }
              return false
            }
            function computeModeSetting(ctx) {
              var compute = isCallable(ctx.mode) ? ctx.mode : modes[ctx.mode]
              return compute({
                errors: ctx.messages,
                value: ctx.value,
                flags: ctx.flags
              })
            }
            function onRenderUpdate(model) {
              if (!this.initialized) {
                this.initialValue = model.value
              }
              var validateNow = shouldValidate(this, model)
              this._needsValidation = false
              this.value = model.value
              this._ignoreImmediate = true
              if (!validateNow) {
                return
              }
              this.validateSilent().then(
                this.immediate || this.flags.validated
                  ? this.applyResult
                  : function(x) {
                      return x
                    }
              )
            } // Creates the common handlers for a validatable context.
            function createCommonHandlers(ctx) {
              var onInput = function onInput(e) {
                ctx.syncValue(e) // track and keep the value updated.
                ctx.setFlags({ dirty: true, pristine: false })
              } // Blur event listener.
              var onBlur = function onBlur() {
                ctx.setFlags({ touched: true, untouched: false })
              }
              var onValidate = ctx.$veeHandler
              var mode = computeModeSetting(ctx) // Handle debounce changes.
              if (!onValidate || ctx.$veeDebounce !== ctx.debounce) {
                onValidate = debounce(function() {
                  ctx.$nextTick(function() {
                    var pendingPromise = ctx.validateSilent() // avoids race conditions between successive validations.
                    ctx._pendingValidation = pendingPromise
                    pendingPromise.then(function(result) {
                      if (pendingPromise === ctx._pendingValidation) {
                        ctx.applyResult(result)
                        ctx._pendingValidation = null
                      }
                    })
                  })
                }, mode.debounce || ctx.debounce) // Cache the handler so we don't create it each time.
                ctx.$veeHandler = onValidate // cache the debounce value so we detect if it was changed.
                ctx.$veeDebounce = ctx.debounce
              }
              return {
                onInput: onInput,
                onBlur: onBlur,
                onValidate: onValidate
              }
            } // Adds all plugin listeners to the vnode.
            function addListeners(node) {
              var model = findModel(node) // cache the input eventName.
              this._inputEventName =
                this._inputEventName || getInputEventName(node, model)
              onRenderUpdate.call(this, model)
              var ref = createCommonHandlers(this)
              var onInput = ref.onInput
              var onBlur = ref.onBlur
              var onValidate = ref.onValidate
              addVNodeListener(node, this._inputEventName, onInput)
              addVNodeListener(node, 'blur', onBlur) // add the validation listeners.
              this.normalizedEvents.forEach(function(evt) {
                addVNodeListener(node, evt, onValidate)
              })
              this.initialized = true
            }
            function createValuesLookup(ctx) {
              var providers = ctx.$_veeObserver.refs
              return ctx.fieldDeps.reduce(function(acc, depName) {
                if (!providers[depName]) {
                  return acc
                }
                acc[depName] = providers[depName].value
                return acc
              }, {})
            }
            function updateRenderingContextRefs(ctx) {
              // IDs should not be nullable.
              if (isNullOrUndefined(ctx.id) && ctx.id === ctx.vid) {
                ctx.id = PROVIDER_COUNTER
                PROVIDER_COUNTER++
              }
              var id = ctx.id
              var vid = ctx.vid // Nothing has changed.
              if (
                ctx.isDeactivated ||
                (id === vid && ctx.$_veeObserver.refs[id])
              ) {
                return
              } // vid was changed.
              if (id !== vid && ctx.$_veeObserver.refs[id] === ctx) {
                ctx.$_veeObserver.unsubscribe({ vid: id })
              }
              ctx.$_veeObserver.subscribe(ctx)
              ctx.id = vid
            }
            function createObserver() {
              return {
                refs: {},
                subscribe: function subscribe(ctx) {
                  this.refs[ctx.vid] = ctx
                },
                unsubscribe: function unsubscribe(ctx) {
                  delete this.refs[ctx.vid]
                }
              }
            }
            function watchCrossFieldDep(ctx, depName, withHooks) {
              if (withHooks === void 0) withHooks = true
              var providers = ctx.$_veeObserver.refs
              if (!ctx._veeWatchers) {
                ctx._veeWatchers = {}
              }
              if (!providers[depName] && withHooks) {
                return ctx.$once('hook:mounted', function() {
                  watchCrossFieldDep(ctx, depName, false)
                })
              }
              if (
                !isCallable(ctx._veeWatchers[depName]) &&
                providers[depName]
              ) {
                ctx._veeWatchers[depName] = providers[depName].$watch(
                  'value',
                  function() {
                    if (ctx.flags.validated) {
                      ctx._needsValidation = true
                      ctx.validate()
                    }
                  }
                )
              }
            }
            var flagMergingStrategy = {
              pristine: 'every',
              dirty: 'some',
              touched: 'some',
              untouched: 'every',
              valid: 'every',
              invalid: 'some',
              pending: 'some',
              validated: 'every'
            }
            function mergeFlags(lhs, rhs, strategy) {
              var stratName = flagMergingStrategy[strategy]
              return [lhs, rhs][stratName](function(f) {
                return f
              })
            }
            var OBSERVER_COUNTER = 0
            var ValidationObserver = {
              name: 'ValidationObserver',
              provide: function provide() {
                return { $_veeObserver: this }
              },
              inject: {
                $_veeObserver: {
                  from: '$_veeObserver',
                  default: function default$1() {
                    if (!this.$vnode.context.$_veeObserver) {
                      return null
                    }
                    return this.$vnode.context.$_veeObserver
                  }
                }
              },
              props: {
                tag: { type: String, default: 'span' },
                slim: { type: Boolean, default: false }
              },
              data: function data() {
                return {
                  vid: 'obs_' + OBSERVER_COUNTER++,
                  refs: {},
                  observers: [],
                  persistedStore: {}
                }
              },
              computed: {
                ctx: function ctx() {
                  var this$1 = this
                  var ctx = {
                    errors: {},
                    validate: function validate(arg) {
                      var promise = this$1.validate(arg)
                      return {
                        then: function then(thenable) {
                          return promise.then(function(success) {
                            if (success && isCallable(thenable)) {
                              return Promise.resolve(thenable())
                            }
                            return Promise.resolve(success)
                          })
                        }
                      }
                    },
                    reset: function reset() {
                      return this$1.reset()
                    }
                  }
                  return values(this.refs)
                    .concat(
                      Object.keys(this.persistedStore).map(function(key) {
                        return {
                          vid: key,
                          flags: this$1.persistedStore[key].flags,
                          messages: this$1.persistedStore[key].errors
                        }
                      }),
                      this.observers
                    )
                    .reduce(function(acc, provider) {
                      Object.keys(flagMergingStrategy).forEach(function(flag) {
                        var flags = provider.flags || provider.ctx
                        if (!(flag in acc)) {
                          acc[flag] = flags[flag]
                          return
                        }
                        acc[flag] = mergeFlags(acc[flag], flags[flag], flag)
                      })
                      acc.errors[provider.vid] =
                        provider.messages ||
                        values(provider.ctx.errors).reduce(function(
                          errs,
                          obsErrors
                        ) {
                          return errs.concat(obsErrors)
                        },
                        [])
                      return acc
                    }, ctx)
                }
              },
              created: function created() {
                if (this.$_veeObserver) {
                  this.$_veeObserver.subscribe(this, 'observer')
                }
              },
              activated: function activated() {
                if (this.$_veeObserver) {
                  this.$_veeObserver.subscribe(this, 'observer')
                }
              },
              deactivated: function deactivated() {
                if (this.$_veeObserver) {
                  this.$_veeObserver.unsubscribe(this, 'observer')
                }
              },
              beforeDestroy: function beforeDestroy() {
                if (this.$_veeObserver) {
                  this.$_veeObserver.unsubscribe(this, 'observer')
                }
              },
              render: function render(h) {
                var slots =
                  this.$slots['default'] || this.$scopedSlots['default'] || []
                if (isCallable(slots)) {
                  slots = slots(this.ctx)
                }
                return this.slim
                  ? createRenderless(h, slots)
                  : h(
                      this.tag,
                      { on: this.$listeners, attrs: this.$attrs },
                      slots
                    )
              },
              methods: {
                subscribe: function subscribe(subscriber, kind) {
                  var obj
                  if (kind === void 0) kind = 'provider'
                  if (kind === 'observer') {
                    this.observers.push(subscriber)
                    return
                  }
                  this.refs = Object.assign(
                    {},
                    this.refs,
                    ((obj = {}), (obj[subscriber.vid] = subscriber), obj)
                  )
                  if (
                    subscriber.persist &&
                    this.persistedStore[subscriber.vid]
                  ) {
                    this.restoreProviderState(subscriber)
                  }
                },
                unsubscribe: function unsubscribe(ref, kind) {
                  var vid = ref.vid
                  if (kind === void 0) kind = 'provider'
                  if (kind === 'provider') {
                    this.removeProvider(vid)
                  }
                  var idx = findIndex(this.observers, function(o) {
                    return o.vid === vid
                  })
                  if (idx !== -1) {
                    this.observers.splice(idx, 1)
                  }
                },
                validate: function validate(ref) {
                  if (ref === void 0) ref = { silent: false }
                  var silent = ref.silent
                  return Promise.all(
                    values(this.refs)
                      .map(function(ref) {
                        return ref[
                          silent ? 'validateSilent' : 'validate'
                        ]().then(function(r) {
                          return r.valid
                        })
                      })
                      .concat(
                        this.observers.map(function(obs) {
                          return obs.validate({ silent: silent })
                        })
                      )
                  ).then(function(results) {
                    return results.every(function(r) {
                      return r
                    })
                  })
                },
                reset: function reset() {
                  var this$1 = this
                  Object.keys(this.persistedStore).forEach(function(key) {
                    this$1.$delete(this$1.persistedStore, key)
                  })
                  return values(this.refs)
                    .concat(this.observers)
                    .forEach(function(ref) {
                      return ref.reset()
                    })
                },
                restoreProviderState: function restoreProviderState(provider) {
                  var state = this.persistedStore[provider.vid]
                  provider.setFlags(state.flags)
                  provider.applyResult(state)
                  this.$delete(this.persistedStore, provider.vid)
                },
                removeProvider: function removeProvider(vid) {
                  var obj
                  var provider = this.refs[vid] // save it for the next time.
                  if (provider && provider.persist) {
                    /* istanbul ignore else */ {
                      if (vid.indexOf('_vee_') === 0) {
                        warn(
                          'Please provide a `vid` prop when using `persist`, there might be unexpected issues otherwise.'
                        )
                      }
                    }
                    this.persistedStore = assign(
                      {},
                      this.persistedStore,
                      ((obj = {}),
                      (obj[vid] = {
                        flags: provider.flags,
                        errors: provider.messages,
                        failedRules: provider.failedRules
                      }),
                      obj)
                    )
                  }
                  this.$delete(this.refs, vid)
                }
              }
            }
            function withValidation(component, ctxToProps) {
              if (ctxToProps === void 0) ctxToProps = null
              var options = isCallable(component)
                ? component.options
                : component
              options.$__veeInject = false
              var hoc = {
                name: (options.name || 'AnonymousHoc') + 'WithValidation',
                props: assign({}, ValidationProvider.props),
                data: ValidationProvider.data,
                computed: assign({}, ValidationProvider.computed),
                methods: assign({}, ValidationProvider.methods),
                $__veeInject: false,
                beforeDestroy: ValidationProvider.beforeDestroy,
                inject: ValidationProvider.inject
              } // Default ctx converts ctx props to component props.
              if (!ctxToProps) {
                ctxToProps = function ctxToProps(ctx) {
                  return ctx
                }
              }
              var eventName = (options.model && options.model.event) || 'input'
              hoc.render = function(h) {
                var obj
                this.registerField()
                var vctx = createValidationCtx(this)
                var listeners = assign({}, this.$listeners)
                var model = findModel(this.$vnode)
                this._inputEventName =
                  this._inputEventName || getInputEventName(this.$vnode, model)
                onRenderUpdate.call(this, model)
                var ref = createCommonHandlers(this)
                var onInput = ref.onInput
                var onBlur = ref.onBlur
                var onValidate = ref.onValidate
                mergeVNodeListeners(listeners, eventName, onInput)
                mergeVNodeListeners(listeners, 'blur', onBlur)
                this.normalizedEvents.forEach(function(evt, idx) {
                  mergeVNodeListeners(listeners, evt, onValidate)
                }) // Props are any attrs not associated with ValidationProvider Plus the model prop.
                // WARNING: Accidental prop overwrite will probably happen.
                var ref$1 = findModelConfig(this.$vnode) || { prop: 'value' }
                var prop = ref$1.prop
                var props = assign(
                  {},
                  this.$attrs,
                  ((obj = {}), (obj[prop] = model.value), obj),
                  ctxToProps(vctx)
                )
                return h(
                  options,
                  { attrs: this.$attrs, props: props, on: listeners },
                  normalizeSlots(this.$slots, this.$vnode.context)
                )
              }
              return hoc
            }
            /**
             * Formates file size.
             *
             * @param {Number|String} size
             */ var formatFileSize = function formatFileSize(size) {
              var units = [
                'Byte',
                'KB',
                'MB',
                'GB',
                'TB',
                'PB',
                'EB',
                'ZB',
                'YB'
              ]
              var threshold = 1024
              size = Number(size) * threshold
              var i =
                size === 0
                  ? 0
                  : Math.floor(Math.log(size) / Math.log(threshold))
              return (
                (size / Math.pow(threshold, i)).toFixed(2) * 1 + ' ' + units[i]
              )
            }
            /**
             * Checks if vee-validate is defined globally.
             */ var isDefinedGlobally = function isDefinedGlobally() {
              return typeof VeeValidate !== 'undefined'
            }
            var obj
            var messages = {
              _default: function _default(field) {
                return 'The ' + field + ' value is not valid'
              },
              after: function after(field, ref) {
                var target = ref[0]
                var inclusion = ref[1]
                return (
                  'The ' +
                  field +
                  ' must be after ' +
                  (inclusion ? 'or equal to ' : '') +
                  target
                )
              },
              alpha: function alpha(field) {
                return (
                  'The ' +
                  field +
                  ' field may only contain alphabetic characters'
                )
              },
              alpha_dash: function alpha_dash(field) {
                return (
                  'The ' +
                  field +
                  ' field may contain alpha-numeric characters as well as dashes and underscores'
                )
              },
              alpha_num: function alpha_num(field) {
                return (
                  'The ' +
                  field +
                  ' field may only contain alpha-numeric characters'
                )
              },
              alpha_spaces: function alpha_spaces(field) {
                return (
                  'The ' +
                  field +
                  ' field may only contain alphabetic characters as well as spaces'
                )
              },
              before: function before(field, ref) {
                var target = ref[0]
                var inclusion = ref[1]
                return (
                  'The ' +
                  field +
                  ' must be before ' +
                  (inclusion ? 'or equal to ' : '') +
                  target
                )
              },
              between: function between(field, ref) {
                var min = ref[0]
                var max = ref[1]
                return (
                  'The ' +
                  field +
                  ' field must be between ' +
                  min +
                  ' and ' +
                  max
                )
              },
              confirmed: function confirmed(field) {
                return 'The ' + field + ' confirmation does not match'
              },
              credit_card: function credit_card(field) {
                return 'The ' + field + ' field is invalid'
              },
              date_between: function date_between(field, ref) {
                var min = ref[0]
                var max = ref[1]
                return (
                  'The ' + field + ' must be between ' + min + ' and ' + max
                )
              },
              date_format: function date_format(field, ref) {
                var format = ref[0]
                return 'The ' + field + ' must be in the format ' + format
              },
              decimal: function decimal(field, ref) {
                if (ref === void 0) ref = []
                var decimals = ref[0]
                if (decimals === void 0) decimals = '*'
                return (
                  'The ' +
                  field +
                  ' field must be numeric and may contain' +
                  (!decimals || decimals === '*' ? '' : ' ' + decimals) +
                  ' decimal points'
                )
              },
              digits: function digits(field, ref) {
                var length = ref[0]
                return (
                  'The ' +
                  field +
                  ' field must be numeric and contains exactly ' +
                  length +
                  ' digits'
                )
              },
              dimensions: function dimensions(field, ref) {
                var width = ref[0]
                var height = ref[1]
                return (
                  'The ' +
                  field +
                  ' field must be ' +
                  width +
                  ' pixels by ' +
                  height +
                  ' pixels'
                )
              },
              email: function email(field) {
                return 'The ' + field + ' field must be a valid email'
              },
              excluded: function excluded(field) {
                return 'The ' + field + ' field must be a valid value'
              },
              ext: function ext(field) {
                return 'The ' + field + ' field must be a valid file'
              },
              image: function image(field) {
                return 'The ' + field + ' field must be an image'
              },
              included: function included(field) {
                return 'The ' + field + ' field must be a valid value'
              },
              integer: function integer(field) {
                return 'The ' + field + ' field must be an integer'
              },
              ip: function ip(field) {
                return 'The ' + field + ' field must be a valid ip address'
              },
              ip_or_fqdn: function ip_or_fqdn(field) {
                return (
                  'The ' + field + ' field must be a valid ip address or FQDN'
                )
              },
              length: function length(field, ref) {
                var length = ref[0]
                var max = ref[1]
                if (max) {
                  return (
                    'The ' +
                    field +
                    ' length must be between ' +
                    length +
                    ' and ' +
                    max
                  )
                }
                return 'The ' + field + ' length must be ' + length
              },
              max: function max(field, ref) {
                var length = ref[0]
                return (
                  'The ' +
                  field +
                  ' field may not be greater than ' +
                  length +
                  ' characters'
                )
              },
              max_value: function max_value(field, ref) {
                var max = ref[0]
                return 'The ' + field + ' field must be ' + max + ' or less'
              },
              mimes: function mimes(field) {
                return 'The ' + field + ' field must have a valid file type'
              },
              min: function min(field, ref) {
                var length = ref[0]
                return (
                  'The ' +
                  field +
                  ' field must be at least ' +
                  length +
                  ' characters'
                )
              },
              min_value: function min_value(field, ref) {
                var min = ref[0]
                return 'The ' + field + ' field must be ' + min + ' or more'
              },
              numeric: function numeric(field) {
                return (
                  'The ' + field + ' field may only contain numeric characters'
                )
              },
              regex: function regex(field) {
                return 'The ' + field + ' field format is invalid'
              },
              required: function required(field) {
                return 'The ' + field + ' field is required'
              },
              required_if: function required_if(field, ref) {
                var target = ref[0]
                return (
                  'The ' +
                  field +
                  ' field is required when the ' +
                  target +
                  ' field has this value'
                )
              },
              size: function size(field, ref) {
                var size = ref[0]
                return (
                  'The ' +
                  field +
                  ' size must be less than ' +
                  formatFileSize(size)
                )
              },
              url: function url(field) {
                return 'The ' + field + ' field is not a valid URL'
              }
            }
            var locale$1 = { name: 'en', messages: messages, attributes: {} }
            if (isDefinedGlobally()) {
              // eslint-disable-next-line
              VeeValidate.Validator.localize(
                ((obj = {}), (obj[locale$1.name] = locale$1), obj)
              )
            } // rules plugin definition.
            Object.keys(Rules).forEach(function(rule) {
              VeeValidate$1.Validator.extend(
                rule,
                Rules[rule].validate,
                assign({}, Rules[rule].options, {
                  paramNames: Rules[rule].paramNames
                })
              )
            }) // Merge the english messages.
            VeeValidate$1.Validator.localize({ en: locale$1 })
            VeeValidate$1.version = '2.2.15'
            VeeValidate$1.Rules = Rules
            VeeValidate$1.mapFields = mapFields
            VeeValidate$1.ValidationProvider = ValidationProvider
            VeeValidate$1.ValidationObserver = ValidationObserver
            VeeValidate$1.withValidation = withValidation
            return VeeValidate$1
          })
        }.apply(this, arguments))
      },
      {}
    ],
    229: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/vue-cookies/vue-cookies.js',
          module
        )
        ;(function() {
          /**
           * Vue Cookies v1.6.1
           * https://github.com/cmp-cc/vue-cookies
           *
           * Copyright 2016, cmp-cc
           * Released under the MIT license
           */ ;(function() {
            var defaultConfig = {
              expires: '1d',
              path: '; path=/',
              domain: '',
              secure: ''
            }
            var VueCookies = {
              // install of Vue
              install: function install(Vue) {
                Vue.prototype.$cookies = this
                Vue.$cookies = this
              },
              config: function config(expireTimes, path, domain, secure) {
                defaultConfig.expires = expireTimes ? expireTimes : '1d'
                defaultConfig.path = path ? '; path=' + path : '; path=/'
                defaultConfig.domain = domain ? '; domain=' + domain : ''
                defaultConfig.secure = secure ? '; secure' : ''
              },
              get: function get(key) {
                var value =
                  decodeURIComponent(
                    document.cookie.replace(
                      new RegExp(
                        '(?:(?:^|.*;)\\s*' +
                          encodeURIComponent(key).replace(
                            /[\-\.\+\*]/g,
                            '\\$&'
                          ) +
                          '\\s*\\=\\s*([^;]*).*$)|^.*$'
                      ),
                      '$1'
                    )
                  ) || null
                if (
                  value &&
                  value.substring(0, 1) === '{' &&
                  value.substring(value.length - 1, value.length) === '}'
                ) {
                  try {
                    value = JSON.parse(value)
                  } catch (e) {
                    return value
                  }
                }
                return value
              },
              set: function set(key, value, expireTimes, path, domain, secure) {
                if (!key) {
                  throw new Error('cookie name is not find in first argument')
                } else if (
                  /^(?:expires|max\-age|path|domain|secure)$/i.test(key)
                ) {
                  throw new Error(
                    "cookie key name illegality ,Cannot be set to ['expires','max-age','path','domain','secure']\t",
                    'current key name: ' + key
                  )
                } // support json object
                if (value && value.constructor === Object) {
                  value = JSON.stringify(value)
                }
                var _expires = ''
                expireTimes =
                  expireTimes === undefined
                    ? defaultConfig.expires
                    : expireTimes
                if (expireTimes && expireTimes != 0) {
                  switch (expireTimes.constructor) {
                    case Number:
                      if (expireTimes === Infinity || expireTimes === -1)
                        _expires = '; expires=Fri, 31 Dec 9999 23:59:59 GMT'
                      else _expires = '; max-age=' + expireTimes
                      break
                    case String:
                      if (/^(?:\d{1,}(y|m|d|h|min|s))$/i.test(expireTimes)) {
                        // get capture number group
                        var _expireTime = expireTimes.replace(
                          /^(\d{1,})(?:y|m|d|h|min|s)$/i,
                          '$1'
                        ) // get capture type group , to lower case
                        switch (
                          expireTimes
                            .replace(/^(?:\d{1,})(y|m|d|h|min|s)$/i, '$1')
                            .toLowerCase() // Frequency sorting
                        ) {
                          case 'm':
                            _expires = '; max-age=' + +_expireTime * 2592000
                            break // 60 * 60 * 24 * 30
                          case 'd':
                            _expires = '; max-age=' + +_expireTime * 86400
                            break // 60 * 60 * 24
                          case 'h':
                            _expires = '; max-age=' + +_expireTime * 3600
                            break // 60 * 60
                          case 'min':
                            _expires = '; max-age=' + +_expireTime * 60
                            break // 60
                          case 's':
                            _expires = '; max-age=' + _expireTime
                            break
                          case 'y':
                            _expires = '; max-age=' + +_expireTime * 31104000
                            break // 60 * 60 * 24 * 30 * 12
                          default:
                            new Error("unknown exception of 'set operation'")
                        }
                      } else {
                        _expires = '; expires=' + expireTimes
                      }
                      break
                    case Date:
                      _expires = '; expires=' + expireTimes.toUTCString()
                      break
                  }
                }
                document.cookie =
                  encodeURIComponent(key) +
                  '=' +
                  encodeURIComponent(value) +
                  _expires +
                  (domain ? '; domain=' + domain : defaultConfig.domain) +
                  (path ? '; path=' + path : defaultConfig.path) +
                  (secure === undefined
                    ? defaultConfig.secure
                    : secure
                    ? '; secure'
                    : '')
                return this
              },
              remove: function remove(key, path, domain) {
                if (!key || !this.isKey(key)) {
                  return false
                }
                document.cookie =
                  encodeURIComponent(key) +
                  '=; expires=Thu, 01 Jan 1970 00:00:00 GMT' +
                  (domain ? '; domain=' + domain : defaultConfig.domain) +
                  (path ? '; path=' + path : defaultConfig.path)
                return this
              },
              isKey: function isKey(key) {
                return new RegExp(
                  '(?:^|;\\s*)' +
                    encodeURIComponent(key).replace(/[\-\.\+\*]/g, '\\$&') +
                    '\\s*\\='
                ).test(document.cookie)
              },
              keys: function keys() {
                if (!document.cookie) return []
                var _keys = document.cookie
                  .replace(
                    /((?:^|\s*;)[^\=]+)(?=;|$)|^\s*|\s*(?:\=[^;]*)?(?:\1|$)/g,
                    ''
                  )
                  .split(/\s*(?:\=[^;]*)?;\s*/)
                for (var _index = 0; _index < _keys.length; _index++) {
                  _keys[_index] = decodeURIComponent(_keys[_index])
                }
                return _keys
              }
            }
            if ((0, _typeof3['default'])(exports) == 'object') {
              module.exports = VueCookies
            } else if (typeof define == 'function' && define.amd) {
              define([], function() {
                return VueCookies
              })
            } else if (window.Vue) {
              Vue.use(VueCookies)
            } // vue-cookies can exist independently,no dependencies library
            if (typeof window !== 'undefined') {
              window.$cookies = VueCookies
            }
          })()
        }.apply(this, arguments))
      },
      {}
    ],
    230: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/vue-hot-reload-api/dist/index.js',
          module
        )
        ;(function() {
          var Vue // late bind
          var version
          var map = Object.create(null)
          if (typeof window !== 'undefined') {
            window.__VUE_HOT_MAP__ = map
          }
          var installed = false
          var isBrowserify = false
          var initHookName = 'beforeCreate'
          exports.install = function(vue, browserify) {
            if (installed) {
              return
            }
            installed = true
            Vue = vue.__esModule ? vue['default'] : vue
            version = Vue.version.split('.').map(Number)
            isBrowserify = browserify // compat with < 2.0.0-alpha.7
            if (Vue.config._lifecycleHooks.indexOf('init') > -1) {
              initHookName = 'init'
            }
            exports.compatible = version[0] >= 2
            if (!exports.compatible) {
              console.warn(
                '[HMR] You are using a version of vue-hot-reload-api that is ' +
                  'only compatible with Vue.js core ^2.0.0.'
              )
              return
            }
          }
          /**
           * Create a record for a hot module, which keeps track of its constructor
           * and instances
           *
           * @param {String} id
           * @param {Object} options
           */ exports.createRecord = function(id, options) {
            if (map[id]) {
              return
            }
            var Ctor = null
            if (typeof options === 'function') {
              Ctor = options
              options = Ctor.options
            }
            makeOptionsHot(id, options)
            map[id] = { Ctor: Ctor, options: options, instances: [] }
          }
          /**
           * Check if module is recorded
           *
           * @param {String} id
           */ exports.isRecorded = function(id) {
            return typeof map[id] !== 'undefined'
          }
          /**
           * Make a Component options object hot.
           *
           * @param {String} id
           * @param {Object} options
           */ function makeOptionsHot(id, options) {
            if (options.functional) {
              var render = options.render
              options.render = function(h, ctx) {
                var instances = map[id].instances
                if (ctx && instances.indexOf(ctx.parent) < 0) {
                  instances.push(ctx.parent)
                }
                return render(h, ctx)
              }
            } else {
              injectHook(options, initHookName, function() {
                var record = map[id]
                if (!record.Ctor) {
                  record.Ctor = this.constructor
                }
                record.instances.push(this)
              })
              injectHook(options, 'beforeDestroy', function() {
                var instances = map[id].instances
                instances.splice(instances.indexOf(this), 1)
              })
            }
          }
          /**
           * Inject a hook to a hot reloadable component so that
           * we can keep track of it.
           *
           * @param {Object} options
           * @param {String} name
           * @param {Function} hook
           */ function injectHook(options, name, hook) {
            var existing = options[name]
            options[name] = existing
              ? Array.isArray(existing)
                ? existing.concat(hook)
                : [existing, hook]
              : [hook]
          }
          function tryWrap(fn) {
            return function(id, arg) {
              try {
                fn(id, arg)
              } catch (e) {
                console.error(e)
                console.warn(
                  'Something went wrong during Vue component hot-reload. Full reload required.'
                )
              }
            }
          }
          function updateOptions(oldOptions, newOptions) {
            for (var key in oldOptions) {
              if (!(key in newOptions)) {
                delete oldOptions[key]
              }
            }
            for (var key$1 in newOptions) {
              oldOptions[key$1] = newOptions[key$1]
            }
          }
          exports.rerender = tryWrap(function(id, options) {
            var record = map[id]
            if (!options) {
              record.instances.slice().forEach(function(instance) {
                instance.$forceUpdate()
              })
              return
            }
            if (typeof options === 'function') {
              options = options.options
            }
            if (record.Ctor) {
              record.Ctor.options.render = options.render
              record.Ctor.options.staticRenderFns = options.staticRenderFns
              record.instances.slice().forEach(function(instance) {
                instance.$options.render = options.render
                instance.$options.staticRenderFns = options.staticRenderFns // reset static trees
                // pre 2.5, all static trees are cached together on the instance
                if (instance._staticTrees) {
                  instance._staticTrees = []
                } // 2.5.0
                if (Array.isArray(record.Ctor.options.cached)) {
                  record.Ctor.options.cached = []
                } // 2.5.3
                if (Array.isArray(instance.$options.cached)) {
                  instance.$options.cached = []
                } // post 2.5.4: v-once trees are cached on instance._staticTrees.
                // Pure static trees are cached on the staticRenderFns array
                // (both already reset above)
                // 2.6: temporarily mark rendered scoped slots as unstable so that
                // child components can be forced to update
                var restore = patchScopedSlots(instance)
                instance.$forceUpdate()
                instance.$nextTick(restore)
              })
            } else {
              // functional or no instance created yet
              record.options.render = options.render
              record.options.staticRenderFns = options.staticRenderFns // handle functional component re-render
              if (record.options.functional) {
                // rerender with full options
                if (Object.keys(options).length > 2) {
                  updateOptions(record.options, options)
                } else {
                  // template-only rerender.
                  // need to inject the style injection code for CSS modules
                  // to work properly.
                  var injectStyles = record.options._injectStyles
                  if (injectStyles) {
                    var render = options.render
                    record.options.render = function(h, ctx) {
                      injectStyles.call(ctx)
                      return render(h, ctx)
                    }
                  }
                }
                record.options._Ctor = null // 2.5.3
                if (Array.isArray(record.options.cached)) {
                  record.options.cached = []
                }
                record.instances.slice().forEach(function(instance) {
                  instance.$forceUpdate()
                })
              }
            }
          })
          exports.reload = tryWrap(function(id, options) {
            var record = map[id]
            if (options) {
              if (typeof options === 'function') {
                options = options.options
              }
              makeOptionsHot(id, options)
              if (record.Ctor) {
                if (version[1] < 2) {
                  // preserve pre 2.2 behavior for global mixin handling
                  record.Ctor.extendOptions = options
                }
                var newCtor = record.Ctor['super'].extend(options) // prevent record.options._Ctor from being overwritten accidentally
                newCtor.options._Ctor = record.options._Ctor
                record.Ctor.options = newCtor.options
                record.Ctor.cid = newCtor.cid
                record.Ctor.prototype = newCtor.prototype
                if (newCtor.release) {
                  // temporary global mixin strategy used in < 2.0.0-alpha.6
                  newCtor.release()
                }
              } else {
                updateOptions(record.options, options)
              }
            }
            record.instances.slice().forEach(function(instance) {
              if (instance.$vnode && instance.$vnode.context) {
                instance.$vnode.context.$forceUpdate()
              } else {
                console.warn(
                  'Root or manually mounted instance modified. Full reload required.'
                )
              }
            })
          }) // 2.6 optimizes template-compiled scoped slots and skips updates if child
          // only uses scoped slots. We need to patch the scoped slots resolving helper
          // to temporarily mark all scoped slots as unstable in order to force child
          // updates.
          function patchScopedSlots(instance) {
            if (!instance._u) {
              return
            } // https://github.com/vuejs/vue/blob/dev/src/core/instance/render-helpers/resolve-scoped-slots.js
            var original = instance._u
            instance._u = function(slots) {
              try {
                // 2.6.4 ~ 2.6.6
                return original(slots, true)
              } catch (e) {
                // 2.5 / >= 2.6.7
                return original(slots, null, true)
              }
            }
            return function() {
              instance._u = original
            }
          }
        }.apply(this, arguments))
      },
      {}
    ],
    231: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/vue-owl-carousel/dist/vue-owl-carousel.js',
          module
        )
        ;(function() {
          !(function(e, t) {
            'object' == (0, _typeof3['default'])(exports) &&
            'object' == (0, _typeof3['default'])(module)
              ? (module.exports = t())
              : 'function' == typeof define && define.amd
              ? define('vue-owl-carousel', [], t)
              : 'object' == (0, _typeof3['default'])(exports)
              ? (exports['vue-owl-carousel'] = t())
              : (e['vue-owl-carousel'] = t())
          })(this, function() {
            return (function(e) {
              function t(i) {
                if (n[i]) return n[i].exports
                var r = (n[i] = { exports: {}, id: i, loaded: !1 })
                return (
                  e[i].call(r.exports, r, r.exports, t),
                  (r.loaded = !0),
                  r.exports
                )
              }
              var n = {}
              return (t.m = e), (t.c = n), (t.p = ''), t(0)
            })([
              function(e, t, n) {
                var i = n(1)(n(2), n(15), null, null)
                e.exports = i.exports
              },
              function(e, t) {
                e.exports = function(e, t, n, i) {
                  var r,
                    o = (e = e || {}),
                    s = (0, _typeof3['default'])(e['default'])
                  ;('object' !== s && 'function' !== s) ||
                    ((r = e), (o = e['default']))
                  var a = 'function' == typeof o ? o.options : o
                  if (
                    (t &&
                      ((a.render = t.render),
                      (a.staticRenderFns = t.staticRenderFns)),
                    n && (a._scopeId = n),
                    i)
                  ) {
                    var l = Object.create(a.computed || null)
                    Object.keys(i).forEach(function(e) {
                      var t = i[e]
                      l[e] = function() {
                        return t
                      }
                    }),
                      (a.computed = l)
                  }
                  return { esModule: r, exports: o, options: a }
                }
              },
              function(e, t, n) {
                ;(function(e) {
                  'use strict'
                  function i(e) {
                    return e && e.__esModule ? e : { default: e }
                  }
                  Object.defineProperty(t, '__esModule', { value: !0 }),
                    n(4),
                    n(11),
                    n(13)
                  var r = n(14),
                    o = i(r)
                  t['default'] = {
                    name: 'VOwlCarousel',
                    props: {
                      items: { type: Number, default: 3 },
                      margin: { type: Number, default: 0 },
                      loop: { type: Boolean, default: !1 },
                      center: { type: Boolean, default: !1 },
                      mouseDrag: { type: Boolean, default: !0 },
                      touchDrag: { type: Boolean, default: !0 },
                      pullDrag: { type: Boolean, default: !0 },
                      freeDrag: { type: Boolean, default: !1 },
                      stagePadding: { type: Number, default: 0 },
                      merge: { type: Boolean, default: !1 },
                      mergeFit: { type: Boolean, default: !1 },
                      autoWidth: { type: Boolean, default: !1 },
                      startPosition: { type: Number, default: 0 },
                      uRLhashListener: { type: Boolean, default: !1 },
                      nav: { type: Boolean, default: !0 },
                      rewind: { type: Boolean, default: !0 },
                      navText: {
                        type: Array,
                        default: function _default() {
                          return ['next', 'prev']
                        }
                      },
                      navElement: { type: String, default: 'div' },
                      slideBy: { type: [Number, String], default: 1 },
                      slideTransition: { type: String, default: '' },
                      dots: { type: Boolean, default: !0 },
                      dotsEach: { type: [Number, Boolean], default: !1 },
                      dotsData: { type: Boolean, default: !1 },
                      lazyLoad: { type: Boolean, default: !1 },
                      lazyLoadEager: { type: Number, default: 0 },
                      autoplay: { type: Boolean, default: !1 },
                      autoplaySpeed: { type: Boolean, default: !1 },
                      autoplayTimeout: { type: Number, default: 5e3 },
                      autoplayHoverPause: { type: Boolean, default: !1 },
                      smartSpeed: { type: Number, default: 250 },
                      fluidSpeed: { type: [Number, Boolean], default: !1 },
                      navSpeed: { type: [Number, Boolean], default: !1 },
                      dragEndSpeed: { type: [Number, Boolean], default: !1 },
                      callbacks: { type: Boolean, default: !0 },
                      responsive: {
                        type: Object,
                        default: function _default() {}
                      },
                      responsiveRefreshRate: { type: Number, default: 200 },
                      video: { type: Boolean, default: !1 },
                      videoHeight: { type: [Number, Boolean], default: !1 },
                      videoWidth: { type: [Number, Boolean], default: !1 },
                      animateOut: { type: [String, Boolean], default: !1 },
                      animateIn: { type: [String, Boolean], default: !1 },
                      fallbackEasing: { type: String, default: 'swing' },
                      info: { type: Function, default: function _default() {} },
                      itemElement: { type: String, default: 'div' },
                      stageElement: { type: String, default: 'div' },
                      navContainer: { type: [String, Boolean], default: !1 },
                      dotsContainer: { type: [String, Boolean], default: !1 },
                      checkVisible: { type: Boolean, default: !0 }
                    },
                    data: function data() {
                      return {
                        showPrev: !1,
                        showNext: !0,
                        prevHandler: 'carousel_prev_' + this.generateUniqueId(),
                        elementHandle: 'carousel_' + this.generateUniqueId(),
                        nextHandler: 'carousel_next_' + this.generateUniqueId()
                      }
                    },
                    mounted: function mounted() {
                      var t = this,
                        n = e('#' + this.elementHandle).owlCarousel({
                          items: this.items,
                          margin: this.margin,
                          loop: this.loop,
                          center: this.center,
                          mouseDrag: this.mouseDrag,
                          touchDrag: this.touchDrag,
                          pullDrag: this.pullDrag,
                          freeDrag: this.freeDrag,
                          stagePadding: this.stagePadding,
                          merge: this.merge,
                          mergeFit: this.mergeFit,
                          autoWidth: this.autoWidth,
                          startPosition: this.startPosition,
                          uRLhashListener: this.uRLhashListener,
                          nav: this.nav,
                          rewind: this.rewind,
                          navText: this.navText,
                          navElement: this.navElement,
                          slideBy: this.slideBy,
                          slideTransition: this.slideTransition,
                          dots: this.dots,
                          dotsEach: this.dotsEach,
                          dotsData: this.dotsData,
                          lazyLoad: this.lazyLoad,
                          lazyLoadEager: this.lazyLoadEager,
                          autoplay: this.autoplay,
                          autoplaySpeed: this.autoplaySpeed,
                          autoplayTimeout: this.autoplayTimeout,
                          autoplayHoverPause: this.autoplayHoverPause,
                          smartSpeed: this.smartSpeed,
                          fluidSpeed: this.fluidSpeed,
                          navSpeed: this.navSpeed,
                          dragEndSpeed: this.dragEndSpeed,
                          callbacks: this.callbacks,
                          responsive: this.responsive,
                          responsiveRefreshRate: this.responsiveRefreshRate,
                          video: this.video,
                          videoHeight: this.videoHeight,
                          videoWidth: this.videoWidth,
                          animateOut: this.animateOut,
                          animateIn: this.animateIn,
                          fallbackEasing: this.fallbackEasing,
                          info: this.info,
                          itemElement: this.itemElement,
                          stageElement: this.stageElement,
                          navContainer: this.navContainer,
                          dotsContainer: this.dotsContainer,
                          checkVisible: this.checkVisible
                        })
                      e('#' + this.prevHandler).click(function() {
                        n.trigger('prev.owl.carousel')
                      }),
                        e('#' + this.nextHandler).click(function() {
                          n.trigger('next.owl.carousel')
                        }),
                        o['default'].forEach(function(e) {
                          n.on(e + '.owl.carousel', function(n) {
                            t.$emit(e, n)
                          })
                        }),
                        this.loop ||
                          n.on('changed.owl.carousel', function(e) {
                            if (0 === e.item.index)
                              (t.showPrev = !1), (t.showNext = !0)
                            else {
                              var n = Math.floor(e.item.index + e.page.size)
                              n === e.item.count
                                ? ((t.showPrev = !0), (t.showNext = !1))
                                : ((t.showPrev = !0), (t.showNext = !0))
                            }
                          })
                    },
                    methods: {
                      generateUniqueId: function generateUniqueId() {
                        return Math.random()
                          .toString(36)
                          .substring(2, 15)
                      }
                    }
                  }
                }.call(t, n(3)))
              },
              function(e, t, n) {
                var i, r
                /*!
                 * jQuery JavaScript Library v3.3.1
                 * https://jquery.com/
                 *
                 * Includes Sizzle.js
                 * https://sizzlejs.com/
                 *
                 * Copyright JS Foundation and other contributors
                 * Released under the MIT license
                 * https://jquery.org/license
                 *
                 * Date: 2018-01-20T17:24Z
                 */ !(function(t, n) {
                  'use strict'
                  'object' == (0, _typeof3['default'])(e) &&
                  'object' == (0, _typeof3['default'])(e.exports)
                    ? (e.exports = t.document
                        ? n(t, !0)
                        : function(e) {
                            if (!e.document)
                              throw new Error(
                                'jQuery requires a window with a document'
                              )
                            return n(e)
                          })
                    : n(t)
                })('undefined' != typeof window ? window : this, function(
                  n,
                  o
                ) {
                  'use strict'
                  function s(e, t, n) {
                    t = t || ce
                    var i,
                      r = t.createElement('script')
                    if (((r.text = e), n))
                      for (i in Te) {
                        n[i] && (r[i] = n[i])
                      }
                    t.head.appendChild(r).parentNode.removeChild(r)
                  }
                  function a(e) {
                    return null == e
                      ? e + ''
                      : 'object' == (0, _typeof3['default'])(e) ||
                        'function' == typeof e
                      ? me[ve.call(e)] || 'object'
                      : (0, _typeof3['default'])(e)
                  }
                  function l(e) {
                    var t = !!e && 'length' in e && e.length,
                      n = a(e)
                    return (
                      !_e(e) &&
                      !Ce(e) &&
                      ('array' === n ||
                        0 === t ||
                        ('number' == typeof t && t > 0 && t - 1 in e))
                    )
                  }
                  function u(e, t) {
                    return (
                      e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase()
                    )
                  }
                  function c(e, t, n) {
                    return _e(t)
                      ? ke.grep(e, function(e, i) {
                          return !!t.call(e, i, e) !== n
                        })
                      : t.nodeType
                      ? ke.grep(e, function(e) {
                          return (e === t) !== n
                        })
                      : 'string' != typeof t
                      ? ke.grep(e, function(e) {
                          return ge.call(t, e) > -1 !== n
                        })
                      : ke.filter(t, e, n)
                  }
                  function h(e, t) {
                    for (; (e = e[t]) && 1 !== e.nodeType; ) {}
                    return e
                  }
                  function p(e) {
                    var t = {}
                    return (
                      ke.each(e.match(qe) || [], function(e, n) {
                        t[n] = !0
                      }),
                      t
                    )
                  }
                  function d(e) {
                    return e
                  }
                  function f(e) {
                    throw e
                  }
                  function g(e, t, n, i) {
                    var r
                    try {
                      e && _e((r = e.promise))
                        ? r
                            .call(e)
                            .done(t)
                            .fail(n)
                        : e && _e((r = e.then))
                        ? r.call(e, t, n)
                        : t.apply(void 0, [e].slice(i))
                    } catch (e) {
                      n.apply(void 0, [e])
                    }
                  }
                  function m() {
                    ce.removeEventListener('DOMContentLoaded', m),
                      n.removeEventListener('load', m),
                      ke.ready()
                  }
                  function v(e, t) {
                    return t.toUpperCase()
                  }
                  function y(e) {
                    return e.replace(Be, 'ms-').replace(We, v)
                  }
                  function w() {
                    this.expando = ke.expando + w.uid++
                  }
                  function x(e) {
                    return (
                      'true' === e ||
                      ('false' !== e &&
                        ('null' === e
                          ? null
                          : e === +e + ''
                          ? +e
                          : Xe.test(e)
                          ? JSON.parse(e)
                          : e))
                    )
                  }
                  function b(e, t, n) {
                    var i
                    if (void 0 === n && 1 === e.nodeType)
                      if (
                        ((i = 'data-' + t.replace(Ye, '-$&').toLowerCase()),
                        (n = e.getAttribute(i)),
                        'string' == typeof n)
                      ) {
                        try {
                          n = x(n)
                        } catch (r) {}
                        Ve.set(e, t, n)
                      } else n = void 0
                    return n
                  }
                  function _(e, t, n, i) {
                    var r,
                      o,
                      s = 20,
                      a = i
                        ? function() {
                            return i.cur()
                          }
                        : function() {
                            return ke.css(e, t, '')
                          },
                      l = a(),
                      u = (n && n[3]) || (ke.cssNumber[t] ? '' : 'px'),
                      c =
                        (ke.cssNumber[t] || ('px' !== u && +l)) &&
                        Ze.exec(ke.css(e, t))
                    if (c && c[3] !== u) {
                      for (l /= 2, u = u || c[3], c = +l || 1; s--; ) {
                        ke.style(e, t, c + u),
                          (1 - o) * (1 - (o = a() / l || 0.5)) <= 0 && (s = 0),
                          (c /= o)
                      }
                      ;(c = 2 * c), ke.style(e, t, c + u), (n = n || [])
                    }
                    return (
                      n &&
                        ((c = +c || +l || 0),
                        (r = n[1] ? c + (n[1] + 1) * n[2] : +n[2]),
                        i && ((i.unit = u), (i.start = c), (i.end = r))),
                      r
                    )
                  }
                  function C(e) {
                    var t,
                      n = e.ownerDocument,
                      i = e.nodeName,
                      r = et[i]
                    return r
                      ? r
                      : ((t = n.body.appendChild(n.createElement(i))),
                        (r = ke.css(t, 'display')),
                        t.parentNode.removeChild(t),
                        'none' === r && (r = 'block'),
                        (et[i] = r),
                        r)
                  }
                  function T(e, t) {
                    for (var n, i, r = [], o = 0, s = e.length; o < s; o++) {
                      ;(i = e[o]),
                        i.style &&
                          ((n = i.style.display),
                          t
                            ? ('none' === n &&
                                ((r[o] = Ue.get(i, 'display') || null),
                                r[o] || (i.style.display = '')),
                              '' === i.style.display && Qe(i) && (r[o] = C(i)))
                            : 'none' !== n &&
                              ((r[o] = 'none'), Ue.set(i, 'display', n)))
                    }
                    for (o = 0; o < s; o++) {
                      null != r[o] && (e[o].style.display = r[o])
                    }
                    return e
                  }
                  function E(e, t) {
                    var n
                    return (
                      (n =
                        'undefined' != typeof e.getElementsByTagName
                          ? e.getElementsByTagName(t || '*')
                          : 'undefined' != typeof e.querySelectorAll
                          ? e.querySelectorAll(t || '*')
                          : []),
                      void 0 === t || (t && u(e, t)) ? ke.merge([e], n) : n
                    )
                  }
                  function k(e, t) {
                    for (var n = 0, i = e.length; n < i; n++) {
                      Ue.set(
                        e[n],
                        'globalEval',
                        !t || Ue.get(t[n], 'globalEval')
                      )
                    }
                  }
                  function S(e, t, n, i, r) {
                    for (
                      var o,
                        s,
                        l,
                        u,
                        c,
                        h,
                        p = t.createDocumentFragment(),
                        d = [],
                        f = 0,
                        g = e.length;
                      f < g;
                      f++
                    ) {
                      if (((o = e[f]), o || 0 === o))
                        if ('object' === a(o)) ke.merge(d, o.nodeType ? [o] : o)
                        else if (ot.test(o)) {
                          for (
                            s = s || p.appendChild(t.createElement('div')),
                              l = (nt.exec(o) || ['', ''])[1].toLowerCase(),
                              u = rt[l] || rt._default,
                              s.innerHTML = u[1] + ke.htmlPrefilter(o) + u[2],
                              h = u[0];
                            h--;

                          ) {
                            s = s.lastChild
                          }
                          ke.merge(d, s.childNodes),
                            (s = p.firstChild),
                            (s.textContent = '')
                        } else d.push(t.createTextNode(o))
                    }
                    for (p.textContent = '', f = 0; (o = d[f++]); ) {
                      if (i && ke.inArray(o, i) > -1) r && r.push(o)
                      else if (
                        ((c = ke.contains(o.ownerDocument, o)),
                        (s = E(p.appendChild(o), 'script')),
                        c && k(s),
                        n)
                      )
                        for (h = 0; (o = s[h++]); ) {
                          it.test(o.type || '') && n.push(o)
                        }
                    }
                    return p
                  }
                  function D() {
                    return !0
                  }
                  function N() {
                    return !1
                  }
                  function j() {
                    try {
                      return ce.activeElement
                    } catch (e) {}
                  }
                  function A(e, t, n, i, r, o) {
                    var s, a
                    if ('object' == (0, _typeof3['default'])(t)) {
                      'string' != typeof n && ((i = i || n), (n = void 0))
                      for (a in t) {
                        A(e, a, n, i, t[a], o)
                      }
                      return e
                    }
                    if (
                      (null == i && null == r
                        ? ((r = n), (i = n = void 0))
                        : null == r &&
                          ('string' == typeof n
                            ? ((r = i), (i = void 0))
                            : ((r = i), (i = n), (n = void 0))),
                      r === !1)
                    )
                      r = N
                    else if (!r) return e
                    return (
                      1 === o &&
                        ((s = r),
                        (r = function r(e) {
                          return ke().off(e), s.apply(this, arguments)
                        }),
                        (r.guid = s.guid || (s.guid = ke.guid++))),
                      e.each(function() {
                        ke.event.add(this, t, r, i, n)
                      })
                    )
                  }
                  function $(e, t) {
                    return u(e, 'table') &&
                      u(11 !== t.nodeType ? t : t.firstChild, 'tr')
                      ? ke(e).children('tbody')[0] || e
                      : e
                  }
                  function L(e) {
                    return (
                      (e.type =
                        (null !== e.getAttribute('type')) + '/' + e.type),
                      e
                    )
                  }
                  function z(e) {
                    return (
                      'true/' === (e.type || '').slice(0, 5)
                        ? (e.type = e.type.slice(5))
                        : e.removeAttribute('type'),
                      e
                    )
                  }
                  function O(e, t) {
                    var n, i, r, o, s, a, l, u
                    if (1 === t.nodeType) {
                      if (
                        Ue.hasData(e) &&
                        ((o = Ue.access(e)), (s = Ue.set(t, o)), (u = o.events))
                      ) {
                        delete s.handle, (s.events = {})
                        for (r in u) {
                          for (n = 0, i = u[r].length; n < i; n++) {
                            ke.event.add(t, r, u[r][n])
                          }
                        }
                      }
                      Ve.hasData(e) &&
                        ((a = Ve.access(e)),
                        (l = ke.extend({}, a)),
                        Ve.set(t, l))
                    }
                  }
                  function P(e, t) {
                    var n = t.nodeName.toLowerCase()
                    'input' === n && tt.test(e.type)
                      ? (t.checked = e.checked)
                      : ('input' !== n && 'textarea' !== n) ||
                        (t.defaultValue = e.defaultValue)
                  }
                  function H(e, t, n, i) {
                    t = de.apply([], t)
                    var r,
                      o,
                      a,
                      l,
                      u,
                      c,
                      h = 0,
                      p = e.length,
                      d = p - 1,
                      f = t[0],
                      g = _e(f)
                    if (
                      g ||
                      (p > 1 &&
                        'string' == typeof f &&
                        !be.checkClone &&
                        pt.test(f))
                    )
                      return e.each(function(r) {
                        var o = e.eq(r)
                        g && (t[0] = f.call(this, r, o.html())), H(o, t, n, i)
                      })
                    if (
                      p &&
                      ((r = S(t, e[0].ownerDocument, !1, e, i)),
                      (o = r.firstChild),
                      1 === r.childNodes.length && (r = o),
                      o || i)
                    ) {
                      for (
                        a = ke.map(E(r, 'script'), L), l = a.length;
                        h < p;
                        h++
                      ) {
                        ;(u = r),
                          h !== d &&
                            ((u = ke.clone(u, !0, !0)),
                            l && ke.merge(a, E(u, 'script'))),
                          n.call(e[h], u, h)
                      }
                      if (l)
                        for (
                          c = a[a.length - 1].ownerDocument,
                            ke.map(a, z),
                            h = 0;
                          h < l;
                          h++
                        ) {
                          ;(u = a[h]),
                            it.test(u.type || '') &&
                              !Ue.access(u, 'globalEval') &&
                              ke.contains(c, u) &&
                              (u.src &&
                              'module' !== (u.type || '').toLowerCase()
                                ? ke._evalUrl && ke._evalUrl(u.src)
                                : s(u.textContent.replace(dt, ''), c, u))
                        }
                    }
                    return e
                  }
                  function q(e, t, n) {
                    for (
                      var i, r = t ? ke.filter(t, e) : e, o = 0;
                      null != (i = r[o]);
                      o++
                    ) {
                      n || 1 !== i.nodeType || ke.cleanData(E(i)),
                        i.parentNode &&
                          (n &&
                            ke.contains(i.ownerDocument, i) &&
                            k(E(i, 'script')),
                          i.parentNode.removeChild(i))
                    }
                    return e
                  }
                  function M(e, t, n) {
                    var i,
                      r,
                      o,
                      s,
                      a = e.style
                    return (
                      (n = n || gt(e)),
                      n &&
                        ((s = n.getPropertyValue(t) || n[t]),
                        '' !== s ||
                          ke.contains(e.ownerDocument, e) ||
                          (s = ke.style(e, t)),
                        !be.pixelBoxStyles() &&
                          ft.test(s) &&
                          mt.test(t) &&
                          ((i = a.width),
                          (r = a.minWidth),
                          (o = a.maxWidth),
                          (a.minWidth = a.maxWidth = a.width = s),
                          (s = n.width),
                          (a.width = i),
                          (a.minWidth = r),
                          (a.maxWidth = o))),
                      void 0 !== s ? s + '' : s
                    )
                  }
                  function R(e, t) {
                    return {
                      get: function get() {
                        return e()
                          ? void delete this.get
                          : (this.get = t).apply(this, arguments)
                      }
                    }
                  }
                  function I(e) {
                    if (e in _t) return e
                    for (
                      var t = e[0].toUpperCase() + e.slice(1), n = bt.length;
                      n--;

                    ) {
                      if (((e = bt[n] + t), e in _t)) return e
                    }
                  }
                  function B(e) {
                    var t = ke.cssProps[e]
                    return t || (t = ke.cssProps[e] = I(e) || e), t
                  }
                  function W(e, t, n) {
                    var i = Ze.exec(t)
                    return i ? Math.max(0, i[2] - (n || 0)) + (i[3] || 'px') : t
                  }
                  function F(e, t, n, i, r, o) {
                    var s = 'width' === t ? 1 : 0,
                      a = 0,
                      l = 0
                    if (n === (i ? 'border' : 'content')) return 0
                    for (; s < 4; s += 2) {
                      'margin' === n && (l += ke.css(e, n + Je[s], !0, r)),
                        i
                          ? ('content' === n &&
                              (l -= ke.css(e, 'padding' + Je[s], !0, r)),
                            'margin' !== n &&
                              (l -= ke.css(
                                e,
                                'border' + Je[s] + 'Width',
                                !0,
                                r
                              )))
                          : ((l += ke.css(e, 'padding' + Je[s], !0, r)),
                            'padding' !== n
                              ? (l += ke.css(
                                  e,
                                  'border' + Je[s] + 'Width',
                                  !0,
                                  r
                                ))
                              : (a += ke.css(
                                  e,
                                  'border' + Je[s] + 'Width',
                                  !0,
                                  r
                                )))
                    }
                    return (
                      !i &&
                        o >= 0 &&
                        (l += Math.max(
                          0,
                          Math.ceil(
                            e['offset' + t[0].toUpperCase() + t.slice(1)] -
                              o -
                              l -
                              a -
                              0.5
                          )
                        )),
                      l
                    )
                  }
                  function U(e, t, n) {
                    var i = gt(e),
                      r = M(e, t, i),
                      o = 'border-box' === ke.css(e, 'boxSizing', !1, i),
                      s = o
                    if (ft.test(r)) {
                      if (!n) return r
                      r = 'auto'
                    }
                    return (
                      (s = s && (be.boxSizingReliable() || r === e.style[t])),
                      ('auto' === r ||
                        (!parseFloat(r) &&
                          'inline' === ke.css(e, 'display', !1, i))) &&
                        ((r = e['offset' + t[0].toUpperCase() + t.slice(1)]),
                        (s = !0)),
                      (r = parseFloat(r) || 0),
                      r +
                        F(e, t, n || (o ? 'border' : 'content'), s, i, r) +
                        'px'
                    )
                  }
                  function V(e, t, n, i, r) {
                    return new V.prototype.init(e, t, n, i, r)
                  }
                  function X() {
                    Tt &&
                      (ce.hidden === !1 && n.requestAnimationFrame
                        ? n.requestAnimationFrame(X)
                        : n.setTimeout(X, ke.fx.interval),
                      ke.fx.tick())
                  }
                  function Y() {
                    return (
                      n.setTimeout(function() {
                        Ct = void 0
                      }),
                      (Ct = Date.now())
                    )
                  }
                  function G(e, t) {
                    var n,
                      i = 0,
                      r = { height: e }
                    for (t = t ? 1 : 0; i < 4; i += 2 - t) {
                      ;(n = Je[i]), (r['margin' + n] = r['padding' + n] = e)
                    }
                    return t && (r.opacity = r.width = e), r
                  }
                  function Z(e, t, n) {
                    for (
                      var i,
                        r = (K.tweeners[t] || []).concat(K.tweeners['*']),
                        o = 0,
                        s = r.length;
                      o < s;
                      o++
                    ) {
                      if ((i = r[o].call(n, t, e))) return i
                    }
                  }
                  function J(e, t, n) {
                    var i,
                      r,
                      o,
                      s,
                      a,
                      l,
                      u,
                      c,
                      h = 'width' in t || 'height' in t,
                      p = this,
                      d = {},
                      f = e.style,
                      g = e.nodeType && Qe(e),
                      m = Ue.get(e, 'fxshow')
                    n.queue ||
                      ((s = ke._queueHooks(e, 'fx')),
                      null == s.unqueued &&
                        ((s.unqueued = 0),
                        (a = s.empty.fire),
                        (s.empty.fire = function() {
                          s.unqueued || a()
                        })),
                      s.unqueued++,
                      p.always(function() {
                        p.always(function() {
                          s.unqueued--,
                            ke.queue(e, 'fx').length || s.empty.fire()
                        })
                      }))
                    for (i in t) {
                      if (((r = t[i]), Et.test(r))) {
                        if (
                          (delete t[i],
                          (o = o || 'toggle' === r),
                          r === (g ? 'hide' : 'show'))
                        ) {
                          if ('show' !== r || !m || void 0 === m[i]) continue
                          g = !0
                        }
                        d[i] = (m && m[i]) || ke.style(e, i)
                      }
                    }
                    if (
                      ((l = !ke.isEmptyObject(t)), l || !ke.isEmptyObject(d))
                    ) {
                      h &&
                        1 === e.nodeType &&
                        ((n.overflow = [f.overflow, f.overflowX, f.overflowY]),
                        (u = m && m.display),
                        null == u && (u = Ue.get(e, 'display')),
                        (c = ke.css(e, 'display')),
                        'none' === c &&
                          (u
                            ? (c = u)
                            : (T([e], !0),
                              (u = e.style.display || u),
                              (c = ke.css(e, 'display')),
                              T([e]))),
                        ('inline' === c ||
                          ('inline-block' === c && null != u)) &&
                          'none' === ke.css(e, 'float') &&
                          (l ||
                            (p.done(function() {
                              f.display = u
                            }),
                            null == u &&
                              ((c = f.display), (u = 'none' === c ? '' : c))),
                          (f.display = 'inline-block'))),
                        n.overflow &&
                          ((f.overflow = 'hidden'),
                          p.always(function() {
                            ;(f.overflow = n.overflow[0]),
                              (f.overflowX = n.overflow[1]),
                              (f.overflowY = n.overflow[2])
                          })),
                        (l = !1)
                      for (i in d) {
                        l ||
                          (m
                            ? 'hidden' in m && (g = m.hidden)
                            : (m = Ue.access(e, 'fxshow', { display: u })),
                          o && (m.hidden = !g),
                          g && T([e], !0),
                          p.done(function() {
                            g || T([e]), Ue.remove(e, 'fxshow')
                            for (i in d) {
                              ke.style(e, i, d[i])
                            }
                          })),
                          (l = Z(g ? m[i] : 0, i, p)),
                          i in m ||
                            ((m[i] = l.start),
                            g && ((l.end = l.start), (l.start = 0)))
                      }
                    }
                  }
                  function Q(e, t) {
                    var n, i, r, o, s
                    for (n in e) {
                      if (
                        ((i = y(n)),
                        (r = t[i]),
                        (o = e[n]),
                        Array.isArray(o) && ((r = o[1]), (o = e[n] = o[0])),
                        n !== i && ((e[i] = o), delete e[n]),
                        (s = ke.cssHooks[i]),
                        s && 'expand' in s)
                      ) {
                        ;(o = s.expand(o)), delete e[i]
                        for (n in o) {
                          n in e || ((e[n] = o[n]), (t[n] = r))
                        }
                      } else t[i] = r
                    }
                  }
                  function K(e, t, n) {
                    var i,
                      r,
                      o = 0,
                      s = K.prefilters.length,
                      a = ke.Deferred().always(function() {
                        delete l.elem
                      }),
                      l = function l() {
                        if (r) return !1
                        for (
                          var t = Ct || Y(),
                            n = Math.max(0, u.startTime + u.duration - t),
                            i = n / u.duration || 0,
                            o = 1 - i,
                            s = 0,
                            l = u.tweens.length;
                          s < l;
                          s++
                        ) {
                          u.tweens[s].run(o)
                        }
                        return (
                          a.notifyWith(e, [u, o, n]),
                          o < 1 && l
                            ? n
                            : (l || a.notifyWith(e, [u, 1, 0]),
                              a.resolveWith(e, [u]),
                              !1)
                        )
                      },
                      u = a.promise({
                        elem: e,
                        props: ke.extend({}, t),
                        opts: ke.extend(
                          !0,
                          { specialEasing: {}, easing: ke.easing._default },
                          n
                        ),
                        originalProperties: t,
                        originalOptions: n,
                        startTime: Ct || Y(),
                        duration: n.duration,
                        tweens: [],
                        createTween: function createTween(t, n) {
                          var i = ke.Tween(
                            e,
                            u.opts,
                            t,
                            n,
                            u.opts.specialEasing[t] || u.opts.easing
                          )
                          return u.tweens.push(i), i
                        },
                        stop: function stop(t) {
                          var n = 0,
                            i = t ? u.tweens.length : 0
                          if (r) return this
                          for (r = !0; n < i; n++) {
                            u.tweens[n].run(1)
                          }
                          return (
                            t
                              ? (a.notifyWith(e, [u, 1, 0]),
                                a.resolveWith(e, [u, t]))
                              : a.rejectWith(e, [u, t]),
                            this
                          )
                        }
                      }),
                      c = u.props
                    for (Q(c, u.opts.specialEasing); o < s; o++) {
                      if ((i = K.prefilters[o].call(u, e, c, u.opts)))
                        return (
                          _e(i.stop) &&
                            (ke._queueHooks(
                              u.elem,
                              u.opts.queue
                            ).stop = i.stop.bind(i)),
                          i
                        )
                    }
                    return (
                      ke.map(c, Z, u),
                      _e(u.opts.start) && u.opts.start.call(e, u),
                      u
                        .progress(u.opts.progress)
                        .done(u.opts.done, u.opts.complete)
                        .fail(u.opts.fail)
                        .always(u.opts.always),
                      ke.fx.timer(
                        ke.extend(l, { elem: e, anim: u, queue: u.opts.queue })
                      ),
                      u
                    )
                  }
                  function ee(e) {
                    var t = e.match(qe) || []
                    return t.join(' ')
                  }
                  function te(e) {
                    return (e.getAttribute && e.getAttribute('class')) || ''
                  }
                  function ne(e) {
                    return Array.isArray(e)
                      ? e
                      : 'string' == typeof e
                      ? e.match(qe) || []
                      : []
                  }
                  function ie(e, t, n, i) {
                    var r
                    if (Array.isArray(t))
                      ke.each(t, function(t, r) {
                        n || Ht.test(e)
                          ? i(e, r)
                          : ie(
                              e +
                                '[' +
                                ('object' == (0, _typeof3['default'])(r) &&
                                null != r
                                  ? t
                                  : '') +
                                ']',
                              r,
                              n,
                              i
                            )
                      })
                    else if (n || 'object' !== a(t)) i(e, t)
                    else
                      for (r in t) {
                        ie(e + '[' + r + ']', t[r], n, i)
                      }
                  }
                  function re(e) {
                    return function(t, n) {
                      'string' != typeof t && ((n = t), (t = '*'))
                      var i,
                        r = 0,
                        o = t.toLowerCase().match(qe) || []
                      if (_e(n))
                        for (; (i = o[r++]); ) {
                          '+' === i[0]
                            ? ((i = i.slice(1) || '*'),
                              (e[i] = e[i] || []).unshift(n))
                            : (e[i] = e[i] || []).push(n)
                        }
                    }
                  }
                  function oe(e, t, n, i) {
                    function r(a) {
                      var l
                      return (
                        (o[a] = !0),
                        ke.each(e[a] || [], function(e, a) {
                          var u = a(t, n, i)
                          return 'string' != typeof u || s || o[u]
                            ? s
                              ? !(l = u)
                              : void 0
                            : (t.dataTypes.unshift(u), r(u), !1)
                        }),
                        l
                      )
                    }
                    var o = {},
                      s = e === Gt
                    return r(t.dataTypes[0]) || (!o['*'] && r('*'))
                  }
                  function se(e, t) {
                    var n,
                      i,
                      r = ke.ajaxSettings.flatOptions || {}
                    for (n in t) {
                      void 0 !== t[n] && ((r[n] ? e : i || (i = {}))[n] = t[n])
                    }
                    return i && ke.extend(!0, e, i), e
                  }
                  function ae(e, t, n) {
                    for (
                      var i, r, o, s, a = e.contents, l = e.dataTypes;
                      '*' === l[0];

                    ) {
                      l.shift(),
                        void 0 === i &&
                          (i =
                            e.mimeType || t.getResponseHeader('Content-Type'))
                    }
                    if (i)
                      for (r in a) {
                        if (a[r] && a[r].test(i)) {
                          l.unshift(r)
                          break
                        }
                      }
                    if (l[0] in n) o = l[0]
                    else {
                      for (r in n) {
                        if (!l[0] || e.converters[r + ' ' + l[0]]) {
                          o = r
                          break
                        }
                        s || (s = r)
                      }
                      o = o || s
                    }
                    if (o) return o !== l[0] && l.unshift(o), n[o]
                  }
                  function le(e, t, n, i) {
                    var r,
                      o,
                      s,
                      a,
                      l,
                      u = {},
                      c = e.dataTypes.slice()
                    if (c[1])
                      for (s in e.converters) {
                        u[s.toLowerCase()] = e.converters[s]
                      }
                    for (o = c.shift(); o; ) {
                      if (
                        (e.responseFields[o] && (n[e.responseFields[o]] = t),
                        !l &&
                          i &&
                          e.dataFilter &&
                          (t = e.dataFilter(t, e.dataType)),
                        (l = o),
                        (o = c.shift()))
                      )
                        if ('*' === o) o = l
                        else if ('*' !== l && l !== o) {
                          if (((s = u[l + ' ' + o] || u['* ' + o]), !s))
                            for (r in u) {
                              if (
                                ((a = r.split(' ')),
                                a[1] === o &&
                                  (s = u[l + ' ' + a[0]] || u['* ' + a[0]]))
                              ) {
                                s === !0
                                  ? (s = u[r])
                                  : u[r] !== !0 && ((o = a[0]), c.unshift(a[1]))
                                break
                              }
                            }
                          if (s !== !0)
                            if (s && e['throws']) t = s(t)
                            else
                              try {
                                t = s(t)
                              } catch (h) {
                                return {
                                  state: 'parsererror',
                                  error: s
                                    ? h
                                    : 'No conversion from ' + l + ' to ' + o
                                }
                              }
                        }
                    }
                    return { state: 'success', data: t }
                  }
                  var ue = [],
                    ce = n.document,
                    he = Object.getPrototypeOf,
                    pe = ue.slice,
                    de = ue.concat,
                    fe = ue.push,
                    ge = ue.indexOf,
                    me = {},
                    ve = me.toString,
                    ye = me.hasOwnProperty,
                    we = ye.toString,
                    xe = we.call(Object),
                    be = {},
                    _e = function _e(e) {
                      return (
                        'function' == typeof e && 'number' != typeof e.nodeType
                      )
                    },
                    Ce = function Ce(e) {
                      return null != e && e === e.window
                    },
                    Te = { type: !0, src: !0, noModule: !0 },
                    Ee = '3.3.1',
                    ke = function ke(e, t) {
                      return new ke.fn.init(e, t)
                    },
                    Se = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g
                  ;(ke.fn = ke.prototype = {
                    jquery: Ee,
                    constructor: ke,
                    length: 0,
                    toArray: function toArray() {
                      return pe.call(this)
                    },
                    get: function get(e) {
                      return null == e
                        ? pe.call(this)
                        : e < 0
                        ? this[e + this.length]
                        : this[e]
                    },
                    pushStack: function pushStack(e) {
                      var t = ke.merge(this.constructor(), e)
                      return (t.prevObject = this), t
                    },
                    each: function each(e) {
                      return ke.each(this, e)
                    },
                    map: function map(e) {
                      return this.pushStack(
                        ke.map(this, function(t, n) {
                          return e.call(t, n, t)
                        })
                      )
                    },
                    slice: function slice() {
                      return this.pushStack(pe.apply(this, arguments))
                    },
                    first: function first() {
                      return this.eq(0)
                    },
                    last: function last() {
                      return this.eq(-1)
                    },
                    eq: function eq(e) {
                      var t = this.length,
                        n = +e + (e < 0 ? t : 0)
                      return this.pushStack(n >= 0 && n < t ? [this[n]] : [])
                    },
                    end: function end() {
                      return this.prevObject || this.constructor()
                    },
                    push: fe,
                    sort: ue.sort,
                    splice: ue.splice
                  }),
                    (ke.extend = ke.fn.extend = function() {
                      var e,
                        t,
                        n,
                        i,
                        r,
                        o,
                        s = arguments[0] || {},
                        a = 1,
                        l = arguments.length,
                        u = !1
                      for (
                        'boolean' == typeof s &&
                          ((u = s), (s = arguments[a] || {}), a++),
                          'object' == (0, _typeof3['default'])(s) ||
                            _e(s) ||
                            (s = {}),
                          a === l && ((s = this), a--);
                        a < l;
                        a++
                      ) {
                        if (null != (e = arguments[a]))
                          for (t in e) {
                            ;(n = s[t]),
                              (i = e[t]),
                              s !== i &&
                                (u &&
                                i &&
                                (ke.isPlainObject(i) || (r = Array.isArray(i)))
                                  ? (r
                                      ? ((r = !1),
                                        (o = n && Array.isArray(n) ? n : []))
                                      : (o = n && ke.isPlainObject(n) ? n : {}),
                                    (s[t] = ke.extend(u, o, i)))
                                  : void 0 !== i && (s[t] = i))
                          }
                      }
                      return s
                    }),
                    ke.extend({
                      expando:
                        'jQuery' + (Ee + Math.random()).replace(/\D/g, ''),
                      isReady: !0,
                      error: function error(e) {
                        throw new Error(e)
                      },
                      noop: function noop() {},
                      isPlainObject: function isPlainObject(e) {
                        var t, n
                        return (
                          !(!e || '[object Object]' !== ve.call(e)) &&
                          (!(t = he(e)) ||
                            ((n = ye.call(t, 'constructor') && t.constructor),
                            'function' == typeof n && we.call(n) === xe))
                        )
                      },
                      isEmptyObject: function isEmptyObject(e) {
                        var t
                        for (t in e) {
                          return !1
                        }
                        return !0
                      },
                      globalEval: function globalEval(e) {
                        s(e)
                      },
                      each: function each(e, t) {
                        var n,
                          i = 0
                        if (l(e))
                          for (
                            n = e.length;
                            i < n && t.call(e[i], i, e[i]) !== !1;
                            i++
                          ) {}
                        else
                          for (i in e) {
                            if (t.call(e[i], i, e[i]) === !1) break
                          }
                        return e
                      },
                      trim: function trim(e) {
                        return null == e ? '' : (e + '').replace(Se, '')
                      },
                      makeArray: function makeArray(e, t) {
                        var n = t || []
                        return (
                          null != e &&
                            (l(Object(e))
                              ? ke.merge(n, 'string' == typeof e ? [e] : e)
                              : fe.call(n, e)),
                          n
                        )
                      },
                      inArray: function inArray(e, t, n) {
                        return null == t ? -1 : ge.call(t, e, n)
                      },
                      merge: function merge(e, t) {
                        for (
                          var n = +t.length, i = 0, r = e.length;
                          i < n;
                          i++
                        ) {
                          e[r++] = t[i]
                        }
                        return (e.length = r), e
                      },
                      grep: function grep(e, t, n) {
                        for (
                          var i, r = [], o = 0, s = e.length, a = !n;
                          o < s;
                          o++
                        ) {
                          ;(i = !t(e[o], o)), i !== a && r.push(e[o])
                        }
                        return r
                      },
                      map: function map(e, t, n) {
                        var i,
                          r,
                          o = 0,
                          s = []
                        if (l(e))
                          for (i = e.length; o < i; o++) {
                            ;(r = t(e[o], o, n)), null != r && s.push(r)
                          }
                        else
                          for (o in e) {
                            ;(r = t(e[o], o, n)), null != r && s.push(r)
                          }
                        return de.apply([], s)
                      },
                      guid: 1,
                      support: be
                    }),
                    'function' == typeof Symbol &&
                      (ke.fn[Symbol.iterator] = ue[Symbol.iterator]),
                    ke.each(
                      'Boolean Number String Function Array Date RegExp Object Error Symbol'.split(
                        ' '
                      ),
                      function(e, t) {
                        me['[object ' + t + ']'] = t.toLowerCase()
                      }
                    )
                  var De = /*!
                   * Sizzle CSS Selector Engine v2.3.3
                   * https://sizzlejs.com/
                   *
                   * Copyright jQuery Foundation and other contributors
                   * Released under the MIT license
                   * http://jquery.org/license
                   *
                   * Date: 2016-08-08
                   */ (function(e) {
                    function t(e, t, n, i) {
                      var r,
                        o,
                        s,
                        a,
                        l,
                        u,
                        c,
                        p = t && t.ownerDocument,
                        f = t ? t.nodeType : 9
                      if (
                        ((n = n || []),
                        'string' != typeof e ||
                          !e ||
                          (1 !== f && 9 !== f && 11 !== f))
                      )
                        return n
                      if (
                        !i &&
                        ((t ? t.ownerDocument || t : I) !== L && $(t),
                        (t = t || L),
                        O)
                      ) {
                        if (11 !== f && (l = ve.exec(e)))
                          if ((r = l[1])) {
                            if (9 === f) {
                              if (!(s = t.getElementById(r))) return n
                              if (s.id === r) return n.push(s), n
                            } else if (
                              p &&
                              (s = p.getElementById(r)) &&
                              M(t, s) &&
                              s.id === r
                            )
                              return n.push(s), n
                          } else {
                            if (l[2])
                              return Q.apply(n, t.getElementsByTagName(e)), n
                            if (
                              (r = l[3]) &&
                              _.getElementsByClassName &&
                              t.getElementsByClassName
                            )
                              return Q.apply(n, t.getElementsByClassName(r)), n
                          }
                        if (_.qsa && !V[e + ' '] && (!P || !P.test(e))) {
                          if (1 !== f) (p = t), (c = e)
                          else if ('object' !== t.nodeName.toLowerCase()) {
                            for (
                              (a = t.getAttribute('id'))
                                ? (a = a.replace(be, _e))
                                : t.setAttribute('id', (a = R)),
                                u = k(e),
                                o = u.length;
                              o--;

                            ) {
                              u[o] = '#' + a + ' ' + d(u[o])
                            }
                            ;(c = u.join(',')),
                              (p = (ye.test(e) && h(t.parentNode)) || t)
                          }
                          if (c)
                            try {
                              return Q.apply(n, p.querySelectorAll(c)), n
                            } catch (g) {
                            } finally {
                              a === R && t.removeAttribute('id')
                            }
                        }
                      }
                      return D(e.replace(ae, '$1'), t, n, i)
                    }
                    function n() {
                      function e(n, i) {
                        return (
                          t.push(n + ' ') > C.cacheLength &&
                            delete e[t.shift()],
                          (e[n + ' '] = i)
                        )
                      }
                      var t = []
                      return e
                    }
                    function i(e) {
                      return (e[R] = !0), e
                    }
                    function r(e) {
                      var t = L.createElement('fieldset')
                      try {
                        return !!e(t)
                      } catch (n) {
                        return !1
                      } finally {
                        t.parentNode && t.parentNode.removeChild(t), (t = null)
                      }
                    }
                    function o(e, t) {
                      for (var n = e.split('|'), i = n.length; i--; ) {
                        C.attrHandle[n[i]] = t
                      }
                    }
                    function s(e, t) {
                      var n = t && e,
                        i =
                          n &&
                          1 === e.nodeType &&
                          1 === t.nodeType &&
                          e.sourceIndex - t.sourceIndex
                      if (i) return i
                      if (n)
                        for (; (n = n.nextSibling); ) {
                          if (n === t) return -1
                        }
                      return e ? 1 : -1
                    }
                    function a(e) {
                      return function(t) {
                        var n = t.nodeName.toLowerCase()
                        return 'input' === n && t.type === e
                      }
                    }
                    function l(e) {
                      return function(t) {
                        var n = t.nodeName.toLowerCase()
                        return ('input' === n || 'button' === n) && t.type === e
                      }
                    }
                    function u(e) {
                      return function(t) {
                        return 'form' in t
                          ? t.parentNode && t.disabled === !1
                            ? 'label' in t
                              ? 'label' in t.parentNode
                                ? t.parentNode.disabled === e
                                : t.disabled === e
                              : t.isDisabled === e ||
                                (t.isDisabled !== !e && Te(t) === e)
                            : t.disabled === e
                          : 'label' in t && t.disabled === e
                      }
                    }
                    function c(e) {
                      return i(function(t) {
                        return (
                          (t = +t),
                          i(function(n, i) {
                            for (
                              var r, o = e([], n.length, t), s = o.length;
                              s--;

                            ) {
                              n[(r = o[s])] && (n[r] = !(i[r] = n[r]))
                            }
                          })
                        )
                      })
                    }
                    function h(e) {
                      return (
                        e && 'undefined' != typeof e.getElementsByTagName && e
                      )
                    }
                    function p() {}
                    function d(e) {
                      for (var t = 0, n = e.length, i = ''; t < n; t++) {
                        i += e[t].value
                      }
                      return i
                    }
                    function f(e, t, n) {
                      var i = t.dir,
                        r = t.next,
                        o = r || i,
                        s = n && 'parentNode' === o,
                        a = W++
                      return t.first
                        ? function(t, n, r) {
                            for (; (t = t[i]); ) {
                              if (1 === t.nodeType || s) return e(t, n, r)
                            }
                            return !1
                          }
                        : function(t, n, l) {
                            var u,
                              c,
                              h,
                              p = [B, a]
                            if (l) {
                              for (; (t = t[i]); ) {
                                if ((1 === t.nodeType || s) && e(t, n, l))
                                  return !0
                              }
                            } else
                              for (; (t = t[i]); ) {
                                if (1 === t.nodeType || s)
                                  if (
                                    ((h = t[R] || (t[R] = {})),
                                    (c = h[t.uniqueID] || (h[t.uniqueID] = {})),
                                    r && r === t.nodeName.toLowerCase())
                                  )
                                    t = t[i] || t
                                  else {
                                    if ((u = c[o]) && u[0] === B && u[1] === a)
                                      return (p[2] = u[2])
                                    if (((c[o] = p), (p[2] = e(t, n, l))))
                                      return !0
                                  }
                              }
                            return !1
                          }
                    }
                    function g(e) {
                      return e.length > 1
                        ? function(t, n, i) {
                            for (var r = e.length; r--; ) {
                              if (!e[r](t, n, i)) return !1
                            }
                            return !0
                          }
                        : e[0]
                    }
                    function m(e, n, i) {
                      for (var r = 0, o = n.length; r < o; r++) {
                        t(e, n[r], i)
                      }
                      return i
                    }
                    function v(e, t, n, i, r) {
                      for (
                        var o, s = [], a = 0, l = e.length, u = null != t;
                        a < l;
                        a++
                      ) {
                        ;(o = e[a]) &&
                          ((n && !n(o, i, r)) || (s.push(o), u && t.push(a)))
                      }
                      return s
                    }
                    function y(e, t, n, r, o, s) {
                      return (
                        r && !r[R] && (r = y(r)),
                        o && !o[R] && (o = y(o, s)),
                        i(function(i, s, a, l) {
                          var u,
                            c,
                            h,
                            p = [],
                            d = [],
                            f = s.length,
                            g = i || m(t || '*', a.nodeType ? [a] : a, []),
                            y = !e || (!i && t) ? g : v(g, p, e, a, l),
                            w = n ? (o || (i ? e : f || r) ? [] : s) : y
                          if ((n && n(y, w, a, l), r))
                            for (
                              u = v(w, d), r(u, [], a, l), c = u.length;
                              c--;

                            ) {
                              ;(h = u[c]) && (w[d[c]] = !(y[d[c]] = h))
                            }
                          if (i) {
                            if (o || e) {
                              if (o) {
                                for (u = [], c = w.length; c--; ) {
                                  ;(h = w[c]) && u.push((y[c] = h))
                                }
                                o(null, (w = []), u, l)
                              }
                              for (c = w.length; c--; ) {
                                ;(h = w[c]) &&
                                  (u = o ? ee(i, h) : p[c]) > -1 &&
                                  (i[u] = !(s[u] = h))
                              }
                            }
                          } else (w = v(w === s ? w.splice(f, w.length) : w)), o ? o(null, s, w, l) : Q.apply(s, w)
                        })
                      )
                    }
                    function w(e) {
                      for (
                        var t,
                          n,
                          i,
                          r = e.length,
                          o = C.relative[e[0].type],
                          s = o || C.relative[' '],
                          a = o ? 1 : 0,
                          l = f(
                            function(e) {
                              return e === t
                            },
                            s,
                            !0
                          ),
                          u = f(
                            function(e) {
                              return ee(t, e) > -1
                            },
                            s,
                            !0
                          ),
                          c = [
                            function(e, n, i) {
                              var r =
                                (!o && (i || n !== N)) ||
                                ((t = n).nodeType ? l(e, n, i) : u(e, n, i))
                              return (t = null), r
                            }
                          ];
                        a < r;
                        a++
                      ) {
                        if ((n = C.relative[e[a].type])) c = [f(g(c), n)]
                        else {
                          if (
                            ((n = C.filter[e[a].type].apply(
                              null,
                              e[a].matches
                            )),
                            n[R])
                          ) {
                            for (
                              i = ++a;
                              i < r && !C.relative[e[i].type];
                              i++
                            ) {}
                            return y(
                              a > 1 && g(c),
                              a > 1 &&
                                d(
                                  e
                                    .slice(0, a - 1)
                                    .concat({
                                      value: ' ' === e[a - 2].type ? '*' : ''
                                    })
                                ).replace(ae, '$1'),
                              n,
                              a < i && w(e.slice(a, i)),
                              i < r && w((e = e.slice(i))),
                              i < r && d(e)
                            )
                          }
                          c.push(n)
                        }
                      }
                      return g(c)
                    }
                    function x(e, n) {
                      var r = n.length > 0,
                        o = e.length > 0,
                        s = function s(i, _s, a, l, u) {
                          var c,
                            h,
                            p,
                            d = 0,
                            f = '0',
                            g = i && [],
                            m = [],
                            y = N,
                            w = i || (o && C.find.TAG('*', u)),
                            x = (B += null == y ? 1 : Math.random() || 0.1),
                            b = w.length
                          for (
                            u && (N = _s === L || _s || u);
                            f !== b && null != (c = w[f]);
                            f++
                          ) {
                            if (o && c) {
                              for (
                                h = 0,
                                  _s ||
                                    c.ownerDocument === L ||
                                    ($(c), (a = !O));
                                (p = e[h++]);

                              ) {
                                if (p(c, _s || L, a)) {
                                  l.push(c)
                                  break
                                }
                              }
                              u && (B = x)
                            }
                            r && ((c = !p && c) && d--, i && g.push(c))
                          }
                          if (((d += f), r && f !== d)) {
                            for (h = 0; (p = n[h++]); ) {
                              p(g, m, _s, a)
                            }
                            if (i) {
                              if (d > 0)
                                for (; f--; ) {
                                  g[f] || m[f] || (m[f] = Z.call(l))
                                }
                              m = v(m)
                            }
                            Q.apply(l, m),
                              u &&
                                !i &&
                                m.length > 0 &&
                                d + n.length > 1 &&
                                t.uniqueSort(l)
                          }
                          return u && ((B = x), (N = y)), g
                        }
                      return r ? i(s) : s
                    }
                    var b,
                      _,
                      C,
                      T,
                      E,
                      k,
                      S,
                      D,
                      N,
                      j,
                      A,
                      $,
                      L,
                      z,
                      O,
                      P,
                      H,
                      q,
                      M,
                      R = 'sizzle' + 1 * new Date(),
                      I = e.document,
                      B = 0,
                      W = 0,
                      F = n(),
                      U = n(),
                      V = n(),
                      X = function X(e, t) {
                        return e === t && (A = !0), 0
                      },
                      Y = {}.hasOwnProperty,
                      G = [],
                      Z = G.pop,
                      J = G.push,
                      Q = G.push,
                      K = G.slice,
                      ee = function ee(e, t) {
                        for (var n = 0, i = e.length; n < i; n++) {
                          if (e[n] === t) return n
                        }
                        return -1
                      },
                      te =
                        'checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped',
                      ne = '[\\x20\\t\\r\\n\\f]',
                      ie = '(?:\\\\.|[\\w-]|[^\0-\\xa0])+',
                      re =
                        '\\[' +
                        ne +
                        '*(' +
                        ie +
                        ')(?:' +
                        ne +
                        '*([*^$|!~]?=)' +
                        ne +
                        '*(?:\'((?:\\\\.|[^\\\\\'])*)\'|"((?:\\\\.|[^\\\\"])*)"|(' +
                        ie +
                        '))|)' +
                        ne +
                        '*\\]',
                      oe =
                        ':(' +
                        ie +
                        ')(?:\\(((\'((?:\\\\.|[^\\\\\'])*)\'|"((?:\\\\.|[^\\\\"])*)")|((?:\\\\.|[^\\\\()[\\]]|' +
                        re +
                        ')*)|.*)\\)|)',
                      se = new RegExp(ne + '+', 'g'),
                      ae = new RegExp(
                        '^' + ne + '+|((?:^|[^\\\\])(?:\\\\.)*)' + ne + '+$',
                        'g'
                      ),
                      le = new RegExp('^' + ne + '*,' + ne + '*'),
                      ue = new RegExp(
                        '^' + ne + '*([>+~]|' + ne + ')' + ne + '*'
                      ),
                      ce = new RegExp(
                        '=' + ne + '*([^\\]\'"]*?)' + ne + '*\\]',
                        'g'
                      ),
                      he = new RegExp(oe),
                      pe = new RegExp('^' + ie + '$'),
                      de = {
                        ID: new RegExp('^#(' + ie + ')'),
                        CLASS: new RegExp('^\\.(' + ie + ')'),
                        TAG: new RegExp('^(' + ie + '|[*])'),
                        ATTR: new RegExp('^' + re),
                        PSEUDO: new RegExp('^' + oe),
                        CHILD: new RegExp(
                          '^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(' +
                            ne +
                            '*(even|odd|(([+-]|)(\\d*)n|)' +
                            ne +
                            '*(?:([+-]|)' +
                            ne +
                            '*(\\d+)|))' +
                            ne +
                            '*\\)|)',
                          'i'
                        ),
                        bool: new RegExp('^(?:' + te + ')$', 'i'),
                        needsContext: new RegExp(
                          '^' +
                            ne +
                            '*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(' +
                            ne +
                            '*((?:-\\d)?\\d*)' +
                            ne +
                            '*\\)|)(?=[^-]|$)',
                          'i'
                        )
                      },
                      fe = /^(?:input|select|textarea|button)$/i,
                      ge = /^h\d$/i,
                      me = /^[^{]+\{\s*\[native \w/,
                      ve = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
                      ye = /[+~]/,
                      we = new RegExp(
                        '\\\\([\\da-f]{1,6}' + ne + '?|(' + ne + ')|.)',
                        'ig'
                      ),
                      xe = function xe(e, t, n) {
                        var i = '0x' + t - 65536
                        return i !== i || n
                          ? t
                          : i < 0
                          ? String.fromCharCode(i + 65536)
                          : String.fromCharCode(
                              (i >> 10) | 55296,
                              (1023 & i) | 56320
                            )
                      },
                      be = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
                      _e = function _e(e, t) {
                        return t
                          ? '\0' === e
                            ? '�'
                            : e.slice(0, -1) +
                              '\\' +
                              e.charCodeAt(e.length - 1).toString(16) +
                              ' '
                          : '\\' + e
                      },
                      Ce = function Ce() {
                        $()
                      },
                      Te = f(
                        function(e) {
                          return (
                            e.disabled === !0 && ('form' in e || 'label' in e)
                          )
                        },
                        { dir: 'parentNode', next: 'legend' }
                      )
                    try {
                      Q.apply((G = K.call(I.childNodes)), I.childNodes),
                        G[I.childNodes.length].nodeType
                    } catch (Ee) {
                      Q = {
                        apply: G.length
                          ? function(e, t) {
                              J.apply(e, K.call(t))
                            }
                          : function(e, t) {
                              for (
                                var n = e.length, i = 0;
                                (e[n++] = t[i++]);

                              ) {}
                              e.length = n - 1
                            }
                      }
                    }
                    ;(_ = t.support = {}),
                      (E = t.isXML = function(e) {
                        var t = e && (e.ownerDocument || e).documentElement
                        return !!t && 'HTML' !== t.nodeName
                      }),
                      ($ = t.setDocument = function(e) {
                        var t,
                          n,
                          i = e ? e.ownerDocument || e : I
                        return i !== L && 9 === i.nodeType && i.documentElement
                          ? ((L = i),
                            (z = L.documentElement),
                            (O = !E(L)),
                            I !== L &&
                              (n = L.defaultView) &&
                              n.top !== n &&
                              (n.addEventListener
                                ? n.addEventListener('unload', Ce, !1)
                                : n.attachEvent &&
                                  n.attachEvent('onunload', Ce)),
                            (_.attributes = r(function(e) {
                              return (
                                (e.className = 'i'),
                                !e.getAttribute('className')
                              )
                            })),
                            (_.getElementsByTagName = r(function(e) {
                              return (
                                e.appendChild(L.createComment('')),
                                !e.getElementsByTagName('*').length
                              )
                            })),
                            (_.getElementsByClassName = me.test(
                              L.getElementsByClassName
                            )),
                            (_.getById = r(function(e) {
                              return (
                                (z.appendChild(e).id = R),
                                !L.getElementsByName ||
                                  !L.getElementsByName(R).length
                              )
                            })),
                            _.getById
                              ? ((C.filter.ID = function(e) {
                                  var t = e.replace(we, xe)
                                  return function(e) {
                                    return e.getAttribute('id') === t
                                  }
                                }),
                                (C.find.ID = function(e, t) {
                                  if (
                                    'undefined' != typeof t.getElementById &&
                                    O
                                  ) {
                                    var n = t.getElementById(e)
                                    return n ? [n] : []
                                  }
                                }))
                              : ((C.filter.ID = function(e) {
                                  var t = e.replace(we, xe)
                                  return function(e) {
                                    var n =
                                      'undefined' !=
                                        typeof e.getAttributeNode &&
                                      e.getAttributeNode('id')
                                    return n && n.value === t
                                  }
                                }),
                                (C.find.ID = function(e, t) {
                                  if (
                                    'undefined' != typeof t.getElementById &&
                                    O
                                  ) {
                                    var n,
                                      i,
                                      r,
                                      o = t.getElementById(e)
                                    if (o) {
                                      if (
                                        ((n = o.getAttributeNode('id')),
                                        n && n.value === e)
                                      )
                                        return [o]
                                      for (
                                        r = t.getElementsByName(e), i = 0;
                                        (o = r[i++]);

                                      ) {
                                        if (
                                          ((n = o.getAttributeNode('id')),
                                          n && n.value === e)
                                        )
                                          return [o]
                                      }
                                    }
                                    return []
                                  }
                                })),
                            (C.find.TAG = _.getElementsByTagName
                              ? function(e, t) {
                                  return 'undefined' !=
                                    typeof t.getElementsByTagName
                                    ? t.getElementsByTagName(e)
                                    : _.qsa
                                    ? t.querySelectorAll(e)
                                    : void 0
                                }
                              : function(e, t) {
                                  var n,
                                    i = [],
                                    r = 0,
                                    o = t.getElementsByTagName(e)
                                  if ('*' === e) {
                                    for (; (n = o[r++]); ) {
                                      1 === n.nodeType && i.push(n)
                                    }
                                    return i
                                  }
                                  return o
                                }),
                            (C.find.CLASS =
                              _.getElementsByClassName &&
                              function(e, t) {
                                if (
                                  'undefined' !=
                                    typeof t.getElementsByClassName &&
                                  O
                                )
                                  return t.getElementsByClassName(e)
                              }),
                            (H = []),
                            (P = []),
                            (_.qsa = me.test(L.querySelectorAll)) &&
                              (r(function(e) {
                                ;(z.appendChild(e).innerHTML =
                                  "<a id='" +
                                  R +
                                  "'></a><select id='" +
                                  R +
                                  "-\r\\' msallowcapture=''><option selected=''></option></select>"),
                                  e.querySelectorAll("[msallowcapture^='']")
                                    .length &&
                                    P.push('[*^$]=' + ne + '*(?:\'\'|"")'),
                                  e.querySelectorAll('[selected]').length ||
                                    P.push(
                                      '\\[' + ne + '*(?:value|' + te + ')'
                                    ),
                                  e.querySelectorAll('[id~=' + R + '-]')
                                    .length || P.push('~='),
                                  e.querySelectorAll(':checked').length ||
                                    P.push(':checked'),
                                  e.querySelectorAll('a#' + R + '+*').length ||
                                    P.push('.#.+[+~]')
                              }),
                              r(function(e) {
                                e.innerHTML =
                                  "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>"
                                var t = L.createElement('input')
                                t.setAttribute('type', 'hidden'),
                                  e.appendChild(t).setAttribute('name', 'D'),
                                  e.querySelectorAll('[name=d]').length &&
                                    P.push('name' + ne + '*[*^$|!~]?='),
                                  2 !== e.querySelectorAll(':enabled').length &&
                                    P.push(':enabled', ':disabled'),
                                  (z.appendChild(e).disabled = !0),
                                  2 !==
                                    e.querySelectorAll(':disabled').length &&
                                    P.push(':enabled', ':disabled'),
                                  e.querySelectorAll('*,:x'),
                                  P.push(',.*:')
                              })),
                            (_.matchesSelector = me.test(
                              (q =
                                z.matches ||
                                z.webkitMatchesSelector ||
                                z.mozMatchesSelector ||
                                z.oMatchesSelector ||
                                z.msMatchesSelector)
                            )) &&
                              r(function(e) {
                                ;(_.disconnectedMatch = q.call(e, '*')),
                                  q.call(e, "[s!='']:x"),
                                  H.push('!=', oe)
                              }),
                            (P = P.length && new RegExp(P.join('|'))),
                            (H = H.length && new RegExp(H.join('|'))),
                            (t = me.test(z.compareDocumentPosition)),
                            (M =
                              t || me.test(z.contains)
                                ? function(e, t) {
                                    var n =
                                        9 === e.nodeType
                                          ? e.documentElement
                                          : e,
                                      i = t && t.parentNode
                                    return (
                                      e === i ||
                                      !(
                                        !i ||
                                        1 !== i.nodeType ||
                                        !(n.contains
                                          ? n.contains(i)
                                          : e.compareDocumentPosition &&
                                            16 & e.compareDocumentPosition(i))
                                      )
                                    )
                                  }
                                : function(e, t) {
                                    if (t)
                                      for (; (t = t.parentNode); ) {
                                        if (t === e) return !0
                                      }
                                    return !1
                                  }),
                            (X = t
                              ? function(e, t) {
                                  if (e === t) return (A = !0), 0
                                  var n =
                                    !e.compareDocumentPosition -
                                    !t.compareDocumentPosition
                                  return n
                                    ? n
                                    : ((n =
                                        (e.ownerDocument || e) ===
                                        (t.ownerDocument || t)
                                          ? e.compareDocumentPosition(t)
                                          : 1),
                                      1 & n ||
                                      (!_.sortDetached &&
                                        t.compareDocumentPosition(e) === n)
                                        ? e === L ||
                                          (e.ownerDocument === I && M(I, e))
                                          ? -1
                                          : t === L ||
                                            (t.ownerDocument === I && M(I, t))
                                          ? 1
                                          : j
                                          ? ee(j, e) - ee(j, t)
                                          : 0
                                        : 4 & n
                                        ? -1
                                        : 1)
                                }
                              : function(e, t) {
                                  if (e === t) return (A = !0), 0
                                  var n,
                                    i = 0,
                                    r = e.parentNode,
                                    o = t.parentNode,
                                    a = [e],
                                    l = [t]
                                  if (!r || !o)
                                    return e === L
                                      ? -1
                                      : t === L
                                      ? 1
                                      : r
                                      ? -1
                                      : o
                                      ? 1
                                      : j
                                      ? ee(j, e) - ee(j, t)
                                      : 0
                                  if (r === o) return s(e, t)
                                  for (n = e; (n = n.parentNode); ) {
                                    a.unshift(n)
                                  }
                                  for (n = t; (n = n.parentNode); ) {
                                    l.unshift(n)
                                  }
                                  for (; a[i] === l[i]; ) {
                                    i++
                                  }
                                  return i
                                    ? s(a[i], l[i])
                                    : a[i] === I
                                    ? -1
                                    : l[i] === I
                                    ? 1
                                    : 0
                                }),
                            L)
                          : L
                      }),
                      (t.matches = function(e, n) {
                        return t(e, null, null, n)
                      }),
                      (t.matchesSelector = function(e, n) {
                        if (
                          ((e.ownerDocument || e) !== L && $(e),
                          (n = n.replace(ce, "='$1']")),
                          _.matchesSelector &&
                            O &&
                            !V[n + ' '] &&
                            (!H || !H.test(n)) &&
                            (!P || !P.test(n)))
                        )
                          try {
                            var i = q.call(e, n)
                            if (
                              i ||
                              _.disconnectedMatch ||
                              (e.document && 11 !== e.document.nodeType)
                            )
                              return i
                          } catch (r) {}
                        return t(n, L, null, [e]).length > 0
                      }),
                      (t.contains = function(e, t) {
                        return (e.ownerDocument || e) !== L && $(e), M(e, t)
                      }),
                      (t.attr = function(e, t) {
                        ;(e.ownerDocument || e) !== L && $(e)
                        var n = C.attrHandle[t.toLowerCase()],
                          i =
                            n && Y.call(C.attrHandle, t.toLowerCase())
                              ? n(e, t, !O)
                              : void 0
                        return void 0 !== i
                          ? i
                          : _.attributes || !O
                          ? e.getAttribute(t)
                          : (i = e.getAttributeNode(t)) && i.specified
                          ? i.value
                          : null
                      }),
                      (t.escape = function(e) {
                        return (e + '').replace(be, _e)
                      }),
                      (t.error = function(e) {
                        throw new Error(
                          'Syntax error, unrecognized expression: ' + e
                        )
                      }),
                      (t.uniqueSort = function(e) {
                        var t,
                          n = [],
                          i = 0,
                          r = 0
                        if (
                          ((A = !_.detectDuplicates),
                          (j = !_.sortStable && e.slice(0)),
                          e.sort(X),
                          A)
                        ) {
                          for (; (t = e[r++]); ) {
                            t === e[r] && (i = n.push(r))
                          }
                          for (; i--; ) {
                            e.splice(n[i], 1)
                          }
                        }
                        return (j = null), e
                      }),
                      (T = t.getText = function(e) {
                        var t,
                          n = '',
                          i = 0,
                          r = e.nodeType
                        if (r) {
                          if (1 === r || 9 === r || 11 === r) {
                            if ('string' == typeof e.textContent)
                              return e.textContent
                            for (e = e.firstChild; e; e = e.nextSibling) {
                              n += T(e)
                            }
                          } else if (3 === r || 4 === r) return e.nodeValue
                        } else
                          for (; (t = e[i++]); ) {
                            n += T(t)
                          }
                        return n
                      }),
                      (C = t.selectors = {
                        cacheLength: 50,
                        createPseudo: i,
                        match: de,
                        attrHandle: {},
                        find: {},
                        relative: {
                          '>': { dir: 'parentNode', first: !0 },
                          ' ': { dir: 'parentNode' },
                          '+': { dir: 'previousSibling', first: !0 },
                          '~': { dir: 'previousSibling' }
                        },
                        preFilter: {
                          ATTR: function ATTR(e) {
                            return (
                              (e[1] = e[1].replace(we, xe)),
                              (e[3] = (e[3] || e[4] || e[5] || '').replace(
                                we,
                                xe
                              )),
                              '~=' === e[2] && (e[3] = ' ' + e[3] + ' '),
                              e.slice(0, 4)
                            )
                          },
                          CHILD: function CHILD(e) {
                            return (
                              (e[1] = e[1].toLowerCase()),
                              'nth' === e[1].slice(0, 3)
                                ? (e[3] || t.error(e[0]),
                                  (e[4] = +(e[4]
                                    ? e[5] + (e[6] || 1)
                                    : 2 * ('even' === e[3] || 'odd' === e[3]))),
                                  (e[5] = +(e[7] + e[8] || 'odd' === e[3])))
                                : e[3] && t.error(e[0]),
                              e
                            )
                          },
                          PSEUDO: function PSEUDO(e) {
                            var t,
                              n = !e[6] && e[2]
                            return de.CHILD.test(e[0])
                              ? null
                              : (e[3]
                                  ? (e[2] = e[4] || e[5] || '')
                                  : n &&
                                    he.test(n) &&
                                    (t = k(n, !0)) &&
                                    (t =
                                      n.indexOf(')', n.length - t) -
                                      n.length) &&
                                    ((e[0] = e[0].slice(0, t)),
                                    (e[2] = n.slice(0, t))),
                                e.slice(0, 3))
                          }
                        },
                        filter: {
                          TAG: function TAG(e) {
                            var t = e.replace(we, xe).toLowerCase()
                            return '*' === e
                              ? function() {
                                  return !0
                                }
                              : function(e) {
                                  return (
                                    e.nodeName && e.nodeName.toLowerCase() === t
                                  )
                                }
                          },
                          CLASS: function CLASS(e) {
                            var t = F[e + ' ']
                            return (
                              t ||
                              ((t = new RegExp(
                                '(^|' + ne + ')' + e + '(' + ne + '|$)'
                              )) &&
                                F(e, function(e) {
                                  return t.test(
                                    ('string' == typeof e.className &&
                                      e.className) ||
                                      ('undefined' != typeof e.getAttribute &&
                                        e.getAttribute('class')) ||
                                      ''
                                  )
                                }))
                            )
                          },
                          ATTR: function ATTR(e, n, i) {
                            return function(r) {
                              var o = t.attr(r, e)
                              return null == o
                                ? '!=' === n
                                : !n ||
                                    ((o += ''),
                                    '=' === n
                                      ? o === i
                                      : '!=' === n
                                      ? o !== i
                                      : '^=' === n
                                      ? i && 0 === o.indexOf(i)
                                      : '*=' === n
                                      ? i && o.indexOf(i) > -1
                                      : '$=' === n
                                      ? i && o.slice(-i.length) === i
                                      : '~=' === n
                                      ? (
                                          ' ' +
                                          o.replace(se, ' ') +
                                          ' '
                                        ).indexOf(i) > -1
                                      : '|=' === n &&
                                        (o === i ||
                                          o.slice(0, i.length + 1) === i + '-'))
                            }
                          },
                          CHILD: function CHILD(e, t, n, i, r) {
                            var o = 'nth' !== e.slice(0, 3),
                              s = 'last' !== e.slice(-4),
                              a = 'of-type' === t
                            return 1 === i && 0 === r
                              ? function(e) {
                                  return !!e.parentNode
                                }
                              : function(t, n, l) {
                                  var u,
                                    c,
                                    h,
                                    p,
                                    d,
                                    f,
                                    g =
                                      o !== s
                                        ? 'nextSibling'
                                        : 'previousSibling',
                                    m = t.parentNode,
                                    v = a && t.nodeName.toLowerCase(),
                                    y = !l && !a,
                                    w = !1
                                  if (m) {
                                    if (o) {
                                      for (; g; ) {
                                        for (p = t; (p = p[g]); ) {
                                          if (
                                            a
                                              ? p.nodeName.toLowerCase() === v
                                              : 1 === p.nodeType
                                          )
                                            return !1
                                        }
                                        f = g =
                                          'only' === e && !f && 'nextSibling'
                                      }
                                      return !0
                                    }
                                    if (
                                      ((f = [s ? m.firstChild : m.lastChild]),
                                      s && y)
                                    ) {
                                      for (
                                        p = m,
                                          h = p[R] || (p[R] = {}),
                                          c =
                                            h[p.uniqueID] ||
                                            (h[p.uniqueID] = {}),
                                          u = c[e] || [],
                                          d = u[0] === B && u[1],
                                          w = d && u[2],
                                          p = d && m.childNodes[d];
                                        (p =
                                          (++d && p && p[g]) ||
                                          (w = d = 0) ||
                                          f.pop());

                                      ) {
                                        if (
                                          1 === p.nodeType &&
                                          ++w &&
                                          p === t
                                        ) {
                                          c[e] = [B, d, w]
                                          break
                                        }
                                      }
                                    } else if (
                                      (y &&
                                        ((p = t),
                                        (h = p[R] || (p[R] = {})),
                                        (c =
                                          h[p.uniqueID] ||
                                          (h[p.uniqueID] = {})),
                                        (u = c[e] || []),
                                        (d = u[0] === B && u[1]),
                                        (w = d)),
                                      w === !1)
                                    )
                                      for (
                                        ;
                                        (p =
                                          (++d && p && p[g]) ||
                                          (w = d = 0) ||
                                          f.pop()) &&
                                        ((a
                                          ? p.nodeName.toLowerCase() !== v
                                          : 1 !== p.nodeType) ||
                                          !++w ||
                                          (y &&
                                            ((h = p[R] || (p[R] = {})),
                                            (c =
                                              h[p.uniqueID] ||
                                              (h[p.uniqueID] = {})),
                                            (c[e] = [B, w])),
                                          p !== t));

                                      ) {}
                                    return (
                                      (w -= r),
                                      w === i || (w % i === 0 && w / i >= 0)
                                    )
                                  }
                                }
                          },
                          PSEUDO: function PSEUDO(e, n) {
                            var r,
                              o =
                                C.pseudos[e] ||
                                C.setFilters[e.toLowerCase()] ||
                                t.error('unsupported pseudo: ' + e)
                            return o[R]
                              ? o(n)
                              : o.length > 1
                              ? ((r = [e, e, '', n]),
                                C.setFilters.hasOwnProperty(e.toLowerCase())
                                  ? i(function(e, t) {
                                      for (
                                        var i, r = o(e, n), s = r.length;
                                        s--;

                                      ) {
                                        ;(i = ee(e, r[s])),
                                          (e[i] = !(t[i] = r[s]))
                                      }
                                    })
                                  : function(e) {
                                      return o(e, 0, r)
                                    })
                              : o
                          }
                        },
                        pseudos: {
                          not: i(function(e) {
                            var t = [],
                              n = [],
                              r = S(e.replace(ae, '$1'))
                            return r[R]
                              ? i(function(e, t, n, i) {
                                  for (
                                    var o, s = r(e, null, i, []), a = e.length;
                                    a--;

                                  ) {
                                    ;(o = s[a]) && (e[a] = !(t[a] = o))
                                  }
                                })
                              : function(e, i, o) {
                                  return (
                                    (t[0] = e),
                                    r(t, null, o, n),
                                    (t[0] = null),
                                    !n.pop()
                                  )
                                }
                          }),
                          has: i(function(e) {
                            return function(n) {
                              return t(e, n).length > 0
                            }
                          }),
                          contains: i(function(e) {
                            return (
                              (e = e.replace(we, xe)),
                              function(t) {
                                return (
                                  (
                                    t.textContent ||
                                    t.innerText ||
                                    T(t)
                                  ).indexOf(e) > -1
                                )
                              }
                            )
                          }),
                          lang: i(function(e) {
                            return (
                              pe.test(e || '') ||
                                t.error('unsupported lang: ' + e),
                              (e = e.replace(we, xe).toLowerCase()),
                              function(t) {
                                var n
                                do {
                                  if (
                                    (n = O
                                      ? t.lang
                                      : t.getAttribute('xml:lang') ||
                                        t.getAttribute('lang'))
                                  )
                                    return (
                                      (n = n.toLowerCase()),
                                      n === e || 0 === n.indexOf(e + '-')
                                    )
                                } while ((t = t.parentNode) && 1 === t.nodeType)
                                return !1
                              }
                            )
                          }),
                          target: function target(t) {
                            var n = e.location && e.location.hash
                            return n && n.slice(1) === t.id
                          },
                          root: function root(e) {
                            return e === z
                          },
                          focus: function focus(e) {
                            return (
                              e === L.activeElement &&
                              (!L.hasFocus || L.hasFocus()) &&
                              !!(e.type || e.href || ~e.tabIndex)
                            )
                          },
                          enabled: u(!1),
                          disabled: u(!0),
                          checked: function checked(e) {
                            var t = e.nodeName.toLowerCase()
                            return (
                              ('input' === t && !!e.checked) ||
                              ('option' === t && !!e.selected)
                            )
                          },
                          selected: function selected(e) {
                            return (
                              e.parentNode && e.parentNode.selectedIndex,
                              e.selected === !0
                            )
                          },
                          empty: function empty(e) {
                            for (e = e.firstChild; e; e = e.nextSibling) {
                              if (e.nodeType < 6) return !1
                            }
                            return !0
                          },
                          parent: function parent(e) {
                            return !C.pseudos.empty(e)
                          },
                          header: function header(e) {
                            return ge.test(e.nodeName)
                          },
                          input: function input(e) {
                            return fe.test(e.nodeName)
                          },
                          button: function button(e) {
                            var t = e.nodeName.toLowerCase()
                            return (
                              ('input' === t && 'button' === e.type) ||
                              'button' === t
                            )
                          },
                          text: function text(e) {
                            var t
                            return (
                              'input' === e.nodeName.toLowerCase() &&
                              'text' === e.type &&
                              (null == (t = e.getAttribute('type')) ||
                                'text' === t.toLowerCase())
                            )
                          },
                          first: c(function() {
                            return [0]
                          }),
                          last: c(function(e, t) {
                            return [t - 1]
                          }),
                          eq: c(function(e, t, n) {
                            return [n < 0 ? n + t : n]
                          }),
                          even: c(function(e, t) {
                            for (var n = 0; n < t; n += 2) {
                              e.push(n)
                            }
                            return e
                          }),
                          odd: c(function(e, t) {
                            for (var n = 1; n < t; n += 2) {
                              e.push(n)
                            }
                            return e
                          }),
                          lt: c(function(e, t, n) {
                            for (var i = n < 0 ? n + t : n; --i >= 0; ) {
                              e.push(i)
                            }
                            return e
                          }),
                          gt: c(function(e, t, n) {
                            for (var i = n < 0 ? n + t : n; ++i < t; ) {
                              e.push(i)
                            }
                            return e
                          })
                        }
                      }),
                      (C.pseudos.nth = C.pseudos.eq)
                    for (b in {
                      radio: !0,
                      checkbox: !0,
                      file: !0,
                      password: !0,
                      image: !0
                    }) {
                      C.pseudos[b] = a(b)
                    }
                    for (b in { submit: !0, reset: !0 }) {
                      C.pseudos[b] = l(b)
                    }
                    return (
                      (p.prototype = C.filters = C.pseudos),
                      (C.setFilters = new p()),
                      (k = t.tokenize = function(e, n) {
                        var i,
                          r,
                          o,
                          s,
                          a,
                          l,
                          u,
                          c = U[e + ' ']
                        if (c) return n ? 0 : c.slice(0)
                        for (a = e, l = [], u = C.preFilter; a; ) {
                          ;(i && !(r = le.exec(a))) ||
                            (r && (a = a.slice(r[0].length) || a),
                            l.push((o = []))),
                            (i = !1),
                            (r = ue.exec(a)) &&
                              ((i = r.shift()),
                              o.push({ value: i, type: r[0].replace(ae, ' ') }),
                              (a = a.slice(i.length)))
                          for (s in C.filter) {
                            !(r = de[s].exec(a)) ||
                              (u[s] && !(r = u[s](r))) ||
                              ((i = r.shift()),
                              o.push({ value: i, type: s, matches: r }),
                              (a = a.slice(i.length)))
                          }
                          if (!i) break
                        }
                        return n ? a.length : a ? t.error(e) : U(e, l).slice(0)
                      }),
                      (S = t.compile = function(e, t) {
                        var n,
                          i = [],
                          r = [],
                          o = V[e + ' ']
                        if (!o) {
                          for (t || (t = k(e)), n = t.length; n--; ) {
                            ;(o = w(t[n])), o[R] ? i.push(o) : r.push(o)
                          }
                          ;(o = V(e, x(r, i))), (o.selector = e)
                        }
                        return o
                      }),
                      (D = t.select = function(e, t, n, i) {
                        var r,
                          o,
                          s,
                          a,
                          l,
                          u = 'function' == typeof e && e,
                          c = !i && k((e = u.selector || e))
                        if (((n = n || []), 1 === c.length)) {
                          if (
                            ((o = c[0] = c[0].slice(0)),
                            o.length > 2 &&
                              'ID' === (s = o[0]).type &&
                              9 === t.nodeType &&
                              O &&
                              C.relative[o[1].type])
                          ) {
                            if (
                              ((t = (C.find.ID(
                                s.matches[0].replace(we, xe),
                                t
                              ) || [])[0]),
                              !t)
                            )
                              return n
                            u && (t = t.parentNode),
                              (e = e.slice(o.shift().value.length))
                          }
                          for (
                            r = de.needsContext.test(e) ? 0 : o.length;
                            r-- && ((s = o[r]), !C.relative[(a = s.type)]);

                          ) {
                            if (
                              (l = C.find[a]) &&
                              (i = l(
                                s.matches[0].replace(we, xe),
                                (ye.test(o[0].type) && h(t.parentNode)) || t
                              ))
                            ) {
                              if ((o.splice(r, 1), (e = i.length && d(o)), !e))
                                return Q.apply(n, i), n
                              break
                            }
                          }
                        }
                        return (
                          (u || S(e, c))(
                            i,
                            t,
                            !O,
                            n,
                            !t || (ye.test(e) && h(t.parentNode)) || t
                          ),
                          n
                        )
                      }),
                      (_.sortStable =
                        R.split('')
                          .sort(X)
                          .join('') === R),
                      (_.detectDuplicates = !!A),
                      $(),
                      (_.sortDetached = r(function(e) {
                        return (
                          1 &
                          e.compareDocumentPosition(L.createElement('fieldset'))
                        )
                      })),
                      r(function(e) {
                        return (
                          (e.innerHTML = "<a href='#'></a>"),
                          '#' === e.firstChild.getAttribute('href')
                        )
                      }) ||
                        o('type|href|height|width', function(e, t, n) {
                          if (!n)
                            return e.getAttribute(
                              t,
                              'type' === t.toLowerCase() ? 1 : 2
                            )
                        }),
                      (_.attributes &&
                        r(function(e) {
                          return (
                            (e.innerHTML = '<input/>'),
                            e.firstChild.setAttribute('value', ''),
                            '' === e.firstChild.getAttribute('value')
                          )
                        })) ||
                        o('value', function(e, t, n) {
                          if (!n && 'input' === e.nodeName.toLowerCase())
                            return e.defaultValue
                        }),
                      r(function(e) {
                        return null == e.getAttribute('disabled')
                      }) ||
                        o(te, function(e, t, n) {
                          var i
                          if (!n)
                            return e[t] === !0
                              ? t.toLowerCase()
                              : (i = e.getAttributeNode(t)) && i.specified
                              ? i.value
                              : null
                        }),
                      t
                    )
                  })(n)
                  ;(ke.find = De),
                    (ke.expr = De.selectors),
                    (ke.expr[':'] = ke.expr.pseudos),
                    (ke.uniqueSort = ke.unique = De.uniqueSort),
                    (ke.text = De.getText),
                    (ke.isXMLDoc = De.isXML),
                    (ke.contains = De.contains),
                    (ke.escapeSelector = De.escape)
                  var Ne = function Ne(e, t, n) {
                      for (
                        var i = [], r = void 0 !== n;
                        (e = e[t]) && 9 !== e.nodeType;

                      ) {
                        if (1 === e.nodeType) {
                          if (r && ke(e).is(n)) break
                          i.push(e)
                        }
                      }
                      return i
                    },
                    je = function je(e, t) {
                      for (var n = []; e; e = e.nextSibling) {
                        1 === e.nodeType && e !== t && n.push(e)
                      }
                      return n
                    },
                    Ae = ke.expr.match.needsContext,
                    $e = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i
                  ;(ke.filter = function(e, t, n) {
                    var i = t[0]
                    return (
                      n && (e = ':not(' + e + ')'),
                      1 === t.length && 1 === i.nodeType
                        ? ke.find.matchesSelector(i, e)
                          ? [i]
                          : []
                        : ke.find.matches(
                            e,
                            ke.grep(t, function(e) {
                              return 1 === e.nodeType
                            })
                          )
                    )
                  }),
                    ke.fn.extend({
                      find: function find(e) {
                        var t,
                          n,
                          i = this.length,
                          r = this
                        if ('string' != typeof e)
                          return this.pushStack(
                            ke(e).filter(function() {
                              for (t = 0; t < i; t++) {
                                if (ke.contains(r[t], this)) return !0
                              }
                            })
                          )
                        for (n = this.pushStack([]), t = 0; t < i; t++) {
                          ke.find(e, r[t], n)
                        }
                        return i > 1 ? ke.uniqueSort(n) : n
                      },
                      filter: function filter(e) {
                        return this.pushStack(c(this, e || [], !1))
                      },
                      not: function not(e) {
                        return this.pushStack(c(this, e || [], !0))
                      },
                      is: function is(e) {
                        return !!c(
                          this,
                          'string' == typeof e && Ae.test(e) ? ke(e) : e || [],
                          !1
                        ).length
                      }
                    })
                  var Le,
                    ze = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,
                    Oe = (ke.fn.init = function(e, t, n) {
                      var i, r
                      if (!e) return this
                      if (((n = n || Le), 'string' == typeof e)) {
                        if (
                          ((i =
                            '<' === e[0] &&
                            '>' === e[e.length - 1] &&
                            e.length >= 3
                              ? [null, e, null]
                              : ze.exec(e)),
                          !i || (!i[1] && t))
                        )
                          return !t || t.jquery
                            ? (t || n).find(e)
                            : this.constructor(t).find(e)
                        if (i[1]) {
                          if (
                            ((t = t instanceof ke ? t[0] : t),
                            ke.merge(
                              this,
                              ke.parseHTML(
                                i[1],
                                t && t.nodeType ? t.ownerDocument || t : ce,
                                !0
                              )
                            ),
                            $e.test(i[1]) && ke.isPlainObject(t))
                          )
                            for (i in t) {
                              _e(this[i]) ? this[i](t[i]) : this.attr(i, t[i])
                            }
                          return this
                        }
                        return (
                          (r = ce.getElementById(i[2])),
                          r && ((this[0] = r), (this.length = 1)),
                          this
                        )
                      }
                      return e.nodeType
                        ? ((this[0] = e), (this.length = 1), this)
                        : _e(e)
                        ? void 0 !== n.ready
                          ? n.ready(e)
                          : e(ke)
                        : ke.makeArray(e, this)
                    })
                  ;(Oe.prototype = ke.fn), (Le = ke(ce))
                  var Pe = /^(?:parents|prev(?:Until|All))/,
                    He = { children: !0, contents: !0, next: !0, prev: !0 }
                  ke.fn.extend({
                    has: function has(e) {
                      var t = ke(e, this),
                        n = t.length
                      return this.filter(function() {
                        for (var e = 0; e < n; e++) {
                          if (ke.contains(this, t[e])) return !0
                        }
                      })
                    },
                    closest: function closest(e, t) {
                      var n,
                        i = 0,
                        r = this.length,
                        o = [],
                        s = 'string' != typeof e && ke(e)
                      if (!Ae.test(e))
                        for (; i < r; i++) {
                          for (n = this[i]; n && n !== t; n = n.parentNode) {
                            if (
                              n.nodeType < 11 &&
                              (s
                                ? s.index(n) > -1
                                : 1 === n.nodeType &&
                                  ke.find.matchesSelector(n, e))
                            ) {
                              o.push(n)
                              break
                            }
                          }
                        }
                      return this.pushStack(o.length > 1 ? ke.uniqueSort(o) : o)
                    },
                    index: function index(e) {
                      return e
                        ? 'string' == typeof e
                          ? ge.call(ke(e), this[0])
                          : ge.call(this, e.jquery ? e[0] : e)
                        : this[0] && this[0].parentNode
                        ? this.first().prevAll().length
                        : -1
                    },
                    add: function add(e, t) {
                      return this.pushStack(
                        ke.uniqueSort(ke.merge(this.get(), ke(e, t)))
                      )
                    },
                    addBack: function addBack(e) {
                      return this.add(
                        null == e ? this.prevObject : this.prevObject.filter(e)
                      )
                    }
                  }),
                    ke.each(
                      {
                        parent: function parent(e) {
                          var t = e.parentNode
                          return t && 11 !== t.nodeType ? t : null
                        },
                        parents: function parents(e) {
                          return Ne(e, 'parentNode')
                        },
                        parentsUntil: function parentsUntil(e, t, n) {
                          return Ne(e, 'parentNode', n)
                        },
                        next: function next(e) {
                          return h(e, 'nextSibling')
                        },
                        prev: function prev(e) {
                          return h(e, 'previousSibling')
                        },
                        nextAll: function nextAll(e) {
                          return Ne(e, 'nextSibling')
                        },
                        prevAll: function prevAll(e) {
                          return Ne(e, 'previousSibling')
                        },
                        nextUntil: function nextUntil(e, t, n) {
                          return Ne(e, 'nextSibling', n)
                        },
                        prevUntil: function prevUntil(e, t, n) {
                          return Ne(e, 'previousSibling', n)
                        },
                        siblings: function siblings(e) {
                          return je((e.parentNode || {}).firstChild, e)
                        },
                        children: function children(e) {
                          return je(e.firstChild)
                        },
                        contents: function contents(e) {
                          return u(e, 'iframe')
                            ? e.contentDocument
                            : (u(e, 'template') && (e = e.content || e),
                              ke.merge([], e.childNodes))
                        }
                      },
                      function(e, t) {
                        ke.fn[e] = function(n, i) {
                          var r = ke.map(this, t, n)
                          return (
                            'Until' !== e.slice(-5) && (i = n),
                            i && 'string' == typeof i && (r = ke.filter(i, r)),
                            this.length > 1 &&
                              (He[e] || ke.uniqueSort(r),
                              Pe.test(e) && r.reverse()),
                            this.pushStack(r)
                          )
                        }
                      }
                    )
                  var qe = /[^\x20\t\r\n\f]+/g
                  ;(ke.Callbacks = function(e) {
                    e = 'string' == typeof e ? p(e) : ke.extend({}, e)
                    var t,
                      n,
                      i,
                      r,
                      o = [],
                      s = [],
                      l = -1,
                      u = function u() {
                        for (r = r || e.once, i = t = !0; s.length; l = -1) {
                          for (n = s.shift(); ++l < o.length; ) {
                            o[l].apply(n[0], n[1]) === !1 &&
                              e.stopOnFalse &&
                              ((l = o.length), (n = !1))
                          }
                        }
                        e.memory || (n = !1), (t = !1), r && (o = n ? [] : '')
                      },
                      c = {
                        add: function add() {
                          return (
                            o &&
                              (n && !t && ((l = o.length - 1), s.push(n)),
                              (function i(t) {
                                ke.each(t, function(t, n) {
                                  _e(n)
                                    ? (e.unique && c.has(n)) || o.push(n)
                                    : n && n.length && 'string' !== a(n) && i(n)
                                })
                              })(arguments),
                              n && !t && u()),
                            this
                          )
                        },
                        remove: function remove() {
                          return (
                            ke.each(arguments, function(e, t) {
                              for (var n; (n = ke.inArray(t, o, n)) > -1; ) {
                                o.splice(n, 1), n <= l && l--
                              }
                            }),
                            this
                          )
                        },
                        has: function has(e) {
                          return e ? ke.inArray(e, o) > -1 : o.length > 0
                        },
                        empty: function empty() {
                          return o && (o = []), this
                        },
                        disable: function disable() {
                          return (r = s = []), (o = n = ''), this
                        },
                        disabled: function disabled() {
                          return !o
                        },
                        lock: function lock() {
                          return (r = s = []), n || t || (o = n = ''), this
                        },
                        locked: function locked() {
                          return !!r
                        },
                        fireWith: function fireWith(e, n) {
                          return (
                            r ||
                              ((n = n || []),
                              (n = [e, n.slice ? n.slice() : n]),
                              s.push(n),
                              t || u()),
                            this
                          )
                        },
                        fire: function fire() {
                          return c.fireWith(this, arguments), this
                        },
                        fired: function fired() {
                          return !!i
                        }
                      }
                    return c
                  }),
                    ke.extend({
                      Deferred: function Deferred(e) {
                        var t = [
                            [
                              'notify',
                              'progress',
                              ke.Callbacks('memory'),
                              ke.Callbacks('memory'),
                              2
                            ],
                            [
                              'resolve',
                              'done',
                              ke.Callbacks('once memory'),
                              ke.Callbacks('once memory'),
                              0,
                              'resolved'
                            ],
                            [
                              'reject',
                              'fail',
                              ke.Callbacks('once memory'),
                              ke.Callbacks('once memory'),
                              1,
                              'rejected'
                            ]
                          ],
                          i = 'pending',
                          r = {
                            state: function state() {
                              return i
                            },
                            always: function always() {
                              return o.done(arguments).fail(arguments), this
                            },
                            catch: function _catch(e) {
                              return r.then(null, e)
                            },
                            pipe: function pipe() {
                              var e = arguments
                              return ke
                                .Deferred(function(n) {
                                  ke.each(t, function(t, i) {
                                    var r = _e(e[i[4]]) && e[i[4]]
                                    o[i[1]](function() {
                                      var e = r && r.apply(this, arguments)
                                      e && _e(e.promise)
                                        ? e
                                            .promise()
                                            .progress(n.notify)
                                            .done(n.resolve)
                                            .fail(n.reject)
                                        : n[i[0] + 'With'](
                                            this,
                                            r ? [e] : arguments
                                          )
                                    })
                                  }),
                                    (e = null)
                                })
                                .promise()
                            },
                            then: function then(e, i, r) {
                              function o(e, t, i, r) {
                                return function() {
                                  var a = this,
                                    l = arguments,
                                    u = function u() {
                                      var n, u
                                      if (!(e < s)) {
                                        if (
                                          ((n = i.apply(a, l)),
                                          n === t.promise())
                                        )
                                          throw new TypeError(
                                            'Thenable self-resolution'
                                          )
                                        ;(u =
                                          n &&
                                          ('object' ==
                                            (0, _typeof3['default'])(n) ||
                                            'function' == typeof n) &&
                                          n.then),
                                          _e(u)
                                            ? r
                                              ? u.call(
                                                  n,
                                                  o(s, t, d, r),
                                                  o(s, t, f, r)
                                                )
                                              : (s++,
                                                u.call(
                                                  n,
                                                  o(s, t, d, r),
                                                  o(s, t, f, r),
                                                  o(s, t, d, t.notifyWith)
                                                ))
                                            : (i !== d &&
                                                ((a = void 0), (l = [n])),
                                              (r || t.resolveWith)(a, l))
                                      }
                                    },
                                    c = r
                                      ? u
                                      : function() {
                                          try {
                                            u()
                                          } catch (n) {
                                            ke.Deferred.exceptionHook &&
                                              ke.Deferred.exceptionHook(
                                                n,
                                                c.stackTrace
                                              ),
                                              e + 1 >= s &&
                                                (i !== f &&
                                                  ((a = void 0), (l = [n])),
                                                t.rejectWith(a, l))
                                          }
                                        }
                                  e
                                    ? c()
                                    : (ke.Deferred.getStackHook &&
                                        (c.stackTrace = ke.Deferred.getStackHook()),
                                      n.setTimeout(c))
                                }
                              }
                              var s = 0
                              return ke
                                .Deferred(function(n) {
                                  t[0][3].add(
                                    o(0, n, _e(r) ? r : d, n.notifyWith)
                                  ),
                                    t[1][3].add(o(0, n, _e(e) ? e : d)),
                                    t[2][3].add(o(0, n, _e(i) ? i : f))
                                })
                                .promise()
                            },
                            promise: function promise(e) {
                              return null != e ? ke.extend(e, r) : r
                            }
                          },
                          o = {}
                        return (
                          ke.each(t, function(e, n) {
                            var s = n[2],
                              a = n[5]
                            ;(r[n[1]] = s.add),
                              a &&
                                s.add(
                                  function() {
                                    i = a
                                  },
                                  t[3 - e][2].disable,
                                  t[3 - e][3].disable,
                                  t[0][2].lock,
                                  t[0][3].lock
                                ),
                              s.add(n[3].fire),
                              (o[n[0]] = function() {
                                return (
                                  o[n[0] + 'With'](
                                    this === o ? void 0 : this,
                                    arguments
                                  ),
                                  this
                                )
                              }),
                              (o[n[0] + 'With'] = s.fireWith)
                          }),
                          r.promise(o),
                          e && e.call(o, o),
                          o
                        )
                      },
                      when: function when(e) {
                        var t = arguments.length,
                          n = t,
                          i = Array(n),
                          r = pe.call(arguments),
                          o = ke.Deferred(),
                          s = function s(e) {
                            return function(n) {
                              ;(i[e] = this),
                                (r[e] =
                                  arguments.length > 1
                                    ? pe.call(arguments)
                                    : n),
                                --t || o.resolveWith(i, r)
                            }
                          }
                        if (
                          t <= 1 &&
                          (g(e, o.done(s(n)).resolve, o.reject, !t),
                          'pending' === o.state() || _e(r[n] && r[n].then))
                        )
                          return o.then()
                        for (; n--; ) {
                          g(r[n], s(n), o.reject)
                        }
                        return o.promise()
                      }
                    })
                  var Me = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/
                  ;(ke.Deferred.exceptionHook = function(e, t) {
                    n.console &&
                      n.console.warn &&
                      e &&
                      Me.test(e.name) &&
                      n.console.warn(
                        'jQuery.Deferred exception: ' + e.message,
                        e.stack,
                        t
                      )
                  }),
                    (ke.readyException = function(e) {
                      n.setTimeout(function() {
                        throw e
                      })
                    })
                  var Re = ke.Deferred()
                  ;(ke.fn.ready = function(e) {
                    return (
                      Re.then(e)['catch'](function(e) {
                        ke.readyException(e)
                      }),
                      this
                    )
                  }),
                    ke.extend({
                      isReady: !1,
                      readyWait: 1,
                      ready: function ready(e) {
                        ;(e === !0 ? --ke.readyWait : ke.isReady) ||
                          ((ke.isReady = !0),
                          (e !== !0 && --ke.readyWait > 0) ||
                            Re.resolveWith(ce, [ke]))
                      }
                    }),
                    (ke.ready.then = Re.then),
                    'complete' === ce.readyState ||
                    ('loading' !== ce.readyState &&
                      !ce.documentElement.doScroll)
                      ? n.setTimeout(ke.ready)
                      : (ce.addEventListener('DOMContentLoaded', m),
                        n.addEventListener('load', m))
                  var Ie = function Ie(e, t, n, i, r, o, s) {
                      var l = 0,
                        u = e.length,
                        c = null == n
                      if ('object' === a(n)) {
                        r = !0
                        for (l in n) {
                          Ie(e, t, l, n[l], !0, o, s)
                        }
                      } else if (
                        void 0 !== i &&
                        ((r = !0),
                        _e(i) || (s = !0),
                        c &&
                          (s
                            ? (t.call(e, i), (t = null))
                            : ((c = t),
                              (t = function t(e, _t2, n) {
                                return c.call(ke(e), n)
                              }))),
                        t)
                      )
                        for (; l < u; l++) {
                          t(e[l], n, s ? i : i.call(e[l], l, t(e[l], n)))
                        }
                      return r ? e : c ? t.call(e) : u ? t(e[0], n) : o
                    },
                    Be = /^-ms-/,
                    We = /-([a-z])/g,
                    Fe = function Fe(e) {
                      return (
                        1 === e.nodeType || 9 === e.nodeType || !+e.nodeType
                      )
                    }
                  ;(w.uid = 1),
                    (w.prototype = {
                      cache: function cache(e) {
                        var t = e[this.expando]
                        return (
                          t ||
                            ((t = {}),
                            Fe(e) &&
                              (e.nodeType
                                ? (e[this.expando] = t)
                                : Object.defineProperty(e, this.expando, {
                                    value: t,
                                    configurable: !0
                                  }))),
                          t
                        )
                      },
                      set: function set(e, t, n) {
                        var i,
                          r = this.cache(e)
                        if ('string' == typeof t) r[y(t)] = n
                        else
                          for (i in t) {
                            r[y(i)] = t[i]
                          }
                        return r
                      },
                      get: function get(e, t) {
                        return void 0 === t
                          ? this.cache(e)
                          : e[this.expando] && e[this.expando][y(t)]
                      },
                      access: function access(e, t, n) {
                        return void 0 === t ||
                          (t && 'string' == typeof t && void 0 === n)
                          ? this.get(e, t)
                          : (this.set(e, t, n), void 0 !== n ? n : t)
                      },
                      remove: function remove(e, t) {
                        var n,
                          i = e[this.expando]
                        if (void 0 !== i) {
                          if (void 0 !== t) {
                            Array.isArray(t)
                              ? (t = t.map(y))
                              : ((t = y(t)),
                                (t = t in i ? [t] : t.match(qe) || [])),
                              (n = t.length)
                            for (; n--; ) {
                              delete i[t[n]]
                            }
                          }
                          ;(void 0 === t || ke.isEmptyObject(i)) &&
                            (e.nodeType
                              ? (e[this.expando] = void 0)
                              : delete e[this.expando])
                        }
                      },
                      hasData: function hasData(e) {
                        var t = e[this.expando]
                        return void 0 !== t && !ke.isEmptyObject(t)
                      }
                    })
                  var Ue = new w(),
                    Ve = new w(),
                    Xe = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
                    Ye = /[A-Z]/g
                  ke.extend({
                    hasData: function hasData(e) {
                      return Ve.hasData(e) || Ue.hasData(e)
                    },
                    data: function data(e, t, n) {
                      return Ve.access(e, t, n)
                    },
                    removeData: function removeData(e, t) {
                      Ve.remove(e, t)
                    },
                    _data: function _data(e, t, n) {
                      return Ue.access(e, t, n)
                    },
                    _removeData: function _removeData(e, t) {
                      Ue.remove(e, t)
                    }
                  }),
                    ke.fn.extend({
                      data: function data(e, t) {
                        var n,
                          i,
                          r,
                          o = this[0],
                          s = o && o.attributes
                        if (void 0 === e) {
                          if (
                            this.length &&
                            ((r = Ve.get(o)),
                            1 === o.nodeType && !Ue.get(o, 'hasDataAttrs'))
                          ) {
                            for (n = s.length; n--; ) {
                              s[n] &&
                                ((i = s[n].name),
                                0 === i.indexOf('data-') &&
                                  ((i = y(i.slice(5))), b(o, i, r[i])))
                            }
                            Ue.set(o, 'hasDataAttrs', !0)
                          }
                          return r
                        }
                        return 'object' == (0, _typeof3['default'])(e)
                          ? this.each(function() {
                              Ve.set(this, e)
                            })
                          : Ie(
                              this,
                              function(t) {
                                var n
                                if (o && void 0 === t) {
                                  if (((n = Ve.get(o, e)), void 0 !== n))
                                    return n
                                  if (((n = b(o, e)), void 0 !== n)) return n
                                } else
                                  this.each(function() {
                                    Ve.set(this, e, t)
                                  })
                              },
                              null,
                              t,
                              arguments.length > 1,
                              null,
                              !0
                            )
                      },
                      removeData: function removeData(e) {
                        return this.each(function() {
                          Ve.remove(this, e)
                        })
                      }
                    }),
                    ke.extend({
                      queue: function queue(e, t, n) {
                        var i
                        if (e)
                          return (
                            (t = (t || 'fx') + 'queue'),
                            (i = Ue.get(e, t)),
                            n &&
                              (!i || Array.isArray(n)
                                ? (i = Ue.access(e, t, ke.makeArray(n)))
                                : i.push(n)),
                            i || []
                          )
                      },
                      dequeue: function dequeue(e, t) {
                        t = t || 'fx'
                        var n = ke.queue(e, t),
                          i = n.length,
                          r = n.shift(),
                          o = ke._queueHooks(e, t),
                          s = function s() {
                            ke.dequeue(e, t)
                          }
                        'inprogress' === r && ((r = n.shift()), i--),
                          r &&
                            ('fx' === t && n.unshift('inprogress'),
                            delete o.stop,
                            r.call(e, s, o)),
                          !i && o && o.empty.fire()
                      },
                      _queueHooks: function _queueHooks(e, t) {
                        var n = t + 'queueHooks'
                        return (
                          Ue.get(e, n) ||
                          Ue.access(e, n, {
                            empty: ke.Callbacks('once memory').add(function() {
                              Ue.remove(e, [t + 'queue', n])
                            })
                          })
                        )
                      }
                    }),
                    ke.fn.extend({
                      queue: function queue(e, t) {
                        var n = 2
                        return (
                          'string' != typeof e && ((t = e), (e = 'fx'), n--),
                          arguments.length < n
                            ? ke.queue(this[0], e)
                            : void 0 === t
                            ? this
                            : this.each(function() {
                                var n = ke.queue(this, e, t)
                                ke._queueHooks(this, e),
                                  'fx' === e &&
                                    'inprogress' !== n[0] &&
                                    ke.dequeue(this, e)
                              })
                        )
                      },
                      dequeue: function dequeue(e) {
                        return this.each(function() {
                          ke.dequeue(this, e)
                        })
                      },
                      clearQueue: function clearQueue(e) {
                        return this.queue(e || 'fx', [])
                      },
                      promise: function promise(e, t) {
                        var n,
                          i = 1,
                          r = ke.Deferred(),
                          o = this,
                          s = this.length,
                          a = function a() {
                            --i || r.resolveWith(o, [o])
                          }
                        for (
                          'string' != typeof e && ((t = e), (e = void 0)),
                            e = e || 'fx';
                          s--;

                        ) {
                          ;(n = Ue.get(o[s], e + 'queueHooks')),
                            n && n.empty && (i++, n.empty.add(a))
                        }
                        return a(), r.promise(t)
                      }
                    })
                  var Ge = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
                    Ze = new RegExp('^(?:([+-])=|)(' + Ge + ')([a-z%]*)$', 'i'),
                    Je = ['Top', 'Right', 'Bottom', 'Left'],
                    Qe = function Qe(e, t) {
                      return (
                        (e = t || e),
                        'none' === e.style.display ||
                          ('' === e.style.display &&
                            ke.contains(e.ownerDocument, e) &&
                            'none' === ke.css(e, 'display'))
                      )
                    },
                    Ke = function Ke(e, t, n, i) {
                      var r,
                        o,
                        s = {}
                      for (o in t) {
                        ;(s[o] = e.style[o]), (e.style[o] = t[o])
                      }
                      r = n.apply(e, i || [])
                      for (o in t) {
                        e.style[o] = s[o]
                      }
                      return r
                    },
                    et = {}
                  ke.fn.extend({
                    show: function show() {
                      return T(this, !0)
                    },
                    hide: function hide() {
                      return T(this)
                    },
                    toggle: function toggle(e) {
                      return 'boolean' == typeof e
                        ? e
                          ? this.show()
                          : this.hide()
                        : this.each(function() {
                            Qe(this) ? ke(this).show() : ke(this).hide()
                          })
                    }
                  })
                  var tt = /^(?:checkbox|radio)$/i,
                    nt = /<([a-z][^\/\0>\x20\t\r\n\f]+)/i,
                    it = /^$|^module$|\/(?:java|ecma)script/i,
                    rt = {
                      option: [1, "<select multiple='multiple'>", '</select>'],
                      thead: [1, '<table>', '</table>'],
                      col: [2, '<table><colgroup>', '</colgroup></table>'],
                      tr: [2, '<table><tbody>', '</tbody></table>'],
                      td: [3, '<table><tbody><tr>', '</tr></tbody></table>'],
                      _default: [0, '', '']
                    }
                  ;(rt.optgroup = rt.option),
                    (rt.tbody = rt.tfoot = rt.colgroup = rt.caption = rt.thead),
                    (rt.th = rt.td)
                  var ot = /<|&#?\w+;/
                  !(function() {
                    var e = ce.createDocumentFragment(),
                      t = e.appendChild(ce.createElement('div')),
                      n = ce.createElement('input')
                    n.setAttribute('type', 'radio'),
                      n.setAttribute('checked', 'checked'),
                      n.setAttribute('name', 't'),
                      t.appendChild(n),
                      (be.checkClone = t
                        .cloneNode(!0)
                        .cloneNode(!0).lastChild.checked),
                      (t.innerHTML = '<textarea>x</textarea>'),
                      (be.noCloneChecked = !!t.cloneNode(!0).lastChild
                        .defaultValue)
                  })()
                  var st = ce.documentElement,
                    at = /^key/,
                    lt = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
                    ut = /^([^.]*)(?:\.(.+)|)/
                  ;(ke.event = {
                    global: {},
                    add: function add(e, t, n, i, r) {
                      var o,
                        s,
                        a,
                        l,
                        u,
                        c,
                        h,
                        p,
                        d,
                        f,
                        g,
                        m = Ue.get(e)
                      if (m)
                        for (
                          n.handler &&
                            ((o = n), (n = o.handler), (r = o.selector)),
                            r && ke.find.matchesSelector(st, r),
                            n.guid || (n.guid = ke.guid++),
                            (l = m.events) || (l = m.events = {}),
                            (s = m.handle) ||
                              (s = m.handle = function(t) {
                                return 'undefined' != typeof ke &&
                                  ke.event.triggered !== t.type
                                  ? ke.event.dispatch.apply(e, arguments)
                                  : void 0
                              }),
                            t = (t || '').match(qe) || [''],
                            u = t.length;
                          u--;

                        ) {
                          ;(a = ut.exec(t[u]) || []),
                            (d = g = a[1]),
                            (f = (a[2] || '').split('.').sort()),
                            d &&
                              ((h = ke.event.special[d] || {}),
                              (d = (r ? h.delegateType : h.bindType) || d),
                              (h = ke.event.special[d] || {}),
                              (c = ke.extend(
                                {
                                  type: d,
                                  origType: g,
                                  data: i,
                                  handler: n,
                                  guid: n.guid,
                                  selector: r,
                                  needsContext:
                                    r && ke.expr.match.needsContext.test(r),
                                  namespace: f.join('.')
                                },
                                o
                              )),
                              (p = l[d]) ||
                                ((p = l[d] = []),
                                (p.delegateCount = 0),
                                (h.setup && h.setup.call(e, i, f, s) !== !1) ||
                                  (e.addEventListener &&
                                    e.addEventListener(d, s))),
                              h.add &&
                                (h.add.call(e, c),
                                c.handler.guid || (c.handler.guid = n.guid)),
                              r ? p.splice(p.delegateCount++, 0, c) : p.push(c),
                              (ke.event.global[d] = !0))
                        }
                    },
                    remove: function remove(e, t, n, i, r) {
                      var o,
                        s,
                        a,
                        l,
                        u,
                        c,
                        h,
                        p,
                        d,
                        f,
                        g,
                        m = Ue.hasData(e) && Ue.get(e)
                      if (m && (l = m.events)) {
                        for (
                          t = (t || '').match(qe) || [''], u = t.length;
                          u--;

                        ) {
                          if (
                            ((a = ut.exec(t[u]) || []),
                            (d = g = a[1]),
                            (f = (a[2] || '').split('.').sort()),
                            d)
                          ) {
                            for (
                              h = ke.event.special[d] || {},
                                d = (i ? h.delegateType : h.bindType) || d,
                                p = l[d] || [],
                                a =
                                  a[2] &&
                                  new RegExp(
                                    '(^|\\.)' +
                                      f.join('\\.(?:.*\\.|)') +
                                      '(\\.|$)'
                                  ),
                                s = o = p.length;
                              o--;

                            ) {
                              ;(c = p[o]),
                                (!r && g !== c.origType) ||
                                  (n && n.guid !== c.guid) ||
                                  (a && !a.test(c.namespace)) ||
                                  (i &&
                                    i !== c.selector &&
                                    ('**' !== i || !c.selector)) ||
                                  (p.splice(o, 1),
                                  c.selector && p.delegateCount--,
                                  h.remove && h.remove.call(e, c))
                            }
                            s &&
                              !p.length &&
                              ((h.teardown &&
                                h.teardown.call(e, f, m.handle) !== !1) ||
                                ke.removeEvent(e, d, m.handle),
                              delete l[d])
                          } else
                            for (d in l) {
                              ke.event.remove(e, d + t[u], n, i, !0)
                            }
                        }
                        ke.isEmptyObject(l) && Ue.remove(e, 'handle events')
                      }
                    },
                    dispatch: function dispatch(e) {
                      var t,
                        n,
                        i,
                        r,
                        o,
                        s,
                        a = ke.event.fix(e),
                        l = new Array(arguments.length),
                        u = (Ue.get(this, 'events') || {})[a.type] || [],
                        c = ke.event.special[a.type] || {}
                      for (l[0] = a, t = 1; t < arguments.length; t++) {
                        l[t] = arguments[t]
                      }
                      if (
                        ((a.delegateTarget = this),
                        !c.preDispatch || c.preDispatch.call(this, a) !== !1)
                      ) {
                        for (
                          s = ke.event.handlers.call(this, a, u), t = 0;
                          (r = s[t++]) && !a.isPropagationStopped();

                        ) {
                          for (
                            a.currentTarget = r.elem, n = 0;
                            (o = r.handlers[n++]) &&
                            !a.isImmediatePropagationStopped();

                          ) {
                            ;(a.rnamespace &&
                              !a.rnamespace.test(o.namespace)) ||
                              ((a.handleObj = o),
                              (a.data = o.data),
                              (i = (
                                (ke.event.special[o.origType] || {}).handle ||
                                o.handler
                              ).apply(r.elem, l)),
                              void 0 !== i &&
                                (a.result = i) === !1 &&
                                (a.preventDefault(), a.stopPropagation()))
                          }
                        }
                        return (
                          c.postDispatch && c.postDispatch.call(this, a),
                          a.result
                        )
                      }
                    },
                    handlers: function handlers(e, t) {
                      var n,
                        i,
                        r,
                        o,
                        s,
                        a = [],
                        l = t.delegateCount,
                        u = e.target
                      if (
                        l &&
                        u.nodeType &&
                        !('click' === e.type && e.button >= 1)
                      )
                        for (; u !== this; u = u.parentNode || this) {
                          if (
                            1 === u.nodeType &&
                            ('click' !== e.type || u.disabled !== !0)
                          ) {
                            for (o = [], s = {}, n = 0; n < l; n++) {
                              ;(i = t[n]),
                                (r = i.selector + ' '),
                                void 0 === s[r] &&
                                  (s[r] = i.needsContext
                                    ? ke(r, this).index(u) > -1
                                    : ke.find(r, this, null, [u]).length),
                                s[r] && o.push(i)
                            }
                            o.length && a.push({ elem: u, handlers: o })
                          }
                        }
                      return (
                        (u = this),
                        l < t.length &&
                          a.push({ elem: u, handlers: t.slice(l) }),
                        a
                      )
                    },
                    addProp: function addProp(e, t) {
                      Object.defineProperty(ke.Event.prototype, e, {
                        enumerable: !0,
                        configurable: !0,
                        get: _e(t)
                          ? function() {
                              if (this.originalEvent)
                                return t(this.originalEvent)
                            }
                          : function() {
                              if (this.originalEvent)
                                return this.originalEvent[e]
                            },
                        set: function set(t) {
                          Object.defineProperty(this, e, {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: t
                          })
                        }
                      })
                    },
                    fix: function fix(e) {
                      return e[ke.expando] ? e : new ke.Event(e)
                    },
                    special: {
                      load: { noBubble: !0 },
                      focus: {
                        trigger: function trigger() {
                          if (this !== j() && this.focus)
                            return this.focus(), !1
                        },
                        delegateType: 'focusin'
                      },
                      blur: {
                        trigger: function trigger() {
                          if (this === j() && this.blur) return this.blur(), !1
                        },
                        delegateType: 'focusout'
                      },
                      click: {
                        trigger: function trigger() {
                          if (
                            'checkbox' === this.type &&
                            this.click &&
                            u(this, 'input')
                          )
                            return this.click(), !1
                        },
                        _default: function _default(e) {
                          return u(e.target, 'a')
                        }
                      },
                      beforeunload: {
                        postDispatch: function postDispatch(e) {
                          void 0 !== e.result &&
                            e.originalEvent &&
                            (e.originalEvent.returnValue = e.result)
                        }
                      }
                    }
                  }),
                    (ke.removeEvent = function(e, t, n) {
                      e.removeEventListener && e.removeEventListener(t, n)
                    }),
                    (ke.Event = function(e, t) {
                      return this instanceof ke.Event
                        ? (e && e.type
                            ? ((this.originalEvent = e),
                              (this.type = e.type),
                              (this.isDefaultPrevented =
                                e.defaultPrevented ||
                                (void 0 === e.defaultPrevented &&
                                  e.returnValue === !1)
                                  ? D
                                  : N),
                              (this.target =
                                e.target && 3 === e.target.nodeType
                                  ? e.target.parentNode
                                  : e.target),
                              (this.currentTarget = e.currentTarget),
                              (this.relatedTarget = e.relatedTarget))
                            : (this.type = e),
                          t && ke.extend(this, t),
                          (this.timeStamp = (e && e.timeStamp) || Date.now()),
                          void (this[ke.expando] = !0))
                        : new ke.Event(e, t)
                    }),
                    (ke.Event.prototype = {
                      constructor: ke.Event,
                      isDefaultPrevented: N,
                      isPropagationStopped: N,
                      isImmediatePropagationStopped: N,
                      isSimulated: !1,
                      preventDefault: function preventDefault() {
                        var e = this.originalEvent
                        ;(this.isDefaultPrevented = D),
                          e && !this.isSimulated && e.preventDefault()
                      },
                      stopPropagation: function stopPropagation() {
                        var e = this.originalEvent
                        ;(this.isPropagationStopped = D),
                          e && !this.isSimulated && e.stopPropagation()
                      },
                      stopImmediatePropagation: function stopImmediatePropagation() {
                        var e = this.originalEvent
                        ;(this.isImmediatePropagationStopped = D),
                          e &&
                            !this.isSimulated &&
                            e.stopImmediatePropagation(),
                          this.stopPropagation()
                      }
                    }),
                    ke.each(
                      {
                        altKey: !0,
                        bubbles: !0,
                        cancelable: !0,
                        changedTouches: !0,
                        ctrlKey: !0,
                        detail: !0,
                        eventPhase: !0,
                        metaKey: !0,
                        pageX: !0,
                        pageY: !0,
                        shiftKey: !0,
                        view: !0,
                        char: !0,
                        charCode: !0,
                        key: !0,
                        keyCode: !0,
                        button: !0,
                        buttons: !0,
                        clientX: !0,
                        clientY: !0,
                        offsetX: !0,
                        offsetY: !0,
                        pointerId: !0,
                        pointerType: !0,
                        screenX: !0,
                        screenY: !0,
                        targetTouches: !0,
                        toElement: !0,
                        touches: !0,
                        which: function which(e) {
                          var t = e.button
                          return null == e.which && at.test(e.type)
                            ? null != e.charCode
                              ? e.charCode
                              : e.keyCode
                            : !e.which && void 0 !== t && lt.test(e.type)
                            ? 1 & t
                              ? 1
                              : 2 & t
                              ? 3
                              : 4 & t
                              ? 2
                              : 0
                            : e.which
                        }
                      },
                      ke.event.addProp
                    ),
                    ke.each(
                      {
                        mouseenter: 'mouseover',
                        mouseleave: 'mouseout',
                        pointerenter: 'pointerover',
                        pointerleave: 'pointerout'
                      },
                      function(e, t) {
                        ke.event.special[e] = {
                          delegateType: t,
                          bindType: t,
                          handle: function handle(e) {
                            var n,
                              i = this,
                              r = e.relatedTarget,
                              o = e.handleObj
                            return (
                              (r && (r === i || ke.contains(i, r))) ||
                                ((e.type = o.origType),
                                (n = o.handler.apply(this, arguments)),
                                (e.type = t)),
                              n
                            )
                          }
                        }
                      }
                    ),
                    ke.fn.extend({
                      on: function on(e, t, n, i) {
                        return A(this, e, t, n, i)
                      },
                      one: function one(e, t, n, i) {
                        return A(this, e, t, n, i, 1)
                      },
                      off: function off(e, t, n) {
                        var i, r
                        if (e && e.preventDefault && e.handleObj)
                          return (
                            (i = e.handleObj),
                            ke(e.delegateTarget).off(
                              i.namespace
                                ? i.origType + '.' + i.namespace
                                : i.origType,
                              i.selector,
                              i.handler
                            ),
                            this
                          )
                        if ('object' == (0, _typeof3['default'])(e)) {
                          for (r in e) {
                            this.off(r, t, e[r])
                          }
                          return this
                        }
                        return (
                          (t !== !1 && 'function' != typeof t) ||
                            ((n = t), (t = void 0)),
                          n === !1 && (n = N),
                          this.each(function() {
                            ke.event.remove(this, e, n, t)
                          })
                        )
                      }
                    })
                  var ct = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,
                    ht = /<script|<style|<link/i,
                    pt = /checked\s*(?:[^=]|=\s*.checked.)/i,
                    dt = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g
                  ke.extend({
                    htmlPrefilter: function htmlPrefilter(e) {
                      return e.replace(ct, '<$1></$2>')
                    },
                    clone: function clone(e, t, n) {
                      var i,
                        r,
                        o,
                        s,
                        a = e.cloneNode(!0),
                        l = ke.contains(e.ownerDocument, e)
                      if (
                        !(
                          be.noCloneChecked ||
                          (1 !== e.nodeType && 11 !== e.nodeType) ||
                          ke.isXMLDoc(e)
                        )
                      )
                        for (
                          s = E(a), o = E(e), i = 0, r = o.length;
                          i < r;
                          i++
                        ) {
                          P(o[i], s[i])
                        }
                      if (t)
                        if (n)
                          for (
                            o = o || E(e), s = s || E(a), i = 0, r = o.length;
                            i < r;
                            i++
                          ) {
                            O(o[i], s[i])
                          }
                        else O(e, a)
                      return (
                        (s = E(a, 'script')),
                        s.length > 0 && k(s, !l && E(e, 'script')),
                        a
                      )
                    },
                    cleanData: function cleanData(e) {
                      for (
                        var t, n, i, r = ke.event.special, o = 0;
                        void 0 !== (n = e[o]);
                        o++
                      ) {
                        if (Fe(n)) {
                          if ((t = n[Ue.expando])) {
                            if (t.events)
                              for (i in t.events) {
                                r[i]
                                  ? ke.event.remove(n, i)
                                  : ke.removeEvent(n, i, t.handle)
                              }
                            n[Ue.expando] = void 0
                          }
                          n[Ve.expando] && (n[Ve.expando] = void 0)
                        }
                      }
                    }
                  }),
                    ke.fn.extend({
                      detach: function detach(e) {
                        return q(this, e, !0)
                      },
                      remove: function remove(e) {
                        return q(this, e)
                      },
                      text: function text(e) {
                        return Ie(
                          this,
                          function(e) {
                            return void 0 === e
                              ? ke.text(this)
                              : this.empty().each(function() {
                                  ;(1 !== this.nodeType &&
                                    11 !== this.nodeType &&
                                    9 !== this.nodeType) ||
                                    (this.textContent = e)
                                })
                          },
                          null,
                          e,
                          arguments.length
                        )
                      },
                      append: function append() {
                        return H(this, arguments, function(e) {
                          if (
                            1 === this.nodeType ||
                            11 === this.nodeType ||
                            9 === this.nodeType
                          ) {
                            var t = $(this, e)
                            t.appendChild(e)
                          }
                        })
                      },
                      prepend: function prepend() {
                        return H(this, arguments, function(e) {
                          if (
                            1 === this.nodeType ||
                            11 === this.nodeType ||
                            9 === this.nodeType
                          ) {
                            var t = $(this, e)
                            t.insertBefore(e, t.firstChild)
                          }
                        })
                      },
                      before: function before() {
                        return H(this, arguments, function(e) {
                          this.parentNode &&
                            this.parentNode.insertBefore(e, this)
                        })
                      },
                      after: function after() {
                        return H(this, arguments, function(e) {
                          this.parentNode &&
                            this.parentNode.insertBefore(e, this.nextSibling)
                        })
                      },
                      empty: function empty() {
                        for (var e, t = 0; null != (e = this[t]); t++) {
                          1 === e.nodeType &&
                            (ke.cleanData(E(e, !1)), (e.textContent = ''))
                        }
                        return this
                      },
                      clone: function clone(e, t) {
                        return (
                          (e = null != e && e),
                          (t = null == t ? e : t),
                          this.map(function() {
                            return ke.clone(this, e, t)
                          })
                        )
                      },
                      html: function html(e) {
                        return Ie(
                          this,
                          function(e) {
                            var t = this[0] || {},
                              n = 0,
                              i = this.length
                            if (void 0 === e && 1 === t.nodeType)
                              return t.innerHTML
                            if (
                              'string' == typeof e &&
                              !ht.test(e) &&
                              !rt[(nt.exec(e) || ['', ''])[1].toLowerCase()]
                            ) {
                              e = ke.htmlPrefilter(e)
                              try {
                                for (; n < i; n++) {
                                  ;(t = this[n] || {}),
                                    1 === t.nodeType &&
                                      (ke.cleanData(E(t, !1)),
                                      (t.innerHTML = e))
                                }
                                t = 0
                              } catch (r) {}
                            }
                            t && this.empty().append(e)
                          },
                          null,
                          e,
                          arguments.length
                        )
                      },
                      replaceWith: function replaceWith() {
                        var e = []
                        return H(
                          this,
                          arguments,
                          function(t) {
                            var n = this.parentNode
                            ke.inArray(this, e) < 0 &&
                              (ke.cleanData(E(this)),
                              n && n.replaceChild(t, this))
                          },
                          e
                        )
                      }
                    }),
                    ke.each(
                      {
                        appendTo: 'append',
                        prependTo: 'prepend',
                        insertBefore: 'before',
                        insertAfter: 'after',
                        replaceAll: 'replaceWith'
                      },
                      function(e, t) {
                        ke.fn[e] = function(e) {
                          for (
                            var n, i = [], r = ke(e), o = r.length - 1, s = 0;
                            s <= o;
                            s++
                          ) {
                            ;(n = s === o ? this : this.clone(!0)),
                              ke(r[s])[t](n),
                              fe.apply(i, n.get())
                          }
                          return this.pushStack(i)
                        }
                      }
                    )
                  var ft = new RegExp('^(' + Ge + ')(?!px)[a-z%]+$', 'i'),
                    gt = function gt(e) {
                      var t = e.ownerDocument.defaultView
                      return (t && t.opener) || (t = n), t.getComputedStyle(e)
                    },
                    mt = new RegExp(Je.join('|'), 'i')
                  !(function() {
                    function e() {
                      if (u) {
                        ;(l.style.cssText =
                          'position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0'),
                          (u.style.cssText =
                            'position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%'),
                          st.appendChild(l).appendChild(u)
                        var e = n.getComputedStyle(u)
                        ;(i = '1%' !== e.top),
                          (a = 12 === t(e.marginLeft)),
                          (u.style.right = '60%'),
                          (s = 36 === t(e.right)),
                          (r = 36 === t(e.width)),
                          (u.style.position = 'absolute'),
                          (o = 36 === u.offsetWidth || 'absolute'),
                          st.removeChild(l),
                          (u = null)
                      }
                    }
                    function t(e) {
                      return Math.round(parseFloat(e))
                    }
                    var i,
                      r,
                      o,
                      s,
                      a,
                      l = ce.createElement('div'),
                      u = ce.createElement('div')
                    u.style &&
                      ((u.style.backgroundClip = 'content-box'),
                      (u.cloneNode(!0).style.backgroundClip = ''),
                      (be.clearCloneStyle =
                        'content-box' === u.style.backgroundClip),
                      ke.extend(be, {
                        boxSizingReliable: function boxSizingReliable() {
                          return e(), r
                        },
                        pixelBoxStyles: function pixelBoxStyles() {
                          return e(), s
                        },
                        pixelPosition: function pixelPosition() {
                          return e(), i
                        },
                        reliableMarginLeft: function reliableMarginLeft() {
                          return e(), a
                        },
                        scrollboxSize: function scrollboxSize() {
                          return e(), o
                        }
                      }))
                  })()
                  var vt = /^(none|table(?!-c[ea]).+)/,
                    yt = /^--/,
                    wt = {
                      position: 'absolute',
                      visibility: 'hidden',
                      display: 'block'
                    },
                    xt = { letterSpacing: '0', fontWeight: '400' },
                    bt = ['Webkit', 'Moz', 'ms'],
                    _t = ce.createElement('div').style
                  ke.extend({
                    cssHooks: {
                      opacity: {
                        get: function get(e, t) {
                          if (t) {
                            var n = M(e, 'opacity')
                            return '' === n ? '1' : n
                          }
                        }
                      }
                    },
                    cssNumber: {
                      animationIterationCount: !0,
                      columnCount: !0,
                      fillOpacity: !0,
                      flexGrow: !0,
                      flexShrink: !0,
                      fontWeight: !0,
                      lineHeight: !0,
                      opacity: !0,
                      order: !0,
                      orphans: !0,
                      widows: !0,
                      zIndex: !0,
                      zoom: !0
                    },
                    cssProps: {},
                    style: function style(e, t, n, i) {
                      if (
                        e &&
                        3 !== e.nodeType &&
                        8 !== e.nodeType &&
                        e.style
                      ) {
                        var r,
                          o,
                          s,
                          a = y(t),
                          l = yt.test(t),
                          u = e.style
                        return (
                          l || (t = B(a)),
                          (s = ke.cssHooks[t] || ke.cssHooks[a]),
                          void 0 === n
                            ? s &&
                              'get' in s &&
                              void 0 !== (r = s.get(e, !1, i))
                              ? r
                              : u[t]
                            : ((o = (0, _typeof3['default'])(n)),
                              'string' === o &&
                                (r = Ze.exec(n)) &&
                                r[1] &&
                                ((n = _(e, t, r)), (o = 'number')),
                              null != n &&
                                n === n &&
                                ('number' === o &&
                                  (n +=
                                    (r && r[3]) ||
                                    (ke.cssNumber[a] ? '' : 'px')),
                                be.clearCloneStyle ||
                                  '' !== n ||
                                  0 !== t.indexOf('background') ||
                                  (u[t] = 'inherit'),
                                (s &&
                                  'set' in s &&
                                  void 0 === (n = s.set(e, n, i))) ||
                                  (l ? u.setProperty(t, n) : (u[t] = n))),
                              void 0)
                        )
                      }
                    },
                    css: function css(e, t, n, i) {
                      var r,
                        o,
                        s,
                        a = y(t),
                        l = yt.test(t)
                      return (
                        l || (t = B(a)),
                        (s = ke.cssHooks[t] || ke.cssHooks[a]),
                        s && 'get' in s && (r = s.get(e, !0, n)),
                        void 0 === r && (r = M(e, t, i)),
                        'normal' === r && t in xt && (r = xt[t]),
                        '' === n || n
                          ? ((o = parseFloat(r)),
                            n === !0 || isFinite(o) ? o || 0 : r)
                          : r
                      )
                    }
                  }),
                    ke.each(['height', 'width'], function(e, t) {
                      ke.cssHooks[t] = {
                        get: function get(e, n, i) {
                          if (n)
                            return !vt.test(ke.css(e, 'display')) ||
                              (e.getClientRects().length &&
                                e.getBoundingClientRect().width)
                              ? U(e, t, i)
                              : Ke(e, wt, function() {
                                  return U(e, t, i)
                                })
                        },
                        set: function set(e, n, i) {
                          var r,
                            o = gt(e),
                            s = 'border-box' === ke.css(e, 'boxSizing', !1, o),
                            a = i && F(e, t, i, s, o)
                          return (
                            s &&
                              be.scrollboxSize() === o.position &&
                              (a -= Math.ceil(
                                e['offset' + t[0].toUpperCase() + t.slice(1)] -
                                  parseFloat(o[t]) -
                                  F(e, t, 'border', !1, o) -
                                  0.5
                              )),
                            a &&
                              (r = Ze.exec(n)) &&
                              'px' !== (r[3] || 'px') &&
                              ((e.style[t] = n), (n = ke.css(e, t))),
                            W(e, n, a)
                          )
                        }
                      }
                    }),
                    (ke.cssHooks.marginLeft = R(be.reliableMarginLeft, function(
                      e,
                      t
                    ) {
                      if (t)
                        return (
                          (parseFloat(M(e, 'marginLeft')) ||
                            e.getBoundingClientRect().left -
                              Ke(e, { marginLeft: 0 }, function() {
                                return e.getBoundingClientRect().left
                              })) + 'px'
                        )
                    })),
                    ke.each(
                      { margin: '', padding: '', border: 'Width' },
                      function(e, t) {
                        ;(ke.cssHooks[e + t] = {
                          expand: function expand(n) {
                            for (
                              var i = 0,
                                r = {},
                                o = 'string' == typeof n ? n.split(' ') : [n];
                              i < 4;
                              i++
                            ) {
                              r[e + Je[i] + t] = o[i] || o[i - 2] || o[0]
                            }
                            return r
                          }
                        }),
                          'margin' !== e && (ke.cssHooks[e + t].set = W)
                      }
                    ),
                    ke.fn.extend({
                      css: function css(e, t) {
                        return Ie(
                          this,
                          function(e, t, n) {
                            var i,
                              r,
                              o = {},
                              s = 0
                            if (Array.isArray(t)) {
                              for (i = gt(e), r = t.length; s < r; s++) {
                                o[t[s]] = ke.css(e, t[s], !1, i)
                              }
                              return o
                            }
                            return void 0 !== n
                              ? ke.style(e, t, n)
                              : ke.css(e, t)
                          },
                          e,
                          t,
                          arguments.length > 1
                        )
                      }
                    }),
                    (ke.Tween = V),
                    (V.prototype = {
                      constructor: V,
                      init: function init(e, t, n, i, r, o) {
                        ;(this.elem = e),
                          (this.prop = n),
                          (this.easing = r || ke.easing._default),
                          (this.options = t),
                          (this.start = this.now = this.cur()),
                          (this.end = i),
                          (this.unit = o || (ke.cssNumber[n] ? '' : 'px'))
                      },
                      cur: function cur() {
                        var e = V.propHooks[this.prop]
                        return e && e.get
                          ? e.get(this)
                          : V.propHooks._default.get(this)
                      },
                      run: function run(e) {
                        var t,
                          n = V.propHooks[this.prop]
                        return (
                          this.options.duration
                            ? (this.pos = t = ke.easing[this.easing](
                                e,
                                this.options.duration * e,
                                0,
                                1,
                                this.options.duration
                              ))
                            : (this.pos = t = e),
                          (this.now = (this.end - this.start) * t + this.start),
                          this.options.step &&
                            this.options.step.call(this.elem, this.now, this),
                          n && n.set
                            ? n.set(this)
                            : V.propHooks._default.set(this),
                          this
                        )
                      }
                    }),
                    (V.prototype.init.prototype = V.prototype),
                    (V.propHooks = {
                      _default: {
                        get: function get(e) {
                          var t
                          return 1 !== e.elem.nodeType ||
                            (null != e.elem[e.prop] &&
                              null == e.elem.style[e.prop])
                            ? e.elem[e.prop]
                            : ((t = ke.css(e.elem, e.prop, '')),
                              t && 'auto' !== t ? t : 0)
                        },
                        set: function set(e) {
                          ke.fx.step[e.prop]
                            ? ke.fx.step[e.prop](e)
                            : 1 !== e.elem.nodeType ||
                              (null == e.elem.style[ke.cssProps[e.prop]] &&
                                !ke.cssHooks[e.prop])
                            ? (e.elem[e.prop] = e.now)
                            : ke.style(e.elem, e.prop, e.now + e.unit)
                        }
                      }
                    }),
                    (V.propHooks.scrollTop = V.propHooks.scrollLeft = {
                      set: function set(e) {
                        e.elem.nodeType &&
                          e.elem.parentNode &&
                          (e.elem[e.prop] = e.now)
                      }
                    }),
                    (ke.easing = {
                      linear: function linear(e) {
                        return e
                      },
                      swing: function swing(e) {
                        return 0.5 - Math.cos(e * Math.PI) / 2
                      },
                      _default: 'swing'
                    }),
                    (ke.fx = V.prototype.init),
                    (ke.fx.step = {})
                  var Ct,
                    Tt,
                    Et = /^(?:toggle|show|hide)$/,
                    kt = /queueHooks$/
                  ;(ke.Animation = ke.extend(K, {
                    tweeners: {
                      '*': [
                        function(e, t) {
                          var n = this.createTween(e, t)
                          return _(n.elem, e, Ze.exec(t), n), n
                        }
                      ]
                    },
                    tweener: function tweener(e, t) {
                      _e(e) ? ((t = e), (e = ['*'])) : (e = e.match(qe))
                      for (var n, i = 0, r = e.length; i < r; i++) {
                        ;(n = e[i]),
                          (K.tweeners[n] = K.tweeners[n] || []),
                          K.tweeners[n].unshift(t)
                      }
                    },
                    prefilters: [J],
                    prefilter: function prefilter(e, t) {
                      t ? K.prefilters.unshift(e) : K.prefilters.push(e)
                    }
                  })),
                    (ke.speed = function(e, t, n) {
                      var i =
                        e && 'object' == (0, _typeof3['default'])(e)
                          ? ke.extend({}, e)
                          : {
                              complete: n || (!n && t) || (_e(e) && e),
                              duration: e,
                              easing: (n && t) || (t && !_e(t) && t)
                            }
                      return (
                        ke.fx.off
                          ? (i.duration = 0)
                          : 'number' != typeof i.duration &&
                            (i.duration in ke.fx.speeds
                              ? (i.duration = ke.fx.speeds[i.duration])
                              : (i.duration = ke.fx.speeds._default)),
                        (null != i.queue && i.queue !== !0) || (i.queue = 'fx'),
                        (i.old = i.complete),
                        (i.complete = function() {
                          _e(i.old) && i.old.call(this),
                            i.queue && ke.dequeue(this, i.queue)
                        }),
                        i
                      )
                    }),
                    ke.fn.extend({
                      fadeTo: function fadeTo(e, t, n, i) {
                        return this.filter(Qe)
                          .css('opacity', 0)
                          .show()
                          .end()
                          .animate({ opacity: t }, e, n, i)
                      },
                      animate: function animate(e, t, n, i) {
                        var r = ke.isEmptyObject(e),
                          o = ke.speed(t, n, i),
                          s = function s() {
                            var t = K(this, ke.extend({}, e), o)
                            ;(r || Ue.get(this, 'finish')) && t.stop(!0)
                          }
                        return (
                          (s.finish = s),
                          r || o.queue === !1
                            ? this.each(s)
                            : this.queue(o.queue, s)
                        )
                      },
                      stop: function stop(e, t, n) {
                        var i = function i(e) {
                          var t = e.stop
                          delete e.stop, t(n)
                        }
                        return (
                          'string' != typeof e &&
                            ((n = t), (t = e), (e = void 0)),
                          t && e !== !1 && this.queue(e || 'fx', []),
                          this.each(function() {
                            var t = !0,
                              r = null != e && e + 'queueHooks',
                              o = ke.timers,
                              s = Ue.get(this)
                            if (r) s[r] && s[r].stop && i(s[r])
                            else
                              for (r in s) {
                                s[r] && s[r].stop && kt.test(r) && i(s[r])
                              }
                            for (r = o.length; r--; ) {
                              o[r].elem !== this ||
                                (null != e && o[r].queue !== e) ||
                                (o[r].anim.stop(n), (t = !1), o.splice(r, 1))
                            }
                            ;(!t && n) || ke.dequeue(this, e)
                          })
                        )
                      },
                      finish: function finish(e) {
                        return (
                          e !== !1 && (e = e || 'fx'),
                          this.each(function() {
                            var t,
                              n = Ue.get(this),
                              i = n[e + 'queue'],
                              r = n[e + 'queueHooks'],
                              o = ke.timers,
                              s = i ? i.length : 0
                            for (
                              n.finish = !0,
                                ke.queue(this, e, []),
                                r && r.stop && r.stop.call(this, !0),
                                t = o.length;
                              t--;

                            ) {
                              o[t].elem === this &&
                                o[t].queue === e &&
                                (o[t].anim.stop(!0), o.splice(t, 1))
                            }
                            for (t = 0; t < s; t++) {
                              i[t] && i[t].finish && i[t].finish.call(this)
                            }
                            delete n.finish
                          })
                        )
                      }
                    }),
                    ke.each(['toggle', 'show', 'hide'], function(e, t) {
                      var n = ke.fn[t]
                      ke.fn[t] = function(e, i, r) {
                        return null == e || 'boolean' == typeof e
                          ? n.apply(this, arguments)
                          : this.animate(G(t, !0), e, i, r)
                      }
                    }),
                    ke.each(
                      {
                        slideDown: G('show'),
                        slideUp: G('hide'),
                        slideToggle: G('toggle'),
                        fadeIn: { opacity: 'show' },
                        fadeOut: { opacity: 'hide' },
                        fadeToggle: { opacity: 'toggle' }
                      },
                      function(e, t) {
                        ke.fn[e] = function(e, n, i) {
                          return this.animate(t, e, n, i)
                        }
                      }
                    ),
                    (ke.timers = []),
                    (ke.fx.tick = function() {
                      var e,
                        t = 0,
                        n = ke.timers
                      for (Ct = Date.now(); t < n.length; t++) {
                        ;(e = n[t]), e() || n[t] !== e || n.splice(t--, 1)
                      }
                      n.length || ke.fx.stop(), (Ct = void 0)
                    }),
                    (ke.fx.timer = function(e) {
                      ke.timers.push(e), ke.fx.start()
                    }),
                    (ke.fx.interval = 13),
                    (ke.fx.start = function() {
                      Tt || ((Tt = !0), X())
                    }),
                    (ke.fx.stop = function() {
                      Tt = null
                    }),
                    (ke.fx.speeds = { slow: 600, fast: 200, _default: 400 }),
                    (ke.fn.delay = function(e, t) {
                      return (
                        (e = ke.fx ? ke.fx.speeds[e] || e : e),
                        (t = t || 'fx'),
                        this.queue(t, function(t, i) {
                          var r = n.setTimeout(t, e)
                          i.stop = function() {
                            n.clearTimeout(r)
                          }
                        })
                      )
                    }),
                    (function() {
                      var e = ce.createElement('input'),
                        t = ce.createElement('select'),
                        n = t.appendChild(ce.createElement('option'))
                      ;(e.type = 'checkbox'),
                        (be.checkOn = '' !== e.value),
                        (be.optSelected = n.selected),
                        (e = ce.createElement('input')),
                        (e.value = 't'),
                        (e.type = 'radio'),
                        (be.radioValue = 't' === e.value)
                    })()
                  var St,
                    Dt = ke.expr.attrHandle
                  ke.fn.extend({
                    attr: function attr(e, t) {
                      return Ie(this, ke.attr, e, t, arguments.length > 1)
                    },
                    removeAttr: function removeAttr(e) {
                      return this.each(function() {
                        ke.removeAttr(this, e)
                      })
                    }
                  }),
                    ke.extend({
                      attr: function attr(e, t, n) {
                        var i,
                          r,
                          o = e.nodeType
                        if (3 !== o && 8 !== o && 2 !== o)
                          return 'undefined' == typeof e.getAttribute
                            ? ke.prop(e, t, n)
                            : ((1 === o && ke.isXMLDoc(e)) ||
                                (r =
                                  ke.attrHooks[t.toLowerCase()] ||
                                  (ke.expr.match.bool.test(t) ? St : void 0)),
                              void 0 !== n
                                ? null === n
                                  ? void ke.removeAttr(e, t)
                                  : r &&
                                    'set' in r &&
                                    void 0 !== (i = r.set(e, n, t))
                                  ? i
                                  : (e.setAttribute(t, n + ''), n)
                                : r && 'get' in r && null !== (i = r.get(e, t))
                                ? i
                                : ((i = ke.find.attr(e, t)),
                                  null == i ? void 0 : i))
                      },
                      attrHooks: {
                        type: {
                          set: function set(e, t) {
                            if (
                              !be.radioValue &&
                              'radio' === t &&
                              u(e, 'input')
                            ) {
                              var n = e.value
                              return (
                                e.setAttribute('type', t), n && (e.value = n), t
                              )
                            }
                          }
                        }
                      },
                      removeAttr: function removeAttr(e, t) {
                        var n,
                          i = 0,
                          r = t && t.match(qe)
                        if (r && 1 === e.nodeType)
                          for (; (n = r[i++]); ) {
                            e.removeAttribute(n)
                          }
                      }
                    }),
                    (St = {
                      set: function set(e, t, n) {
                        return (
                          t === !1 ? ke.removeAttr(e, n) : e.setAttribute(n, n),
                          n
                        )
                      }
                    }),
                    ke.each(ke.expr.match.bool.source.match(/\w+/g), function(
                      e,
                      t
                    ) {
                      var n = Dt[t] || ke.find.attr
                      Dt[t] = function(e, t, i) {
                        var r,
                          o,
                          s = t.toLowerCase()
                        return (
                          i ||
                            ((o = Dt[s]),
                            (Dt[s] = r),
                            (r = null != n(e, t, i) ? s : null),
                            (Dt[s] = o)),
                          r
                        )
                      }
                    })
                  var Nt = /^(?:input|select|textarea|button)$/i,
                    jt = /^(?:a|area)$/i
                  ke.fn.extend({
                    prop: function prop(e, t) {
                      return Ie(this, ke.prop, e, t, arguments.length > 1)
                    },
                    removeProp: function removeProp(e) {
                      return this.each(function() {
                        delete this[ke.propFix[e] || e]
                      })
                    }
                  }),
                    ke.extend({
                      prop: function prop(e, t, n) {
                        var i,
                          r,
                          o = e.nodeType
                        if (3 !== o && 8 !== o && 2 !== o)
                          return (
                            (1 === o && ke.isXMLDoc(e)) ||
                              ((t = ke.propFix[t] || t), (r = ke.propHooks[t])),
                            void 0 !== n
                              ? r &&
                                'set' in r &&
                                void 0 !== (i = r.set(e, n, t))
                                ? i
                                : (e[t] = n)
                              : r && 'get' in r && null !== (i = r.get(e, t))
                              ? i
                              : e[t]
                          )
                      },
                      propHooks: {
                        tabIndex: {
                          get: function get(e) {
                            var t = ke.find.attr(e, 'tabindex')
                            return t
                              ? parseInt(t, 10)
                              : Nt.test(e.nodeName) ||
                                (jt.test(e.nodeName) && e.href)
                              ? 0
                              : -1
                          }
                        }
                      },
                      propFix: { for: 'htmlFor', class: 'className' }
                    }),
                    be.optSelected ||
                      (ke.propHooks.selected = {
                        get: function get(e) {
                          var t = e.parentNode
                          return (
                            t && t.parentNode && t.parentNode.selectedIndex,
                            null
                          )
                        },
                        set: function set(e) {
                          var t = e.parentNode
                          t &&
                            (t.selectedIndex,
                            t.parentNode && t.parentNode.selectedIndex)
                        }
                      }),
                    ke.each(
                      [
                        'tabIndex',
                        'readOnly',
                        'maxLength',
                        'cellSpacing',
                        'cellPadding',
                        'rowSpan',
                        'colSpan',
                        'useMap',
                        'frameBorder',
                        'contentEditable'
                      ],
                      function() {
                        ke.propFix[this.toLowerCase()] = this
                      }
                    ),
                    ke.fn.extend({
                      addClass: function addClass(e) {
                        var t,
                          n,
                          i,
                          r,
                          o,
                          s,
                          a,
                          l = 0
                        if (_e(e))
                          return this.each(function(t) {
                            ke(this).addClass(e.call(this, t, te(this)))
                          })
                        if (((t = ne(e)), t.length))
                          for (; (n = this[l++]); ) {
                            if (
                              ((r = te(n)),
                              (i = 1 === n.nodeType && ' ' + ee(r) + ' '))
                            ) {
                              for (s = 0; (o = t[s++]); ) {
                                i.indexOf(' ' + o + ' ') < 0 && (i += o + ' ')
                              }
                              ;(a = ee(i)),
                                r !== a && n.setAttribute('class', a)
                            }
                          }
                        return this
                      },
                      removeClass: function removeClass(e) {
                        var t,
                          n,
                          i,
                          r,
                          o,
                          s,
                          a,
                          l = 0
                        if (_e(e))
                          return this.each(function(t) {
                            ke(this).removeClass(e.call(this, t, te(this)))
                          })
                        if (!arguments.length) return this.attr('class', '')
                        if (((t = ne(e)), t.length))
                          for (; (n = this[l++]); ) {
                            if (
                              ((r = te(n)),
                              (i = 1 === n.nodeType && ' ' + ee(r) + ' '))
                            ) {
                              for (s = 0; (o = t[s++]); ) {
                                for (; i.indexOf(' ' + o + ' ') > -1; ) {
                                  i = i.replace(' ' + o + ' ', ' ')
                                }
                              }
                              ;(a = ee(i)),
                                r !== a && n.setAttribute('class', a)
                            }
                          }
                        return this
                      },
                      toggleClass: function toggleClass(e, t) {
                        var n = (0, _typeof3['default'])(e),
                          i = 'string' === n || Array.isArray(e)
                        return 'boolean' == typeof t && i
                          ? t
                            ? this.addClass(e)
                            : this.removeClass(e)
                          : _e(e)
                          ? this.each(function(n) {
                              ke(this).toggleClass(
                                e.call(this, n, te(this), t),
                                t
                              )
                            })
                          : this.each(function() {
                              var t, r, o, s
                              if (i)
                                for (
                                  r = 0, o = ke(this), s = ne(e);
                                  (t = s[r++]);

                                ) {
                                  o.hasClass(t)
                                    ? o.removeClass(t)
                                    : o.addClass(t)
                                }
                              else
                                (void 0 !== e && 'boolean' !== n) ||
                                  ((t = te(this)),
                                  t && Ue.set(this, '__className__', t),
                                  this.setAttribute &&
                                    this.setAttribute(
                                      'class',
                                      t || e === !1
                                        ? ''
                                        : Ue.get(this, '__className__') || ''
                                    ))
                            })
                      },
                      hasClass: function hasClass(e) {
                        var t,
                          n,
                          i = 0
                        for (t = ' ' + e + ' '; (n = this[i++]); ) {
                          if (
                            1 === n.nodeType &&
                            (' ' + ee(te(n)) + ' ').indexOf(t) > -1
                          )
                            return !0
                        }
                        return !1
                      }
                    })
                  var At = /\r/g
                  ke.fn.extend({
                    val: function val(e) {
                      var t,
                        n,
                        i,
                        r = this[0]
                      {
                        if (arguments.length)
                          return (
                            (i = _e(e)),
                            this.each(function(n) {
                              var r
                              1 === this.nodeType &&
                                ((r = i ? e.call(this, n, ke(this).val()) : e),
                                null == r
                                  ? (r = '')
                                  : 'number' == typeof r
                                  ? (r += '')
                                  : Array.isArray(r) &&
                                    (r = ke.map(r, function(e) {
                                      return null == e ? '' : e + ''
                                    })),
                                (t =
                                  ke.valHooks[this.type] ||
                                  ke.valHooks[this.nodeName.toLowerCase()]),
                                (t &&
                                  'set' in t &&
                                  void 0 !== t.set(this, r, 'value')) ||
                                  (this.value = r))
                            })
                          )
                        if (r)
                          return (
                            (t =
                              ke.valHooks[r.type] ||
                              ke.valHooks[r.nodeName.toLowerCase()]),
                            t &&
                            'get' in t &&
                            void 0 !== (n = t.get(r, 'value'))
                              ? n
                              : ((n = r.value),
                                'string' == typeof n
                                  ? n.replace(At, '')
                                  : null == n
                                  ? ''
                                  : n)
                          )
                      }
                    }
                  }),
                    ke.extend({
                      valHooks: {
                        option: {
                          get: function get(e) {
                            var t = ke.find.attr(e, 'value')
                            return null != t ? t : ee(ke.text(e))
                          }
                        },
                        select: {
                          get: function get(e) {
                            var t,
                              n,
                              i,
                              r = e.options,
                              o = e.selectedIndex,
                              s = 'select-one' === e.type,
                              a = s ? null : [],
                              l = s ? o + 1 : r.length
                            for (i = o < 0 ? l : s ? o : 0; i < l; i++) {
                              if (
                                ((n = r[i]),
                                (n.selected || i === o) &&
                                  !n.disabled &&
                                  (!n.parentNode.disabled ||
                                    !u(n.parentNode, 'optgroup')))
                              ) {
                                if (((t = ke(n).val()), s)) return t
                                a.push(t)
                              }
                            }
                            return a
                          },
                          set: function set(e, t) {
                            for (
                              var n,
                                i,
                                r = e.options,
                                o = ke.makeArray(t),
                                s = r.length;
                              s--;

                            ) {
                              ;(i = r[s]),
                                (i.selected =
                                  ke.inArray(ke.valHooks.option.get(i), o) >
                                  -1) && (n = !0)
                            }
                            return n || (e.selectedIndex = -1), o
                          }
                        }
                      }
                    }),
                    ke.each(['radio', 'checkbox'], function() {
                      ;(ke.valHooks[this] = {
                        set: function set(e, t) {
                          if (Array.isArray(t))
                            return (e.checked = ke.inArray(ke(e).val(), t) > -1)
                        }
                      }),
                        be.checkOn ||
                          (ke.valHooks[this].get = function(e) {
                            return null === e.getAttribute('value')
                              ? 'on'
                              : e.value
                          })
                    }),
                    (be.focusin = 'onfocusin' in n)
                  var $t = /^(?:focusinfocus|focusoutblur)$/,
                    Lt = function Lt(e) {
                      e.stopPropagation()
                    }
                  ke.extend(ke.event, {
                    trigger: function trigger(e, t, i, r) {
                      var o,
                        s,
                        a,
                        l,
                        u,
                        c,
                        h,
                        p,
                        d = [i || ce],
                        f = ye.call(e, 'type') ? e.type : e,
                        g = ye.call(e, 'namespace')
                          ? e.namespace.split('.')
                          : []
                      if (
                        ((s = p = a = i = i || ce),
                        3 !== i.nodeType &&
                          8 !== i.nodeType &&
                          !$t.test(f + ke.event.triggered) &&
                          (f.indexOf('.') > -1 &&
                            ((g = f.split('.')), (f = g.shift()), g.sort()),
                          (u = f.indexOf(':') < 0 && 'on' + f),
                          (e = e[ke.expando]
                            ? e
                            : new ke.Event(
                                f,
                                'object' == (0, _typeof3['default'])(e) && e
                              )),
                          (e.isTrigger = r ? 2 : 3),
                          (e.namespace = g.join('.')),
                          (e.rnamespace = e.namespace
                            ? new RegExp(
                                '(^|\\.)' + g.join('\\.(?:.*\\.|)') + '(\\.|$)'
                              )
                            : null),
                          (e.result = void 0),
                          e.target || (e.target = i),
                          (t = null == t ? [e] : ke.makeArray(t, [e])),
                          (h = ke.event.special[f] || {}),
                          r || !h.trigger || h.trigger.apply(i, t) !== !1))
                      ) {
                        if (!r && !h.noBubble && !Ce(i)) {
                          for (
                            l = h.delegateType || f,
                              $t.test(l + f) || (s = s.parentNode);
                            s;
                            s = s.parentNode
                          ) {
                            d.push(s), (a = s)
                          }
                          a === (i.ownerDocument || ce) &&
                            d.push(a.defaultView || a.parentWindow || n)
                        }
                        for (
                          o = 0;
                          (s = d[o++]) && !e.isPropagationStopped();

                        ) {
                          ;(p = s),
                            (e.type = o > 1 ? l : h.bindType || f),
                            (c =
                              (Ue.get(s, 'events') || {})[e.type] &&
                              Ue.get(s, 'handle')),
                            c && c.apply(s, t),
                            (c = u && s[u]),
                            c &&
                              c.apply &&
                              Fe(s) &&
                              ((e.result = c.apply(s, t)),
                              e.result === !1 && e.preventDefault())
                        }
                        return (
                          (e.type = f),
                          r ||
                            e.isDefaultPrevented() ||
                            (h._default &&
                              h._default.apply(d.pop(), t) !== !1) ||
                            !Fe(i) ||
                            (u &&
                              _e(i[f]) &&
                              !Ce(i) &&
                              ((a = i[u]),
                              a && (i[u] = null),
                              (ke.event.triggered = f),
                              e.isPropagationStopped() &&
                                p.addEventListener(f, Lt),
                              i[f](),
                              e.isPropagationStopped() &&
                                p.removeEventListener(f, Lt),
                              (ke.event.triggered = void 0),
                              a && (i[u] = a))),
                          e.result
                        )
                      }
                    },
                    simulate: function simulate(e, t, n) {
                      var i = ke.extend(new ke.Event(), n, {
                        type: e,
                        isSimulated: !0
                      })
                      ke.event.trigger(i, null, t)
                    }
                  }),
                    ke.fn.extend({
                      trigger: function trigger(e, t) {
                        return this.each(function() {
                          ke.event.trigger(e, t, this)
                        })
                      },
                      triggerHandler: function triggerHandler(e, t) {
                        var n = this[0]
                        if (n) return ke.event.trigger(e, t, n, !0)
                      }
                    }),
                    be.focusin ||
                      ke.each({ focus: 'focusin', blur: 'focusout' }, function(
                        e,
                        t
                      ) {
                        var n = function n(e) {
                          ke.event.simulate(t, e.target, ke.event.fix(e))
                        }
                        ke.event.special[t] = {
                          setup: function setup() {
                            var i = this.ownerDocument || this,
                              r = Ue.access(i, t)
                            r || i.addEventListener(e, n, !0),
                              Ue.access(i, t, (r || 0) + 1)
                          },
                          teardown: function teardown() {
                            var i = this.ownerDocument || this,
                              r = Ue.access(i, t) - 1
                            r
                              ? Ue.access(i, t, r)
                              : (i.removeEventListener(e, n, !0),
                                Ue.remove(i, t))
                          }
                        }
                      })
                  var zt = n.location,
                    Ot = Date.now(),
                    Pt = /\?/
                  ke.parseXML = function(e) {
                    var t
                    if (!e || 'string' != typeof e) return null
                    try {
                      t = new n.DOMParser().parseFromString(e, 'text/xml')
                    } catch (i) {
                      t = void 0
                    }
                    return (
                      (t && !t.getElementsByTagName('parsererror').length) ||
                        ke.error('Invalid XML: ' + e),
                      t
                    )
                  }
                  var Ht = /\[\]$/,
                    qt = /\r?\n/g,
                    Mt = /^(?:submit|button|image|reset|file)$/i,
                    Rt = /^(?:input|select|textarea|keygen)/i
                  ;(ke.param = function(e, t) {
                    var n,
                      i = [],
                      r = function r(e, t) {
                        var n = _e(t) ? t() : t
                        i[i.length] =
                          encodeURIComponent(e) +
                          '=' +
                          encodeURIComponent(null == n ? '' : n)
                      }
                    if (Array.isArray(e) || (e.jquery && !ke.isPlainObject(e)))
                      ke.each(e, function() {
                        r(this.name, this.value)
                      })
                    else
                      for (n in e) {
                        ie(n, e[n], t, r)
                      }
                    return i.join('&')
                  }),
                    ke.fn.extend({
                      serialize: function serialize() {
                        return ke.param(this.serializeArray())
                      },
                      serializeArray: function serializeArray() {
                        return this.map(function() {
                          var e = ke.prop(this, 'elements')
                          return e ? ke.makeArray(e) : this
                        })
                          .filter(function() {
                            var e = this.type
                            return (
                              this.name &&
                              !ke(this).is(':disabled') &&
                              Rt.test(this.nodeName) &&
                              !Mt.test(e) &&
                              (this.checked || !tt.test(e))
                            )
                          })
                          .map(function(e, t) {
                            var n = ke(this).val()
                            return null == n
                              ? null
                              : Array.isArray(n)
                              ? ke.map(n, function(e) {
                                  return {
                                    name: t.name,
                                    value: e.replace(qt, '\r\n')
                                  }
                                })
                              : { name: t.name, value: n.replace(qt, '\r\n') }
                          })
                          .get()
                      }
                    })
                  var It = /%20/g,
                    Bt = /#.*$/,
                    Wt = /([?&])_=[^&]*/,
                    Ft = /^(.*?):[ \t]*([^\r\n]*)$/gm,
                    Ut = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
                    Vt = /^(?:GET|HEAD)$/,
                    Xt = /^\/\//,
                    Yt = {},
                    Gt = {},
                    Zt = '*/'.concat('*'),
                    Jt = ce.createElement('a')
                  ;(Jt.href = zt.href),
                    ke.extend({
                      active: 0,
                      lastModified: {},
                      etag: {},
                      ajaxSettings: {
                        url: zt.href,
                        type: 'GET',
                        isLocal: Ut.test(zt.protocol),
                        global: !0,
                        processData: !0,
                        async: !0,
                        contentType:
                          'application/x-www-form-urlencoded; charset=UTF-8',
                        accepts: {
                          '*': Zt,
                          text: 'text/plain',
                          html: 'text/html',
                          xml: 'application/xml, text/xml',
                          json: 'application/json, text/javascript'
                        },
                        contents: {
                          xml: /\bxml\b/,
                          html: /\bhtml/,
                          json: /\bjson\b/
                        },
                        responseFields: {
                          xml: 'responseXML',
                          text: 'responseText',
                          json: 'responseJSON'
                        },
                        converters: {
                          '* text': String,
                          'text html': !0,
                          'text json': JSON.parse,
                          'text xml': ke.parseXML
                        },
                        flatOptions: { url: !0, context: !0 }
                      },
                      ajaxSetup: function ajaxSetup(e, t) {
                        return t
                          ? se(se(e, ke.ajaxSettings), t)
                          : se(ke.ajaxSettings, e)
                      },
                      ajaxPrefilter: re(Yt),
                      ajaxTransport: re(Gt),
                      ajax: function ajax(e, t) {
                        function i(e, t, i, a) {
                          var u,
                            p,
                            d,
                            x,
                            b,
                            _ = t
                          c ||
                            ((c = !0),
                            l && n.clearTimeout(l),
                            (r = void 0),
                            (s = a || ''),
                            (C.readyState = e > 0 ? 4 : 0),
                            (u = (e >= 200 && e < 300) || 304 === e),
                            i && (x = ae(f, C, i)),
                            (x = le(f, x, C, u)),
                            u
                              ? (f.ifModified &&
                                  ((b = C.getResponseHeader('Last-Modified')),
                                  b && (ke.lastModified[o] = b),
                                  (b = C.getResponseHeader('etag')),
                                  b && (ke.etag[o] = b)),
                                204 === e || 'HEAD' === f.type
                                  ? (_ = 'nocontent')
                                  : 304 === e
                                  ? (_ = 'notmodified')
                                  : ((_ = x.state),
                                    (p = x.data),
                                    (d = x.error),
                                    (u = !d)))
                              : ((d = _),
                                (!e && _) || ((_ = 'error'), e < 0 && (e = 0))),
                            (C.status = e),
                            (C.statusText = (t || _) + ''),
                            u
                              ? v.resolveWith(g, [p, _, C])
                              : v.rejectWith(g, [C, _, d]),
                            C.statusCode(w),
                            (w = void 0),
                            h &&
                              m.trigger(u ? 'ajaxSuccess' : 'ajaxError', [
                                C,
                                f,
                                u ? p : d
                              ]),
                            y.fireWith(g, [C, _]),
                            h &&
                              (m.trigger('ajaxComplete', [C, f]),
                              --ke.active || ke.event.trigger('ajaxStop')))
                        }
                        'object' == (0, _typeof3['default'])(e) &&
                          ((t = e), (e = void 0)),
                          (t = t || {})
                        var r,
                          o,
                          s,
                          a,
                          l,
                          u,
                          c,
                          h,
                          p,
                          d,
                          f = ke.ajaxSetup({}, t),
                          g = f.context || f,
                          m =
                            f.context && (g.nodeType || g.jquery)
                              ? ke(g)
                              : ke.event,
                          v = ke.Deferred(),
                          y = ke.Callbacks('once memory'),
                          w = f.statusCode || {},
                          x = {},
                          b = {},
                          _ = 'canceled',
                          C = {
                            readyState: 0,
                            getResponseHeader: function getResponseHeader(e) {
                              var t
                              if (c) {
                                if (!a)
                                  for (a = {}; (t = Ft.exec(s)); ) {
                                    a[t[1].toLowerCase()] = t[2]
                                  }
                                t = a[e.toLowerCase()]
                              }
                              return null == t ? null : t
                            },
                            getAllResponseHeaders: function getAllResponseHeaders() {
                              return c ? s : null
                            },
                            setRequestHeader: function setRequestHeader(e, t) {
                              return (
                                null == c &&
                                  ((e = b[e.toLowerCase()] =
                                    b[e.toLowerCase()] || e),
                                  (x[e] = t)),
                                this
                              )
                            },
                            overrideMimeType: function overrideMimeType(e) {
                              return null == c && (f.mimeType = e), this
                            },
                            statusCode: function statusCode(e) {
                              var t
                              if (e)
                                if (c) C.always(e[C.status])
                                else
                                  for (t in e) {
                                    w[t] = [w[t], e[t]]
                                  }
                              return this
                            },
                            abort: function abort(e) {
                              var t = e || _
                              return r && r.abort(t), i(0, t), this
                            }
                          }
                        if (
                          (v.promise(C),
                          (f.url = ((e || f.url || zt.href) + '').replace(
                            Xt,
                            zt.protocol + '//'
                          )),
                          (f.type = t.method || t.type || f.method || f.type),
                          (f.dataTypes = (f.dataType || '*')
                            .toLowerCase()
                            .match(qe) || ['']),
                          null == f.crossDomain)
                        ) {
                          u = ce.createElement('a')
                          try {
                            ;(u.href = f.url),
                              (u.href = u.href),
                              (f.crossDomain =
                                Jt.protocol + '//' + Jt.host !=
                                u.protocol + '//' + u.host)
                          } catch (T) {
                            f.crossDomain = !0
                          }
                        }
                        if (
                          (f.data &&
                            f.processData &&
                            'string' != typeof f.data &&
                            (f.data = ke.param(f.data, f.traditional)),
                          oe(Yt, f, t, C),
                          c)
                        )
                          return C
                        ;(h = ke.event && f.global),
                          h &&
                            0 === ke.active++ &&
                            ke.event.trigger('ajaxStart'),
                          (f.type = f.type.toUpperCase()),
                          (f.hasContent = !Vt.test(f.type)),
                          (o = f.url.replace(Bt, '')),
                          f.hasContent
                            ? f.data &&
                              f.processData &&
                              0 ===
                                (f.contentType || '').indexOf(
                                  'application/x-www-form-urlencoded'
                                ) &&
                              (f.data = f.data.replace(It, '+'))
                            : ((d = f.url.slice(o.length)),
                              f.data &&
                                (f.processData || 'string' == typeof f.data) &&
                                ((o += (Pt.test(o) ? '&' : '?') + f.data),
                                delete f.data),
                              f.cache === !1 &&
                                ((o = o.replace(Wt, '$1')),
                                (d =
                                  (Pt.test(o) ? '&' : '?') + '_=' + Ot++ + d)),
                              (f.url = o + d)),
                          f.ifModified &&
                            (ke.lastModified[o] &&
                              C.setRequestHeader(
                                'If-Modified-Since',
                                ke.lastModified[o]
                              ),
                            ke.etag[o] &&
                              C.setRequestHeader('If-None-Match', ke.etag[o])),
                          ((f.data && f.hasContent && f.contentType !== !1) ||
                            t.contentType) &&
                            C.setRequestHeader('Content-Type', f.contentType),
                          C.setRequestHeader(
                            'Accept',
                            f.dataTypes[0] && f.accepts[f.dataTypes[0]]
                              ? f.accepts[f.dataTypes[0]] +
                                  ('*' !== f.dataTypes[0]
                                    ? ', ' + Zt + '; q=0.01'
                                    : '')
                              : f.accepts['*']
                          )
                        for (p in f.headers) {
                          C.setRequestHeader(p, f.headers[p])
                        }
                        if (
                          f.beforeSend &&
                          (f.beforeSend.call(g, C, f) === !1 || c)
                        )
                          return C.abort()
                        if (
                          ((_ = 'abort'),
                          y.add(f.complete),
                          C.done(f.success),
                          C.fail(f.error),
                          (r = oe(Gt, f, t, C)))
                        ) {
                          if (
                            ((C.readyState = 1),
                            h && m.trigger('ajaxSend', [C, f]),
                            c)
                          )
                            return C
                          f.async &&
                            f.timeout > 0 &&
                            (l = n.setTimeout(function() {
                              C.abort('timeout')
                            }, f.timeout))
                          try {
                            ;(c = !1), r.send(x, i)
                          } catch (T) {
                            if (c) throw T
                            i(-1, T)
                          }
                        } else i(-1, 'No Transport')
                        return C
                      },
                      getJSON: function getJSON(e, t, n) {
                        return ke.get(e, t, n, 'json')
                      },
                      getScript: function getScript(e, t) {
                        return ke.get(e, void 0, t, 'script')
                      }
                    }),
                    ke.each(['get', 'post'], function(e, t) {
                      ke[t] = function(e, n, i, r) {
                        return (
                          _e(n) && ((r = r || i), (i = n), (n = void 0)),
                          ke.ajax(
                            ke.extend(
                              {
                                url: e,
                                type: t,
                                dataType: r,
                                data: n,
                                success: i
                              },
                              ke.isPlainObject(e) && e
                            )
                          )
                        )
                      }
                    }),
                    (ke._evalUrl = function(e) {
                      return ke.ajax({
                        url: e,
                        type: 'GET',
                        dataType: 'script',
                        cache: !0,
                        async: !1,
                        global: !1,
                        throws: !0
                      })
                    }),
                    ke.fn.extend({
                      wrapAll: function wrapAll(e) {
                        var t
                        return (
                          this[0] &&
                            (_e(e) && (e = e.call(this[0])),
                            (t = ke(e, this[0].ownerDocument)
                              .eq(0)
                              .clone(!0)),
                            this[0].parentNode && t.insertBefore(this[0]),
                            t
                              .map(function() {
                                for (var e = this; e.firstElementChild; ) {
                                  e = e.firstElementChild
                                }
                                return e
                              })
                              .append(this)),
                          this
                        )
                      },
                      wrapInner: function wrapInner(e) {
                        return _e(e)
                          ? this.each(function(t) {
                              ke(this).wrapInner(e.call(this, t))
                            })
                          : this.each(function() {
                              var t = ke(this),
                                n = t.contents()
                              n.length ? n.wrapAll(e) : t.append(e)
                            })
                      },
                      wrap: function wrap(e) {
                        var t = _e(e)
                        return this.each(function(n) {
                          ke(this).wrapAll(t ? e.call(this, n) : e)
                        })
                      },
                      unwrap: function unwrap(e) {
                        return (
                          this.parent(e)
                            .not('body')
                            .each(function() {
                              ke(this).replaceWith(this.childNodes)
                            }),
                          this
                        )
                      }
                    }),
                    (ke.expr.pseudos.hidden = function(e) {
                      return !ke.expr.pseudos.visible(e)
                    }),
                    (ke.expr.pseudos.visible = function(e) {
                      return !!(
                        e.offsetWidth ||
                        e.offsetHeight ||
                        e.getClientRects().length
                      )
                    }),
                    (ke.ajaxSettings.xhr = function() {
                      try {
                        return new n.XMLHttpRequest()
                      } catch (e) {}
                    })
                  var Qt = { 0: 200, 1223: 204 },
                    Kt = ke.ajaxSettings.xhr()
                  ;(be.cors = !!Kt && 'withCredentials' in Kt),
                    (be.ajax = Kt = !!Kt),
                    ke.ajaxTransport(function(e) {
                      var _t3, i
                      if (be.cors || (Kt && !e.crossDomain))
                        return {
                          send: function send(r, o) {
                            var s,
                              a = e.xhr()
                            if (
                              (a.open(
                                e.type,
                                e.url,
                                e.async,
                                e.username,
                                e.password
                              ),
                              e.xhrFields)
                            )
                              for (s in e.xhrFields) {
                                a[s] = e.xhrFields[s]
                              }
                            e.mimeType &&
                              a.overrideMimeType &&
                              a.overrideMimeType(e.mimeType),
                              e.crossDomain ||
                                r['X-Requested-With'] ||
                                (r['X-Requested-With'] = 'XMLHttpRequest')
                            for (s in r) {
                              a.setRequestHeader(s, r[s])
                            }
                            ;(_t3 = function t(e) {
                              return function() {
                                _t3 &&
                                  ((_t3 = i = a.onload = a.onerror = a.onabort = a.ontimeout = a.onreadystatechange = null),
                                  'abort' === e
                                    ? a.abort()
                                    : 'error' === e
                                    ? 'number' != typeof a.status
                                      ? o(0, 'error')
                                      : o(a.status, a.statusText)
                                    : o(
                                        Qt[a.status] || a.status,
                                        a.statusText,
                                        'text' !== (a.responseType || 'text') ||
                                          'string' != typeof a.responseText
                                          ? { binary: a.response }
                                          : { text: a.responseText },
                                        a.getAllResponseHeaders()
                                      ))
                              }
                            }),
                              (a.onload = _t3()),
                              (i = a.onerror = a.ontimeout = _t3('error')),
                              void 0 !== a.onabort
                                ? (a.onabort = i)
                                : (a.onreadystatechange = function() {
                                    4 === a.readyState &&
                                      n.setTimeout(function() {
                                        _t3 && i()
                                      })
                                  }),
                              (_t3 = _t3('abort'))
                            try {
                              a.send((e.hasContent && e.data) || null)
                            } catch (l) {
                              if (_t3) throw l
                            }
                          },
                          abort: function abort() {
                            _t3 && _t3()
                          }
                        }
                    }),
                    ke.ajaxPrefilter(function(e) {
                      e.crossDomain && (e.contents.script = !1)
                    }),
                    ke.ajaxSetup({
                      accepts: {
                        script:
                          'text/javascript, application/javascript, application/ecmascript, application/x-ecmascript'
                      },
                      contents: { script: /\b(?:java|ecma)script\b/ },
                      converters: {
                        'text script': function textScript(e) {
                          return ke.globalEval(e), e
                        }
                      }
                    }),
                    ke.ajaxPrefilter('script', function(e) {
                      void 0 === e.cache && (e.cache = !1),
                        e.crossDomain && (e.type = 'GET')
                    }),
                    ke.ajaxTransport('script', function(e) {
                      if (e.crossDomain) {
                        var t, _n2
                        return {
                          send: function send(i, r) {
                            ;(t = ke('<script>')
                              .prop({ charset: e.scriptCharset, src: e.url })
                              .on(
                                'load error',
                                (_n2 = function n(e) {
                                  t.remove(),
                                    (_n2 = null),
                                    e &&
                                      r('error' === e.type ? 404 : 200, e.type)
                                })
                              )),
                              ce.head.appendChild(t[0])
                          },
                          abort: function abort() {
                            _n2 && _n2()
                          }
                        }
                      }
                    })
                  var en = [],
                    tn = /(=)\?(?=&|$)|\?\?/
                  ke.ajaxSetup({
                    jsonp: 'callback',
                    jsonpCallback: function jsonpCallback() {
                      var e = en.pop() || ke.expando + '_' + Ot++
                      return (this[e] = !0), e
                    }
                  }),
                    ke.ajaxPrefilter('json jsonp', function(e, t, i) {
                      var r,
                        o,
                        s,
                        a =
                          e.jsonp !== !1 &&
                          (tn.test(e.url)
                            ? 'url'
                            : 'string' == typeof e.data &&
                              0 ===
                                (e.contentType || '').indexOf(
                                  'application/x-www-form-urlencoded'
                                ) &&
                              tn.test(e.data) &&
                              'data')
                      if (a || 'jsonp' === e.dataTypes[0])
                        return (
                          (r = e.jsonpCallback = _e(e.jsonpCallback)
                            ? e.jsonpCallback()
                            : e.jsonpCallback),
                          a
                            ? (e[a] = e[a].replace(tn, '$1' + r))
                            : e.jsonp !== !1 &&
                              (e.url +=
                                (Pt.test(e.url) ? '&' : '?') +
                                e.jsonp +
                                '=' +
                                r),
                          (e.converters['script json'] = function() {
                            return s || ke.error(r + ' was not called'), s[0]
                          }),
                          (e.dataTypes[0] = 'json'),
                          (o = n[r]),
                          (n[r] = function() {
                            s = arguments
                          }),
                          i.always(function() {
                            void 0 === o ? ke(n).removeProp(r) : (n[r] = o),
                              e[r] &&
                                ((e.jsonpCallback = t.jsonpCallback),
                                en.push(r)),
                              s && _e(o) && o(s[0]),
                              (s = o = void 0)
                          }),
                          'script'
                        )
                    }),
                    (be.createHTMLDocument = (function() {
                      var e = ce.implementation.createHTMLDocument('').body
                      return (
                        (e.innerHTML = '<form></form><form></form>'),
                        2 === e.childNodes.length
                      )
                    })()),
                    (ke.parseHTML = function(e, t, n) {
                      if ('string' != typeof e) return []
                      'boolean' == typeof t && ((n = t), (t = !1))
                      var i, r, o
                      return (
                        t ||
                          (be.createHTMLDocument
                            ? ((t = ce.implementation.createHTMLDocument('')),
                              (i = t.createElement('base')),
                              (i.href = ce.location.href),
                              t.head.appendChild(i))
                            : (t = ce)),
                        (r = $e.exec(e)),
                        (o = !n && []),
                        r
                          ? [t.createElement(r[1])]
                          : ((r = S([e], t, o)),
                            o && o.length && ke(o).remove(),
                            ke.merge([], r.childNodes))
                      )
                    }),
                    (ke.fn.load = function(e, t, n) {
                      var i,
                        r,
                        o,
                        s = this,
                        a = e.indexOf(' ')
                      return (
                        a > -1 && ((i = ee(e.slice(a))), (e = e.slice(0, a))),
                        _e(t)
                          ? ((n = t), (t = void 0))
                          : t &&
                            'object' == (0, _typeof3['default'])(t) &&
                            (r = 'POST'),
                        s.length > 0 &&
                          ke
                            .ajax({
                              url: e,
                              type: r || 'GET',
                              dataType: 'html',
                              data: t
                            })
                            .done(function(e) {
                              ;(o = arguments),
                                s.html(
                                  i
                                    ? ke('<div>')
                                        .append(ke.parseHTML(e))
                                        .find(i)
                                    : e
                                )
                            })
                            .always(
                              n &&
                                function(e, t) {
                                  s.each(function() {
                                    n.apply(this, o || [e.responseText, t, e])
                                  })
                                }
                            ),
                        this
                      )
                    }),
                    ke.each(
                      [
                        'ajaxStart',
                        'ajaxStop',
                        'ajaxComplete',
                        'ajaxError',
                        'ajaxSuccess',
                        'ajaxSend'
                      ],
                      function(e, t) {
                        ke.fn[t] = function(e) {
                          return this.on(t, e)
                        }
                      }
                    ),
                    (ke.expr.pseudos.animated = function(e) {
                      return ke.grep(ke.timers, function(t) {
                        return e === t.elem
                      }).length
                    }),
                    (ke.offset = {
                      setOffset: function setOffset(e, t, n) {
                        var i,
                          r,
                          o,
                          s,
                          a,
                          l,
                          u,
                          c = ke.css(e, 'position'),
                          h = ke(e),
                          p = {}
                        'static' === c && (e.style.position = 'relative'),
                          (a = h.offset()),
                          (o = ke.css(e, 'top')),
                          (l = ke.css(e, 'left')),
                          (u =
                            ('absolute' === c || 'fixed' === c) &&
                            (o + l).indexOf('auto') > -1),
                          u
                            ? ((i = h.position()), (s = i.top), (r = i.left))
                            : ((s = parseFloat(o) || 0),
                              (r = parseFloat(l) || 0)),
                          _e(t) && (t = t.call(e, n, ke.extend({}, a))),
                          null != t.top && (p.top = t.top - a.top + s),
                          null != t.left && (p.left = t.left - a.left + r),
                          'using' in t ? t.using.call(e, p) : h.css(p)
                      }
                    }),
                    ke.fn.extend({
                      offset: function offset(e) {
                        if (arguments.length)
                          return void 0 === e
                            ? this
                            : this.each(function(t) {
                                ke.offset.setOffset(this, e, t)
                              })
                        var t,
                          n,
                          i = this[0]
                        if (i)
                          return i.getClientRects().length
                            ? ((t = i.getBoundingClientRect()),
                              (n = i.ownerDocument.defaultView),
                              {
                                top: t.top + n.pageYOffset,
                                left: t.left + n.pageXOffset
                              })
                            : { top: 0, left: 0 }
                      },
                      position: function position() {
                        if (this[0]) {
                          var e,
                            t,
                            n,
                            i = this[0],
                            r = { top: 0, left: 0 }
                          if ('fixed' === ke.css(i, 'position'))
                            t = i.getBoundingClientRect()
                          else {
                            for (
                              t = this.offset(),
                                n = i.ownerDocument,
                                e = i.offsetParent || n.documentElement;
                              e &&
                              (e === n.body || e === n.documentElement) &&
                              'static' === ke.css(e, 'position');

                            ) {
                              e = e.parentNode
                            }
                            e &&
                              e !== i &&
                              1 === e.nodeType &&
                              ((r = ke(e).offset()),
                              (r.top += ke.css(e, 'borderTopWidth', !0)),
                              (r.left += ke.css(e, 'borderLeftWidth', !0)))
                          }
                          return {
                            top: t.top - r.top - ke.css(i, 'marginTop', !0),
                            left: t.left - r.left - ke.css(i, 'marginLeft', !0)
                          }
                        }
                      },
                      offsetParent: function offsetParent() {
                        return this.map(function() {
                          for (
                            var e = this.offsetParent;
                            e && 'static' === ke.css(e, 'position');

                          ) {
                            e = e.offsetParent
                          }
                          return e || st
                        })
                      }
                    }),
                    ke.each(
                      { scrollLeft: 'pageXOffset', scrollTop: 'pageYOffset' },
                      function(e, t) {
                        var n = 'pageYOffset' === t
                        ke.fn[e] = function(i) {
                          return Ie(
                            this,
                            function(e, i, r) {
                              var o
                              return (
                                Ce(e)
                                  ? (o = e)
                                  : 9 === e.nodeType && (o = e.defaultView),
                                void 0 === r
                                  ? o
                                    ? o[t]
                                    : e[i]
                                  : void (o
                                      ? o.scrollTo(
                                          n ? o.pageXOffset : r,
                                          n ? r : o.pageYOffset
                                        )
                                      : (e[i] = r))
                              )
                            },
                            e,
                            i,
                            arguments.length
                          )
                        }
                      }
                    ),
                    ke.each(['top', 'left'], function(e, t) {
                      ke.cssHooks[t] = R(be.pixelPosition, function(e, n) {
                        if (n)
                          return (
                            (n = M(e, t)),
                            ft.test(n) ? ke(e).position()[t] + 'px' : n
                          )
                      })
                    }),
                    ke.each({ Height: 'height', Width: 'width' }, function(
                      e,
                      t
                    ) {
                      ke.each(
                        { padding: 'inner' + e, content: t, '': 'outer' + e },
                        function(n, i) {
                          ke.fn[i] = function(r, o) {
                            var s =
                                arguments.length &&
                                (n || 'boolean' != typeof r),
                              a =
                                n ||
                                (r === !0 || o === !0 ? 'margin' : 'border')
                            return Ie(
                              this,
                              function(t, n, r) {
                                var o
                                return Ce(t)
                                  ? 0 === i.indexOf('outer')
                                    ? t['inner' + e]
                                    : t.document.documentElement['client' + e]
                                  : 9 === t.nodeType
                                  ? ((o = t.documentElement),
                                    Math.max(
                                      t.body['scroll' + e],
                                      o['scroll' + e],
                                      t.body['offset' + e],
                                      o['offset' + e],
                                      o['client' + e]
                                    ))
                                  : void 0 === r
                                  ? ke.css(t, n, a)
                                  : ke.style(t, n, r, a)
                              },
                              t,
                              s ? r : void 0,
                              s
                            )
                          }
                        }
                      )
                    }),
                    ke.each(
                      'blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu'.split(
                        ' '
                      ),
                      function(e, t) {
                        ke.fn[t] = function(e, n) {
                          return arguments.length > 0
                            ? this.on(t, null, e, n)
                            : this.trigger(t)
                        }
                      }
                    ),
                    ke.fn.extend({
                      hover: function hover(e, t) {
                        return this.mouseenter(e).mouseleave(t || e)
                      }
                    }),
                    ke.fn.extend({
                      bind: function bind(e, t, n) {
                        return this.on(e, null, t, n)
                      },
                      unbind: function unbind(e, t) {
                        return this.off(e, null, t)
                      },
                      delegate: function delegate(e, t, n, i) {
                        return this.on(t, e, n, i)
                      },
                      undelegate: function undelegate(e, t, n) {
                        return 1 === arguments.length
                          ? this.off(e, '**')
                          : this.off(t, e || '**', n)
                      }
                    }),
                    (ke.proxy = function(e, t) {
                      var n, i, r
                      if (
                        ('string' == typeof t && ((n = e[t]), (t = e), (e = n)),
                        _e(e))
                      )
                        return (
                          (i = pe.call(arguments, 2)),
                          (r = function r() {
                            return e.apply(
                              t || this,
                              i.concat(pe.call(arguments))
                            )
                          }),
                          (r.guid = e.guid = e.guid || ke.guid++),
                          r
                        )
                    }),
                    (ke.holdReady = function(e) {
                      e ? ke.readyWait++ : ke.ready(!0)
                    }),
                    (ke.isArray = Array.isArray),
                    (ke.parseJSON = JSON.parse),
                    (ke.nodeName = u),
                    (ke.isFunction = _e),
                    (ke.isWindow = Ce),
                    (ke.camelCase = y),
                    (ke.type = a),
                    (ke.now = Date.now),
                    (ke.isNumeric = function(e) {
                      var t = ke.type(e)
                      return (
                        ('number' === t || 'string' === t) &&
                        !isNaN(e - parseFloat(e))
                      )
                    }),
                    (i = []),
                    (r = function() {
                      return ke
                    }.apply(t, i)),
                    !(void 0 !== r && (e.exports = r))
                  var nn = n.jQuery,
                    rn = n.$
                  return (
                    (ke.noConflict = function(e) {
                      return (
                        n.$ === ke && (n.$ = rn),
                        e && n.jQuery === ke && (n.jQuery = nn),
                        ke
                      )
                    }),
                    o || (n.jQuery = n.$ = ke),
                    ke
                  )
                })
              },
              function(e, t, n) {
                var i = n(5)
                'string' == typeof i && (i = [[e.id, i, '']]),
                  i.locals && (e.exports = i.locals)
                n(9)('c9621516', i, !0)
              },
              function(e, t, n) {
                var i = n(6)
                ;(t = e.exports = n(7)(!1)),
                  t.push([
                    e.id,
                    '/**\n * Owl Carousel v2.3.4\n * Copyright 2013-2018 David Deutsch\n * Licensed under: SEE LICENSE IN https://github.com/OwlCarousel2/OwlCarousel2/blob/master/LICENSE\n */\n/*\n *  Owl Carousel - Core\n */\n.owl-carousel {\n  display: none;\n  width: 100%;\n  -webkit-tap-highlight-color: transparent;\n  /* position relative and z-index fix webkit rendering fonts issue */\n  position: relative;\n  z-index: 1; }\n  .owl-carousel .owl-stage {\n    position: relative;\n    -ms-touch-action: pan-Y;\n    touch-action: manipulation;\n    -moz-backface-visibility: hidden;\n    /* fix firefox animation glitch */ }\n  .owl-carousel .owl-stage:after {\n    content: ".";\n    display: block;\n    clear: both;\n    visibility: hidden;\n    line-height: 0;\n    height: 0; }\n  .owl-carousel .owl-stage-outer {\n    position: relative;\n    overflow: hidden;\n    /* fix for flashing background */\n    -webkit-transform: translate3d(0px, 0px, 0px); }\n  .owl-carousel .owl-wrapper,\n  .owl-carousel .owl-item {\n    -webkit-backface-visibility: hidden;\n    -moz-backface-visibility: hidden;\n    -ms-backface-visibility: hidden;\n    -webkit-transform: translate3d(0, 0, 0);\n    -moz-transform: translate3d(0, 0, 0);\n    -ms-transform: translate3d(0, 0, 0); }\n  .owl-carousel .owl-item {\n    position: relative;\n    min-height: 1px;\n    float: left;\n    -webkit-backface-visibility: hidden;\n    -webkit-tap-highlight-color: transparent;\n    -webkit-touch-callout: none; }\n  .owl-carousel .owl-item img {\n    display: block;\n    width: 100%; }\n  .owl-carousel .owl-nav.disabled,\n  .owl-carousel .owl-dots.disabled {\n    display: none; }\n  .owl-carousel .owl-nav .owl-prev,\n  .owl-carousel .owl-nav .owl-next,\n  .owl-carousel .owl-dot {\n    cursor: pointer;\n    -webkit-user-select: none;\n    -khtml-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none; }\n  .owl-carousel .owl-nav button.owl-prev,\n  .owl-carousel .owl-nav button.owl-next,\n  .owl-carousel button.owl-dot {\n    background: none;\n    color: inherit;\n    border: none;\n    padding: 0 !important;\n    font: inherit; }\n  .owl-carousel.owl-loaded {\n    display: block; }\n  .owl-carousel.owl-loading {\n    opacity: 0;\n    display: block; }\n  .owl-carousel.owl-hidden {\n    opacity: 0; }\n  .owl-carousel.owl-refresh .owl-item {\n    visibility: hidden; }\n  .owl-carousel.owl-drag .owl-item {\n    -ms-touch-action: pan-y;\n        touch-action: pan-y;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none; }\n  .owl-carousel.owl-grab {\n    cursor: move;\n    cursor: grab; }\n  .owl-carousel.owl-rtl {\n    direction: rtl; }\n  .owl-carousel.owl-rtl .owl-item {\n    float: right; }\n\n/* No Js */\n.no-js .owl-carousel {\n  display: block; }\n\n/*\n *  Owl Carousel - Animate Plugin\n */\n.owl-carousel .animated {\n  animation-duration: 1000ms;\n  animation-fill-mode: both; }\n\n.owl-carousel .owl-animated-in {\n  z-index: 0; }\n\n.owl-carousel .owl-animated-out {\n  z-index: 1; }\n\n.owl-carousel .fadeOut {\n  animation-name: fadeOut; }\n\n@keyframes fadeOut {\n  0% {\n    opacity: 1; }\n  100% {\n    opacity: 0; } }\n\n/*\n * \tOwl Carousel - Auto Height Plugin\n */\n.owl-height {\n  transition: height 500ms ease-in-out; }\n\n/*\n * \tOwl Carousel - Lazy Load Plugin\n */\n.owl-carousel .owl-item {\n  /**\n\t\t\tThis is introduced due to a bug in IE11 where lazy loading combined with autoheight plugin causes a wrong\n\t\t\tcalculation of the height of the owl-item that breaks page layouts\n\t\t */ }\n  .owl-carousel .owl-item .owl-lazy {\n    opacity: 0;\n    transition: opacity 400ms ease; }\n  .owl-carousel .owl-item .owl-lazy[src^=""], .owl-carousel .owl-item .owl-lazy:not([src]) {\n    max-height: 0; }\n  .owl-carousel .owl-item img.owl-lazy {\n    transform-style: preserve-3d; }\n\n/*\n * \tOwl Carousel - Video Plugin\n */\n.owl-carousel .owl-video-wrapper {\n  position: relative;\n  height: 100%;\n  background: #000; }\n\n.owl-carousel .owl-video-play-icon {\n  position: absolute;\n  height: 80px;\n  width: 80px;\n  left: 50%;\n  top: 50%;\n  margin-left: -40px;\n  margin-top: -40px;\n  background: url(' +
                      i(n(8)) +
                      ') no-repeat;\n  cursor: pointer;\n  z-index: 1;\n  -webkit-backface-visibility: hidden;\n  transition: transform 100ms ease; }\n\n.owl-carousel .owl-video-play-icon:hover {\n  -ms-transform: scale(1.3, 1.3);\n      transform: scale(1.3, 1.3); }\n\n.owl-carousel .owl-video-playing .owl-video-tn,\n.owl-carousel .owl-video-playing .owl-video-play-icon {\n  display: none; }\n\n.owl-carousel .owl-video-tn {\n  opacity: 0;\n  height: 100%;\n  background-position: center center;\n  background-repeat: no-repeat;\n  background-size: contain;\n  transition: opacity 400ms ease; }\n\n.owl-carousel .owl-video-frame {\n  position: relative;\n  z-index: 1;\n  height: 100%;\n  width: 100%; }\n',
                    ''
                  ])
              },
              function(e, t) {
                e.exports = function(e) {
                  return 'string' != typeof e
                    ? e
                    : (/^['"].*['"]$/.test(e) && (e = e.slice(1, -1)),
                      /["'() \t\n]/.test(e)
                        ? '"' +
                          e.replace(/"/g, '\\"').replace(/\n/g, '\\n') +
                          '"'
                        : e)
                }
              },
              function(e, t) {
                function n(e, t) {
                  var n = e[1] || '',
                    r = e[3]
                  if (!r) return n
                  if (t && 'function' == typeof btoa) {
                    var o = i(r),
                      s = r.sources.map(function(e) {
                        return '/*# sourceURL=' + r.sourceRoot + e + ' */'
                      })
                    return [n]
                      .concat(s)
                      .concat([o])
                      .join('\n')
                  }
                  return [n].join('\n')
                }
                function i(e) {
                  var t = btoa(unescape(encodeURIComponent(JSON.stringify(e)))),
                    n =
                      'sourceMappingURL=data:application/json;charset=utf-8;base64,' +
                      t
                  return '/*# ' + n + ' */'
                }
                e.exports = function(e) {
                  var t = []
                  return (
                    (t.toString = function() {
                      return this.map(function(t) {
                        var i = n(t, e)
                        return t[2] ? '@media ' + t[2] + '{' + i + '}' : i
                      }).join('')
                    }),
                    (t.i = function(e, n) {
                      'string' == typeof e && (e = [[null, e, '']])
                      for (var i = {}, r = 0; r < this.length; r++) {
                        var o = this[r][0]
                        'number' == typeof o && (i[o] = !0)
                      }
                      for (r = 0; r < e.length; r++) {
                        var s = e[r]
                        ;('number' == typeof s[0] && i[s[0]]) ||
                          (n && !s[2]
                            ? (s[2] = n)
                            : n && (s[2] = '(' + s[2] + ') and (' + n + ')'),
                          t.push(s))
                      }
                    }),
                    t
                  )
                }
              },
              function(e, t, n) {
                e.exports = n.p + '4a37f8008959c75f619bf0a3a4e2d7a2.png'
              },
              function(e, t, n) {
                function i(e) {
                  for (var t = 0; t < e.length; t++) {
                    var n = e[t],
                      i = c[n.id]
                    if (i) {
                      i.refs++
                      for (var r = 0; r < i.parts.length; r++) {
                        i.parts[r](n.parts[r])
                      }
                      for (; r < n.parts.length; r++) {
                        i.parts.push(o(n.parts[r]))
                      }
                      i.parts.length > n.parts.length &&
                        (i.parts.length = n.parts.length)
                    } else {
                      for (var s = [], r = 0; r < n.parts.length; r++) {
                        s.push(o(n.parts[r]))
                      }
                      c[n.id] = { id: n.id, refs: 1, parts: s }
                    }
                  }
                }
                function r() {
                  var e = document.createElement('style')
                  return (e.type = 'text/css'), h.appendChild(e), e
                }
                function o(e) {
                  var t,
                    n,
                    i = document.querySelector(
                      'style[data-vue-ssr-id~="' + e.id + '"]'
                    )
                  if (i) {
                    if (f) return g
                    i.parentNode.removeChild(i)
                  }
                  if (m) {
                    var o = d++
                    ;(i = p || (p = r())),
                      (t = s.bind(null, i, o, !1)),
                      (n = s.bind(null, i, o, !0))
                  } else
                    (i = r()),
                      (t = a.bind(null, i)),
                      (n = function n() {
                        i.parentNode.removeChild(i)
                      })
                  return (
                    t(e),
                    function(i) {
                      if (i) {
                        if (
                          i.css === e.css &&
                          i.media === e.media &&
                          i.sourceMap === e.sourceMap
                        )
                          return
                        t((e = i))
                      } else n()
                    }
                  )
                }
                function s(e, t, n, i) {
                  var r = n ? '' : i.css
                  if (e.styleSheet) e.styleSheet.cssText = v(t, r)
                  else {
                    var o = document.createTextNode(r),
                      s = e.childNodes
                    s[t] && e.removeChild(s[t]),
                      s.length ? e.insertBefore(o, s[t]) : e.appendChild(o)
                  }
                }
                function a(e, t) {
                  var n = t.css,
                    i = t.media,
                    r = t.sourceMap
                  if (
                    (i && e.setAttribute('media', i),
                    r &&
                      ((n += '\n/*# sourceURL=' + r.sources[0] + ' */'),
                      (n +=
                        '\n/*# sourceMappingURL=data:application/json;base64,' +
                        btoa(unescape(encodeURIComponent(JSON.stringify(r)))) +
                        ' */')),
                    e.styleSheet)
                  )
                    e.styleSheet.cssText = n
                  else {
                    for (; e.firstChild; ) {
                      e.removeChild(e.firstChild)
                    }
                    e.appendChild(document.createTextNode(n))
                  }
                }
                var l = 'undefined' != typeof document,
                  u = n(10),
                  c = {},
                  h =
                    l &&
                    (document.head || document.getElementsByTagName('head')[0]),
                  p = null,
                  d = 0,
                  f = !1,
                  g = function g() {},
                  m =
                    'undefined' != typeof navigator &&
                    /msie [6-9]\b/.test(navigator.userAgent.toLowerCase())
                e.exports = function(e, t, n) {
                  f = n
                  var r = u(e, t)
                  return (
                    i(r),
                    function(t) {
                      for (var n = [], o = 0; o < r.length; o++) {
                        var s = r[o],
                          a = c[s.id]
                        a.refs--, n.push(a)
                      }
                      t ? ((r = u(e, t)), i(r)) : (r = [])
                      for (var o = 0; o < n.length; o++) {
                        var a = n[o]
                        if (0 === a.refs) {
                          for (var l = 0; l < a.parts.length; l++) {
                            a.parts[l]()
                          }
                          delete c[a.id]
                        }
                      }
                    }
                  )
                }
                var v = (function() {
                  var e = []
                  return function(t, n) {
                    return (e[t] = n), e.filter(Boolean).join('\n')
                  }
                })()
              },
              function(e, t) {
                e.exports = function(e, t) {
                  for (var n = [], i = {}, r = 0; r < t.length; r++) {
                    var o = t[r],
                      s = o[0],
                      a = o[1],
                      l = o[2],
                      u = o[3],
                      c = { id: e + ':' + r, css: a, media: l, sourceMap: u }
                    i[s]
                      ? i[s].parts.push(c)
                      : n.push((i[s] = { id: s, parts: [c] }))
                  }
                  return n
                }
              },
              function(e, t, n) {
                var i = n(12)
                'string' == typeof i && (i = [[e.id, i, '']]),
                  i.locals && (e.exports = i.locals)
                n(9)('25bb882e', i, !0)
              },
              function(e, t, n) {
                ;(t = e.exports = n(7)(!1)),
                  t.push([
                    e.id,
                    "/**\n * Owl Carousel v2.3.4\n * Copyright 2013-2018 David Deutsch\n * Licensed under: SEE LICENSE IN https://github.com/OwlCarousel2/OwlCarousel2/blob/master/LICENSE\n */\n/*\n * \tDefault theme - Owl Carousel CSS File\n */\n.owl-theme .owl-nav {\n  margin-top: 10px;\n  text-align: center;\n  -webkit-tap-highlight-color: transparent; }\n  .owl-theme .owl-nav [class*='owl-'] {\n    color: #FFF;\n    font-size: 14px;\n    margin: 5px;\n    padding: 4px 7px;\n    background: #D6D6D6;\n    display: inline-block;\n    cursor: pointer;\n    border-radius: 3px; }\n    .owl-theme .owl-nav [class*='owl-']:hover {\n      background: #869791;\n      color: #FFF;\n      text-decoration: none; }\n  .owl-theme .owl-nav .disabled {\n    opacity: 0.5;\n    cursor: default; }\n\n.owl-theme .owl-nav.disabled + .owl-dots {\n  margin-top: 10px; }\n\n.owl-theme .owl-dots {\n  text-align: center;\n  -webkit-tap-highlight-color: transparent; }\n  .owl-theme .owl-dots .owl-dot {\n    display: inline-block;\n    zoom: 1;\n    *display: inline; }\n    .owl-theme .owl-dots .owl-dot span {\n      width: 10px;\n      height: 10px;\n      margin: 5px 7px;\n      background: #D6D6D6;\n      display: block;\n      -webkit-backface-visibility: visible;\n      transition: opacity 200ms ease;\n      border-radius: 30px; }\n    .owl-theme .owl-dots .owl-dot.active span, .owl-theme .owl-dots .owl-dot:hover span {\n      background: #869791; }\n",
                    ''
                  ])
              },
              function(e, t, n) {
                ;(function(e, t) {
                  !(function(e, n, i, r) {
                    function o(t, n) {
                      ;(this.settings = null),
                        (this.options = e.extend({}, o.Defaults, n)),
                        (this.$element = e(t)),
                        (this._handlers = {}),
                        (this._plugins = {}),
                        (this._supress = {}),
                        (this._current = null),
                        (this._speed = null),
                        (this._coordinates = []),
                        (this._breakpoint = null),
                        (this._width = null),
                        (this._items = []),
                        (this._clones = []),
                        (this._mergers = []),
                        (this._widths = []),
                        (this._invalidated = {}),
                        (this._pipe = []),
                        (this._drag = {
                          time: null,
                          target: null,
                          pointer: null,
                          stage: { start: null, current: null },
                          direction: null
                        }),
                        (this._states = {
                          current: {},
                          tags: {
                            initializing: ['busy'],
                            animating: ['busy'],
                            dragging: ['interacting']
                          }
                        }),
                        e.each(
                          ['onResize', 'onThrottledResize'],
                          e.proxy(function(t, n) {
                            this._handlers[n] = e.proxy(this[n], this)
                          }, this)
                        ),
                        e.each(
                          o.Plugins,
                          e.proxy(function(e, t) {
                            this._plugins[
                              e.charAt(0).toLowerCase() + e.slice(1)
                            ] = new t(this)
                          }, this)
                        ),
                        e.each(
                          o.Workers,
                          e.proxy(function(t, n) {
                            this._pipe.push({
                              filter: n.filter,
                              run: e.proxy(n.run, this)
                            })
                          }, this)
                        ),
                        this.setup(),
                        this.initialize()
                    }
                    ;(o.Defaults = {
                      items: 3,
                      loop: !1,
                      center: !1,
                      rewind: !1,
                      checkVisibility: !0,
                      mouseDrag: !0,
                      touchDrag: !0,
                      pullDrag: !0,
                      freeDrag: !1,
                      margin: 0,
                      stagePadding: 0,
                      merge: !1,
                      mergeFit: !0,
                      autoWidth: !1,
                      startPosition: 0,
                      rtl: !1,
                      smartSpeed: 250,
                      fluidSpeed: !1,
                      dragEndSpeed: !1,
                      responsive: {},
                      responsiveRefreshRate: 200,
                      responsiveBaseElement: n,
                      fallbackEasing: 'swing',
                      slideTransition: '',
                      info: !1,
                      nestedItemSelector: !1,
                      itemElement: 'div',
                      stageElement: 'div',
                      refreshClass: 'owl-refresh',
                      loadedClass: 'owl-loaded',
                      loadingClass: 'owl-loading',
                      rtlClass: 'owl-rtl',
                      responsiveClass: 'owl-responsive',
                      dragClass: 'owl-drag',
                      itemClass: 'owl-item',
                      stageClass: 'owl-stage',
                      stageOuterClass: 'owl-stage-outer',
                      grabClass: 'owl-grab'
                    }),
                      (o.Width = {
                        Default: 'default',
                        Inner: 'inner',
                        Outer: 'outer'
                      }),
                      (o.Type = { Event: 'event', State: 'state' }),
                      (o.Plugins = {}),
                      (o.Workers = [
                        {
                          filter: ['width', 'settings'],
                          run: function run() {
                            this._width = this.$element.width()
                          }
                        },
                        {
                          filter: ['width', 'items', 'settings'],
                          run: function run(e) {
                            e.current =
                              this._items &&
                              this._items[this.relative(this._current)]
                          }
                        },
                        {
                          filter: ['items', 'settings'],
                          run: function run() {
                            this.$stage.children('.cloned').remove()
                          }
                        },
                        {
                          filter: ['width', 'items', 'settings'],
                          run: function run(e) {
                            var t = this.settings.margin || '',
                              n = !this.settings.autoWidth,
                              i = this.settings.rtl,
                              r = {
                                width: 'auto',
                                'margin-left': i ? t : '',
                                'margin-right': i ? '' : t
                              }
                            !n && this.$stage.children().css(r), (e.css = r)
                          }
                        },
                        {
                          filter: ['width', 'items', 'settings'],
                          run: function run(e) {
                            var t =
                                (this.width() / this.settings.items).toFixed(
                                  3
                                ) - this.settings.margin,
                              n = null,
                              i = this._items.length,
                              r = !this.settings.autoWidth,
                              o = []
                            for (e.items = { merge: !1, width: t }; i--; ) {
                              ;(n = this._mergers[i]),
                                (n =
                                  (this.settings.mergeFit &&
                                    Math.min(n, this.settings.items)) ||
                                  n),
                                (e.items.merge = n > 1 || e.items.merge),
                                (o[i] = r ? t * n : this._items[i].width())
                            }
                            this._widths = o
                          }
                        },
                        {
                          filter: ['items', 'settings'],
                          run: function run() {
                            var t = [],
                              n = this._items,
                              i = this.settings,
                              r = Math.max(2 * i.items, 4),
                              o = 2 * Math.ceil(n.length / 2),
                              s =
                                i.loop && n.length
                                  ? i.rewind
                                    ? r
                                    : Math.max(r, o)
                                  : 0,
                              a = '',
                              l = ''
                            for (s /= 2; s > 0; ) {
                              t.push(this.normalize(t.length / 2, !0)),
                                (a += n[t[t.length - 1]][0].outerHTML),
                                t.push(
                                  this.normalize(
                                    n.length - 1 - (t.length - 1) / 2,
                                    !0
                                  )
                                ),
                                (l = n[t[t.length - 1]][0].outerHTML + l),
                                (s -= 1)
                            }
                            ;(this._clones = t),
                              e(a)
                                .addClass('cloned')
                                .appendTo(this.$stage),
                              e(l)
                                .addClass('cloned')
                                .prependTo(this.$stage)
                          }
                        },
                        {
                          filter: ['width', 'items', 'settings'],
                          run: function run() {
                            for (
                              var e = this.settings.rtl ? 1 : -1,
                                t = this._clones.length + this._items.length,
                                n = -1,
                                i = 0,
                                r = 0,
                                o = [];
                              ++n < t;

                            ) {
                              ;(i = o[n - 1] || 0),
                                (r =
                                  this._widths[this.relative(n)] +
                                  this.settings.margin),
                                o.push(i + r * e)
                            }
                            this._coordinates = o
                          }
                        },
                        {
                          filter: ['width', 'items', 'settings'],
                          run: function run() {
                            var e = this.settings.stagePadding,
                              t = this._coordinates,
                              n = {
                                width:
                                  Math.ceil(Math.abs(t[t.length - 1])) + 2 * e,
                                'padding-left': e || '',
                                'padding-right': e || ''
                              }
                            this.$stage.css(n)
                          }
                        },
                        {
                          filter: ['width', 'items', 'settings'],
                          run: function run(e) {
                            var t = this._coordinates.length,
                              n = !this.settings.autoWidth,
                              i = this.$stage.children()
                            if (n && e.items.merge)
                              for (; t--; ) {
                                ;(e.css.width = this._widths[this.relative(t)]),
                                  i.eq(t).css(e.css)
                              }
                            else
                              n && ((e.css.width = e.items.width), i.css(e.css))
                          }
                        },
                        {
                          filter: ['items'],
                          run: function run() {
                            this._coordinates.length < 1 &&
                              this.$stage.removeAttr('style')
                          }
                        },
                        {
                          filter: ['width', 'items', 'settings'],
                          run: function run(e) {
                            ;(e.current = e.current
                              ? this.$stage.children().index(e.current)
                              : 0),
                              (e.current = Math.max(
                                this.minimum(),
                                Math.min(this.maximum(), e.current)
                              )),
                              this.reset(e.current)
                          }
                        },
                        {
                          filter: ['position'],
                          run: function run() {
                            this.animate(this.coordinates(this._current))
                          }
                        },
                        {
                          filter: ['width', 'position', 'items', 'settings'],
                          run: function run() {
                            var e,
                              t,
                              n,
                              i,
                              r = this.settings.rtl ? 1 : -1,
                              o = 2 * this.settings.stagePadding,
                              s = this.coordinates(this.current()) + o,
                              a = s + this.width() * r,
                              l = []
                            for (
                              n = 0, i = this._coordinates.length;
                              n < i;
                              n++
                            ) {
                              ;(e = this._coordinates[n - 1] || 0),
                                (t = Math.abs(this._coordinates[n]) + o * r),
                                ((this.op(e, '<=', s) && this.op(e, '>', a)) ||
                                  (this.op(t, '<', s) && this.op(t, '>', a))) &&
                                  l.push(n)
                            }
                            this.$stage
                              .children('.active')
                              .removeClass('active'),
                              this.$stage
                                .children(':eq(' + l.join('), :eq(') + ')')
                                .addClass('active'),
                              this.$stage
                                .children('.center')
                                .removeClass('center'),
                              this.settings.center &&
                                this.$stage
                                  .children()
                                  .eq(this.current())
                                  .addClass('center')
                          }
                        }
                      ]),
                      (o.prototype.initializeStage = function() {
                        ;(this.$stage = this.$element.find(
                          '.' + this.settings.stageClass
                        )),
                          this.$stage.length ||
                            (this.$element.addClass(this.options.loadingClass),
                            (this.$stage = e(
                              '<' + this.settings.stageElement + '>',
                              { class: this.settings.stageClass }
                            ).wrap(
                              e('<div/>', {
                                class: this.settings.stageOuterClass
                              })
                            )),
                            this.$element.append(this.$stage.parent()))
                      }),
                      (o.prototype.initializeItems = function() {
                        var t = this.$element.find('.owl-item')
                        return t.length
                          ? ((this._items = t.get().map(function(t) {
                              return e(t)
                            })),
                            (this._mergers = this._items.map(function() {
                              return 1
                            })),
                            void this.refresh())
                          : (this.replace(
                              this.$element.children().not(this.$stage.parent())
                            ),
                            this.isVisible()
                              ? this.refresh()
                              : this.invalidate('width'),
                            void this.$element
                              .removeClass(this.options.loadingClass)
                              .addClass(this.options.loadedClass))
                      }),
                      (o.prototype.initialize = function() {
                        if (
                          (this.enter('initializing'),
                          this.trigger('initialize'),
                          this.$element.toggleClass(
                            this.settings.rtlClass,
                            this.settings.rtl
                          ),
                          this.settings.autoWidth && !this.is('pre-loading'))
                        ) {
                          var e, t, n
                          ;(e = this.$element.find('img')),
                            (t = this.settings.nestedItemSelector
                              ? '.' + this.settings.nestedItemSelector
                              : r),
                            (n = this.$element.children(t).width()),
                            e.length && n <= 0 && this.preloadAutoWidthImages(e)
                        }
                        this.initializeStage(),
                          this.initializeItems(),
                          this.registerEventHandlers(),
                          this.leave('initializing'),
                          this.trigger('initialized')
                      }),
                      (o.prototype.isVisible = function() {
                        return (
                          !this.settings.checkVisibility ||
                          this.$element.is(':visible')
                        )
                      }),
                      (o.prototype.setup = function() {
                        var t = this.viewport(),
                          n = this.options.responsive,
                          i = -1,
                          r = null
                        n
                          ? (e.each(n, function(e) {
                              e <= t && e > i && (i = Number(e))
                            }),
                            (r = e.extend({}, this.options, n[i])),
                            'function' == typeof r.stagePadding &&
                              (r.stagePadding = r.stagePadding()),
                            delete r.responsive,
                            r.responsiveClass &&
                              this.$element.attr(
                                'class',
                                this.$element
                                  .attr('class')
                                  .replace(
                                    new RegExp(
                                      '(' +
                                        this.options.responsiveClass +
                                        '-)\\S+\\s',
                                      'g'
                                    ),
                                    '$1' + i
                                  )
                              ))
                          : (r = e.extend({}, this.options)),
                          this.trigger('change', {
                            property: { name: 'settings', value: r }
                          }),
                          (this._breakpoint = i),
                          (this.settings = r),
                          this.invalidate('settings'),
                          this.trigger('changed', {
                            property: { name: 'settings', value: this.settings }
                          })
                      }),
                      (o.prototype.optionsLogic = function() {
                        this.settings.autoWidth &&
                          ((this.settings.stagePadding = !1),
                          (this.settings.merge = !1))
                      }),
                      (o.prototype.prepare = function(t) {
                        var n = this.trigger('prepare', { content: t })
                        return (
                          n.data ||
                            (n.data = e('<' + this.settings.itemElement + '/>')
                              .addClass(this.options.itemClass)
                              .append(t)),
                          this.trigger('prepared', { content: n.data }),
                          n.data
                        )
                      }),
                      (o.prototype.update = function() {
                        for (
                          var t = 0,
                            n = this._pipe.length,
                            i = e.proxy(function(e) {
                              return this[e]
                            }, this._invalidated),
                            r = {};
                          t < n;

                        ) {
                          ;(this._invalidated.all ||
                            e.grep(this._pipe[t].filter, i).length > 0) &&
                            this._pipe[t].run(r),
                            t++
                        }
                        ;(this._invalidated = {}),
                          !this.is('valid') && this.enter('valid')
                      }),
                      (o.prototype.width = function(e) {
                        switch ((e = e || o.Width.Default)) {
                          case o.Width.Inner:
                          case o.Width.Outer:
                            return this._width
                          default:
                            return (
                              this._width -
                              2 * this.settings.stagePadding +
                              this.settings.margin
                            )
                        }
                      }),
                      (o.prototype.refresh = function() {
                        this.enter('refreshing'),
                          this.trigger('refresh'),
                          this.setup(),
                          this.optionsLogic(),
                          this.$element.addClass(this.options.refreshClass),
                          this.update(),
                          this.$element.removeClass(this.options.refreshClass),
                          this.leave('refreshing'),
                          this.trigger('refreshed')
                      }),
                      (o.prototype.onThrottledResize = function() {
                        n.clearTimeout(this.resizeTimer),
                          (this.resizeTimer = n.setTimeout(
                            this._handlers.onResize,
                            this.settings.responsiveRefreshRate
                          ))
                      }),
                      (o.prototype.onResize = function() {
                        return (
                          !!this._items.length &&
                          this._width !== this.$element.width() &&
                          !!this.isVisible() &&
                          (this.enter('resizing'),
                          this.trigger('resize').isDefaultPrevented()
                            ? (this.leave('resizing'), !1)
                            : (this.invalidate('width'),
                              this.refresh(),
                              this.leave('resizing'),
                              void this.trigger('resized')))
                        )
                      }),
                      (o.prototype.registerEventHandlers = function() {
                        e.support.transition &&
                          this.$stage.on(
                            e.support.transition.end + '.owl.core',
                            e.proxy(this.onTransitionEnd, this)
                          ),
                          this.settings.responsive !== !1 &&
                            this.on(
                              n,
                              'resize',
                              this._handlers.onThrottledResize
                            ),
                          this.settings.mouseDrag &&
                            (this.$element.addClass(this.options.dragClass),
                            this.$stage.on(
                              'mousedown.owl.core',
                              e.proxy(this.onDragStart, this)
                            ),
                            this.$stage.on(
                              'dragstart.owl.core selectstart.owl.core',
                              function() {
                                return !1
                              }
                            )),
                          this.settings.touchDrag &&
                            (this.$stage.on(
                              'touchstart.owl.core',
                              e.proxy(this.onDragStart, this)
                            ),
                            this.$stage.on(
                              'touchcancel.owl.core',
                              e.proxy(this.onDragEnd, this)
                            ))
                      }),
                      (o.prototype.onDragStart = function(t) {
                        var n = null
                        3 !== t.which &&
                          (e.support.transform
                            ? ((n = this.$stage
                                .css('transform')
                                .replace(/.*\(|\)| /g, '')
                                .split(',')),
                              (n = {
                                x: n[16 === n.length ? 12 : 4],
                                y: n[16 === n.length ? 13 : 5]
                              }))
                            : ((n = this.$stage.position()),
                              (n = {
                                x: this.settings.rtl
                                  ? n.left +
                                    this.$stage.width() -
                                    this.width() +
                                    this.settings.margin
                                  : n.left,
                                y: n.top
                              })),
                          this.is('animating') &&
                            (e.support.transform
                              ? this.animate(n.x)
                              : this.$stage.stop(),
                            this.invalidate('position')),
                          this.$element.toggleClass(
                            this.options.grabClass,
                            'mousedown' === t.type
                          ),
                          this.speed(0),
                          (this._drag.time = new Date().getTime()),
                          (this._drag.target = e(t.target)),
                          (this._drag.stage.start = n),
                          (this._drag.stage.current = n),
                          (this._drag.pointer = this.pointer(t)),
                          e(i).on(
                            'mouseup.owl.core touchend.owl.core',
                            e.proxy(this.onDragEnd, this)
                          ),
                          e(i).one(
                            'mousemove.owl.core touchmove.owl.core',
                            e.proxy(function(t) {
                              var n = this.difference(
                                this._drag.pointer,
                                this.pointer(t)
                              )
                              e(i).on(
                                'mousemove.owl.core touchmove.owl.core',
                                e.proxy(this.onDragMove, this)
                              ),
                                (Math.abs(n.x) < Math.abs(n.y) &&
                                  this.is('valid')) ||
                                  (t.preventDefault(),
                                  this.enter('dragging'),
                                  this.trigger('drag'))
                            }, this)
                          ))
                      }),
                      (o.prototype.onDragMove = function(e) {
                        var t = null,
                          n = null,
                          i = null,
                          r = this.difference(
                            this._drag.pointer,
                            this.pointer(e)
                          ),
                          o = this.difference(this._drag.stage.start, r)
                        this.is('dragging') &&
                          (e.preventDefault(),
                          this.settings.loop
                            ? ((t = this.coordinates(this.minimum())),
                              (n = this.coordinates(this.maximum() + 1) - t),
                              (o.x = ((((o.x - t) % n) + n) % n) + t))
                            : ((t = this.settings.rtl
                                ? this.coordinates(this.maximum())
                                : this.coordinates(this.minimum())),
                              (n = this.settings.rtl
                                ? this.coordinates(this.minimum())
                                : this.coordinates(this.maximum())),
                              (i = this.settings.pullDrag ? (-1 * r.x) / 5 : 0),
                              (o.x = Math.max(Math.min(o.x, t + i), n + i))),
                          (this._drag.stage.current = o),
                          this.animate(o.x))
                      }),
                      (o.prototype.onDragEnd = function(t) {
                        var n = this.difference(
                            this._drag.pointer,
                            this.pointer(t)
                          ),
                          r = this._drag.stage.current,
                          o = (n.x > 0) ^ this.settings.rtl ? 'left' : 'right'
                        e(i).off('.owl.core'),
                          this.$element.removeClass(this.options.grabClass),
                          ((0 !== n.x && this.is('dragging')) ||
                            !this.is('valid')) &&
                            (this.speed(
                              this.settings.dragEndSpeed ||
                                this.settings.smartSpeed
                            ),
                            this.current(
                              this.closest(
                                r.x,
                                0 !== n.x ? o : this._drag.direction
                              )
                            ),
                            this.invalidate('position'),
                            this.update(),
                            (this._drag.direction = o),
                            (Math.abs(n.x) > 3 ||
                              new Date().getTime() - this._drag.time > 300) &&
                              this._drag.target.one(
                                'click.owl.core',
                                function() {
                                  return !1
                                }
                              )),
                          this.is('dragging') &&
                            (this.leave('dragging'), this.trigger('dragged'))
                      }),
                      (o.prototype.closest = function(t, n) {
                        var i = -1,
                          o = 30,
                          s = this.width(),
                          a = this.coordinates()
                        return (
                          this.settings.freeDrag ||
                            e.each(
                              a,
                              e.proxy(function(e, l) {
                                return (
                                  'left' === n && t > l - o && t < l + o
                                    ? (i = e)
                                    : 'right' === n &&
                                      t > l - s - o &&
                                      t < l - s + o
                                    ? (i = e + 1)
                                    : this.op(t, '<', l) &&
                                      this.op(
                                        t,
                                        '>',
                                        a[e + 1] !== r ? a[e + 1] : l - s
                                      ) &&
                                      (i = 'left' === n ? e + 1 : e),
                                  i === -1
                                )
                              }, this)
                            ),
                          this.settings.loop ||
                            (this.op(t, '>', a[this.minimum()])
                              ? (i = t = this.minimum())
                              : this.op(t, '<', a[this.maximum()]) &&
                                (i = t = this.maximum())),
                          i
                        )
                      }),
                      (o.prototype.animate = function(t) {
                        var n = this.speed() > 0
                        this.is('animating') && this.onTransitionEnd(),
                          n &&
                            (this.enter('animating'),
                            this.trigger('translate')),
                          e.support.transform3d && e.support.transition
                            ? this.$stage.css({
                                transform: 'translate3d(' + t + 'px,0px,0px)',
                                transition:
                                  this.speed() / 1e3 +
                                  's' +
                                  (this.settings.slideTransition
                                    ? ' ' + this.settings.slideTransition
                                    : '')
                              })
                            : n
                            ? this.$stage.animate(
                                { left: t + 'px' },
                                this.speed(),
                                this.settings.fallbackEasing,
                                e.proxy(this.onTransitionEnd, this)
                              )
                            : this.$stage.css({ left: t + 'px' })
                      }),
                      (o.prototype.is = function(e) {
                        return (
                          this._states.current[e] && this._states.current[e] > 0
                        )
                      }),
                      (o.prototype.current = function(e) {
                        if (e === r) return this._current
                        if (0 === this._items.length) return r
                        if (((e = this.normalize(e)), this._current !== e)) {
                          var t = this.trigger('change', {
                            property: { name: 'position', value: e }
                          })
                          t.data !== r && (e = this.normalize(t.data)),
                            (this._current = e),
                            this.invalidate('position'),
                            this.trigger('changed', {
                              property: {
                                name: 'position',
                                value: this._current
                              }
                            })
                        }
                        return this._current
                      }),
                      (o.prototype.invalidate = function(t) {
                        return (
                          'string' === e.type(t) &&
                            ((this._invalidated[t] = !0),
                            this.is('valid') && this.leave('valid')),
                          e.map(this._invalidated, function(e, t) {
                            return t
                          })
                        )
                      }),
                      (o.prototype.reset = function(e) {
                        ;(e = this.normalize(e)),
                          e !== r &&
                            ((this._speed = 0),
                            (this._current = e),
                            this.suppress(['translate', 'translated']),
                            this.animate(this.coordinates(e)),
                            this.release(['translate', 'translated']))
                      }),
                      (o.prototype.normalize = function(e, t) {
                        var n = this._items.length,
                          i = t ? 0 : this._clones.length
                        return (
                          !this.isNumeric(e) || n < 1
                            ? (e = r)
                            : (e < 0 || e >= n + i) &&
                              (e = ((((e - i / 2) % n) + n) % n) + i / 2),
                          e
                        )
                      }),
                      (o.prototype.relative = function(e) {
                        return (
                          (e -= this._clones.length / 2), this.normalize(e, !0)
                        )
                      }),
                      (o.prototype.maximum = function(e) {
                        var t,
                          n,
                          i,
                          r = this.settings,
                          o = this._coordinates.length
                        if (r.loop)
                          o = this._clones.length / 2 + this._items.length - 1
                        else if (r.autoWidth || r.merge) {
                          if ((t = this._items.length))
                            for (
                              n = this._items[--t].width(),
                                i = this.$element.width();
                              t-- &&
                              ((n +=
                                this._items[t].width() + this.settings.margin),
                              !(n > i));

                            ) {}
                          o = t + 1
                        } else
                          o = r.center
                            ? this._items.length - 1
                            : this._items.length - r.items
                        return (
                          e && (o -= this._clones.length / 2), Math.max(o, 0)
                        )
                      }),
                      (o.prototype.minimum = function(e) {
                        return e ? 0 : this._clones.length / 2
                      }),
                      (o.prototype.items = function(e) {
                        return e === r
                          ? this._items.slice()
                          : ((e = this.normalize(e, !0)), this._items[e])
                      }),
                      (o.prototype.mergers = function(e) {
                        return e === r
                          ? this._mergers.slice()
                          : ((e = this.normalize(e, !0)), this._mergers[e])
                      }),
                      (o.prototype.clones = function(t) {
                        var n = this._clones.length / 2,
                          i = n + this._items.length,
                          o = function o(e) {
                            return e % 2 === 0 ? i + e / 2 : n - (e + 1) / 2
                          }
                        return t === r
                          ? e.map(this._clones, function(e, t) {
                              return o(t)
                            })
                          : e.map(this._clones, function(e, n) {
                              return e === t ? o(n) : null
                            })
                      }),
                      (o.prototype.speed = function(e) {
                        return e !== r && (this._speed = e), this._speed
                      }),
                      (o.prototype.coordinates = function(t) {
                        var n,
                          i = 1,
                          o = t - 1
                        return t === r
                          ? e.map(
                              this._coordinates,
                              e.proxy(function(e, t) {
                                return this.coordinates(t)
                              }, this)
                            )
                          : (this.settings.center
                              ? (this.settings.rtl && ((i = -1), (o = t + 1)),
                                (n = this._coordinates[t]),
                                (n +=
                                  ((this.width() -
                                    n +
                                    (this._coordinates[o] || 0)) /
                                    2) *
                                  i))
                              : (n = this._coordinates[o] || 0),
                            (n = Math.ceil(n)))
                      }),
                      (o.prototype.duration = function(e, t, n) {
                        return 0 === n
                          ? 0
                          : Math.min(Math.max(Math.abs(t - e), 1), 6) *
                              Math.abs(n || this.settings.smartSpeed)
                      }),
                      (o.prototype.to = function(e, t) {
                        var n = this.current(),
                          i = null,
                          r = e - this.relative(n),
                          o = (r > 0) - (r < 0),
                          s = this._items.length,
                          a = this.minimum(),
                          l = this.maximum()
                        this.settings.loop
                          ? (!this.settings.rewind &&
                              Math.abs(r) > s / 2 &&
                              (r += o * -1 * s),
                            (e = n + r),
                            (i = ((((e - a) % s) + s) % s) + a),
                            i !== e &&
                              i - r <= l &&
                              i - r > 0 &&
                              ((n = i - r), (e = i), this.reset(n)))
                          : this.settings.rewind
                          ? ((l += 1), (e = ((e % l) + l) % l))
                          : (e = Math.max(a, Math.min(l, e))),
                          this.speed(this.duration(n, e, t)),
                          this.current(e),
                          this.isVisible() && this.update()
                      }),
                      (o.prototype.next = function(e) {
                        ;(e = e || !1),
                          this.to(this.relative(this.current()) + 1, e)
                      }),
                      (o.prototype.prev = function(e) {
                        ;(e = e || !1),
                          this.to(this.relative(this.current()) - 1, e)
                      }),
                      (o.prototype.onTransitionEnd = function(e) {
                        return (
                          (e === r ||
                            (e.stopPropagation(),
                            (e.target || e.srcElement || e.originalTarget) ===
                              this.$stage.get(0))) &&
                          (this.leave('animating'),
                          void this.trigger('translated'))
                        )
                      }),
                      (o.prototype.viewport = function() {
                        var t
                        return (
                          this.options.responsiveBaseElement !== n
                            ? (t = e(
                                this.options.responsiveBaseElement
                              ).width())
                            : n.innerWidth
                            ? (t = n.innerWidth)
                            : i.documentElement && i.documentElement.clientWidth
                            ? (t = i.documentElement.clientWidth)
                            : console.warn('Can not detect viewport width.'),
                          t
                        )
                      }),
                      (o.prototype.replace = function(n) {
                        this.$stage.empty(),
                          (this._items = []),
                          n && (n = n instanceof t ? n : e(n)),
                          this.settings.nestedItemSelector &&
                            (n = n.find(
                              '.' + this.settings.nestedItemSelector
                            )),
                          n
                            .filter(function() {
                              return 1 === this.nodeType
                            })
                            .each(
                              e.proxy(function(e, t) {
                                ;(t = this.prepare(t)),
                                  this.$stage.append(t),
                                  this._items.push(t),
                                  this._mergers.push(
                                    1 *
                                      t
                                        .find('[data-merge]')
                                        .addBack('[data-merge]')
                                        .attr('data-merge') || 1
                                  )
                              }, this)
                            ),
                          this.reset(
                            this.isNumeric(this.settings.startPosition)
                              ? this.settings.startPosition
                              : 0
                          ),
                          this.invalidate('items')
                      }),
                      (o.prototype.add = function(n, i) {
                        var o = this.relative(this._current)
                        ;(i =
                          i === r ? this._items.length : this.normalize(i, !0)),
                          (n = n instanceof t ? n : e(n)),
                          this.trigger('add', { content: n, position: i }),
                          (n = this.prepare(n)),
                          0 === this._items.length || i === this._items.length
                            ? (0 === this._items.length &&
                                this.$stage.append(n),
                              0 !== this._items.length &&
                                this._items[i - 1].after(n),
                              this._items.push(n),
                              this._mergers.push(
                                1 *
                                  n
                                    .find('[data-merge]')
                                    .addBack('[data-merge]')
                                    .attr('data-merge') || 1
                              ))
                            : (this._items[i].before(n),
                              this._items.splice(i, 0, n),
                              this._mergers.splice(
                                i,
                                0,
                                1 *
                                  n
                                    .find('[data-merge]')
                                    .addBack('[data-merge]')
                                    .attr('data-merge') || 1
                              )),
                          this._items[o] && this.reset(this._items[o].index()),
                          this.invalidate('items'),
                          this.trigger('added', { content: n, position: i })
                      }),
                      (o.prototype.remove = function(e) {
                        ;(e = this.normalize(e, !0)),
                          e !== r &&
                            (this.trigger('remove', {
                              content: this._items[e],
                              position: e
                            }),
                            this._items[e].remove(),
                            this._items.splice(e, 1),
                            this._mergers.splice(e, 1),
                            this.invalidate('items'),
                            this.trigger('removed', {
                              content: null,
                              position: e
                            }))
                      }),
                      (o.prototype.preloadAutoWidthImages = function(t) {
                        t.each(
                          e.proxy(function(t, n) {
                            this.enter('pre-loading'),
                              (n = e(n)),
                              e(new Image())
                                .one(
                                  'load',
                                  e.proxy(function(e) {
                                    n.attr('src', e.target.src),
                                      n.css('opacity', 1),
                                      this.leave('pre-loading'),
                                      !this.is('pre-loading') &&
                                        !this.is('initializing') &&
                                        this.refresh()
                                  }, this)
                                )
                                .attr(
                                  'src',
                                  n.attr('src') ||
                                    n.attr('data-src') ||
                                    n.attr('data-src-retina')
                                )
                          }, this)
                        )
                      }),
                      (o.prototype.destroy = function() {
                        this.$element.off('.owl.core'),
                          this.$stage.off('.owl.core'),
                          e(i).off('.owl.core'),
                          this.settings.responsive !== !1 &&
                            (n.clearTimeout(this.resizeTimer),
                            this.off(
                              n,
                              'resize',
                              this._handlers.onThrottledResize
                            ))
                        for (var t in this._plugins) {
                          this._plugins[t].destroy()
                        }
                        this.$stage.children('.cloned').remove(),
                          this.$stage.unwrap(),
                          this.$stage
                            .children()
                            .contents()
                            .unwrap(),
                          this.$stage.children().unwrap(),
                          this.$stage.remove(),
                          this.$element
                            .removeClass(this.options.refreshClass)
                            .removeClass(this.options.loadingClass)
                            .removeClass(this.options.loadedClass)
                            .removeClass(this.options.rtlClass)
                            .removeClass(this.options.dragClass)
                            .removeClass(this.options.grabClass)
                            .attr(
                              'class',
                              this.$element
                                .attr('class')
                                .replace(
                                  new RegExp(
                                    this.options.responsiveClass + '-\\S+\\s',
                                    'g'
                                  ),
                                  ''
                                )
                            )
                            .removeData('owl.carousel')
                      }),
                      (o.prototype.op = function(e, t, n) {
                        var i = this.settings.rtl
                        switch (t) {
                          case '<':
                            return i ? e > n : e < n
                          case '>':
                            return i ? e < n : e > n
                          case '>=':
                            return i ? e <= n : e >= n
                          case '<=':
                            return i ? e >= n : e <= n
                        }
                      }),
                      (o.prototype.on = function(e, t, n, i) {
                        e.addEventListener
                          ? e.addEventListener(t, n, i)
                          : e.attachEvent && e.attachEvent('on' + t, n)
                      }),
                      (o.prototype.off = function(e, t, n, i) {
                        e.removeEventListener
                          ? e.removeEventListener(t, n, i)
                          : e.detachEvent && e.detachEvent('on' + t, n)
                      }),
                      (o.prototype.trigger = function(t, n, i, r, s) {
                        var a = {
                            item: {
                              count: this._items.length,
                              index: this.current()
                            }
                          },
                          l = e.camelCase(
                            e
                              .grep(['on', t, i], function(e) {
                                return e
                              })
                              .join('-')
                              .toLowerCase()
                          ),
                          u = e.Event(
                            [t, 'owl', i || 'carousel'].join('.').toLowerCase(),
                            e.extend({ relatedTarget: this }, a, n)
                          )
                        return (
                          this._supress[t] ||
                            (e.each(this._plugins, function(e, t) {
                              t.onTrigger && t.onTrigger(u)
                            }),
                            this.register({ type: o.Type.Event, name: t }),
                            this.$element.trigger(u),
                            this.settings &&
                              'function' == typeof this.settings[l] &&
                              this.settings[l].call(this, u)),
                          u
                        )
                      }),
                      (o.prototype.enter = function(t) {
                        e.each(
                          [t].concat(this._states.tags[t] || []),
                          e.proxy(function(e, t) {
                            this._states.current[t] === r &&
                              (this._states.current[t] = 0),
                              this._states.current[t]++
                          }, this)
                        )
                      }),
                      (o.prototype.leave = function(t) {
                        e.each(
                          [t].concat(this._states.tags[t] || []),
                          e.proxy(function(e, t) {
                            this._states.current[t]--
                          }, this)
                        )
                      }),
                      (o.prototype.register = function(t) {
                        if (t.type === o.Type.Event) {
                          if (
                            (e.event.special[t.name] ||
                              (e.event.special[t.name] = {}),
                            !e.event.special[t.name].owl)
                          ) {
                            var n = e.event.special[t.name]._default
                            ;(e.event.special[t.name]._default = function(e) {
                              return !n ||
                                !n.apply ||
                                (e.namespace &&
                                  e.namespace.indexOf('owl') !== -1)
                                ? e.namespace && e.namespace.indexOf('owl') > -1
                                : n.apply(this, arguments)
                            }),
                              (e.event.special[t.name].owl = !0)
                          }
                        } else
                          t.type === o.Type.State &&
                            (this._states.tags[t.name]
                              ? (this._states.tags[t.name] = this._states.tags[
                                  t.name
                                ].concat(t.tags))
                              : (this._states.tags[t.name] = t.tags),
                            (this._states.tags[t.name] = e.grep(
                              this._states.tags[t.name],
                              e.proxy(function(n, i) {
                                return (
                                  e.inArray(n, this._states.tags[t.name]) === i
                                )
                              }, this)
                            )))
                      }),
                      (o.prototype.suppress = function(t) {
                        e.each(
                          t,
                          e.proxy(function(e, t) {
                            this._supress[t] = !0
                          }, this)
                        )
                      }),
                      (o.prototype.release = function(t) {
                        e.each(
                          t,
                          e.proxy(function(e, t) {
                            delete this._supress[t]
                          }, this)
                        )
                      }),
                      (o.prototype.pointer = function(e) {
                        var t = { x: null, y: null }
                        return (
                          (e = e.originalEvent || e || n.event),
                          (e =
                            e.touches && e.touches.length
                              ? e.touches[0]
                              : e.changedTouches && e.changedTouches.length
                              ? e.changedTouches[0]
                              : e),
                          e.pageX
                            ? ((t.x = e.pageX), (t.y = e.pageY))
                            : ((t.x = e.clientX), (t.y = e.clientY)),
                          t
                        )
                      }),
                      (o.prototype.isNumeric = function(e) {
                        return !isNaN(parseFloat(e))
                      }),
                      (o.prototype.difference = function(e, t) {
                        return { x: e.x - t.x, y: e.y - t.y }
                      }),
                      (e.fn.owlCarousel = function(t) {
                        var n = Array.prototype.slice.call(arguments, 1)
                        return this.each(function() {
                          var i = e(this),
                            r = i.data('owl.carousel')
                          r ||
                            ((r = new o(
                              this,
                              'object' == (0, _typeof3['default'])(t) && t
                            )),
                            i.data('owl.carousel', r),
                            e.each(
                              [
                                'next',
                                'prev',
                                'to',
                                'destroy',
                                'refresh',
                                'replace',
                                'add',
                                'remove'
                              ],
                              function(t, n) {
                                r.register({ type: o.Type.Event, name: n }),
                                  r.$element.on(
                                    n + '.owl.carousel.core',
                                    e.proxy(function(e) {
                                      e.namespace &&
                                        e.relatedTarget !== this &&
                                        (this.suppress([n]),
                                        r[n].apply(
                                          this,
                                          [].slice.call(arguments, 1)
                                        ),
                                        this.release([n]))
                                    }, r)
                                  )
                              }
                            )),
                            'string' == typeof t &&
                              '_' !== t.charAt(0) &&
                              r[t].apply(r, n)
                        })
                      }),
                      (e.fn.owlCarousel.Constructor = o)
                  })(window.Zepto || e, window, document),
                    (function(e, t, n, i) {
                      var r = function r(t) {
                        ;(this._core = t),
                          (this._interval = null),
                          (this._visible = null),
                          (this._handlers = {
                            'initialized.owl.carousel': e.proxy(function(e) {
                              e.namespace &&
                                this._core.settings.autoRefresh &&
                                this.watch()
                            }, this)
                          }),
                          (this._core.options = e.extend(
                            {},
                            r.Defaults,
                            this._core.options
                          )),
                          this._core.$element.on(this._handlers)
                      }
                      ;(r.Defaults = {
                        autoRefresh: !0,
                        autoRefreshInterval: 500
                      }),
                        (r.prototype.watch = function() {
                          this._interval ||
                            ((this._visible = this._core.isVisible()),
                            (this._interval = t.setInterval(
                              e.proxy(this.refresh, this),
                              this._core.settings.autoRefreshInterval
                            )))
                        }),
                        (r.prototype.refresh = function() {
                          this._core.isVisible() !== this._visible &&
                            ((this._visible = !this._visible),
                            this._core.$element.toggleClass(
                              'owl-hidden',
                              !this._visible
                            ),
                            this._visible &&
                              this._core.invalidate('width') &&
                              this._core.refresh())
                        }),
                        (r.prototype.destroy = function() {
                          var e, n
                          t.clearInterval(this._interval)
                          for (e in this._handlers) {
                            this._core.$element.off(e, this._handlers[e])
                          }
                          for (n in Object.getOwnPropertyNames(this)) {
                            'function' != typeof this[n] && (this[n] = null)
                          }
                        }),
                        (e.fn.owlCarousel.Constructor.Plugins.AutoRefresh = r)
                    })(window.Zepto || e, window, document),
                    (function(e, t, n, i) {
                      var r = function r(t) {
                        ;(this._core = t),
                          (this._loaded = []),
                          (this._handlers = {
                            'initialized.owl.carousel change.owl.carousel resized.owl.carousel': e.proxy(
                              function(t) {
                                if (
                                  t.namespace &&
                                  this._core.settings &&
                                  this._core.settings.lazyLoad &&
                                  ((t.property &&
                                    'position' == t.property.name) ||
                                    'initialized' == t.type)
                                ) {
                                  var n = this._core.settings,
                                    r =
                                      (n.center && Math.ceil(n.items / 2)) ||
                                      n.items,
                                    o = (n.center && r * -1) || 0,
                                    s =
                                      (t.property && t.property.value !== i
                                        ? t.property.value
                                        : this._core.current()) + o,
                                    a = this._core.clones().length,
                                    l = e.proxy(function(e, t) {
                                      this.load(t)
                                    }, this)
                                  for (
                                    n.lazyLoadEager > 0 &&
                                    ((r += n.lazyLoadEager),
                                    n.loop && ((s -= n.lazyLoadEager), r++));
                                    o++ < r;

                                  ) {
                                    this.load(a / 2 + this._core.relative(s)),
                                      a &&
                                        e.each(
                                          this._core.clones(
                                            this._core.relative(s)
                                          ),
                                          l
                                        ),
                                      s++
                                  }
                                }
                              },
                              this
                            )
                          }),
                          (this._core.options = e.extend(
                            {},
                            r.Defaults,
                            this._core.options
                          )),
                          this._core.$element.on(this._handlers)
                      }
                      ;(r.Defaults = { lazyLoad: !1, lazyLoadEager: 0 }),
                        (r.prototype.load = function(n) {
                          var i = this._core.$stage.children().eq(n),
                            r = i && i.find('.owl-lazy')
                          !r ||
                            e.inArray(i.get(0), this._loaded) > -1 ||
                            (r.each(
                              e.proxy(function(n, i) {
                                var r,
                                  o = e(i),
                                  s =
                                    (t.devicePixelRatio > 1 &&
                                      o.attr('data-src-retina')) ||
                                    o.attr('data-src') ||
                                    o.attr('data-srcset')
                                this._core.trigger(
                                  'load',
                                  { element: o, url: s },
                                  'lazy'
                                ),
                                  o.is('img')
                                    ? o
                                        .one(
                                          'load.owl.lazy',
                                          e.proxy(function() {
                                            o.css('opacity', 1),
                                              this._core.trigger(
                                                'loaded',
                                                { element: o, url: s },
                                                'lazy'
                                              )
                                          }, this)
                                        )
                                        .attr('src', s)
                                    : o.is('source')
                                    ? o
                                        .one(
                                          'load.owl.lazy',
                                          e.proxy(function() {
                                            this._core.trigger(
                                              'loaded',
                                              { element: o, url: s },
                                              'lazy'
                                            )
                                          }, this)
                                        )
                                        .attr('srcset', s)
                                    : ((r = new Image()),
                                      (r.onload = e.proxy(function() {
                                        o.css({
                                          'background-image':
                                            'url("' + s + '")',
                                          opacity: '1'
                                        }),
                                          this._core.trigger(
                                            'loaded',
                                            { element: o, url: s },
                                            'lazy'
                                          )
                                      }, this)),
                                      (r.src = s))
                              }, this)
                            ),
                            this._loaded.push(i.get(0)))
                        }),
                        (r.prototype.destroy = function() {
                          var e, t
                          for (e in this.handlers) {
                            this._core.$element.off(e, this.handlers[e])
                          }
                          for (t in Object.getOwnPropertyNames(this)) {
                            'function' != typeof this[t] && (this[t] = null)
                          }
                        }),
                        (e.fn.owlCarousel.Constructor.Plugins.Lazy = r)
                    })(window.Zepto || e, window, document),
                    (function(e, t, n, i) {
                      var r = function r(n) {
                        ;(this._core = n),
                          (this._previousHeight = null),
                          (this._handlers = {
                            'initialized.owl.carousel refreshed.owl.carousel': e.proxy(
                              function(e) {
                                e.namespace &&
                                  this._core.settings.autoHeight &&
                                  this.update()
                              },
                              this
                            ),
                            'changed.owl.carousel': e.proxy(function(e) {
                              e.namespace &&
                                this._core.settings.autoHeight &&
                                'position' === e.property.name &&
                                this.update()
                            }, this),
                            'loaded.owl.lazy': e.proxy(function(e) {
                              e.namespace &&
                                this._core.settings.autoHeight &&
                                e.element
                                  .closest('.' + this._core.settings.itemClass)
                                  .index() === this._core.current() &&
                                this.update()
                            }, this)
                          }),
                          (this._core.options = e.extend(
                            {},
                            r.Defaults,
                            this._core.options
                          )),
                          this._core.$element.on(this._handlers),
                          (this._intervalId = null)
                        var i = this
                        e(t).on('load', function() {
                          i._core.settings.autoHeight && i.update()
                        }),
                          e(t).resize(function() {
                            i._core.settings.autoHeight &&
                              (null != i._intervalId &&
                                clearTimeout(i._intervalId),
                              (i._intervalId = setTimeout(function() {
                                i.update()
                              }, 250)))
                          })
                      }
                      ;(r.Defaults = {
                        autoHeight: !1,
                        autoHeightClass: 'owl-height'
                      }),
                        (r.prototype.update = function() {
                          var t = this._core._current,
                            n = t + this._core.settings.items,
                            i = this._core.settings.lazyLoad,
                            r = this._core.$stage
                              .children()
                              .toArray()
                              .slice(t, n),
                            o = [],
                            s = 0
                          e.each(r, function(t, n) {
                            o.push(e(n).height())
                          }),
                            (s = Math.max.apply(null, o)),
                            s <= 1 &&
                              i &&
                              this._previousHeight &&
                              (s = this._previousHeight),
                            (this._previousHeight = s),
                            this._core.$stage
                              .parent()
                              .height(s)
                              .addClass(this._core.settings.autoHeightClass)
                        }),
                        (r.prototype.destroy = function() {
                          var e, t
                          for (e in this._handlers) {
                            this._core.$element.off(e, this._handlers[e])
                          }
                          for (t in Object.getOwnPropertyNames(this)) {
                            'function' != typeof this[t] && (this[t] = null)
                          }
                        }),
                        (e.fn.owlCarousel.Constructor.Plugins.AutoHeight = r)
                    })(window.Zepto || e, window, document),
                    (function(e, t, n, i) {
                      var r = function r(t) {
                        ;(this._core = t),
                          (this._videos = {}),
                          (this._playing = null),
                          (this._handlers = {
                            'initialized.owl.carousel': e.proxy(function(e) {
                              e.namespace &&
                                this._core.register({
                                  type: 'state',
                                  name: 'playing',
                                  tags: ['interacting']
                                })
                            }, this),
                            'resize.owl.carousel': e.proxy(function(e) {
                              e.namespace &&
                                this._core.settings.video &&
                                this.isInFullScreen() &&
                                e.preventDefault()
                            }, this),
                            'refreshed.owl.carousel': e.proxy(function(e) {
                              e.namespace &&
                                this._core.is('resizing') &&
                                this._core.$stage
                                  .find('.cloned .owl-video-frame')
                                  .remove()
                            }, this),
                            'changed.owl.carousel': e.proxy(function(e) {
                              e.namespace &&
                                'position' === e.property.name &&
                                this._playing &&
                                this.stop()
                            }, this),
                            'prepared.owl.carousel': e.proxy(function(t) {
                              if (t.namespace) {
                                var n = e(t.content).find('.owl-video')
                                n.length &&
                                  (n.css('display', 'none'),
                                  this.fetch(n, e(t.content)))
                              }
                            }, this)
                          }),
                          (this._core.options = e.extend(
                            {},
                            r.Defaults,
                            this._core.options
                          )),
                          this._core.$element.on(this._handlers),
                          this._core.$element.on(
                            'click.owl.video',
                            '.owl-video-play-icon',
                            e.proxy(function(e) {
                              this.play(e)
                            }, this)
                          )
                      }
                      ;(r.Defaults = {
                        video: !1,
                        videoHeight: !1,
                        videoWidth: !1
                      }),
                        (r.prototype.fetch = function(e, t) {
                          var n = (function() {
                              return e.attr('data-vimeo-id')
                                ? 'vimeo'
                                : e.attr('data-vzaar-id')
                                ? 'vzaar'
                                : 'youtube'
                            })(),
                            i =
                              e.attr('data-vimeo-id') ||
                              e.attr('data-youtube-id') ||
                              e.attr('data-vzaar-id'),
                            r =
                              e.attr('data-width') ||
                              this._core.settings.videoWidth,
                            o =
                              e.attr('data-height') ||
                              this._core.settings.videoHeight,
                            s = e.attr('href')
                          if (!s) throw new Error('Missing video URL.')
                          if (
                            ((i = s.match(
                              /(http:|https:|)\/\/(player.|www.|app.)?(vimeo\.com|youtu(be\.com|\.be|be\.googleapis\.com|be\-nocookie\.com)|vzaar\.com)\/(video\/|videos\/|embed\/|channels\/.+\/|groups\/.+\/|watch\?v=|v\/)?([A-Za-z0-9._%-]*)(\&\S+)?/
                            )),
                            i[3].indexOf('youtu') > -1)
                          )
                            n = 'youtube'
                          else if (i[3].indexOf('vimeo') > -1) n = 'vimeo'
                          else {
                            if (!(i[3].indexOf('vzaar') > -1))
                              throw new Error('Video URL not supported.')
                            n = 'vzaar'
                          }
                          ;(i = i[6]),
                            (this._videos[s] = {
                              type: n,
                              id: i,
                              width: r,
                              height: o
                            }),
                            t.attr('data-video', s),
                            this.thumbnail(e, this._videos[s])
                        }),
                        (r.prototype.thumbnail = function(t, n) {
                          var i,
                            r,
                            o,
                            s =
                              n.width && n.height
                                ? 'width:' +
                                  n.width +
                                  'px;height:' +
                                  n.height +
                                  'px;'
                                : '',
                            a = t.find('img'),
                            l = 'src',
                            u = '',
                            c = this._core.settings,
                            h = function h(n) {
                              ;(r = '<div class="owl-video-play-icon"></div>'),
                                (i = c.lazyLoad
                                  ? e('<div/>', {
                                      class: 'owl-video-tn ' + u,
                                      srcType: n
                                    })
                                  : e('<div/>', {
                                      class: 'owl-video-tn',
                                      style:
                                        'opacity:1;background-image:url(' +
                                        n +
                                        ')'
                                    })),
                                t.after(i),
                                t.after(r)
                            }
                          return (
                            t.wrap(
                              e('<div/>', {
                                class: 'owl-video-wrapper',
                                style: s
                              })
                            ),
                            this._core.settings.lazyLoad &&
                              ((l = 'data-src'), (u = 'owl-lazy')),
                            a.length
                              ? (h(a.attr(l)), a.remove(), !1)
                              : void ('youtube' === n.type
                                  ? ((o =
                                      '//img.youtube.com/vi/' +
                                      n.id +
                                      '/hqdefault.jpg'),
                                    h(o))
                                  : 'vimeo' === n.type
                                  ? e.ajax({
                                      type: 'GET',
                                      url:
                                        '//vimeo.com/api/v2/video/' +
                                        n.id +
                                        '.json',
                                      jsonp: 'callback',
                                      dataType: 'jsonp',
                                      success: function success(e) {
                                        ;(o = e[0].thumbnail_large), h(o)
                                      }
                                    })
                                  : 'vzaar' === n.type &&
                                    e.ajax({
                                      type: 'GET',
                                      url:
                                        '//vzaar.com/api/videos/' +
                                        n.id +
                                        '.json',
                                      jsonp: 'callback',
                                      dataType: 'jsonp',
                                      success: function success(e) {
                                        ;(o = e.framegrab_url), h(o)
                                      }
                                    }))
                          )
                        }),
                        (r.prototype.stop = function() {
                          this._core.trigger('stop', null, 'video'),
                            this._playing.find('.owl-video-frame').remove(),
                            this._playing.removeClass('owl-video-playing'),
                            (this._playing = null),
                            this._core.leave('playing'),
                            this._core.trigger('stopped', null, 'video')
                        }),
                        (r.prototype.play = function(t) {
                          var n,
                            i,
                            r = e(t.target),
                            o = r.closest('.' + this._core.settings.itemClass),
                            s = this._videos[o.attr('data-video')],
                            a = s.width || '100%',
                            l = s.height || this._core.$stage.height()
                          this._playing ||
                            (this._core.enter('playing'),
                            this._core.trigger('play', null, 'video'),
                            (o = this._core.items(
                              this._core.relative(o.index())
                            )),
                            this._core.reset(o.index()),
                            (n = e(
                              '<iframe frameborder="0" allowfullscreen mozallowfullscreen webkitAllowFullScreen ></iframe>'
                            )),
                            n.attr('height', l),
                            n.attr('width', a),
                            'youtube' === s.type
                              ? n.attr(
                                  'src',
                                  '//www.youtube.com/embed/' +
                                    s.id +
                                    '?autoplay=1&rel=0&v=' +
                                    s.id
                                )
                              : 'vimeo' === s.type
                              ? n.attr(
                                  'src',
                                  '//player.vimeo.com/video/' +
                                    s.id +
                                    '?autoplay=1'
                                )
                              : 'vzaar' === s.type &&
                                n.attr(
                                  'src',
                                  '//view.vzaar.com/' +
                                    s.id +
                                    '/player?autoplay=true'
                                ),
                            (i = e(n)
                              .wrap('<div class="owl-video-frame" />')
                              .insertAfter(o.find('.owl-video'))),
                            (this._playing = o.addClass('owl-video-playing')))
                        }),
                        (r.prototype.isInFullScreen = function() {
                          var t =
                            n.fullscreenElement ||
                            n.mozFullScreenElement ||
                            n.webkitFullscreenElement
                          return (
                            t &&
                            e(t)
                              .parent()
                              .hasClass('owl-video-frame')
                          )
                        }),
                        (r.prototype.destroy = function() {
                          var e, t
                          this._core.$element.off('click.owl.video')
                          for (e in this._handlers) {
                            this._core.$element.off(e, this._handlers[e])
                          }
                          for (t in Object.getOwnPropertyNames(this)) {
                            'function' != typeof this[t] && (this[t] = null)
                          }
                        }),
                        (e.fn.owlCarousel.Constructor.Plugins.Video = r)
                    })(window.Zepto || e, window, document),
                    (function(e, t, n, i) {
                      var r = function r(t) {
                        ;(this.core = t),
                          (this.core.options = e.extend(
                            {},
                            r.Defaults,
                            this.core.options
                          )),
                          (this.swapping = !0),
                          (this.previous = i),
                          (this.next = i),
                          (this.handlers = {
                            'change.owl.carousel': e.proxy(function(e) {
                              e.namespace &&
                                'position' == e.property.name &&
                                ((this.previous = this.core.current()),
                                (this.next = e.property.value))
                            }, this),
                            'drag.owl.carousel dragged.owl.carousel translated.owl.carousel': e.proxy(
                              function(e) {
                                e.namespace &&
                                  (this.swapping = 'translated' == e.type)
                              },
                              this
                            ),
                            'translate.owl.carousel': e.proxy(function(e) {
                              e.namespace &&
                                this.swapping &&
                                (this.core.options.animateOut ||
                                  this.core.options.animateIn) &&
                                this.swap()
                            }, this)
                          }),
                          this.core.$element.on(this.handlers)
                      }
                      ;(r.Defaults = { animateOut: !1, animateIn: !1 }),
                        (r.prototype.swap = function() {
                          if (
                            1 === this.core.settings.items &&
                            e.support.animation &&
                            e.support.transition
                          ) {
                            this.core.speed(0)
                            var t,
                              n = e.proxy(this.clear, this),
                              i = this.core.$stage.children().eq(this.previous),
                              r = this.core.$stage.children().eq(this.next),
                              o = this.core.settings.animateIn,
                              s = this.core.settings.animateOut
                            this.core.current() !== this.previous &&
                              (s &&
                                ((t =
                                  this.core.coordinates(this.previous) -
                                  this.core.coordinates(this.next)),
                                i
                                  .one(e.support.animation.end, n)
                                  .css({ left: t + 'px' })
                                  .addClass('animated owl-animated-out')
                                  .addClass(s)),
                              o &&
                                r
                                  .one(e.support.animation.end, n)
                                  .addClass('animated owl-animated-in')
                                  .addClass(o))
                          }
                        }),
                        (r.prototype.clear = function(t) {
                          e(t.target)
                            .css({ left: '' })
                            .removeClass(
                              'animated owl-animated-out owl-animated-in'
                            )
                            .removeClass(this.core.settings.animateIn)
                            .removeClass(this.core.settings.animateOut),
                            this.core.onTransitionEnd()
                        }),
                        (r.prototype.destroy = function() {
                          var e, t
                          for (e in this.handlers) {
                            this.core.$element.off(e, this.handlers[e])
                          }
                          for (t in Object.getOwnPropertyNames(this)) {
                            'function' != typeof this[t] && (this[t] = null)
                          }
                        }),
                        (e.fn.owlCarousel.Constructor.Plugins.Animate = r)
                    })(window.Zepto || e, window, document),
                    (function(e, t, n, i) {
                      var r = function r(t) {
                        ;(this._core = t),
                          (this._call = null),
                          (this._time = 0),
                          (this._timeout = 0),
                          (this._paused = !0),
                          (this._handlers = {
                            'changed.owl.carousel': e.proxy(function(e) {
                              e.namespace && 'settings' === e.property.name
                                ? this._core.settings.autoplay
                                  ? this.play()
                                  : this.stop()
                                : e.namespace &&
                                  'position' === e.property.name &&
                                  this._paused &&
                                  (this._time = 0)
                            }, this),
                            'initialized.owl.carousel': e.proxy(function(e) {
                              e.namespace &&
                                this._core.settings.autoplay &&
                                this.play()
                            }, this),
                            'play.owl.autoplay': e.proxy(function(e, t, n) {
                              e.namespace && this.play(t, n)
                            }, this),
                            'stop.owl.autoplay': e.proxy(function(e) {
                              e.namespace && this.stop()
                            }, this),
                            'mouseover.owl.autoplay': e.proxy(function() {
                              this._core.settings.autoplayHoverPause &&
                                this._core.is('rotating') &&
                                this.pause()
                            }, this),
                            'mouseleave.owl.autoplay': e.proxy(function() {
                              this._core.settings.autoplayHoverPause &&
                                this._core.is('rotating') &&
                                this.play()
                            }, this),
                            'touchstart.owl.core': e.proxy(function() {
                              this._core.settings.autoplayHoverPause &&
                                this._core.is('rotating') &&
                                this.pause()
                            }, this),
                            'touchend.owl.core': e.proxy(function() {
                              this._core.settings.autoplayHoverPause &&
                                this.play()
                            }, this)
                          }),
                          this._core.$element.on(this._handlers),
                          (this._core.options = e.extend(
                            {},
                            r.Defaults,
                            this._core.options
                          ))
                      }
                      ;(r.Defaults = {
                        autoplay: !1,
                        autoplayTimeout: 5e3,
                        autoplayHoverPause: !1,
                        autoplaySpeed: !1
                      }),
                        (r.prototype._next = function(i) {
                          ;(this._call = t.setTimeout(
                            e.proxy(this._next, this, i),
                            this._timeout *
                              (Math.round(this.read() / this._timeout) + 1) -
                              this.read()
                          )),
                            this._core.is('interacting') ||
                              n.hidden ||
                              this._core.next(
                                i || this._core.settings.autoplaySpeed
                              )
                        }),
                        (r.prototype.read = function() {
                          return new Date().getTime() - this._time
                        }),
                        (r.prototype.play = function(n, i) {
                          var r
                          this._core.is('rotating') ||
                            this._core.enter('rotating'),
                            (n = n || this._core.settings.autoplayTimeout),
                            (r = Math.min(
                              this._time % (this._timeout || n),
                              n
                            )),
                            this._paused
                              ? ((this._time = this.read()),
                                (this._paused = !1))
                              : t.clearTimeout(this._call),
                            (this._time += (this.read() % n) - r),
                            (this._timeout = n),
                            (this._call = t.setTimeout(
                              e.proxy(this._next, this, i),
                              n - r
                            ))
                        }),
                        (r.prototype.stop = function() {
                          this._core.is('rotating') &&
                            ((this._time = 0),
                            (this._paused = !0),
                            t.clearTimeout(this._call),
                            this._core.leave('rotating'))
                        }),
                        (r.prototype.pause = function() {
                          this._core.is('rotating') &&
                            !this._paused &&
                            ((this._time = this.read()),
                            (this._paused = !0),
                            t.clearTimeout(this._call))
                        }),
                        (r.prototype.destroy = function() {
                          var e, t
                          this.stop()
                          for (e in this._handlers) {
                            this._core.$element.off(e, this._handlers[e])
                          }
                          for (t in Object.getOwnPropertyNames(this)) {
                            'function' != typeof this[t] && (this[t] = null)
                          }
                        }),
                        (e.fn.owlCarousel.Constructor.Plugins.autoplay = r)
                    })(window.Zepto || e, window, document),
                    (function(e, t, n, i) {
                      'use strict'
                      var r = function r(t) {
                        ;(this._core = t),
                          (this._initialized = !1),
                          (this._pages = []),
                          (this._controls = {}),
                          (this._templates = []),
                          (this.$element = this._core.$element),
                          (this._overrides = {
                            next: this._core.next,
                            prev: this._core.prev,
                            to: this._core.to
                          }),
                          (this._handlers = {
                            'prepared.owl.carousel': e.proxy(function(t) {
                              t.namespace &&
                                this._core.settings.dotsData &&
                                this._templates.push(
                                  '<div class="' +
                                    this._core.settings.dotClass +
                                    '">' +
                                    e(t.content)
                                      .find('[data-dot]')
                                      .addBack('[data-dot]')
                                      .attr('data-dot') +
                                    '</div>'
                                )
                            }, this),
                            'added.owl.carousel': e.proxy(function(e) {
                              e.namespace &&
                                this._core.settings.dotsData &&
                                this._templates.splice(
                                  e.position,
                                  0,
                                  this._templates.pop()
                                )
                            }, this),
                            'remove.owl.carousel': e.proxy(function(e) {
                              e.namespace &&
                                this._core.settings.dotsData &&
                                this._templates.splice(e.position, 1)
                            }, this),
                            'changed.owl.carousel': e.proxy(function(e) {
                              e.namespace &&
                                'position' == e.property.name &&
                                this.draw()
                            }, this),
                            'initialized.owl.carousel': e.proxy(function(e) {
                              e.namespace &&
                                !this._initialized &&
                                (this._core.trigger(
                                  'initialize',
                                  null,
                                  'navigation'
                                ),
                                this.initialize(),
                                this.update(),
                                this.draw(),
                                (this._initialized = !0),
                                this._core.trigger(
                                  'initialized',
                                  null,
                                  'navigation'
                                ))
                            }, this),
                            'refreshed.owl.carousel': e.proxy(function(e) {
                              e.namespace &&
                                this._initialized &&
                                (this._core.trigger(
                                  'refresh',
                                  null,
                                  'navigation'
                                ),
                                this.update(),
                                this.draw(),
                                this._core.trigger(
                                  'refreshed',
                                  null,
                                  'navigation'
                                ))
                            }, this)
                          }),
                          (this._core.options = e.extend(
                            {},
                            r.Defaults,
                            this._core.options
                          )),
                          this.$element.on(this._handlers)
                      }
                      ;(r.Defaults = {
                        nav: !1,
                        navText: [
                          '<span aria-label="Previous">&#x2039;</span>',
                          '<span aria-label="Next">&#x203a;</span>'
                        ],
                        navSpeed: !1,
                        navElement: 'button type="button" role="presentation"',
                        navContainer: !1,
                        navContainerClass: 'owl-nav',
                        navClass: ['owl-prev', 'owl-next'],
                        slideBy: 1,
                        dotClass: 'owl-dot',
                        dotsClass: 'owl-dots',
                        dots: !0,
                        dotsEach: !1,
                        dotsData: !1,
                        dotsSpeed: !1,
                        dotsContainer: !1
                      }),
                        (r.prototype.initialize = function() {
                          var t,
                            n = this._core.settings
                          ;(this._controls.$relative = (n.navContainer
                            ? e(n.navContainer)
                            : e('<div>')
                                .addClass(n.navContainerClass)
                                .appendTo(this.$element)
                          ).addClass('disabled')),
                            (this._controls.$previous = e(
                              '<' + n.navElement + '>'
                            )
                              .addClass(n.navClass[0])
                              .html(n.navText[0])
                              .prependTo(this._controls.$relative)
                              .on(
                                'click',
                                e.proxy(function(e) {
                                  this.prev(n.navSpeed)
                                }, this)
                              )),
                            (this._controls.$next = e('<' + n.navElement + '>')
                              .addClass(n.navClass[1])
                              .html(n.navText[1])
                              .appendTo(this._controls.$relative)
                              .on(
                                'click',
                                e.proxy(function(e) {
                                  this.next(n.navSpeed)
                                }, this)
                              )),
                            n.dotsData ||
                              (this._templates = [
                                e('<button role="button">')
                                  .addClass(n.dotClass)
                                  .append(e('<span>'))
                                  .prop('outerHTML')
                              ]),
                            (this._controls.$absolute = (n.dotsContainer
                              ? e(n.dotsContainer)
                              : e('<div>')
                                  .addClass(n.dotsClass)
                                  .appendTo(this.$element)
                            ).addClass('disabled')),
                            this._controls.$absolute.on(
                              'click',
                              'button',
                              e.proxy(function(t) {
                                var i = e(t.target)
                                  .parent()
                                  .is(this._controls.$absolute)
                                  ? e(t.target).index()
                                  : e(t.target)
                                      .parent()
                                      .index()
                                t.preventDefault(), this.to(i, n.dotsSpeed)
                              }, this)
                            )
                          for (t in this._overrides) {
                            this._core[t] = e.proxy(this[t], this)
                          }
                        }),
                        (r.prototype.destroy = function() {
                          var e, t, n, i, r
                          r = this._core.settings
                          for (e in this._handlers) {
                            this.$element.off(e, this._handlers[e])
                          }
                          for (t in this._controls) {
                            '$relative' === t && r.navContainer
                              ? this._controls[t].html('')
                              : this._controls[t].remove()
                          }
                          for (i in this.overides) {
                            this._core[i] = this._overrides[i]
                          }
                          for (n in Object.getOwnPropertyNames(this)) {
                            'function' != typeof this[n] && (this[n] = null)
                          }
                        }),
                        (r.prototype.update = function() {
                          var e,
                            t,
                            n,
                            i = this._core.clones().length / 2,
                            r = i + this._core.items().length,
                            o = this._core.maximum(!0),
                            s = this._core.settings,
                            a =
                              s.center || s.autoWidth || s.dotsData
                                ? 1
                                : s.dotsEach || s.items
                          if (
                            ('page' !== s.slideBy &&
                              (s.slideBy = Math.min(s.slideBy, s.items)),
                            s.dots || 'page' == s.slideBy)
                          )
                            for (
                              this._pages = [], e = i, t = 0, n = 0;
                              e < r;
                              e++
                            ) {
                              if (t >= a || 0 === t) {
                                if (
                                  (this._pages.push({
                                    start: Math.min(o, e - i),
                                    end: e - i + a - 1
                                  }),
                                  Math.min(o, e - i) === o)
                                )
                                  break
                                ;(t = 0), ++n
                              }
                              t += this._core.mergers(this._core.relative(e))
                            }
                        }),
                        (r.prototype.draw = function() {
                          var t,
                            n = this._core.settings,
                            i = this._core.items().length <= n.items,
                            r = this._core.relative(this._core.current()),
                            o = n.loop || n.rewind
                          this._controls.$relative.toggleClass(
                            'disabled',
                            !n.nav || i
                          ),
                            n.nav &&
                              (this._controls.$previous.toggleClass(
                                'disabled',
                                !o && r <= this._core.minimum(!0)
                              ),
                              this._controls.$next.toggleClass(
                                'disabled',
                                !o && r >= this._core.maximum(!0)
                              )),
                            this._controls.$absolute.toggleClass(
                              'disabled',
                              !n.dots || i
                            ),
                            n.dots &&
                              ((t =
                                this._pages.length -
                                this._controls.$absolute.children().length),
                              n.dotsData && 0 !== t
                                ? this._controls.$absolute.html(
                                    this._templates.join('')
                                  )
                                : t > 0
                                ? this._controls.$absolute.append(
                                    new Array(t + 1).join(this._templates[0])
                                  )
                                : t < 0 &&
                                  this._controls.$absolute
                                    .children()
                                    .slice(t)
                                    .remove(),
                              this._controls.$absolute
                                .find('.active')
                                .removeClass('active'),
                              this._controls.$absolute
                                .children()
                                .eq(e.inArray(this.current(), this._pages))
                                .addClass('active'))
                        }),
                        (r.prototype.onTrigger = function(t) {
                          var n = this._core.settings
                          t.page = {
                            index: e.inArray(this.current(), this._pages),
                            count: this._pages.length,
                            size:
                              n &&
                              (n.center || n.autoWidth || n.dotsData
                                ? 1
                                : n.dotsEach || n.items)
                          }
                        }),
                        (r.prototype.current = function() {
                          var t = this._core.relative(this._core.current())
                          return e
                            .grep(
                              this._pages,
                              e.proxy(function(e, n) {
                                return e.start <= t && e.end >= t
                              }, this)
                            )
                            .pop()
                        }),
                        (r.prototype.getPosition = function(t) {
                          var n,
                            i,
                            r = this._core.settings
                          return (
                            'page' == r.slideBy
                              ? ((n = e.inArray(this.current(), this._pages)),
                                (i = this._pages.length),
                                t ? ++n : --n,
                                (n = this._pages[((n % i) + i) % i].start))
                              : ((n = this._core.relative(
                                  this._core.current()
                                )),
                                (i = this._core.items().length),
                                t ? (n += r.slideBy) : (n -= r.slideBy)),
                            n
                          )
                        }),
                        (r.prototype.next = function(t) {
                          e.proxy(this._overrides.to, this._core)(
                            this.getPosition(!0),
                            t
                          )
                        }),
                        (r.prototype.prev = function(t) {
                          e.proxy(this._overrides.to, this._core)(
                            this.getPosition(!1),
                            t
                          )
                        }),
                        (r.prototype.to = function(t, n, i) {
                          var r
                          !i && this._pages.length
                            ? ((r = this._pages.length),
                              e.proxy(this._overrides.to, this._core)(
                                this._pages[((t % r) + r) % r].start,
                                n
                              ))
                            : e.proxy(this._overrides.to, this._core)(t, n)
                        }),
                        (e.fn.owlCarousel.Constructor.Plugins.Navigation = r)
                    })(window.Zepto || e, window, document),
                    (function(e, t, n, i) {
                      'use strict'
                      var r = function r(n) {
                        ;(this._core = n),
                          (this._hashes = {}),
                          (this.$element = this._core.$element),
                          (this._handlers = {
                            'initialized.owl.carousel': e.proxy(function(n) {
                              n.namespace &&
                                'URLHash' ===
                                  this._core.settings.startPosition &&
                                e(t).trigger('hashchange.owl.navigation')
                            }, this),
                            'prepared.owl.carousel': e.proxy(function(t) {
                              if (t.namespace) {
                                var n = e(t.content)
                                  .find('[data-hash]')
                                  .addBack('[data-hash]')
                                  .attr('data-hash')
                                if (!n) return
                                this._hashes[n] = t.content
                              }
                            }, this),
                            'changed.owl.carousel': e.proxy(function(n) {
                              if (
                                n.namespace &&
                                'position' === n.property.name
                              ) {
                                var i = this._core.items(
                                    this._core.relative(this._core.current())
                                  ),
                                  r = e
                                    .map(this._hashes, function(e, t) {
                                      return e === i ? t : null
                                    })
                                    .join()
                                if (!r || t.location.hash.slice(1) === r) return
                                t.location.hash = r
                              }
                            }, this)
                          }),
                          (this._core.options = e.extend(
                            {},
                            r.Defaults,
                            this._core.options
                          )),
                          this.$element.on(this._handlers),
                          e(t).on(
                            'hashchange.owl.navigation',
                            e.proxy(function(e) {
                              var n = t.location.hash.substring(1),
                                r = this._core.$stage.children(),
                                o = this._hashes[n] && r.index(this._hashes[n])
                              o !== i &&
                                o !== this._core.current() &&
                                this._core.to(this._core.relative(o), !1, !0)
                            }, this)
                          )
                      }
                      ;(r.Defaults = { URLhashListener: !1 }),
                        (r.prototype.destroy = function() {
                          var n, i
                          e(t).off('hashchange.owl.navigation')
                          for (n in this._handlers) {
                            this._core.$element.off(n, this._handlers[n])
                          }
                          for (i in Object.getOwnPropertyNames(this)) {
                            'function' != typeof this[i] && (this[i] = null)
                          }
                        }),
                        (e.fn.owlCarousel.Constructor.Plugins.Hash = r)
                    })(window.Zepto || e, window, document),
                    (function(e, t, n, i) {
                      function r(t, n) {
                        var r = !1,
                          o = t.charAt(0).toUpperCase() + t.slice(1)
                        return (
                          e.each(
                            (t + ' ' + a.join(o + ' ') + o).split(' '),
                            function(e, t) {
                              if (s[t] !== i) return (r = !n || t), !1
                            }
                          ),
                          r
                        )
                      }
                      function o(e) {
                        return r(e, !0)
                      }
                      var s = e('<support>').get(0).style,
                        a = 'Webkit Moz O ms'.split(' '),
                        l = {
                          transition: {
                            end: {
                              WebkitTransition: 'webkitTransitionEnd',
                              MozTransition: 'transitionend',
                              OTransition: 'oTransitionEnd',
                              transition: 'transitionend'
                            }
                          },
                          animation: {
                            end: {
                              WebkitAnimation: 'webkitAnimationEnd',
                              MozAnimation: 'animationend',
                              OAnimation: 'oAnimationEnd',
                              animation: 'animationend'
                            }
                          }
                        },
                        u = {
                          csstransforms: function csstransforms() {
                            return !!r('transform')
                          },
                          csstransforms3d: function csstransforms3d() {
                            return !!r('perspective')
                          },
                          csstransitions: function csstransitions() {
                            return !!r('transition')
                          },
                          cssanimations: function cssanimations() {
                            return !!r('animation')
                          }
                        }
                      u.csstransitions() &&
                        ((e.support.transition = new String(o('transition'))),
                        (e.support.transition.end =
                          l.transition.end[e.support.transition])),
                        u.cssanimations() &&
                          ((e.support.animation = new String(o('animation'))),
                          (e.support.animation.end =
                            l.animation.end[e.support.animation])),
                        u.csstransforms() &&
                          ((e.support.transform = new String(o('transform'))),
                          (e.support.transform3d = u.csstransforms3d()))
                    })(window.Zepto || e, window, document)
                }.call(t, n(3), n(3)))
              },
              function(e, t) {
                'use strict'
                Object.defineProperty(t, '__esModule', { value: !0 }),
                  (t['default'] = [
                    'initialize',
                    'initialized',
                    'resize',
                    'resized',
                    'refresh',
                    'refreshed',
                    'update',
                    'updated',
                    'drag',
                    'dragged',
                    'translate',
                    'translated',
                    'to',
                    'changed'
                  ])
              },
              function(e, t) {
                e.exports = {
                  render: function render() {
                    var e = this,
                      t = e.$createElement,
                      n = e._self._c || t
                    return n('div', [
                      n(
                        'span',
                        {
                          directives: [
                            {
                              name: 'show',
                              rawName: 'v-show',
                              value: e.showPrev,
                              expression: 'showPrev'
                            }
                          ],
                          attrs: { id: e.prevHandler }
                        },
                        [e._t('prev')],
                        2
                      ),
                      e._v(' '),
                      n(
                        'div',
                        {
                          class: ['owl-carousel', 'owl-theme'],
                          attrs: { id: e.elementHandle }
                        },
                        [e._t('default')],
                        2
                      ),
                      e._v(' '),
                      n(
                        'span',
                        {
                          directives: [
                            {
                              name: 'show',
                              rawName: 'v-show',
                              value: e.showNext,
                              expression: 'showNext'
                            }
                          ],
                          attrs: { id: e.nextHandler }
                        },
                        [e._t('next')],
                        2
                      )
                    ])
                  },
                  staticRenderFns: []
                }
              }
            ])
          })
        }.apply(this, arguments))
      },
      {}
    ],
    232: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/vue/dist/vue.js',
          module
        )
        ;(function() {
          ;(function(global, setImmediate) {
            /*!
             * Vue.js v2.6.11
             * (c) 2014-2019 Evan You
             * Released under the MIT License.
             */ ;(function(global, factory) {
              ;(0, _typeof3['default'])(exports) === 'object' &&
              typeof module !== 'undefined'
                ? (module.exports = factory())
                : typeof define === 'function' && define.amd
                ? define(factory)
                : ((global = global || self), (global.Vue = factory()))
            })(this, function() {
              'use strict'
              /*  */ var emptyObject = Object.freeze({}) // These helpers produce better VM code in JS engines due to their
              // explicitness and function inlining.
              function isUndef(v) {
                return v === undefined || v === null
              }
              function isDef(v) {
                return v !== undefined && v !== null
              }
              function isTrue(v) {
                return v === true
              }
              function isFalse(v) {
                return v === false
              }
              /**
               * Check if value is primitive.
               */ function isPrimitive(value) {
                return (
                  typeof value === 'string' ||
                  typeof value === 'number' || // $flow-disable-line
                  (0, _typeof3['default'])(value) === 'symbol' ||
                  typeof value === 'boolean'
                )
              }
              /**
               * Quick object check - this is primarily used to tell
               * Objects from primitive values when we know the value
               * is a JSON-compliant type.
               */ function isObject(obj) {
                return (
                  obj !== null && (0, _typeof3['default'])(obj) === 'object'
                )
              }
              /**
               * Get the raw type string of a value, e.g., [object Object].
               */ var _toString = Object.prototype.toString
              function toRawType(value) {
                return _toString.call(value).slice(8, -1)
              }
              /**
               * Strict object type check. Only returns true
               * for plain JavaScript objects.
               */ function isPlainObject(obj) {
                return _toString.call(obj) === '[object Object]'
              }
              function isRegExp(v) {
                return _toString.call(v) === '[object RegExp]'
              }
              /**
               * Check if val is a valid array index.
               */ function isValidArrayIndex(val) {
                var n = parseFloat(String(val))
                return n >= 0 && Math.floor(n) === n && isFinite(val)
              }
              function isPromise(val) {
                return (
                  isDef(val) &&
                  typeof val.then === 'function' &&
                  typeof val['catch'] === 'function'
                )
              }
              /**
               * Convert a value to a string that is actually rendered.
               */ function toString(val) {
                return val == null
                  ? ''
                  : Array.isArray(val) ||
                    (isPlainObject(val) && val.toString === _toString)
                  ? JSON.stringify(val, null, 2)
                  : String(val)
              }
              /**
               * Convert an input value to a number for persistence.
               * If the conversion fails, return original string.
               */ function toNumber(val) {
                var n = parseFloat(val)
                return isNaN(n) ? val : n
              }
              /**
               * Make a map and return a function for checking if a key
               * is in that map.
               */ function makeMap(str, expectsLowerCase) {
                var map = Object.create(null)
                var list = str.split(',')
                for (var i = 0; i < list.length; i++) {
                  map[list[i]] = true
                }
                return expectsLowerCase
                  ? function(val) {
                      return map[val.toLowerCase()]
                    }
                  : function(val) {
                      return map[val]
                    }
              }
              /**
               * Check if a tag is a built-in tag.
               */ var isBuiltInTag = makeMap('slot,component', true)
              /**
               * Check if an attribute is a reserved attribute.
               */ var isReservedAttribute = makeMap(
                'key,ref,slot,slot-scope,is'
              )
              /**
               * Remove an item from an array.
               */ function remove(arr, item) {
                if (arr.length) {
                  var index = arr.indexOf(item)
                  if (index > -1) {
                    return arr.splice(index, 1)
                  }
                }
              }
              /**
               * Check whether an object has the property.
               */ var hasOwnProperty = Object.prototype.hasOwnProperty
              function hasOwn(obj, key) {
                return hasOwnProperty.call(obj, key)
              }
              /**
               * Create a cached version of a pure function.
               */ function cached(fn) {
                var cache = Object.create(null)
                return function cachedFn(str) {
                  var hit = cache[str]
                  return hit || (cache[str] = fn(str))
                }
              }
              /**
               * Camelize a hyphen-delimited string.
               */ var camelizeRE = /-(\w)/g
              var camelize = cached(function(str) {
                return str.replace(camelizeRE, function(_, c) {
                  return c ? c.toUpperCase() : ''
                })
              })
              /**
               * Capitalize a string.
               */ var capitalize = cached(function(str) {
                return str.charAt(0).toUpperCase() + str.slice(1)
              })
              /**
               * Hyphenate a camelCase string.
               */ var hyphenateRE = /\B([A-Z])/g
              var hyphenate = cached(function(str) {
                return str.replace(hyphenateRE, '-$1').toLowerCase()
              })
              /**
               * Simple bind polyfill for environments that do not support it,
               * e.g., PhantomJS 1.x. Technically, we don't need this anymore
               * since native bind is now performant enough in most browsers.
               * But removing it would mean breaking code that was able to run in
               * PhantomJS 1.x, so this must be kept for backward compatibility.
               */ /* istanbul ignore next */ function polyfillBind(fn, ctx) {
                function boundFn(a) {
                  var l = arguments.length
                  return l
                    ? l > 1
                      ? fn.apply(ctx, arguments)
                      : fn.call(ctx, a)
                    : fn.call(ctx)
                }
                boundFn._length = fn.length
                return boundFn
              }
              function nativeBind(fn, ctx) {
                return fn.bind(ctx)
              }
              var bind = Function.prototype.bind ? nativeBind : polyfillBind
              /**
               * Convert an Array-like object to a real Array.
               */ function toArray(list, start) {
                start = start || 0
                var i = list.length - start
                var ret = new Array(i)
                while (i--) {
                  ret[i] = list[i + start]
                }
                return ret
              }
              /**
               * Mix properties into target object.
               */ function extend(to, _from) {
                for (var key in _from) {
                  to[key] = _from[key]
                }
                return to
              }
              /**
               * Merge an Array of Objects into a single Object.
               */ function toObject(arr) {
                var res = {}
                for (var i = 0; i < arr.length; i++) {
                  if (arr[i]) {
                    extend(res, arr[i])
                  }
                }
                return res
              }
              /* eslint-disable no-unused-vars */ /**
               * Perform no operation.
               * Stubbing args to make Flow happy without leaving useless transpiled code
               * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).
               */ function noop(a, b, c) {}
              /**
               * Always return false.
               */ var no = function no(a, b, c) {
                return false
              }
              /* eslint-enable no-unused-vars */ /**
               * Return the same value.
               */ var identity = function identity(_) {
                return _
              }
              /**
               * Generate a string containing static keys from compiler modules.
               */ function genStaticKeys(modules) {
                return modules
                  .reduce(function(keys, m) {
                    return keys.concat(m.staticKeys || [])
                  }, [])
                  .join(',')
              }
              /**
               * Check if two values are loosely equal - that is,
               * if they are plain objects, do they have the same shape?
               */ function looseEqual(a, b) {
                if (a === b) {
                  return true
                }
                var isObjectA = isObject(a)
                var isObjectB = isObject(b)
                if (isObjectA && isObjectB) {
                  try {
                    var isArrayA = Array.isArray(a)
                    var isArrayB = Array.isArray(b)
                    if (isArrayA && isArrayB) {
                      return (
                        a.length === b.length &&
                        a.every(function(e, i) {
                          return looseEqual(e, b[i])
                        })
                      )
                    } else if (a instanceof Date && b instanceof Date) {
                      return a.getTime() === b.getTime()
                    } else if (!isArrayA && !isArrayB) {
                      var keysA = Object.keys(a)
                      var keysB = Object.keys(b)
                      return (
                        keysA.length === keysB.length &&
                        keysA.every(function(key) {
                          return looseEqual(a[key], b[key])
                        })
                      )
                    } else {
                      /* istanbul ignore next */ return false
                    }
                  } catch (e) {
                    /* istanbul ignore next */ return false
                  }
                } else if (!isObjectA && !isObjectB) {
                  return String(a) === String(b)
                } else {
                  return false
                }
              }
              /**
               * Return the first index at which a loosely equal value can be
               * found in the array (if value is a plain object, the array must
               * contain an object of the same shape), or -1 if it is not present.
               */ function looseIndexOf(arr, val) {
                for (var i = 0; i < arr.length; i++) {
                  if (looseEqual(arr[i], val)) {
                    return i
                  }
                }
                return -1
              }
              /**
               * Ensure a function is called only once.
               */ function once(fn) {
                var called = false
                return function() {
                  if (!called) {
                    called = true
                    fn.apply(this, arguments)
                  }
                }
              }
              var SSR_ATTR = 'data-server-rendered'
              var ASSET_TYPES = ['component', 'directive', 'filter']
              var LIFECYCLE_HOOKS = [
                'beforeCreate',
                'created',
                'beforeMount',
                'mounted',
                'beforeUpdate',
                'updated',
                'beforeDestroy',
                'destroyed',
                'activated',
                'deactivated',
                'errorCaptured',
                'serverPrefetch'
              ]
              /*  */ var config = {
                /**
                 * Option merge strategies (used in core/util/options)
                 */ // $flow-disable-line
                optionMergeStrategies: Object.create(null),
                /**
                 * Whether to suppress warnings.
                 */ silent: false,
                /**
                 * Show production mode tip message on boot?
                 */ productionTip: 'development' !== 'production',
                /**
                 * Whether to enable devtools
                 */ devtools: 'development' !== 'production',
                /**
                 * Whether to record perf
                 */ performance: false,
                /**
                 * Error handler for watcher errors
                 */ errorHandler: null,
                /**
                 * Warn handler for watcher warns
                 */ warnHandler: null,
                /**
                 * Ignore certain custom elements
                 */ ignoredElements: []  // $flow-disable-line
                /**
                 * Custom user key aliases for v-on
                 */,
                keyCodes: Object.create(null),
                /**
                 * Check if a tag is reserved so that it cannot be registered as a
                 * component. This is platform-dependent and may be overwritten.
                 */ isReservedTag: no,
                /**
                 * Check if an attribute is reserved so that it cannot be used as a component
                 * prop. This is platform-dependent and may be overwritten.
                 */ isReservedAttr: no,
                /**
                 * Check if a tag is an unknown element.
                 * Platform-dependent.
                 */ isUnknownElement: no,
                /**
                 * Get the namespace of an element
                 */ getTagNamespace: noop,
                /**
                 * Parse the real tag name for the specific platform.
                 */ parsePlatformTagName: identity,
                /**
                 * Check if an attribute must be bound using property, e.g. value
                 * Platform-dependent.
                 */ mustUseProp: no,
                /**
                 * Perform updates asynchronously. Intended to be used by Vue Test Utils
                 * This will significantly reduce performance if set to false.
                 */ async: true,
                /**
                 * Exposed for legacy reasons
                 */ _lifecycleHooks: LIFECYCLE_HOOKS
              }
              /*  */ /**
               * unicode letters used for parsing html tags, component names and property paths.
               * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname
               * skipping \u10000-\uEFFFF due to it freezing up PhantomJS
               */ var unicodeRegExp = /a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/
              /**
               * Check if a string starts with $ or _
               */ function isReserved(str) {
                var c = (str + '').charCodeAt(0)
                return c === 0x24 || c === 0x5f
              }
              /**
               * Define a property.
               */ function def(obj, key, val, enumerable) {
                Object.defineProperty(obj, key, {
                  value: val,
                  enumerable: !!enumerable,
                  writable: true,
                  configurable: true
                })
              }
              /**
               * Parse simple path.
               */ var bailRE = new RegExp(
                '[^' + unicodeRegExp.source + '.$_\\d]'
              )
              function parsePath(path) {
                if (bailRE.test(path)) {
                  return
                }
                var segments = path.split('.')
                return function(obj) {
                  for (var i = 0; i < segments.length; i++) {
                    if (!obj) {
                      return
                    }
                    obj = obj[segments[i]]
                  }
                  return obj
                }
              } /*  */ // can we use __proto__?
              var hasProto = '__proto__' in {} // Browser environment sniffing
              var inBrowser = typeof window !== 'undefined'
              var inWeex =
                typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform
              var weexPlatform = inWeex && WXEnvironment.platform.toLowerCase()
              var UA = inBrowser && window.navigator.userAgent.toLowerCase()
              var isIE = UA && /msie|trident/.test(UA)
              var isIE9 = UA && UA.indexOf('msie 9.0') > 0
              var isEdge = UA && UA.indexOf('edge/') > 0
              var isAndroid =
                (UA && UA.indexOf('android') > 0) || weexPlatform === 'android'
              var isIOS =
                (UA && /iphone|ipad|ipod|ios/.test(UA)) ||
                weexPlatform === 'ios'
              var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge
              var isPhantomJS = UA && /phantomjs/.test(UA)
              var isFF = UA && UA.match(/firefox\/(\d+)/) // Firefox has a "watch" function on Object.prototype...
              var nativeWatch = {}.watch
              var supportsPassive = false
              if (inBrowser) {
                try {
                  var opts = {}
                  Object.defineProperty(opts, 'passive', {
                    get: function get() {
                      /* istanbul ignore next */ supportsPassive = true
                    }
                  }) // https://github.com/facebook/flow/issues/285
                  window.addEventListener('test-passive', null, opts)
                } catch (e) {}
              } // this needs to be lazy-evaled because vue may be required before
              // vue-server-renderer can set VUE_ENV
              var _isServer
              var isServerRendering = function isServerRendering() {
                if (_isServer === undefined) {
                  /* istanbul ignore if */ if (
                    !inBrowser &&
                    !inWeex &&
                    typeof global !== 'undefined'
                  ) {
                    // detect presence of vue-server-renderer and avoid
                    // Webpack shimming the process
                    _isServer =
                      global['process'] &&
                      global['process'].env.VUE_ENV === 'server'
                  } else {
                    _isServer = false
                  }
                }
                return _isServer
              } // detect devtools
              var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__
              /* istanbul ignore next */ function isNative(Ctor) {
                return (
                  typeof Ctor === 'function' &&
                  /native code/.test(Ctor.toString())
                )
              }
              var hasSymbol =
                typeof Symbol !== 'undefined' &&
                isNative(Symbol) &&
                typeof Reflect !== 'undefined' &&
                isNative(Reflect.ownKeys)
              var _Set /* istanbul ignore if */ // $flow-disable-line
              if (typeof Set !== 'undefined' && isNative(Set)) {
                // use native Set when available.
                _Set = Set
              } else {
                // a non-standard Set polyfill that only works with primitive keys.
                _Set = /*@__PURE__*/ (function() {
                  function Set() {
                    this.set = Object.create(null)
                  }
                  Set.prototype.has = function has(key) {
                    return this.set[key] === true
                  }
                  Set.prototype.add = function add(key) {
                    this.set[key] = true
                  }
                  Set.prototype.clear = function clear() {
                    this.set = Object.create(null)
                  }
                  return Set
                })()
              }
              /*  */ var warn = noop
              var tip = noop
              var generateComponentTrace = noop // work around flow check
              var formatComponentName = noop
              {
                var hasConsole = typeof console !== 'undefined'
                var classifyRE = /(?:^|[-_])(\w)/g
                var classify = function classify(str) {
                  return str
                    .replace(classifyRE, function(c) {
                      return c.toUpperCase()
                    })
                    .replace(/[-_]/g, '')
                }
                warn = function warn(msg, vm) {
                  var trace = vm ? generateComponentTrace(vm) : ''
                  if (config.warnHandler) {
                    config.warnHandler.call(null, msg, vm, trace)
                  } else if (hasConsole && !config.silent) {
                    console.error('[Vue warn]: ' + msg + trace)
                  }
                }
                tip = function tip(msg, vm) {
                  if (hasConsole && !config.silent) {
                    console.warn(
                      '[Vue tip]: ' +
                        msg +
                        (vm ? generateComponentTrace(vm) : '')
                    )
                  }
                }
                formatComponentName = function formatComponentName(
                  vm,
                  includeFile
                ) {
                  if (vm.$root === vm) {
                    return '<Root>'
                  }
                  var options =
                    typeof vm === 'function' && vm.cid != null
                      ? vm.options
                      : vm._isVue
                      ? vm.$options || vm.constructor.options
                      : vm
                  var name = options.name || options._componentTag
                  var file = options.__file
                  if (!name && file) {
                    var match = file.match(/([^/\\]+)\.vue$/)
                    name = match && match[1]
                  }
                  return (
                    (name ? '<' + classify(name) + '>' : '<Anonymous>') +
                    (file && includeFile !== false ? ' at ' + file : '')
                  )
                }
                var repeat = function repeat(str, n) {
                  var res = ''
                  while (n) {
                    if (n % 2 === 1) {
                      res += str
                    }
                    if (n > 1) {
                      str += str
                    }
                    n >>= 1
                  }
                  return res
                }
                generateComponentTrace = function generateComponentTrace(vm) {
                  if (vm._isVue && vm.$parent) {
                    var tree = []
                    var currentRecursiveSequence = 0
                    while (vm) {
                      if (tree.length > 0) {
                        var last = tree[tree.length - 1]
                        if (last.constructor === vm.constructor) {
                          currentRecursiveSequence++
                          vm = vm.$parent
                          continue
                        } else if (currentRecursiveSequence > 0) {
                          tree[tree.length - 1] = [
                            last,
                            currentRecursiveSequence
                          ]
                          currentRecursiveSequence = 0
                        }
                      }
                      tree.push(vm)
                      vm = vm.$parent
                    }
                    return (
                      '\n\nfound in\n\n' +
                      tree
                        .map(function(vm, i) {
                          return (
                            '' +
                            (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) +
                            (Array.isArray(vm)
                              ? formatComponentName(vm[0]) +
                                '... (' +
                                vm[1] +
                                ' recursive calls)'
                              : formatComponentName(vm))
                          )
                        })
                        .join('\n')
                    )
                  } else {
                    return '\n\n(found in ' + formatComponentName(vm) + ')'
                  }
                }
              }
              /*  */ var uid = 0
              /**
               * A dep is an observable that can have multiple
               * directives subscribing to it.
               */ var Dep = function Dep() {
                this.id = uid++
                this.subs = []
              }
              Dep.prototype.addSub = function addSub(sub) {
                this.subs.push(sub)
              }
              Dep.prototype.removeSub = function removeSub(sub) {
                remove(this.subs, sub)
              }
              Dep.prototype.depend = function depend() {
                if (Dep.target) {
                  Dep.target.addDep(this)
                }
              }
              Dep.prototype.notify = function notify() {
                // stabilize the subscriber list first
                var subs = this.subs.slice()
                if (!config.async) {
                  // subs aren't sorted in scheduler if not running async
                  // we need to sort them now to make sure they fire in correct
                  // order
                  subs.sort(function(a, b) {
                    return a.id - b.id
                  })
                }
                for (var i = 0, l = subs.length; i < l; i++) {
                  subs[i].update()
                }
              } // The current target watcher being evaluated.
              // This is globally unique because only one watcher
              // can be evaluated at a time.
              Dep.target = null
              var targetStack = []
              function pushTarget(target) {
                targetStack.push(target)
                Dep.target = target
              }
              function popTarget() {
                targetStack.pop()
                Dep.target = targetStack[targetStack.length - 1]
              }
              /*  */ var VNode = function VNode(
                tag,
                data,
                children,
                text,
                elm,
                context,
                componentOptions,
                asyncFactory
              ) {
                this.tag = tag
                this.data = data
                this.children = children
                this.text = text
                this.elm = elm
                this.ns = undefined
                this.context = context
                this.fnContext = undefined
                this.fnOptions = undefined
                this.fnScopeId = undefined
                this.key = data && data.key
                this.componentOptions = componentOptions
                this.componentInstance = undefined
                this.parent = undefined
                this.raw = false
                this.isStatic = false
                this.isRootInsert = true
                this.isComment = false
                this.isCloned = false
                this.isOnce = false
                this.asyncFactory = asyncFactory
                this.asyncMeta = undefined
                this.isAsyncPlaceholder = false
              }
              var prototypeAccessors = { child: { configurable: true } } // DEPRECATED: alias for componentInstance for backwards compat.
              /* istanbul ignore next */ prototypeAccessors.child.get = function() {
                return this.componentInstance
              }
              Object.defineProperties(VNode.prototype, prototypeAccessors)
              var createEmptyVNode = function createEmptyVNode(text) {
                if (text === void 0) text = ''
                var node = new VNode()
                node.text = text
                node.isComment = true
                return node
              }
              function createTextVNode(val) {
                return new VNode(undefined, undefined, undefined, String(val))
              } // optimized shallow clone
              // used for static nodes and slot nodes because they may be reused across
              // multiple renders, cloning them avoids errors when DOM manipulations rely
              // on their elm reference.
              function cloneVNode(vnode) {
                var cloned = new VNode(
                  vnode.tag,
                  vnode.data, // #7975
                  // clone children array to avoid mutating original in case of cloning
                  // a child.
                  vnode.children && vnode.children.slice(),
                  vnode.text,
                  vnode.elm,
                  vnode.context,
                  vnode.componentOptions,
                  vnode.asyncFactory
                )
                cloned.ns = vnode.ns
                cloned.isStatic = vnode.isStatic
                cloned.key = vnode.key
                cloned.isComment = vnode.isComment
                cloned.fnContext = vnode.fnContext
                cloned.fnOptions = vnode.fnOptions
                cloned.fnScopeId = vnode.fnScopeId
                cloned.asyncMeta = vnode.asyncMeta
                cloned.isCloned = true
                return cloned
              }
              /*
               * not type checking this file because flow doesn't play well with
               * dynamically accessing methods on Array prototype
               */ var arrayProto = Array.prototype
              var arrayMethods = Object.create(arrayProto)
              var methodsToPatch = [
                'push',
                'pop',
                'shift',
                'unshift',
                'splice',
                'sort',
                'reverse'
              ]
              /**
               * Intercept mutating methods and emit events
               */ methodsToPatch.forEach(function(method) {
                // cache original method
                var original = arrayProto[method]
                def(arrayMethods, method, function mutator() {
                  var args = [],
                    len = arguments.length
                  while (len--) {
                    args[len] = arguments[len]
                  }
                  var result = original.apply(this, args)
                  var ob = this.__ob__
                  var inserted
                  switch (method) {
                    case 'push':
                    case 'unshift':
                      inserted = args
                      break
                    case 'splice':
                      inserted = args.slice(2)
                      break
                  }
                  if (inserted) {
                    ob.observeArray(inserted)
                  } // notify change
                  ob.dep.notify()
                  return result
                })
              })
              /*  */ var arrayKeys = Object.getOwnPropertyNames(arrayMethods)
              /**
               * In some cases we may want to disable observation inside a component's
               * update computation.
               */ var shouldObserve = true
              function toggleObserving(value) {
                shouldObserve = value
              }
              /**
               * Observer class that is attached to each observed
               * object. Once attached, the observer converts the target
               * object's property keys into getter/setters that
               * collect dependencies and dispatch updates.
               */ var Observer = function Observer(value) {
                this.value = value
                this.dep = new Dep()
                this.vmCount = 0
                def(value, '__ob__', this)
                if (Array.isArray(value)) {
                  if (hasProto) {
                    protoAugment(value, arrayMethods)
                  } else {
                    copyAugment(value, arrayMethods, arrayKeys)
                  }
                  this.observeArray(value)
                } else {
                  this.walk(value)
                }
              }
              /**
               * Walk through all properties and convert them into
               * getter/setters. This method should only be called when
               * value type is Object.
               */ Observer.prototype.walk = function walk(obj) {
                var keys = Object.keys(obj)
                for (var i = 0; i < keys.length; i++) {
                  defineReactive$$1(obj, keys[i])
                }
              }
              /**
               * Observe a list of Array items.
               */ Observer.prototype.observeArray = function observeArray(
                items
              ) {
                for (var i = 0, l = items.length; i < l; i++) {
                  observe(items[i])
                }
              } // helpers
              /**
               * Augment a target Object or Array by intercepting
               * the prototype chain using __proto__
               */ function protoAugment(target, src) {
                /* eslint-disable no-proto */ target.__proto__ = src /* eslint-enable no-proto */
              }
              /**
               * Augment a target Object or Array by defining
               * hidden properties.
               */ /* istanbul ignore next */ function copyAugment(
                target,
                src,
                keys
              ) {
                for (var i = 0, l = keys.length; i < l; i++) {
                  var key = keys[i]
                  def(target, key, src[key])
                }
              }
              /**
               * Attempt to create an observer instance for a value,
               * returns the new observer if successfully observed,
               * or the existing observer if the value already has one.
               */ function observe(value, asRootData) {
                if (!isObject(value) || value instanceof VNode) {
                  return
                }
                var ob
                if (
                  hasOwn(value, '__ob__') &&
                  value.__ob__ instanceof Observer
                ) {
                  ob = value.__ob__
                } else if (
                  shouldObserve &&
                  !isServerRendering() &&
                  (Array.isArray(value) || isPlainObject(value)) &&
                  Object.isExtensible(value) &&
                  !value._isVue
                ) {
                  ob = new Observer(value)
                }
                if (asRootData && ob) {
                  ob.vmCount++
                }
                return ob
              }
              /**
               * Define a reactive property on an Object.
               */ function defineReactive$$1(
                obj,
                key,
                val,
                customSetter,
                shallow
              ) {
                var dep = new Dep()
                var property = Object.getOwnPropertyDescriptor(obj, key)
                if (property && property.configurable === false) {
                  return
                } // cater for pre-defined getter/setters
                var getter = property && property.get
                var setter = property && property.set
                if ((!getter || setter) && arguments.length === 2) {
                  val = obj[key]
                }
                var childOb = !shallow && observe(val)
                Object.defineProperty(obj, key, {
                  enumerable: true,
                  configurable: true,
                  get: function reactiveGetter() {
                    var value = getter ? getter.call(obj) : val
                    if (Dep.target) {
                      dep.depend()
                      if (childOb) {
                        childOb.dep.depend()
                        if (Array.isArray(value)) {
                          dependArray(value)
                        }
                      }
                    }
                    return value
                  },
                  set: function reactiveSetter(newVal) {
                    var value = getter ? getter.call(obj) : val
                    /* eslint-disable no-self-compare */ if (
                      newVal === value ||
                      (newVal !== newVal && value !== value)
                    ) {
                      return
                    }
                    /* eslint-enable no-self-compare */ if (customSetter) {
                      customSetter()
                    } // #7981: for accessor properties without setter
                    if (getter && !setter) {
                      return
                    }
                    if (setter) {
                      setter.call(obj, newVal)
                    } else {
                      val = newVal
                    }
                    childOb = !shallow && observe(newVal)
                    dep.notify()
                  }
                })
              }
              /**
               * Set a property on an object. Adds the new property and
               * triggers change notification if the property doesn't
               * already exist.
               */ function set(target, key, val) {
                if (isUndef(target) || isPrimitive(target)) {
                  warn(
                    'Cannot set reactive property on undefined, null, or primitive value: ' +
                      target
                  )
                }
                if (Array.isArray(target) && isValidArrayIndex(key)) {
                  target.length = Math.max(target.length, key)
                  target.splice(key, 1, val)
                  return val
                }
                if (key in target && !(key in Object.prototype)) {
                  target[key] = val
                  return val
                }
                var ob = target.__ob__
                if (target._isVue || (ob && ob.vmCount)) {
                  warn(
                    'Avoid adding reactive properties to a Vue instance or its root $data ' +
                      'at runtime - declare it upfront in the data option.'
                  )
                  return val
                }
                if (!ob) {
                  target[key] = val
                  return val
                }
                defineReactive$$1(ob.value, key, val)
                ob.dep.notify()
                return val
              }
              /**
               * Delete a property and trigger change if necessary.
               */ function del(target, key) {
                if (isUndef(target) || isPrimitive(target)) {
                  warn(
                    'Cannot delete reactive property on undefined, null, or primitive value: ' +
                      target
                  )
                }
                if (Array.isArray(target) && isValidArrayIndex(key)) {
                  target.splice(key, 1)
                  return
                }
                var ob = target.__ob__
                if (target._isVue || (ob && ob.vmCount)) {
                  warn(
                    'Avoid deleting properties on a Vue instance or its root $data ' +
                      '- just set it to null.'
                  )
                  return
                }
                if (!hasOwn(target, key)) {
                  return
                }
                delete target[key]
                if (!ob) {
                  return
                }
                ob.dep.notify()
              }
              /**
               * Collect dependencies on array elements when the array is touched, since
               * we cannot intercept array element access like property getters.
               */ function dependArray(value) {
                for (var e = void 0, i = 0, l = value.length; i < l; i++) {
                  e = value[i]
                  e && e.__ob__ && e.__ob__.dep.depend()
                  if (Array.isArray(e)) {
                    dependArray(e)
                  }
                }
              }
              /*  */ /**
               * Option overwriting strategies are functions that handle
               * how to merge a parent option value and a child option
               * value into the final value.
               */ var strats = config.optionMergeStrategies
              /**
               * Options with restrictions
               */ {
                strats.el = strats.propsData = function(
                  parent,
                  child,
                  vm,
                  key
                ) {
                  if (!vm) {
                    warn(
                      'option "' +
                        key +
                        '" can only be used during instance ' +
                        'creation with the `new` keyword.'
                    )
                  }
                  return defaultStrat(parent, child)
                }
              }
              /**
               * Helper that recursively merges two data objects together.
               */ function mergeData(to, from) {
                if (!from) {
                  return to
                }
                var key, toVal, fromVal
                var keys = hasSymbol ? Reflect.ownKeys(from) : Object.keys(from)
                for (var i = 0; i < keys.length; i++) {
                  key = keys[i] // in case the object is already observed...
                  if (key === '__ob__') {
                    continue
                  }
                  toVal = to[key]
                  fromVal = from[key]
                  if (!hasOwn(to, key)) {
                    set(to, key, fromVal)
                  } else if (
                    toVal !== fromVal &&
                    isPlainObject(toVal) &&
                    isPlainObject(fromVal)
                  ) {
                    mergeData(toVal, fromVal)
                  }
                }
                return to
              }
              /**
               * Data
               */ function mergeDataOrFn(parentVal, childVal, vm) {
                if (!vm) {
                  // in a Vue.extend merge, both should be functions
                  if (!childVal) {
                    return parentVal
                  }
                  if (!parentVal) {
                    return childVal
                  } // when parentVal & childVal are both present,
                  // we need to return a function that returns the
                  // merged result of both functions... no need to
                  // check if parentVal is a function here because
                  // it has to be a function to pass previous merges.
                  return function mergedDataFn() {
                    return mergeData(
                      typeof childVal === 'function'
                        ? childVal.call(this, this)
                        : childVal,
                      typeof parentVal === 'function'
                        ? parentVal.call(this, this)
                        : parentVal
                    )
                  }
                } else {
                  return function mergedInstanceDataFn() {
                    // instance merge
                    var instanceData =
                      typeof childVal === 'function'
                        ? childVal.call(vm, vm)
                        : childVal
                    var defaultData =
                      typeof parentVal === 'function'
                        ? parentVal.call(vm, vm)
                        : parentVal
                    if (instanceData) {
                      return mergeData(instanceData, defaultData)
                    } else {
                      return defaultData
                    }
                  }
                }
              }
              strats.data = function(parentVal, childVal, vm) {
                if (!vm) {
                  if (childVal && typeof childVal !== 'function') {
                    warn(
                      'The "data" option should be a function ' +
                        'that returns a per-instance value in component ' +
                        'definitions.',
                      vm
                    )
                    return parentVal
                  }
                  return mergeDataOrFn(parentVal, childVal)
                }
                return mergeDataOrFn(parentVal, childVal, vm)
              }
              /**
               * Hooks and props are merged as arrays.
               */ function mergeHook(parentVal, childVal) {
                var res = childVal
                  ? parentVal
                    ? parentVal.concat(childVal)
                    : Array.isArray(childVal)
                    ? childVal
                    : [childVal]
                  : parentVal
                return res ? dedupeHooks(res) : res
              }
              function dedupeHooks(hooks) {
                var res = []
                for (var i = 0; i < hooks.length; i++) {
                  if (res.indexOf(hooks[i]) === -1) {
                    res.push(hooks[i])
                  }
                }
                return res
              }
              LIFECYCLE_HOOKS.forEach(function(hook) {
                strats[hook] = mergeHook
              })
              /**
               * Assets
               *
               * When a vm is present (instance creation), we need to do
               * a three-way merge between constructor options, instance
               * options and parent options.
               */ function mergeAssets(parentVal, childVal, vm, key) {
                var res = Object.create(parentVal || null)
                if (childVal) {
                  assertObjectType(key, childVal, vm)
                  return extend(res, childVal)
                } else {
                  return res
                }
              }
              ASSET_TYPES.forEach(function(type) {
                strats[type + 's'] = mergeAssets
              })
              /**
               * Watchers.
               *
               * Watchers hashes should not overwrite one
               * another, so we merge them as arrays.
               */ strats.watch = function(parentVal, childVal, vm, key) {
                // work around Firefox's Object.prototype.watch...
                if (parentVal === nativeWatch) {
                  parentVal = undefined
                }
                if (childVal === nativeWatch) {
                  childVal = undefined
                }
                /* istanbul ignore if */ if (!childVal) {
                  return Object.create(parentVal || null)
                }
                {
                  assertObjectType(key, childVal, vm)
                }
                if (!parentVal) {
                  return childVal
                }
                var ret = {}
                extend(ret, parentVal)
                for (var key$1 in childVal) {
                  var parent = ret[key$1]
                  var child = childVal[key$1]
                  if (parent && !Array.isArray(parent)) {
                    parent = [parent]
                  }
                  ret[key$1] = parent
                    ? parent.concat(child)
                    : Array.isArray(child)
                    ? child
                    : [child]
                }
                return ret
              }
              /**
               * Other object hashes.
               */ strats.props = strats.methods = strats.inject = strats.computed = function(
                parentVal,
                childVal,
                vm,
                key
              ) {
                if (childVal && 'development' !== 'production') {
                  assertObjectType(key, childVal, vm)
                }
                if (!parentVal) {
                  return childVal
                }
                var ret = Object.create(null)
                extend(ret, parentVal)
                if (childVal) {
                  extend(ret, childVal)
                }
                return ret
              }
              strats.provide = mergeDataOrFn
              /**
               * Default strategy.
               */ var defaultStrat = function defaultStrat(
                parentVal,
                childVal
              ) {
                return childVal === undefined ? parentVal : childVal
              }
              /**
               * Validate component names
               */ function checkComponents(options) {
                for (var key in options.components) {
                  validateComponentName(key)
                }
              }
              function validateComponentName(name) {
                if (
                  !new RegExp(
                    '^[a-zA-Z][\\-\\.0-9_' + unicodeRegExp.source + ']*$'
                  ).test(name)
                ) {
                  warn(
                    'Invalid component name: "' +
                      name +
                      '". Component names ' +
                      'should conform to valid custom element name in html5 specification.'
                  )
                }
                if (isBuiltInTag(name) || config.isReservedTag(name)) {
                  warn(
                    'Do not use built-in or reserved HTML elements as component ' +
                      'id: ' +
                      name
                  )
                }
              }
              /**
               * Ensure all props option syntax are normalized into the
               * Object-based format.
               */ function normalizeProps(options, vm) {
                var props = options.props
                if (!props) {
                  return
                }
                var res = {}
                var i, val, name
                if (Array.isArray(props)) {
                  i = props.length
                  while (i--) {
                    val = props[i]
                    if (typeof val === 'string') {
                      name = camelize(val)
                      res[name] = { type: null }
                    } else {
                      warn('props must be strings when using array syntax.')
                    }
                  }
                } else if (isPlainObject(props)) {
                  for (var key in props) {
                    val = props[key]
                    name = camelize(key)
                    res[name] = isPlainObject(val) ? val : { type: val }
                  }
                } else {
                  warn(
                    'Invalid value for option "props": expected an Array or an Object, ' +
                      'but got ' +
                      toRawType(props) +
                      '.',
                    vm
                  )
                }
                options.props = res
              }
              /**
               * Normalize all injections into Object-based format
               */ function normalizeInject(options, vm) {
                var inject = options.inject
                if (!inject) {
                  return
                }
                var normalized = (options.inject = {})
                if (Array.isArray(inject)) {
                  for (var i = 0; i < inject.length; i++) {
                    normalized[inject[i]] = { from: inject[i] }
                  }
                } else if (isPlainObject(inject)) {
                  for (var key in inject) {
                    var val = inject[key]
                    normalized[key] = isPlainObject(val)
                      ? extend({ from: key }, val)
                      : { from: val }
                  }
                } else {
                  warn(
                    'Invalid value for option "inject": expected an Array or an Object, ' +
                      'but got ' +
                      toRawType(inject) +
                      '.',
                    vm
                  )
                }
              }
              /**
               * Normalize raw function directives into object format.
               */ function normalizeDirectives(options) {
                var dirs = options.directives
                if (dirs) {
                  for (var key in dirs) {
                    var def$$1 = dirs[key]
                    if (typeof def$$1 === 'function') {
                      dirs[key] = { bind: def$$1, update: def$$1 }
                    }
                  }
                }
              }
              function assertObjectType(name, value, vm) {
                if (!isPlainObject(value)) {
                  warn(
                    'Invalid value for option "' +
                      name +
                      '": expected an Object, ' +
                      'but got ' +
                      toRawType(value) +
                      '.',
                    vm
                  )
                }
              }
              /**
               * Merge two option objects into a new one.
               * Core utility used in both instantiation and inheritance.
               */ function mergeOptions(parent, child, vm) {
                {
                  checkComponents(child)
                }
                if (typeof child === 'function') {
                  child = child.options
                }
                normalizeProps(child, vm)
                normalizeInject(child, vm)
                normalizeDirectives(child) // Apply extends and mixins on the child options,
                // but only if it is a raw options object that isn't
                // the result of another mergeOptions call.
                // Only merged options has the _base property.
                if (!child._base) {
                  if (child['extends']) {
                    parent = mergeOptions(parent, child['extends'], vm)
                  }
                  if (child.mixins) {
                    for (var i = 0, l = child.mixins.length; i < l; i++) {
                      parent = mergeOptions(parent, child.mixins[i], vm)
                    }
                  }
                }
                var options = {}
                var key
                for (key in parent) {
                  mergeField(key)
                }
                for (key in child) {
                  if (!hasOwn(parent, key)) {
                    mergeField(key)
                  }
                }
                function mergeField(key) {
                  var strat = strats[key] || defaultStrat
                  options[key] = strat(parent[key], child[key], vm, key)
                }
                return options
              }
              /**
               * Resolve an asset.
               * This function is used because child instances need access
               * to assets defined in its ancestor chain.
               */ function resolveAsset(options, type, id, warnMissing) {
                /* istanbul ignore if */ if (typeof id !== 'string') {
                  return
                }
                var assets = options[type] // check local registration variations first
                if (hasOwn(assets, id)) {
                  return assets[id]
                }
                var camelizedId = camelize(id)
                if (hasOwn(assets, camelizedId)) {
                  return assets[camelizedId]
                }
                var PascalCaseId = capitalize(camelizedId)
                if (hasOwn(assets, PascalCaseId)) {
                  return assets[PascalCaseId]
                } // fallback to prototype chain
                var res =
                  assets[id] || assets[camelizedId] || assets[PascalCaseId]
                if (warnMissing && !res) {
                  warn(
                    'Failed to resolve ' + type.slice(0, -1) + ': ' + id,
                    options
                  )
                }
                return res
              }
              /*  */ function validateProp(key, propOptions, propsData, vm) {
                var prop = propOptions[key]
                var absent = !hasOwn(propsData, key)
                var value = propsData[key] // boolean casting
                var booleanIndex = getTypeIndex(Boolean, prop.type)
                if (booleanIndex > -1) {
                  if (absent && !hasOwn(prop, 'default')) {
                    value = false
                  } else if (value === '' || value === hyphenate(key)) {
                    // only cast empty string / same name to boolean if
                    // boolean has higher priority
                    var stringIndex = getTypeIndex(String, prop.type)
                    if (stringIndex < 0 || booleanIndex < stringIndex) {
                      value = true
                    }
                  }
                } // check default value
                if (value === undefined) {
                  value = getPropDefaultValue(vm, prop, key) // since the default value is a fresh copy,
                  // make sure to observe it.
                  var prevShouldObserve = shouldObserve
                  toggleObserving(true)
                  observe(value)
                  toggleObserving(prevShouldObserve)
                }
                {
                  assertProp(prop, key, value, vm, absent)
                }
                return value
              }
              /**
               * Get the default value of a prop.
               */ function getPropDefaultValue(vm, prop, key) {
                // no default, return undefined
                if (!hasOwn(prop, 'default')) {
                  return undefined
                }
                var def = prop['default'] // warn against non-factory defaults for Object & Array
                if (isObject(def)) {
                  warn(
                    'Invalid default value for prop "' +
                      key +
                      '": ' +
                      'Props with type Object/Array must use a factory function ' +
                      'to return the default value.',
                    vm
                  )
                } // the raw prop value was also undefined from previous render,
                // return previous default value to avoid unnecessary watcher trigger
                if (
                  vm &&
                  vm.$options.propsData &&
                  vm.$options.propsData[key] === undefined &&
                  vm._props[key] !== undefined
                ) {
                  return vm._props[key]
                } // call factory function for non-Function types
                // a value is Function if its prototype is function even across different execution context
                return typeof def === 'function' &&
                  getType(prop.type) !== 'Function'
                  ? def.call(vm)
                  : def
              }
              /**
               * Assert whether a prop is valid.
               */ function assertProp(prop, name, value, vm, absent) {
                if (prop.required && absent) {
                  warn('Missing required prop: "' + name + '"', vm)
                  return
                }
                if (value == null && !prop.required) {
                  return
                }
                var type = prop.type
                var valid = !type || type === true
                var expectedTypes = []
                if (type) {
                  if (!Array.isArray(type)) {
                    type = [type]
                  }
                  for (var i = 0; i < type.length && !valid; i++) {
                    var assertedType = assertType(value, type[i])
                    expectedTypes.push(assertedType.expectedType || '')
                    valid = assertedType.valid
                  }
                }
                if (!valid) {
                  warn(getInvalidTypeMessage(name, value, expectedTypes), vm)
                  return
                }
                var validator = prop.validator
                if (validator) {
                  if (!validator(value)) {
                    warn(
                      'Invalid prop: custom validator check failed for prop "' +
                        name +
                        '".',
                      vm
                    )
                  }
                }
              }
              var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/
              function assertType(value, type) {
                var valid
                var expectedType = getType(type)
                if (simpleCheckRE.test(expectedType)) {
                  var t = (0, _typeof3['default'])(value)
                  valid = t === expectedType.toLowerCase() // for primitive wrapper objects
                  if (!valid && t === 'object') {
                    valid = value instanceof type
                  }
                } else if (expectedType === 'Object') {
                  valid = isPlainObject(value)
                } else if (expectedType === 'Array') {
                  valid = Array.isArray(value)
                } else {
                  valid = value instanceof type
                }
                return { valid: valid, expectedType: expectedType }
              }
              /**
               * Use function string name to check built-in types,
               * because a simple equality check will fail when running
               * across different vms / iframes.
               */ function getType(fn) {
                var match = fn && fn.toString().match(/^\s*function (\w+)/)
                return match ? match[1] : ''
              }
              function isSameType(a, b) {
                return getType(a) === getType(b)
              }
              function getTypeIndex(type, expectedTypes) {
                if (!Array.isArray(expectedTypes)) {
                  return isSameType(expectedTypes, type) ? 0 : -1
                }
                for (var i = 0, len = expectedTypes.length; i < len; i++) {
                  if (isSameType(expectedTypes[i], type)) {
                    return i
                  }
                }
                return -1
              }
              function getInvalidTypeMessage(name, value, expectedTypes) {
                var message =
                  'Invalid prop: type check failed for prop "' +
                  name +
                  '".' +
                  ' Expected ' +
                  expectedTypes.map(capitalize).join(', ')
                var expectedType = expectedTypes[0]
                var receivedType = toRawType(value)
                var expectedValue = styleValue(value, expectedType)
                var receivedValue = styleValue(value, receivedType) // check if we need to specify expected value
                if (
                  expectedTypes.length === 1 &&
                  isExplicable(expectedType) &&
                  !isBoolean(expectedType, receivedType)
                ) {
                  message += ' with value ' + expectedValue
                }
                message += ', got ' + receivedType + ' ' // check if we need to specify received value
                if (isExplicable(receivedType)) {
                  message += 'with value ' + receivedValue + '.'
                }
                return message
              }
              function styleValue(value, type) {
                if (type === 'String') {
                  return '"' + value + '"'
                } else if (type === 'Number') {
                  return '' + Number(value)
                } else {
                  return '' + value
                }
              }
              function isExplicable(value) {
                var explicitTypes = ['string', 'number', 'boolean']
                return explicitTypes.some(function(elem) {
                  return value.toLowerCase() === elem
                })
              }
              function isBoolean() {
                var args = [],
                  len = arguments.length
                while (len--) {
                  args[len] = arguments[len]
                }
                return args.some(function(elem) {
                  return elem.toLowerCase() === 'boolean'
                })
              }
              /*  */ function handleError(err, vm, info) {
                // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.
                // See: https://github.com/vuejs/vuex/issues/1505
                pushTarget()
                try {
                  if (vm) {
                    var cur = vm
                    while ((cur = cur.$parent)) {
                      var hooks = cur.$options.errorCaptured
                      if (hooks) {
                        for (var i = 0; i < hooks.length; i++) {
                          try {
                            var capture =
                              hooks[i].call(cur, err, vm, info) === false
                            if (capture) {
                              return
                            }
                          } catch (e) {
                            globalHandleError(e, cur, 'errorCaptured hook')
                          }
                        }
                      }
                    }
                  }
                  globalHandleError(err, vm, info)
                } finally {
                  popTarget()
                }
              }
              function invokeWithErrorHandling(
                handler,
                context,
                args,
                vm,
                info
              ) {
                var res
                try {
                  res = args
                    ? handler.apply(context, args)
                    : handler.call(context)
                  if (res && !res._isVue && isPromise(res) && !res._handled) {
                    res['catch'](function(e) {
                      return handleError(e, vm, info + ' (Promise/async)')
                    }) // issue #9511
                    // avoid catch triggering multiple times when nested calls
                    res._handled = true
                  }
                } catch (e) {
                  handleError(e, vm, info)
                }
                return res
              }
              function globalHandleError(err, vm, info) {
                if (config.errorHandler) {
                  try {
                    return config.errorHandler.call(null, err, vm, info)
                  } catch (e) {
                    // if the user intentionally throws the original error in the handler,
                    // do not log it twice
                    if (e !== err) {
                      logError(e, null, 'config.errorHandler')
                    }
                  }
                }
                logError(err, vm, info)
              }
              function logError(err, vm, info) {
                {
                  warn('Error in ' + info + ': "' + err.toString() + '"', vm)
                }
                /* istanbul ignore else */ if (
                  (inBrowser || inWeex) &&
                  typeof console !== 'undefined'
                ) {
                  console.error(err)
                } else {
                  throw err
                }
              }
              /*  */ var isUsingMicroTask = false
              var callbacks = []
              var pending = false
              function flushCallbacks() {
                pending = false
                var copies = callbacks.slice(0)
                callbacks.length = 0
                for (var i = 0; i < copies.length; i++) {
                  copies[i]()
                }
              } // Here we have async deferring wrappers using microtasks.
              // In 2.5 we used (macro) tasks (in combination with microtasks).
              // However, it has subtle problems when state is changed right before repaint
              // (e.g. #6813, out-in transitions).
              // Also, using (macro) tasks in event handler would cause some weird behaviors
              // that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).
              // So we now use microtasks everywhere, again.
              // A major drawback of this tradeoff is that there are some scenarios
              // where microtasks have too high a priority and fire in between supposedly
              // sequential events (e.g. #4521, #6690, which have workarounds)
              // or even between bubbling of the same event (#6566).
              var timerFunc // The nextTick behavior leverages the microtask queue, which can be accessed
              // via either native Promise.then or MutationObserver.
              // MutationObserver has wider support, however it is seriously bugged in
              // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It
              // completely stops working after triggering a few times... so, if native
              // Promise is available, we will use it:
              /* istanbul ignore next, $flow-disable-line */ if (
                typeof Promise !== 'undefined' &&
                isNative(Promise)
              ) {
                var p = Promise.resolve()
                timerFunc = function timerFunc() {
                  p.then(flushCallbacks) // In problematic UIWebViews, Promise.then doesn't completely break, but
                  // it can get stuck in a weird state where callbacks are pushed into the
                  // microtask queue but the queue isn't being flushed, until the browser
                  // needs to do some other work, e.g. handle a timer. Therefore we can
                  // "force" the microtask queue to be flushed by adding an empty timer.
                  if (isIOS) {
                    setTimeout(noop)
                  }
                }
                isUsingMicroTask = true
              } else if (
                !isIE &&
                typeof MutationObserver !== 'undefined' &&
                (isNative(MutationObserver) || // PhantomJS and iOS 7.x
                  MutationObserver.toString() ===
                    '[object MutationObserverConstructor]')
              ) {
                // Use MutationObserver where native Promise is not available,
                // e.g. PhantomJS, iOS7, Android 4.4
                // (#6466 MutationObserver is unreliable in IE11)
                var counter = 1
                var observer = new MutationObserver(flushCallbacks)
                var textNode = document.createTextNode(String(counter))
                observer.observe(textNode, { characterData: true })
                timerFunc = function timerFunc() {
                  counter = (counter + 1) % 2
                  textNode.data = String(counter)
                }
                isUsingMicroTask = true
              } else if (
                typeof setImmediate !== 'undefined' &&
                isNative(setImmediate)
              ) {
                // Fallback to setImmediate.
                // Technically it leverages the (macro) task queue,
                // but it is still a better choice than setTimeout.
                timerFunc = function timerFunc() {
                  setImmediate(flushCallbacks)
                }
              } else {
                // Fallback to setTimeout.
                timerFunc = function timerFunc() {
                  setTimeout(flushCallbacks, 0)
                }
              }
              function nextTick(cb, ctx) {
                var _resolve
                callbacks.push(function() {
                  if (cb) {
                    try {
                      cb.call(ctx)
                    } catch (e) {
                      handleError(e, ctx, 'nextTick')
                    }
                  } else if (_resolve) {
                    _resolve(ctx)
                  }
                })
                if (!pending) {
                  pending = true
                  timerFunc()
                } // $flow-disable-line
                if (!cb && typeof Promise !== 'undefined') {
                  return new Promise(function(resolve) {
                    _resolve = resolve
                  })
                }
              }
              /*  */ var mark
              var measure
              {
                var perf = inBrowser && window.performance
                /* istanbul ignore if */ if (
                  perf &&
                  perf.mark &&
                  perf.measure &&
                  perf.clearMarks &&
                  perf.clearMeasures
                ) {
                  mark = function mark(tag) {
                    return perf.mark(tag)
                  }
                  measure = function measure(name, startTag, endTag) {
                    perf.measure(name, startTag, endTag)
                    perf.clearMarks(startTag)
                    perf.clearMarks(endTag) // perf.clearMeasures(name)
                  }
                }
              }
              /* not type checking this file because flow doesn't play well with Proxy */ var initProxy
              {
                var allowedGlobals = makeMap(
                  'Infinity,undefined,NaN,isFinite,isNaN,' +
                    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +
                    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +
                    'require' // for Webpack/Browserify
                )
                var warnNonPresent = function warnNonPresent(target, key) {
                  warn(
                    'Property or method "' +
                      key +
                      '" is not defined on the instance but ' +
                      'referenced during render. Make sure that this property is reactive, ' +
                      'either in the data option, or for class-based components, by ' +
                      'initializing the property. ' +
                      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',
                    target
                  )
                }
                var warnReservedPrefix = function warnReservedPrefix(
                  target,
                  key
                ) {
                  warn(
                    'Property "' +
                      key +
                      '" must be accessed with "$data.' +
                      key +
                      '" because ' +
                      'properties starting with "$" or "_" are not proxied in the Vue instance to ' +
                      'prevent conflicts with Vue internals. ' +
                      'See: https://vuejs.org/v2/api/#data',
                    target
                  )
                }
                var hasProxy = typeof Proxy !== 'undefined' && isNative(Proxy)
                if (hasProxy) {
                  var isBuiltInModifier = makeMap(
                    'stop,prevent,self,ctrl,shift,alt,meta,exact'
                  )
                  config.keyCodes = new Proxy(config.keyCodes, {
                    set: function set(target, key, value) {
                      if (isBuiltInModifier(key)) {
                        warn(
                          'Avoid overwriting built-in modifier in config.keyCodes: .' +
                            key
                        )
                        return false
                      } else {
                        target[key] = value
                        return true
                      }
                    }
                  })
                }
                var hasHandler = {
                  has: function has(target, key) {
                    var has = key in target
                    var isAllowed =
                      allowedGlobals(key) ||
                      (typeof key === 'string' &&
                        key.charAt(0) === '_' &&
                        !(key in target.$data))
                    if (!has && !isAllowed) {
                      if (key in target.$data) {
                        warnReservedPrefix(target, key)
                      } else {
                        warnNonPresent(target, key)
                      }
                    }
                    return has || !isAllowed
                  }
                }
                var getHandler = {
                  get: function get(target, key) {
                    if (typeof key === 'string' && !(key in target)) {
                      if (key in target.$data) {
                        warnReservedPrefix(target, key)
                      } else {
                        warnNonPresent(target, key)
                      }
                    }
                    return target[key]
                  }
                }
                initProxy = function initProxy(vm) {
                  if (hasProxy) {
                    // determine which proxy handler to use
                    var options = vm.$options
                    var handlers =
                      options.render && options.render._withStripped
                        ? getHandler
                        : hasHandler
                    vm._renderProxy = new Proxy(vm, handlers)
                  } else {
                    vm._renderProxy = vm
                  }
                }
              }
              /*  */ var seenObjects = new _Set()
              /**
               * Recursively traverse an object to evoke all converted
               * getters, so that every nested property inside the object
               * is collected as a "deep" dependency.
               */ function traverse(val) {
                _traverse(val, seenObjects)
                seenObjects.clear()
              }
              function _traverse(val, seen) {
                var i, keys
                var isA = Array.isArray(val)
                if (
                  (!isA && !isObject(val)) ||
                  Object.isFrozen(val) ||
                  val instanceof VNode
                ) {
                  return
                }
                if (val.__ob__) {
                  var depId = val.__ob__.dep.id
                  if (seen.has(depId)) {
                    return
                  }
                  seen.add(depId)
                }
                if (isA) {
                  i = val.length
                  while (i--) {
                    _traverse(val[i], seen)
                  }
                } else {
                  keys = Object.keys(val)
                  i = keys.length
                  while (i--) {
                    _traverse(val[keys[i]], seen)
                  }
                }
              }
              /*  */ var normalizeEvent = cached(function(name) {
                var passive = name.charAt(0) === '&'
                name = passive ? name.slice(1) : name
                var once$$1 = name.charAt(0) === '~' // Prefixed last, checked first
                name = once$$1 ? name.slice(1) : name
                var capture = name.charAt(0) === '!'
                name = capture ? name.slice(1) : name
                return {
                  name: name,
                  once: once$$1,
                  capture: capture,
                  passive: passive
                }
              })
              function createFnInvoker(fns, vm) {
                function invoker() {
                  var arguments$1 = arguments
                  var fns = invoker.fns
                  if (Array.isArray(fns)) {
                    var cloned = fns.slice()
                    for (var i = 0; i < cloned.length; i++) {
                      invokeWithErrorHandling(
                        cloned[i],
                        null,
                        arguments$1,
                        vm,
                        'v-on handler'
                      )
                    }
                  } else {
                    // return handler return value for single handlers
                    return invokeWithErrorHandling(
                      fns,
                      null,
                      arguments,
                      vm,
                      'v-on handler'
                    )
                  }
                }
                invoker.fns = fns
                return invoker
              }
              function updateListeners(
                on,
                oldOn,
                add,
                remove$$1,
                createOnceHandler,
                vm
              ) {
                var name, def$$1, cur, old, event
                for (name in on) {
                  def$$1 = cur = on[name]
                  old = oldOn[name]
                  event = normalizeEvent(name)
                  if (isUndef(cur)) {
                    warn(
                      'Invalid handler for event "' +
                        event.name +
                        '": got ' +
                        String(cur),
                      vm
                    )
                  } else if (isUndef(old)) {
                    if (isUndef(cur.fns)) {
                      cur = on[name] = createFnInvoker(cur, vm)
                    }
                    if (isTrue(event.once)) {
                      cur = on[name] = createOnceHandler(
                        event.name,
                        cur,
                        event.capture
                      )
                    }
                    add(
                      event.name,
                      cur,
                      event.capture,
                      event.passive,
                      event.params
                    )
                  } else if (cur !== old) {
                    old.fns = cur
                    on[name] = old
                  }
                }
                for (name in oldOn) {
                  if (isUndef(on[name])) {
                    event = normalizeEvent(name)
                    remove$$1(event.name, oldOn[name], event.capture)
                  }
                }
              }
              /*  */ function mergeVNodeHook(def, hookKey, hook) {
                if (def instanceof VNode) {
                  def = def.data.hook || (def.data.hook = {})
                }
                var invoker
                var oldHook = def[hookKey]
                function wrappedHook() {
                  hook.apply(this, arguments) // important: remove merged hook to ensure it's called only once
                  // and prevent memory leak
                  remove(invoker.fns, wrappedHook)
                }
                if (isUndef(oldHook)) {
                  // no existing hook
                  invoker = createFnInvoker([wrappedHook])
                } else {
                  /* istanbul ignore if */ if (
                    isDef(oldHook.fns) &&
                    isTrue(oldHook.merged)
                  ) {
                    // already a merged invoker
                    invoker = oldHook
                    invoker.fns.push(wrappedHook)
                  } else {
                    // existing plain hook
                    invoker = createFnInvoker([oldHook, wrappedHook])
                  }
                }
                invoker.merged = true
                def[hookKey] = invoker
              }
              /*  */ function extractPropsFromVNodeData(data, Ctor, tag) {
                // we are only extracting raw values here.
                // validation and default values are handled in the child
                // component itself.
                var propOptions = Ctor.options.props
                if (isUndef(propOptions)) {
                  return
                }
                var res = {}
                var attrs = data.attrs
                var props = data.props
                if (isDef(attrs) || isDef(props)) {
                  for (var key in propOptions) {
                    var altKey = hyphenate(key)
                    {
                      var keyInLowerCase = key.toLowerCase()
                      if (
                        key !== keyInLowerCase &&
                        attrs &&
                        hasOwn(attrs, keyInLowerCase)
                      ) {
                        tip(
                          'Prop "' +
                            keyInLowerCase +
                            '" is passed to component ' +
                            formatComponentName(tag || Ctor) +
                            ', but the declared prop name is' +
                            ' "' +
                            key +
                            '". ' +
                            'Note that HTML attributes are case-insensitive and camelCased ' +
                            'props need to use their kebab-case equivalents when using in-DOM ' +
                            'templates. You should probably use "' +
                            altKey +
                            '" instead of "' +
                            key +
                            '".'
                        )
                      }
                    }
                    checkProp(res, props, key, altKey, true) ||
                      checkProp(res, attrs, key, altKey, false)
                  }
                }
                return res
              }
              function checkProp(res, hash, key, altKey, preserve) {
                if (isDef(hash)) {
                  if (hasOwn(hash, key)) {
                    res[key] = hash[key]
                    if (!preserve) {
                      delete hash[key]
                    }
                    return true
                  } else if (hasOwn(hash, altKey)) {
                    res[key] = hash[altKey]
                    if (!preserve) {
                      delete hash[altKey]
                    }
                    return true
                  }
                }
                return false
              } /*  */ // The template compiler attempts to minimize the need for normalization by
              // statically analyzing the template at compile time.
              //
              // For plain HTML markup, normalization can be completely skipped because the
              // generated render function is guaranteed to return Array<VNode>. There are
              // two cases where extra normalization is needed:
              // 1. When the children contains components - because a functional component
              // may return an Array instead of a single root. In this case, just a simple
              // normalization is needed - if any child is an Array, we flatten the whole
              // thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
              // because functional components already normalize their own children.
              function simpleNormalizeChildren(children) {
                for (var i = 0; i < children.length; i++) {
                  if (Array.isArray(children[i])) {
                    return Array.prototype.concat.apply([], children)
                  }
                }
                return children
              } // 2. When the children contains constructs that always generated nested Arrays,
              // e.g. <template>, <slot>, v-for, or when the children is provided by user
              // with hand-written render functions / JSX. In such cases a full normalization
              // is needed to cater to all possible types of children values.
              function normalizeChildren(children) {
                return isPrimitive(children)
                  ? [createTextVNode(children)]
                  : Array.isArray(children)
                  ? normalizeArrayChildren(children)
                  : undefined
              }
              function isTextNode(node) {
                return (
                  isDef(node) && isDef(node.text) && isFalse(node.isComment)
                )
              }
              function normalizeArrayChildren(children, nestedIndex) {
                var res = []
                var i, c, lastIndex, last
                for (i = 0; i < children.length; i++) {
                  c = children[i]
                  if (isUndef(c) || typeof c === 'boolean') {
                    continue
                  }
                  lastIndex = res.length - 1
                  last = res[lastIndex] //  nested
                  if (Array.isArray(c)) {
                    if (c.length > 0) {
                      c = normalizeArrayChildren(
                        c,
                        (nestedIndex || '') + '_' + i
                      ) // merge adjacent text nodes
                      if (isTextNode(c[0]) && isTextNode(last)) {
                        res[lastIndex] = createTextVNode(last.text + c[0].text)
                        c.shift()
                      }
                      res.push.apply(res, c)
                    }
                  } else if (isPrimitive(c)) {
                    if (isTextNode(last)) {
                      // merge adjacent text nodes
                      // this is necessary for SSR hydration because text nodes are
                      // essentially merged when rendered to HTML strings
                      res[lastIndex] = createTextVNode(last.text + c)
                    } else if (c !== '') {
                      // convert primitive to vnode
                      res.push(createTextVNode(c))
                    }
                  } else {
                    if (isTextNode(c) && isTextNode(last)) {
                      // merge adjacent text nodes
                      res[lastIndex] = createTextVNode(last.text + c.text)
                    } else {
                      // default key for nested array children (likely generated by v-for)
                      if (
                        isTrue(children._isVList) &&
                        isDef(c.tag) &&
                        isUndef(c.key) &&
                        isDef(nestedIndex)
                      ) {
                        c.key = '__vlist' + nestedIndex + '_' + i + '__'
                      }
                      res.push(c)
                    }
                  }
                }
                return res
              }
              /*  */ function initProvide(vm) {
                var provide = vm.$options.provide
                if (provide) {
                  vm._provided =
                    typeof provide === 'function' ? provide.call(vm) : provide
                }
              }
              function initInjections(vm) {
                var result = resolveInject(vm.$options.inject, vm)
                if (result) {
                  toggleObserving(false)
                  Object.keys(result).forEach(function(key) {
                    /* istanbul ignore else */ {
                      defineReactive$$1(vm, key, result[key], function() {
                        warn(
                          'Avoid mutating an injected value directly since the changes will be ' +
                            'overwritten whenever the provided component re-renders. ' +
                            'injection being mutated: "' +
                            key +
                            '"',
                          vm
                        )
                      })
                    }
                  })
                  toggleObserving(true)
                }
              }
              function resolveInject(inject, vm) {
                if (inject) {
                  // inject is :any because flow is not smart enough to figure out cached
                  var result = Object.create(null)
                  var keys = hasSymbol
                    ? Reflect.ownKeys(inject)
                    : Object.keys(inject)
                  for (var i = 0; i < keys.length; i++) {
                    var key = keys[i] // #6574 in case the inject object is observed...
                    if (key === '__ob__') {
                      continue
                    }
                    var provideKey = inject[key].from
                    var source = vm
                    while (source) {
                      if (
                        source._provided &&
                        hasOwn(source._provided, provideKey)
                      ) {
                        result[key] = source._provided[provideKey]
                        break
                      }
                      source = source.$parent
                    }
                    if (!source) {
                      if ('default' in inject[key]) {
                        var provideDefault = inject[key]['default']
                        result[key] =
                          typeof provideDefault === 'function'
                            ? provideDefault.call(vm)
                            : provideDefault
                      } else {
                        warn('Injection "' + key + '" not found', vm)
                      }
                    }
                  }
                  return result
                }
              }
              /*  */ /**
               * Runtime helper for resolving raw children VNodes into a slot object.
               */ function resolveSlots(children, context) {
                if (!children || !children.length) {
                  return {}
                }
                var slots = {}
                for (var i = 0, l = children.length; i < l; i++) {
                  var child = children[i]
                  var data = child.data // remove slot attribute if the node is resolved as a Vue slot node
                  if (data && data.attrs && data.attrs.slot) {
                    delete data.attrs.slot
                  } // named slots should only be respected if the vnode was rendered in the
                  // same context.
                  if (
                    (child.context === context ||
                      child.fnContext === context) &&
                    data &&
                    data.slot != null
                  ) {
                    var name = data.slot
                    var slot = slots[name] || (slots[name] = [])
                    if (child.tag === 'template') {
                      slot.push.apply(slot, child.children || [])
                    } else {
                      slot.push(child)
                    }
                  } else {
                    ;(slots['default'] || (slots['default'] = [])).push(child)
                  }
                } // ignore slots that contains only whitespace
                for (var name$1 in slots) {
                  if (slots[name$1].every(isWhitespace)) {
                    delete slots[name$1]
                  }
                }
                return slots
              }
              function isWhitespace(node) {
                return (
                  (node.isComment && !node.asyncFactory) || node.text === ' '
                )
              }
              /*  */ function normalizeScopedSlots(
                slots,
                normalSlots,
                prevSlots
              ) {
                var res
                var hasNormalSlots = Object.keys(normalSlots).length > 0
                var isStable = slots ? !!slots.$stable : !hasNormalSlots
                var key = slots && slots.$key
                if (!slots) {
                  res = {}
                } else if (slots._normalized) {
                  // fast path 1: child component re-render only, parent did not change
                  return slots._normalized
                } else if (
                  isStable &&
                  prevSlots &&
                  prevSlots !== emptyObject &&
                  key === prevSlots.$key &&
                  !hasNormalSlots &&
                  !prevSlots.$hasNormal
                ) {
                  // fast path 2: stable scoped slots w/ no normal slots to proxy,
                  // only need to normalize once
                  return prevSlots
                } else {
                  res = {}
                  for (var key$1 in slots) {
                    if (slots[key$1] && key$1[0] !== '$') {
                      res[key$1] = normalizeScopedSlot(
                        normalSlots,
                        key$1,
                        slots[key$1]
                      )
                    }
                  }
                } // expose normal slots on scopedSlots
                for (var key$2 in normalSlots) {
                  if (!(key$2 in res)) {
                    res[key$2] = proxyNormalSlot(normalSlots, key$2)
                  }
                } // avoriaz seems to mock a non-extensible $scopedSlots object
                // and when that is passed down this would cause an error
                if (slots && Object.isExtensible(slots)) {
                  slots._normalized = res
                }
                def(res, '$stable', isStable)
                def(res, '$key', key)
                def(res, '$hasNormal', hasNormalSlots)
                return res
              }
              function normalizeScopedSlot(normalSlots, key, fn) {
                var normalized = function normalized() {
                  var res = arguments.length
                    ? fn.apply(null, arguments)
                    : fn({})
                  res =
                    res &&
                    (0, _typeof3['default'])(res) === 'object' &&
                    !Array.isArray(res)
                      ? [res] // single vnode
                      : normalizeChildren(res)
                  return res &&
                    (res.length === 0 || (res.length === 1 && res[0].isComment)) // #9658
                    ? undefined
                    : res
                } // this is a slot using the new v-slot syntax without scope. although it is
                // compiled as a scoped slot, render fn users would expect it to be present
                // on this.$slots because the usage is semantically a normal slot.
                if (fn.proxy) {
                  Object.defineProperty(normalSlots, key, {
                    get: normalized,
                    enumerable: true,
                    configurable: true
                  })
                }
                return normalized
              }
              function proxyNormalSlot(slots, key) {
                return function() {
                  return slots[key]
                }
              }
              /*  */ /**
               * Runtime helper for rendering v-for lists.
               */ function renderList(val, render) {
                var ret, i, l, keys, key
                if (Array.isArray(val) || typeof val === 'string') {
                  ret = new Array(val.length)
                  for (i = 0, l = val.length; i < l; i++) {
                    ret[i] = render(val[i], i)
                  }
                } else if (typeof val === 'number') {
                  ret = new Array(val)
                  for (i = 0; i < val; i++) {
                    ret[i] = render(i + 1, i)
                  }
                } else if (isObject(val)) {
                  if (hasSymbol && val[Symbol.iterator]) {
                    ret = []
                    var iterator = val[Symbol.iterator]()
                    var result = iterator.next()
                    while (!result.done) {
                      ret.push(render(result.value, ret.length))
                      result = iterator.next()
                    }
                  } else {
                    keys = Object.keys(val)
                    ret = new Array(keys.length)
                    for (i = 0, l = keys.length; i < l; i++) {
                      key = keys[i]
                      ret[i] = render(val[key], key, i)
                    }
                  }
                }
                if (!isDef(ret)) {
                  ret = []
                }
                ret._isVList = true
                return ret
              }
              /*  */ /**
               * Runtime helper for rendering <slot>
               */ function renderSlot(name, fallback, props, bindObject) {
                var scopedSlotFn = this.$scopedSlots[name]
                var nodes
                if (scopedSlotFn) {
                  // scoped slot
                  props = props || {}
                  if (bindObject) {
                    if (!isObject(bindObject)) {
                      warn(
                        'slot v-bind without argument expects an Object',
                        this
                      )
                    }
                    props = extend(extend({}, bindObject), props)
                  }
                  nodes = scopedSlotFn(props) || fallback
                } else {
                  nodes = this.$slots[name] || fallback
                }
                var target = props && props.slot
                if (target) {
                  return this.$createElement(
                    'template',
                    { slot: target },
                    nodes
                  )
                } else {
                  return nodes
                }
              }
              /*  */ /**
               * Runtime helper for resolving filters
               */ function resolveFilter(id) {
                return (
                  resolveAsset(this.$options, 'filters', id, true) || identity
                )
              }
              /*  */ function isKeyNotMatch(expect, actual) {
                if (Array.isArray(expect)) {
                  return expect.indexOf(actual) === -1
                } else {
                  return expect !== actual
                }
              }
              /**
               * Runtime helper for checking keyCodes from config.
               * exposed as Vue.prototype._k
               * passing in eventKeyName as last argument separately for backwards compat
               */ function checkKeyCodes(
                eventKeyCode,
                key,
                builtInKeyCode,
                eventKeyName,
                builtInKeyName
              ) {
                var mappedKeyCode = config.keyCodes[key] || builtInKeyCode
                if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {
                  return isKeyNotMatch(builtInKeyName, eventKeyName)
                } else if (mappedKeyCode) {
                  return isKeyNotMatch(mappedKeyCode, eventKeyCode)
                } else if (eventKeyName) {
                  return hyphenate(eventKeyName) !== key
                }
              }
              /*  */ /**
               * Runtime helper for merging v-bind="object" into a VNode's data.
               */ function bindObjectProps(data, tag, value, asProp, isSync) {
                if (value) {
                  if (!isObject(value)) {
                    warn(
                      'v-bind without argument expects an Object or Array value',
                      this
                    )
                  } else {
                    if (Array.isArray(value)) {
                      value = toObject(value)
                    }
                    var hash
                    var loop = function loop(key) {
                      if (
                        key === 'class' ||
                        key === 'style' ||
                        isReservedAttribute(key)
                      ) {
                        hash = data
                      } else {
                        var type = data.attrs && data.attrs.type
                        hash =
                          asProp || config.mustUseProp(tag, type, key)
                            ? data.domProps || (data.domProps = {})
                            : data.attrs || (data.attrs = {})
                      }
                      var camelizedKey = camelize(key)
                      var hyphenatedKey = hyphenate(key)
                      if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {
                        hash[key] = value[key]
                        if (isSync) {
                          var on = data.on || (data.on = {})
                          on['update:' + key] = function($event) {
                            value[key] = $event
                          }
                        }
                      }
                    }
                    for (var key in value) {
                      loop(key)
                    }
                  }
                }
                return data
              }
              /*  */ /**
               * Runtime helper for rendering static trees.
               */ function renderStatic(index, isInFor) {
                var cached = this._staticTrees || (this._staticTrees = [])
                var tree = cached[index] // if has already-rendered static tree and not inside v-for,
                // we can reuse the same tree.
                if (tree && !isInFor) {
                  return tree
                } // otherwise, render a fresh tree.
                tree = cached[index] = this.$options.staticRenderFns[
                  index
                ].call(
                  this._renderProxy,
                  null,
                  this // for render fns generated for functional component templates
                )
                markStatic(tree, '__static__' + index, false)
                return tree
              }
              /**
               * Runtime helper for v-once.
               * Effectively it means marking the node as static with a unique key.
               */ function markOnce(tree, index, key) {
                markStatic(
                  tree,
                  '__once__' + index + (key ? '_' + key : ''),
                  true
                )
                return tree
              }
              function markStatic(tree, key, isOnce) {
                if (Array.isArray(tree)) {
                  for (var i = 0; i < tree.length; i++) {
                    if (tree[i] && typeof tree[i] !== 'string') {
                      markStaticNode(tree[i], key + '_' + i, isOnce)
                    }
                  }
                } else {
                  markStaticNode(tree, key, isOnce)
                }
              }
              function markStaticNode(node, key, isOnce) {
                node.isStatic = true
                node.key = key
                node.isOnce = isOnce
              }
              /*  */ function bindObjectListeners(data, value) {
                if (value) {
                  if (!isPlainObject(value)) {
                    warn('v-on without argument expects an Object value', this)
                  } else {
                    var on = (data.on = data.on ? extend({}, data.on) : {})
                    for (var key in value) {
                      var existing = on[key]
                      var ours = value[key]
                      on[key] = existing ? [].concat(existing, ours) : ours
                    }
                  }
                }
                return data
              }
              /*  */ function resolveScopedSlots(
                fns, // see flow/vnode
                res, // the following are added in 2.6
                hasDynamicKeys,
                contentHashKey
              ) {
                res = res || { $stable: !hasDynamicKeys }
                for (var i = 0; i < fns.length; i++) {
                  var slot = fns[i]
                  if (Array.isArray(slot)) {
                    resolveScopedSlots(slot, res, hasDynamicKeys)
                  } else if (slot) {
                    // marker for reverse proxying v-slot without scope on this.$slots
                    if (slot.proxy) {
                      slot.fn.proxy = true
                    }
                    res[slot.key] = slot.fn
                  }
                }
                if (contentHashKey) {
                  res.$key = contentHashKey
                }
                return res
              }
              /*  */ function bindDynamicKeys(baseObj, values) {
                for (var i = 0; i < values.length; i += 2) {
                  var key = values[i]
                  if (typeof key === 'string' && key) {
                    baseObj[values[i]] = values[i + 1]
                  } else if (key !== '' && key !== null) {
                    // null is a special value for explicitly removing a binding
                    warn(
                      'Invalid value for dynamic directive argument (expected string or null): ' +
                        key,
                      this
                    )
                  }
                }
                return baseObj
              } // helper to dynamically append modifier runtime markers to event names.
              // ensure only append when value is already string, otherwise it will be cast
              // to string and cause the type check to miss.
              function prependModifier(value, symbol) {
                return typeof value === 'string' ? symbol + value : value
              }
              /*  */ function installRenderHelpers(target) {
                target._o = markOnce
                target._n = toNumber
                target._s = toString
                target._l = renderList
                target._t = renderSlot
                target._q = looseEqual
                target._i = looseIndexOf
                target._m = renderStatic
                target._f = resolveFilter
                target._k = checkKeyCodes
                target._b = bindObjectProps
                target._v = createTextVNode
                target._e = createEmptyVNode
                target._u = resolveScopedSlots
                target._g = bindObjectListeners
                target._d = bindDynamicKeys
                target._p = prependModifier
              }
              /*  */ function FunctionalRenderContext(
                data,
                props,
                children,
                parent,
                Ctor
              ) {
                var this$1 = this
                var options = Ctor.options // ensure the createElement function in functional components
                // gets a unique context - this is necessary for correct named slot check
                var contextVm
                if (hasOwn(parent, '_uid')) {
                  contextVm = Object.create(parent) // $flow-disable-line
                  contextVm._original = parent
                } else {
                  // the context vm passed in is a functional context as well.
                  // in this case we want to make sure we are able to get a hold to the
                  // real context instance.
                  contextVm = parent // $flow-disable-line
                  parent = parent._original
                }
                var isCompiled = isTrue(options._compiled)
                var needNormalization = !isCompiled
                this.data = data
                this.props = props
                this.children = children
                this.parent = parent
                this.listeners = data.on || emptyObject
                this.injections = resolveInject(options.inject, parent)
                this.slots = function() {
                  if (!this$1.$slots) {
                    normalizeScopedSlots(
                      data.scopedSlots,
                      (this$1.$slots = resolveSlots(children, parent))
                    )
                  }
                  return this$1.$slots
                }
                Object.defineProperty(this, 'scopedSlots', {
                  enumerable: true,
                  get: function get() {
                    return normalizeScopedSlots(data.scopedSlots, this.slots())
                  }
                }) // support for compiled functional template
                if (isCompiled) {
                  // exposing $options for renderStatic()
                  this.$options = options // pre-resolve slots for renderSlot()
                  this.$slots = this.slots()
                  this.$scopedSlots = normalizeScopedSlots(
                    data.scopedSlots,
                    this.$slots
                  )
                }
                if (options._scopeId) {
                  this._c = function(a, b, c, d) {
                    var vnode = createElement(
                      contextVm,
                      a,
                      b,
                      c,
                      d,
                      needNormalization
                    )
                    if (vnode && !Array.isArray(vnode)) {
                      vnode.fnScopeId = options._scopeId
                      vnode.fnContext = parent
                    }
                    return vnode
                  }
                } else {
                  this._c = function(a, b, c, d) {
                    return createElement(
                      contextVm,
                      a,
                      b,
                      c,
                      d,
                      needNormalization
                    )
                  }
                }
              }
              installRenderHelpers(FunctionalRenderContext.prototype)
              function createFunctionalComponent(
                Ctor,
                propsData,
                data,
                contextVm,
                children
              ) {
                var options = Ctor.options
                var props = {}
                var propOptions = options.props
                if (isDef(propOptions)) {
                  for (var key in propOptions) {
                    props[key] = validateProp(
                      key,
                      propOptions,
                      propsData || emptyObject
                    )
                  }
                } else {
                  if (isDef(data.attrs)) {
                    mergeProps(props, data.attrs)
                  }
                  if (isDef(data.props)) {
                    mergeProps(props, data.props)
                  }
                }
                var renderContext = new FunctionalRenderContext(
                  data,
                  props,
                  children,
                  contextVm,
                  Ctor
                )
                var vnode = options.render.call(
                  null,
                  renderContext._c,
                  renderContext
                )
                if (vnode instanceof VNode) {
                  return cloneAndMarkFunctionalResult(
                    vnode,
                    data,
                    renderContext.parent,
                    options,
                    renderContext
                  )
                } else if (Array.isArray(vnode)) {
                  var vnodes = normalizeChildren(vnode) || []
                  var res = new Array(vnodes.length)
                  for (var i = 0; i < vnodes.length; i++) {
                    res[i] = cloneAndMarkFunctionalResult(
                      vnodes[i],
                      data,
                      renderContext.parent,
                      options,
                      renderContext
                    )
                  }
                  return res
                }
              }
              function cloneAndMarkFunctionalResult(
                vnode,
                data,
                contextVm,
                options,
                renderContext
              ) {
                // #7817 clone node before setting fnContext, otherwise if the node is reused
                // (e.g. it was from a cached normal slot) the fnContext causes named slots
                // that should not be matched to match.
                var clone = cloneVNode(vnode)
                clone.fnContext = contextVm
                clone.fnOptions = options
                {
                  ;(clone.devtoolsMeta =
                    clone.devtoolsMeta || {}).renderContext = renderContext
                }
                if (data.slot) {
                  ;(clone.data || (clone.data = {})).slot = data.slot
                }
                return clone
              }
              function mergeProps(to, from) {
                for (var key in from) {
                  to[camelize(key)] = from[key]
                }
              } /*  */ /*  */ /*  */ /*  */ // inline hooks to be invoked on component VNodes during patch
              var componentVNodeHooks = {
                init: function init(vnode, hydrating) {
                  if (
                    vnode.componentInstance &&
                    !vnode.componentInstance._isDestroyed &&
                    vnode.data.keepAlive
                  ) {
                    // kept-alive components, treat as a patch
                    var mountedNode = vnode // work around flow
                    componentVNodeHooks.prepatch(mountedNode, mountedNode)
                  } else {
                    var child = (vnode.componentInstance = createComponentInstanceForVnode(
                      vnode,
                      activeInstance
                    ))
                    child.$mount(hydrating ? vnode.elm : undefined, hydrating)
                  }
                },
                prepatch: function prepatch(oldVnode, vnode) {
                  var options = vnode.componentOptions
                  var child = (vnode.componentInstance =
                    oldVnode.componentInstance)
                  updateChildComponent(
                    child,
                    options.propsData, // updated props
                    options.listeners, // updated listeners
                    vnode, // new parent vnode
                    options.children // new children
                  )
                },
                insert: function insert(vnode) {
                  var context = vnode.context
                  var componentInstance = vnode.componentInstance
                  if (!componentInstance._isMounted) {
                    componentInstance._isMounted = true
                    callHook(componentInstance, 'mounted')
                  }
                  if (vnode.data.keepAlive) {
                    if (context._isMounted) {
                      // vue-router#1212
                      // During updates, a kept-alive component's child components may
                      // change, so directly walking the tree here may call activated hooks
                      // on incorrect children. Instead we push them into a queue which will
                      // be processed after the whole patch process ended.
                      queueActivatedComponent(componentInstance)
                    } else {
                      activateChildComponent(
                        componentInstance,
                        true /* direct */
                      )
                    }
                  }
                },
                destroy: function destroy(vnode) {
                  var componentInstance = vnode.componentInstance
                  if (!componentInstance._isDestroyed) {
                    if (!vnode.data.keepAlive) {
                      componentInstance.$destroy()
                    } else {
                      deactivateChildComponent(
                        componentInstance,
                        true /* direct */
                      )
                    }
                  }
                }
              }
              var hooksToMerge = Object.keys(componentVNodeHooks)
              function createComponent(Ctor, data, context, children, tag) {
                if (isUndef(Ctor)) {
                  return
                }
                var baseCtor = context.$options._base // plain options object: turn it into a constructor
                if (isObject(Ctor)) {
                  Ctor = baseCtor.extend(Ctor)
                } // if at this stage it's not a constructor or an async component factory,
                // reject.
                if (typeof Ctor !== 'function') {
                  {
                    warn(
                      'Invalid Component definition: ' + String(Ctor),
                      context
                    )
                  }
                  return
                } // async component
                var asyncFactory
                if (isUndef(Ctor.cid)) {
                  asyncFactory = Ctor
                  Ctor = resolveAsyncComponent(asyncFactory, baseCtor)
                  if (Ctor === undefined) {
                    // return a placeholder node for async component, which is rendered
                    // as a comment node but preserves all the raw information for the node.
                    // the information will be used for async server-rendering and hydration.
                    return createAsyncPlaceholder(
                      asyncFactory,
                      data,
                      context,
                      children,
                      tag
                    )
                  }
                }
                data = data || {} // resolve constructor options in case global mixins are applied after
                // component constructor creation
                resolveConstructorOptions(Ctor) // transform component v-model data into props & events
                if (isDef(data.model)) {
                  transformModel(Ctor.options, data)
                } // extract props
                var propsData = extractPropsFromVNodeData(data, Ctor, tag) // functional component
                if (isTrue(Ctor.options.functional)) {
                  return createFunctionalComponent(
                    Ctor,
                    propsData,
                    data,
                    context,
                    children
                  )
                } // extract listeners, since these needs to be treated as
                // child component listeners instead of DOM listeners
                var listeners = data.on // replace with listeners with .native modifier
                // so it gets processed during parent component patch.
                data.on = data.nativeOn
                if (isTrue(Ctor.options['abstract'])) {
                  // abstract components do not keep anything
                  // other than props & listeners & slot
                  // work around flow
                  var slot = data.slot
                  data = {}
                  if (slot) {
                    data.slot = slot
                  }
                } // install component management hooks onto the placeholder node
                installComponentHooks(data) // return a placeholder vnode
                var name = Ctor.options.name || tag
                var vnode = new VNode(
                  'vue-component-' + Ctor.cid + (name ? '-' + name : ''),
                  data,
                  undefined,
                  undefined,
                  undefined,
                  context,
                  {
                    Ctor: Ctor,
                    propsData: propsData,
                    listeners: listeners,
                    tag: tag,
                    children: children
                  },
                  asyncFactory
                )
                return vnode
              }
              function createComponentInstanceForVnode(
                vnode, // we know it's MountedComponentVNode but flow doesn't
                parent // activeInstance in lifecycle state
              ) {
                var options = {
                  _isComponent: true,
                  _parentVnode: vnode,
                  parent: parent
                } // check inline-template render functions
                var inlineTemplate = vnode.data.inlineTemplate
                if (isDef(inlineTemplate)) {
                  options.render = inlineTemplate.render
                  options.staticRenderFns = inlineTemplate.staticRenderFns
                }
                return new vnode.componentOptions.Ctor(options)
              }
              function installComponentHooks(data) {
                var hooks = data.hook || (data.hook = {})
                for (var i = 0; i < hooksToMerge.length; i++) {
                  var key = hooksToMerge[i]
                  var existing = hooks[key]
                  var toMerge = componentVNodeHooks[key]
                  if (existing !== toMerge && !(existing && existing._merged)) {
                    hooks[key] = existing
                      ? mergeHook$1(toMerge, existing)
                      : toMerge
                  }
                }
              }
              function mergeHook$1(f1, f2) {
                var merged = function merged(a, b) {
                  // flow complains about extra args which is why we use any
                  f1(a, b)
                  f2(a, b)
                }
                merged._merged = true
                return merged
              } // transform component v-model info (value and callback) into
              // prop and event handler respectively.
              function transformModel(options, data) {
                var prop = (options.model && options.model.prop) || 'value'
                var event = (options.model && options.model.event) || 'input'
                ;(data.attrs || (data.attrs = {}))[prop] = data.model.value
                var on = data.on || (data.on = {})
                var existing = on[event]
                var callback = data.model.callback
                if (isDef(existing)) {
                  if (
                    Array.isArray(existing)
                      ? existing.indexOf(callback) === -1
                      : existing !== callback
                  ) {
                    on[event] = [callback].concat(existing)
                  }
                } else {
                  on[event] = callback
                }
              }
              /*  */ var SIMPLE_NORMALIZE = 1
              var ALWAYS_NORMALIZE = 2 // wrapper function for providing a more flexible interface
              // without getting yelled at by flow
              function createElement(
                context,
                tag,
                data,
                children,
                normalizationType,
                alwaysNormalize
              ) {
                if (Array.isArray(data) || isPrimitive(data)) {
                  normalizationType = children
                  children = data
                  data = undefined
                }
                if (isTrue(alwaysNormalize)) {
                  normalizationType = ALWAYS_NORMALIZE
                }
                return _createElement(
                  context,
                  tag,
                  data,
                  children,
                  normalizationType
                )
              }
              function _createElement(
                context,
                tag,
                data,
                children,
                normalizationType
              ) {
                if (isDef(data) && isDef(data.__ob__)) {
                  warn(
                    'Avoid using observed data object as vnode data: ' +
                      JSON.stringify(data) +
                      '\n' +
                      'Always create fresh vnode data objects in each render!',
                    context
                  )
                  return createEmptyVNode()
                } // object syntax in v-bind
                if (isDef(data) && isDef(data.is)) {
                  tag = data.is
                }
                if (!tag) {
                  // in case of component :is set to falsy value
                  return createEmptyVNode()
                } // warn against non-primitive key
                if (isDef(data) && isDef(data.key) && !isPrimitive(data.key)) {
                  {
                    warn(
                      'Avoid using non-primitive value as key, ' +
                        'use string/number value instead.',
                      context
                    )
                  }
                } // support single function children as default scoped slot
                if (
                  Array.isArray(children) &&
                  typeof children[0] === 'function'
                ) {
                  data = data || {}
                  data.scopedSlots = { default: children[0] }
                  children.length = 0
                }
                if (normalizationType === ALWAYS_NORMALIZE) {
                  children = normalizeChildren(children)
                } else if (normalizationType === SIMPLE_NORMALIZE) {
                  children = simpleNormalizeChildren(children)
                }
                var vnode, ns
                if (typeof tag === 'string') {
                  var Ctor
                  ns =
                    (context.$vnode && context.$vnode.ns) ||
                    config.getTagNamespace(tag)
                  if (config.isReservedTag(tag)) {
                    // platform built-in elements
                    if (isDef(data) && isDef(data.nativeOn)) {
                      warn(
                        'The .native modifier for v-on is only valid on components but it was used on <' +
                          tag +
                          '>.',
                        context
                      )
                    }
                    vnode = new VNode(
                      config.parsePlatformTagName(tag),
                      data,
                      children,
                      undefined,
                      undefined,
                      context
                    )
                  } else if (
                    (!data || !data.pre) &&
                    isDef(
                      (Ctor = resolveAsset(context.$options, 'components', tag))
                    )
                  ) {
                    // component
                    vnode = createComponent(Ctor, data, context, children, tag)
                  } else {
                    // unknown or unlisted namespaced elements
                    // check at runtime because it may get assigned a namespace when its
                    // parent normalizes children
                    vnode = new VNode(
                      tag,
                      data,
                      children,
                      undefined,
                      undefined,
                      context
                    )
                  }
                } else {
                  // direct component options / constructor
                  vnode = createComponent(tag, data, context, children)
                }
                if (Array.isArray(vnode)) {
                  return vnode
                } else if (isDef(vnode)) {
                  if (isDef(ns)) {
                    applyNS(vnode, ns)
                  }
                  if (isDef(data)) {
                    registerDeepBindings(data)
                  }
                  return vnode
                } else {
                  return createEmptyVNode()
                }
              }
              function applyNS(vnode, ns, force) {
                vnode.ns = ns
                if (vnode.tag === 'foreignObject') {
                  // use default namespace inside foreignObject
                  ns = undefined
                  force = true
                }
                if (isDef(vnode.children)) {
                  for (var i = 0, l = vnode.children.length; i < l; i++) {
                    var child = vnode.children[i]
                    if (
                      isDef(child.tag) &&
                      (isUndef(child.ns) ||
                        (isTrue(force) && child.tag !== 'svg'))
                    ) {
                      applyNS(child, ns, force)
                    }
                  }
                }
              } // ref #5318
              // necessary to ensure parent re-render when deep bindings like :style and
              // :class are used on slot nodes
              function registerDeepBindings(data) {
                if (isObject(data.style)) {
                  traverse(data.style)
                }
                if (isObject(data['class'])) {
                  traverse(data['class'])
                }
              }
              /*  */ function initRender(vm) {
                vm._vnode = null // the root of the child tree
                vm._staticTrees = null // v-once cached trees
                var options = vm.$options
                var parentVnode = (vm.$vnode = options._parentVnode) // the placeholder node in parent tree
                var renderContext = parentVnode && parentVnode.context
                vm.$slots = resolveSlots(options._renderChildren, renderContext)
                vm.$scopedSlots = emptyObject // bind the createElement fn to this instance
                // so that we get proper render context inside it.
                // args order: tag, data, children, normalizationType, alwaysNormalize
                // internal version is used by render functions compiled from templates
                vm._c = function(a, b, c, d) {
                  return createElement(vm, a, b, c, d, false)
                } // normalization is always applied for the public version, used in
                // user-written render functions.
                vm.$createElement = function(a, b, c, d) {
                  return createElement(vm, a, b, c, d, true)
                } // $attrs & $listeners are exposed for easier HOC creation.
                // they need to be reactive so that HOCs using them are always updated
                var parentData = parentVnode && parentVnode.data
                /* istanbul ignore else */ {
                  defineReactive$$1(
                    vm,
                    '$attrs',
                    (parentData && parentData.attrs) || emptyObject,
                    function() {
                      !isUpdatingChildComponent &&
                        warn('$attrs is readonly.', vm)
                    },
                    true
                  )
                  defineReactive$$1(
                    vm,
                    '$listeners',
                    options._parentListeners || emptyObject,
                    function() {
                      !isUpdatingChildComponent &&
                        warn('$listeners is readonly.', vm)
                    },
                    true
                  )
                }
              }
              var currentRenderingInstance = null
              function renderMixin(Vue) {
                // install runtime convenience helpers
                installRenderHelpers(Vue.prototype)
                Vue.prototype.$nextTick = function(fn) {
                  return nextTick(fn, this)
                }
                Vue.prototype._render = function() {
                  var vm = this
                  var ref = vm.$options
                  var render = ref.render
                  var _parentVnode = ref._parentVnode
                  if (_parentVnode) {
                    vm.$scopedSlots = normalizeScopedSlots(
                      _parentVnode.data.scopedSlots,
                      vm.$slots,
                      vm.$scopedSlots
                    )
                  } // set parent vnode. this allows render functions to have access
                  // to the data on the placeholder node.
                  vm.$vnode = _parentVnode // render self
                  var vnode
                  try {
                    // There's no need to maintain a stack because all render fns are called
                    // separately from one another. Nested component's render fns are called
                    // when parent component is patched.
                    currentRenderingInstance = vm
                    vnode = render.call(vm._renderProxy, vm.$createElement)
                  } catch (e) {
                    handleError(e, vm, 'render') // return error render result,
                    // or previous vnode to prevent render error causing blank component
                    /* istanbul ignore else */ if (vm.$options.renderError) {
                      try {
                        vnode = vm.$options.renderError.call(
                          vm._renderProxy,
                          vm.$createElement,
                          e
                        )
                      } catch (e) {
                        handleError(e, vm, 'renderError')
                        vnode = vm._vnode
                      }
                    } else {
                      vnode = vm._vnode
                    }
                  } finally {
                    currentRenderingInstance = null
                  } // if the returned array contains only a single node, allow it
                  if (Array.isArray(vnode) && vnode.length === 1) {
                    vnode = vnode[0]
                  } // return empty vnode in case the render function errored out
                  if (!(vnode instanceof VNode)) {
                    if (Array.isArray(vnode)) {
                      warn(
                        'Multiple root nodes returned from render function. Render function ' +
                          'should return a single root node.',
                        vm
                      )
                    }
                    vnode = createEmptyVNode()
                  } // set parent
                  vnode.parent = _parentVnode
                  return vnode
                }
              }
              /*  */ function ensureCtor(comp, base) {
                if (
                  comp.__esModule ||
                  (hasSymbol && comp[Symbol.toStringTag] === 'Module')
                ) {
                  comp = comp['default']
                }
                return isObject(comp) ? base.extend(comp) : comp
              }
              function createAsyncPlaceholder(
                factory,
                data,
                context,
                children,
                tag
              ) {
                var node = createEmptyVNode()
                node.asyncFactory = factory
                node.asyncMeta = {
                  data: data,
                  context: context,
                  children: children,
                  tag: tag
                }
                return node
              }
              function resolveAsyncComponent(factory, baseCtor) {
                if (isTrue(factory.error) && isDef(factory.errorComp)) {
                  return factory.errorComp
                }
                if (isDef(factory.resolved)) {
                  return factory.resolved
                }
                var owner = currentRenderingInstance
                if (
                  owner &&
                  isDef(factory.owners) &&
                  factory.owners.indexOf(owner) === -1
                ) {
                  // already pending
                  factory.owners.push(owner)
                }
                if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
                  return factory.loadingComp
                }
                if (owner && !isDef(factory.owners)) {
                  var owners = (factory.owners = [owner])
                  var sync = true
                  var timerLoading = null
                  var timerTimeout = null
                  owner.$on('hook:destroyed', function() {
                    return remove(owners, owner)
                  })
                  var forceRender = function forceRender(renderCompleted) {
                    for (var i = 0, l = owners.length; i < l; i++) {
                      owners[i].$forceUpdate()
                    }
                    if (renderCompleted) {
                      owners.length = 0
                      if (timerLoading !== null) {
                        clearTimeout(timerLoading)
                        timerLoading = null
                      }
                      if (timerTimeout !== null) {
                        clearTimeout(timerTimeout)
                        timerTimeout = null
                      }
                    }
                  }
                  var resolve = once(function(res) {
                    // cache resolved
                    factory.resolved = ensureCtor(res, baseCtor) // invoke callbacks only if this is not a synchronous resolve
                    // (async resolves are shimmed as synchronous during SSR)
                    if (!sync) {
                      forceRender(true)
                    } else {
                      owners.length = 0
                    }
                  })
                  var reject = once(function(reason) {
                    warn(
                      'Failed to resolve async component: ' +
                        String(factory) +
                        (reason ? '\nReason: ' + reason : '')
                    )
                    if (isDef(factory.errorComp)) {
                      factory.error = true
                      forceRender(true)
                    }
                  })
                  var res = factory(resolve, reject)
                  if (isObject(res)) {
                    if (isPromise(res)) {
                      // () => Promise
                      if (isUndef(factory.resolved)) {
                        res.then(resolve, reject)
                      }
                    } else if (isPromise(res.component)) {
                      res.component.then(resolve, reject)
                      if (isDef(res.error)) {
                        factory.errorComp = ensureCtor(res.error, baseCtor)
                      }
                      if (isDef(res.loading)) {
                        factory.loadingComp = ensureCtor(res.loading, baseCtor)
                        if (res.delay === 0) {
                          factory.loading = true
                        } else {
                          timerLoading = setTimeout(function() {
                            timerLoading = null
                            if (
                              isUndef(factory.resolved) &&
                              isUndef(factory.error)
                            ) {
                              factory.loading = true
                              forceRender(false)
                            }
                          }, res.delay || 200)
                        }
                      }
                      if (isDef(res.timeout)) {
                        timerTimeout = setTimeout(function() {
                          timerTimeout = null
                          if (isUndef(factory.resolved)) {
                            reject('timeout (' + res.timeout + 'ms)')
                          }
                        }, res.timeout)
                      }
                    }
                  }
                  sync = false // return in case resolved synchronously
                  return factory.loading
                    ? factory.loadingComp
                    : factory.resolved
                }
              }
              /*  */ function isAsyncPlaceholder(node) {
                return node.isComment && node.asyncFactory
              }
              /*  */ function getFirstComponentChild(children) {
                if (Array.isArray(children)) {
                  for (var i = 0; i < children.length; i++) {
                    var c = children[i]
                    if (
                      isDef(c) &&
                      (isDef(c.componentOptions) || isAsyncPlaceholder(c))
                    ) {
                      return c
                    }
                  }
                }
              }
              /*  */ /*  */ function initEvents(vm) {
                vm._events = Object.create(null)
                vm._hasHookEvent = false // init parent attached events
                var listeners = vm.$options._parentListeners
                if (listeners) {
                  updateComponentListeners(vm, listeners)
                }
              }
              var target
              function add(event, fn) {
                target.$on(event, fn)
              }
              function remove$1(event, fn) {
                target.$off(event, fn)
              }
              function createOnceHandler(event, fn) {
                var _target = target
                return function onceHandler() {
                  var res = fn.apply(null, arguments)
                  if (res !== null) {
                    _target.$off(event, onceHandler)
                  }
                }
              }
              function updateComponentListeners(vm, listeners, oldListeners) {
                target = vm
                updateListeners(
                  listeners,
                  oldListeners || {},
                  add,
                  remove$1,
                  createOnceHandler,
                  vm
                )
                target = undefined
              }
              function eventsMixin(Vue) {
                var hookRE = /^hook:/
                Vue.prototype.$on = function(event, fn) {
                  var vm = this
                  if (Array.isArray(event)) {
                    for (var i = 0, l = event.length; i < l; i++) {
                      vm.$on(event[i], fn)
                    }
                  } else {
                    ;(vm._events[event] || (vm._events[event] = [])).push(fn) // optimize hook:event cost by using a boolean flag marked at registration
                    // instead of a hash lookup
                    if (hookRE.test(event)) {
                      vm._hasHookEvent = true
                    }
                  }
                  return vm
                }
                Vue.prototype.$once = function(event, fn) {
                  var vm = this
                  function on() {
                    vm.$off(event, on)
                    fn.apply(vm, arguments)
                  }
                  on.fn = fn
                  vm.$on(event, on)
                  return vm
                }
                Vue.prototype.$off = function(event, fn) {
                  var vm = this // all
                  if (!arguments.length) {
                    vm._events = Object.create(null)
                    return vm
                  } // array of events
                  if (Array.isArray(event)) {
                    for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {
                      vm.$off(event[i$1], fn)
                    }
                    return vm
                  } // specific event
                  var cbs = vm._events[event]
                  if (!cbs) {
                    return vm
                  }
                  if (!fn) {
                    vm._events[event] = null
                    return vm
                  } // specific handler
                  var cb
                  var i = cbs.length
                  while (i--) {
                    cb = cbs[i]
                    if (cb === fn || cb.fn === fn) {
                      cbs.splice(i, 1)
                      break
                    }
                  }
                  return vm
                }
                Vue.prototype.$emit = function(event) {
                  var vm = this
                  {
                    var lowerCaseEvent = event.toLowerCase()
                    if (
                      lowerCaseEvent !== event &&
                      vm._events[lowerCaseEvent]
                    ) {
                      tip(
                        'Event "' +
                          lowerCaseEvent +
                          '" is emitted in component ' +
                          formatComponentName(vm) +
                          ' but the handler is registered for "' +
                          event +
                          '". ' +
                          'Note that HTML attributes are case-insensitive and you cannot use ' +
                          'v-on to listen to camelCase events when using in-DOM templates. ' +
                          'You should probably use "' +
                          hyphenate(event) +
                          '" instead of "' +
                          event +
                          '".'
                      )
                    }
                  }
                  var cbs = vm._events[event]
                  if (cbs) {
                    cbs = cbs.length > 1 ? toArray(cbs) : cbs
                    var args = toArray(arguments, 1)
                    var info = 'event handler for "' + event + '"'
                    for (var i = 0, l = cbs.length; i < l; i++) {
                      invokeWithErrorHandling(cbs[i], vm, args, vm, info)
                    }
                  }
                  return vm
                }
              }
              /*  */ var activeInstance = null
              var isUpdatingChildComponent = false
              function setActiveInstance(vm) {
                var prevActiveInstance = activeInstance
                activeInstance = vm
                return function() {
                  activeInstance = prevActiveInstance
                }
              }
              function initLifecycle(vm) {
                var options = vm.$options // locate first non-abstract parent
                var parent = options.parent
                if (parent && !options['abstract']) {
                  while (parent.$options['abstract'] && parent.$parent) {
                    parent = parent.$parent
                  }
                  parent.$children.push(vm)
                }
                vm.$parent = parent
                vm.$root = parent ? parent.$root : vm
                vm.$children = []
                vm.$refs = {}
                vm._watcher = null
                vm._inactive = null
                vm._directInactive = false
                vm._isMounted = false
                vm._isDestroyed = false
                vm._isBeingDestroyed = false
              }
              function lifecycleMixin(Vue) {
                Vue.prototype._update = function(vnode, hydrating) {
                  var vm = this
                  var prevEl = vm.$el
                  var prevVnode = vm._vnode
                  var restoreActiveInstance = setActiveInstance(vm)
                  vm._vnode = vnode // Vue.prototype.__patch__ is injected in entry points
                  // based on the rendering backend used.
                  if (!prevVnode) {
                    // initial render
                    vm.$el = vm.__patch__(
                      vm.$el,
                      vnode,
                      hydrating,
                      false /* removeOnly */
                    )
                  } else {
                    // updates
                    vm.$el = vm.__patch__(prevVnode, vnode)
                  }
                  restoreActiveInstance() // update __vue__ reference
                  if (prevEl) {
                    prevEl.__vue__ = null
                  }
                  if (vm.$el) {
                    vm.$el.__vue__ = vm
                  } // if parent is an HOC, update its $el as well
                  if (
                    vm.$vnode &&
                    vm.$parent &&
                    vm.$vnode === vm.$parent._vnode
                  ) {
                    vm.$parent.$el = vm.$el
                  } // updated hook is called by the scheduler to ensure that children are
                  // updated in a parent's updated hook.
                }
                Vue.prototype.$forceUpdate = function() {
                  var vm = this
                  if (vm._watcher) {
                    vm._watcher.update()
                  }
                }
                Vue.prototype.$destroy = function() {
                  var vm = this
                  if (vm._isBeingDestroyed) {
                    return
                  }
                  callHook(vm, 'beforeDestroy')
                  vm._isBeingDestroyed = true // remove self from parent
                  var parent = vm.$parent
                  if (
                    parent &&
                    !parent._isBeingDestroyed &&
                    !vm.$options['abstract']
                  ) {
                    remove(parent.$children, vm)
                  } // teardown watchers
                  if (vm._watcher) {
                    vm._watcher.teardown()
                  }
                  var i = vm._watchers.length
                  while (i--) {
                    vm._watchers[i].teardown()
                  } // remove reference from data ob
                  // frozen object may not have observer.
                  if (vm._data.__ob__) {
                    vm._data.__ob__.vmCount--
                  } // call the last hook...
                  vm._isDestroyed = true // invoke destroy hooks on current rendered tree
                  vm.__patch__(vm._vnode, null) // fire destroyed hook
                  callHook(vm, 'destroyed') // turn off all instance listeners.
                  vm.$off() // remove __vue__ reference
                  if (vm.$el) {
                    vm.$el.__vue__ = null
                  } // release circular reference (#6759)
                  if (vm.$vnode) {
                    vm.$vnode.parent = null
                  }
                }
              }
              function mountComponent(vm, el, hydrating) {
                vm.$el = el
                if (!vm.$options.render) {
                  vm.$options.render = createEmptyVNode
                  {
                    /* istanbul ignore if */ if (
                      (vm.$options.template &&
                        vm.$options.template.charAt(0) !== '#') ||
                      vm.$options.el ||
                      el
                    ) {
                      warn(
                        'You are using the runtime-only build of Vue where the template ' +
                          'compiler is not available. Either pre-compile the templates into ' +
                          'render functions, or use the compiler-included build.',
                        vm
                      )
                    } else {
                      warn(
                        'Failed to mount component: template or render function not defined.',
                        vm
                      )
                    }
                  }
                }
                callHook(vm, 'beforeMount')
                var updateComponent
                /* istanbul ignore if */ if (config.performance && mark) {
                  updateComponent = function updateComponent() {
                    var name = vm._name
                    var id = vm._uid
                    var startTag = 'vue-perf-start:' + id
                    var endTag = 'vue-perf-end:' + id
                    mark(startTag)
                    var vnode = vm._render()
                    mark(endTag)
                    measure('vue ' + name + ' render', startTag, endTag)
                    mark(startTag)
                    vm._update(vnode, hydrating)
                    mark(endTag)
                    measure('vue ' + name + ' patch', startTag, endTag)
                  }
                } else {
                  updateComponent = function updateComponent() {
                    vm._update(vm._render(), hydrating)
                  }
                } // we set this to vm._watcher inside the watcher's constructor
                // since the watcher's initial patch may call $forceUpdate (e.g. inside child
                // component's mounted hook), which relies on vm._watcher being already defined
                new Watcher(
                  vm,
                  updateComponent,
                  noop,
                  {
                    before: function before() {
                      if (vm._isMounted && !vm._isDestroyed) {
                        callHook(vm, 'beforeUpdate')
                      }
                    }
                  },
                  true /* isRenderWatcher */
                )
                hydrating = false // manually mounted instance, call mounted on self
                // mounted is called for render-created child components in its inserted hook
                if (vm.$vnode == null) {
                  vm._isMounted = true
                  callHook(vm, 'mounted')
                }
                return vm
              }
              function updateChildComponent(
                vm,
                propsData,
                listeners,
                parentVnode,
                renderChildren
              ) {
                {
                  isUpdatingChildComponent = true
                } // determine whether component has slot children
                // we need to do this before overwriting $options._renderChildren.
                // check if there are dynamic scopedSlots (hand-written or compiled but with
                // dynamic slot names). Static scoped slots compiled from template has the
                // "$stable" marker.
                var newScopedSlots = parentVnode.data.scopedSlots
                var oldScopedSlots = vm.$scopedSlots
                var hasDynamicScopedSlot = !!(
                  (newScopedSlots && !newScopedSlots.$stable) ||
                  (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||
                  (newScopedSlots &&
                    vm.$scopedSlots.$key !== newScopedSlots.$key)
                ) // Any static slot children from the parent may have changed during parent's
                // update. Dynamic scoped slots may also have changed. In such cases, a forced
                // update is necessary to ensure correctness.
                var needsForceUpdate = !!(
                  renderChildren || // has new static slots
                  vm.$options._renderChildren || // has old static slots
                  hasDynamicScopedSlot
                )
                vm.$options._parentVnode = parentVnode
                vm.$vnode = parentVnode // update vm's placeholder node without re-render
                if (vm._vnode) {
                  // update child tree's parent
                  vm._vnode.parent = parentVnode
                }
                vm.$options._renderChildren = renderChildren // update $attrs and $listeners hash
                // these are also reactive so they may trigger child update if the child
                // used them during render
                vm.$attrs = parentVnode.data.attrs || emptyObject
                vm.$listeners = listeners || emptyObject // update props
                if (propsData && vm.$options.props) {
                  toggleObserving(false)
                  var props = vm._props
                  var propKeys = vm.$options._propKeys || []
                  for (var i = 0; i < propKeys.length; i++) {
                    var key = propKeys[i]
                    var propOptions = vm.$options.props // wtf flow?
                    props[key] = validateProp(key, propOptions, propsData, vm)
                  }
                  toggleObserving(true) // keep a copy of raw propsData
                  vm.$options.propsData = propsData
                } // update listeners
                listeners = listeners || emptyObject
                var oldListeners = vm.$options._parentListeners
                vm.$options._parentListeners = listeners
                updateComponentListeners(vm, listeners, oldListeners) // resolve slots + force update if has children
                if (needsForceUpdate) {
                  vm.$slots = resolveSlots(renderChildren, parentVnode.context)
                  vm.$forceUpdate()
                }
                {
                  isUpdatingChildComponent = false
                }
              }
              function isInInactiveTree(vm) {
                while (vm && (vm = vm.$parent)) {
                  if (vm._inactive) {
                    return true
                  }
                }
                return false
              }
              function activateChildComponent(vm, direct) {
                if (direct) {
                  vm._directInactive = false
                  if (isInInactiveTree(vm)) {
                    return
                  }
                } else if (vm._directInactive) {
                  return
                }
                if (vm._inactive || vm._inactive === null) {
                  vm._inactive = false
                  for (var i = 0; i < vm.$children.length; i++) {
                    activateChildComponent(vm.$children[i])
                  }
                  callHook(vm, 'activated')
                }
              }
              function deactivateChildComponent(vm, direct) {
                if (direct) {
                  vm._directInactive = true
                  if (isInInactiveTree(vm)) {
                    return
                  }
                }
                if (!vm._inactive) {
                  vm._inactive = true
                  for (var i = 0; i < vm.$children.length; i++) {
                    deactivateChildComponent(vm.$children[i])
                  }
                  callHook(vm, 'deactivated')
                }
              }
              function callHook(vm, hook) {
                // #7573 disable dep collection when invoking lifecycle hooks
                pushTarget()
                var handlers = vm.$options[hook]
                var info = hook + ' hook'
                if (handlers) {
                  for (var i = 0, j = handlers.length; i < j; i++) {
                    invokeWithErrorHandling(handlers[i], vm, null, vm, info)
                  }
                }
                if (vm._hasHookEvent) {
                  vm.$emit('hook:' + hook)
                }
                popTarget()
              }
              /*  */ var MAX_UPDATE_COUNT = 100
              var queue = []
              var activatedChildren = []
              var has = {}
              var circular = {}
              var waiting = false
              var flushing = false
              var index = 0
              /**
               * Reset the scheduler's state.
               */ function resetSchedulerState() {
                index = queue.length = activatedChildren.length = 0
                has = {}
                {
                  circular = {}
                }
                waiting = flushing = false
              } // Async edge case #6566 requires saving the timestamp when event listeners are
              // attached. However, calling performance.now() has a perf overhead especially
              // if the page has thousands of event listeners. Instead, we take a timestamp
              // every time the scheduler flushes and use that for all event listeners
              // attached during that flush.
              var currentFlushTimestamp = 0 // Async edge case fix requires storing an event listener's attach timestamp.
              var getNow = Date.now // Determine what event timestamp the browser is using. Annoyingly, the
              // timestamp can either be hi-res (relative to page load) or low-res
              // (relative to UNIX epoch), so in order to compare time we have to use the
              // same timestamp type when saving the flush timestamp.
              // All IE versions use low-res event timestamps, and have problematic clock
              // implementations (#9632)
              if (inBrowser && !isIE) {
                var performance = window.performance
                if (
                  performance &&
                  typeof performance.now === 'function' &&
                  getNow() > document.createEvent('Event').timeStamp
                ) {
                  // if the event timestamp, although evaluated AFTER the Date.now(), is
                  // smaller than it, it means the event is using a hi-res timestamp,
                  // and we need to use the hi-res version for event listener timestamps as
                  // well.
                  getNow = function getNow() {
                    return performance.now()
                  }
                }
              }
              /**
               * Flush both queues and run the watchers.
               */ function flushSchedulerQueue() {
                currentFlushTimestamp = getNow()
                flushing = true
                var watcher, id // Sort queue before flush.
                // This ensures that:
                // 1. Components are updated from parent to child. (because parent is always
                //    created before the child)
                // 2. A component's user watchers are run before its render watcher (because
                //    user watchers are created before the render watcher)
                // 3. If a component is destroyed during a parent component's watcher run,
                //    its watchers can be skipped.
                queue.sort(function(a, b) {
                  return a.id - b.id
                }) // do not cache length because more watchers might be pushed
                // as we run existing watchers
                for (index = 0; index < queue.length; index++) {
                  watcher = queue[index]
                  if (watcher.before) {
                    watcher.before()
                  }
                  id = watcher.id
                  has[id] = null
                  watcher.run() // in dev build, check and stop circular updates.
                  if (has[id] != null) {
                    circular[id] = (circular[id] || 0) + 1
                    if (circular[id] > MAX_UPDATE_COUNT) {
                      warn(
                        'You may have an infinite update loop ' +
                          (watcher.user
                            ? 'in watcher with expression "' +
                              watcher.expression +
                              '"'
                            : 'in a component render function.'),
                        watcher.vm
                      )
                      break
                    }
                  }
                } // keep copies of post queues before resetting state
                var activatedQueue = activatedChildren.slice()
                var updatedQueue = queue.slice()
                resetSchedulerState() // call component updated and activated hooks
                callActivatedHooks(activatedQueue)
                callUpdatedHooks(updatedQueue) // devtool hook
                /* istanbul ignore if */ if (devtools && config.devtools) {
                  devtools.emit('flush')
                }
              }
              function callUpdatedHooks(queue) {
                var i = queue.length
                while (i--) {
                  var watcher = queue[i]
                  var vm = watcher.vm
                  if (
                    vm._watcher === watcher &&
                    vm._isMounted &&
                    !vm._isDestroyed
                  ) {
                    callHook(vm, 'updated')
                  }
                }
              }
              /**
               * Queue a kept-alive component that was activated during patch.
               * The queue will be processed after the entire tree has been patched.
               */ function queueActivatedComponent(vm) {
                // setting _inactive to false here so that a render function can
                // rely on checking whether it's in an inactive tree (e.g. router-view)
                vm._inactive = false
                activatedChildren.push(vm)
              }
              function callActivatedHooks(queue) {
                for (var i = 0; i < queue.length; i++) {
                  queue[i]._inactive = true
                  activateChildComponent(queue[i], true /* true */)
                }
              }
              /**
               * Push a watcher into the watcher queue.
               * Jobs with duplicate IDs will be skipped unless it's
               * pushed when the queue is being flushed.
               */ function queueWatcher(watcher) {
                var id = watcher.id
                if (has[id] == null) {
                  has[id] = true
                  if (!flushing) {
                    queue.push(watcher)
                  } else {
                    // if already flushing, splice the watcher based on its id
                    // if already past its id, it will be run next immediately.
                    var i = queue.length - 1
                    while (i > index && queue[i].id > watcher.id) {
                      i--
                    }
                    queue.splice(i + 1, 0, watcher)
                  } // queue the flush
                  if (!waiting) {
                    waiting = true
                    if (!config.async) {
                      flushSchedulerQueue()
                      return
                    }
                    nextTick(flushSchedulerQueue)
                  }
                }
              }
              /*  */ var uid$2 = 0
              /**
               * A watcher parses an expression, collects dependencies,
               * and fires callback when the expression value changes.
               * This is used for both the $watch() api and directives.
               */ var Watcher = function Watcher(
                vm,
                expOrFn,
                cb,
                options,
                isRenderWatcher
              ) {
                this.vm = vm
                if (isRenderWatcher) {
                  vm._watcher = this
                }
                vm._watchers.push(this) // options
                if (options) {
                  this.deep = !!options.deep
                  this.user = !!options.user
                  this.lazy = !!options.lazy
                  this.sync = !!options.sync
                  this.before = options.before
                } else {
                  this.deep = this.user = this.lazy = this.sync = false
                }
                this.cb = cb
                this.id = ++uid$2 // uid for batching
                this.active = true
                this.dirty = this.lazy // for lazy watchers
                this.deps = []
                this.newDeps = []
                this.depIds = new _Set()
                this.newDepIds = new _Set()
                this.expression = expOrFn.toString() // parse expression for getter
                if (typeof expOrFn === 'function') {
                  this.getter = expOrFn
                } else {
                  this.getter = parsePath(expOrFn)
                  if (!this.getter) {
                    this.getter = noop
                    warn(
                      'Failed watching path: "' +
                        expOrFn +
                        '" ' +
                        'Watcher only accepts simple dot-delimited paths. ' +
                        'For full control, use a function instead.',
                      vm
                    )
                  }
                }
                this.value = this.lazy ? undefined : this.get()
              }
              /**
               * Evaluate the getter, and re-collect dependencies.
               */ Watcher.prototype.get = function get() {
                pushTarget(this)
                var value
                var vm = this.vm
                try {
                  value = this.getter.call(vm, vm)
                } catch (e) {
                  if (this.user) {
                    handleError(
                      e,
                      vm,
                      'getter for watcher "' + this.expression + '"'
                    )
                  } else {
                    throw e
                  }
                } finally {
                  // "touch" every property so they are all tracked as
                  // dependencies for deep watching
                  if (this.deep) {
                    traverse(value)
                  }
                  popTarget()
                  this.cleanupDeps()
                }
                return value
              }
              /**
               * Add a dependency to this directive.
               */ Watcher.prototype.addDep = function addDep(dep) {
                var id = dep.id
                if (!this.newDepIds.has(id)) {
                  this.newDepIds.add(id)
                  this.newDeps.push(dep)
                  if (!this.depIds.has(id)) {
                    dep.addSub(this)
                  }
                }
              }
              /**
               * Clean up for dependency collection.
               */ Watcher.prototype.cleanupDeps = function cleanupDeps() {
                var i = this.deps.length
                while (i--) {
                  var dep = this.deps[i]
                  if (!this.newDepIds.has(dep.id)) {
                    dep.removeSub(this)
                  }
                }
                var tmp = this.depIds
                this.depIds = this.newDepIds
                this.newDepIds = tmp
                this.newDepIds.clear()
                tmp = this.deps
                this.deps = this.newDeps
                this.newDeps = tmp
                this.newDeps.length = 0
              }
              /**
               * Subscriber interface.
               * Will be called when a dependency changes.
               */ Watcher.prototype.update = function update() {
                /* istanbul ignore else */ if (this.lazy) {
                  this.dirty = true
                } else if (this.sync) {
                  this.run()
                } else {
                  queueWatcher(this)
                }
              }
              /**
               * Scheduler job interface.
               * Will be called by the scheduler.
               */ Watcher.prototype.run = function run() {
                if (this.active) {
                  var value = this.get()
                  if (
                    value !== this.value || // Deep watchers and watchers on Object/Arrays should fire even
                    // when the value is the same, because the value may
                    // have mutated.
                    isObject(value) ||
                    this.deep
                  ) {
                    // set new value
                    var oldValue = this.value
                    this.value = value
                    if (this.user) {
                      try {
                        this.cb.call(this.vm, value, oldValue)
                      } catch (e) {
                        handleError(
                          e,
                          this.vm,
                          'callback for watcher "' + this.expression + '"'
                        )
                      }
                    } else {
                      this.cb.call(this.vm, value, oldValue)
                    }
                  }
                }
              }
              /**
               * Evaluate the value of the watcher.
               * This only gets called for lazy watchers.
               */ Watcher.prototype.evaluate = function evaluate() {
                this.value = this.get()
                this.dirty = false
              }
              /**
               * Depend on all deps collected by this watcher.
               */ Watcher.prototype.depend = function depend() {
                var i = this.deps.length
                while (i--) {
                  this.deps[i].depend()
                }
              }
              /**
               * Remove self from all dependencies' subscriber list.
               */ Watcher.prototype.teardown = function teardown() {
                if (this.active) {
                  // remove self from vm's watcher list
                  // this is a somewhat expensive operation so we skip it
                  // if the vm is being destroyed.
                  if (!this.vm._isBeingDestroyed) {
                    remove(this.vm._watchers, this)
                  }
                  var i = this.deps.length
                  while (i--) {
                    this.deps[i].removeSub(this)
                  }
                  this.active = false
                }
              }
              /*  */ var sharedPropertyDefinition = {
                enumerable: true,
                configurable: true,
                get: noop,
                set: noop
              }
              function proxy(target, sourceKey, key) {
                sharedPropertyDefinition.get = function proxyGetter() {
                  return this[sourceKey][key]
                }
                sharedPropertyDefinition.set = function proxySetter(val) {
                  this[sourceKey][key] = val
                }
                Object.defineProperty(target, key, sharedPropertyDefinition)
              }
              function initState(vm) {
                vm._watchers = []
                var opts = vm.$options
                if (opts.props) {
                  initProps(vm, opts.props)
                }
                if (opts.methods) {
                  initMethods(vm, opts.methods)
                }
                if (opts.data) {
                  initData(vm)
                } else {
                  observe((vm._data = {}), true /* asRootData */)
                }
                if (opts.computed) {
                  initComputed(vm, opts.computed)
                }
                if (opts.watch && opts.watch !== nativeWatch) {
                  initWatch(vm, opts.watch)
                }
              }
              function initProps(vm, propsOptions) {
                var propsData = vm.$options.propsData || {}
                var props = (vm._props = {}) // cache prop keys so that future props updates can iterate using Array
                // instead of dynamic object key enumeration.
                var keys = (vm.$options._propKeys = [])
                var isRoot = !vm.$parent // root instance props should be converted
                if (!isRoot) {
                  toggleObserving(false)
                }
                var loop = function loop(key) {
                  keys.push(key)
                  var value = validateProp(key, propsOptions, propsData, vm)
                  /* istanbul ignore else */ {
                    var hyphenatedKey = hyphenate(key)
                    if (
                      isReservedAttribute(hyphenatedKey) ||
                      config.isReservedAttr(hyphenatedKey)
                    ) {
                      warn(
                        '"' +
                          hyphenatedKey +
                          '" is a reserved attribute and cannot be used as component prop.',
                        vm
                      )
                    }
                    defineReactive$$1(props, key, value, function() {
                      if (!isRoot && !isUpdatingChildComponent) {
                        warn(
                          'Avoid mutating a prop directly since the value will be ' +
                            'overwritten whenever the parent component re-renders. ' +
                            "Instead, use a data or computed property based on the prop's " +
                            'value. Prop being mutated: "' +
                            key +
                            '"',
                          vm
                        )
                      }
                    })
                  } // static props are already proxied on the component's prototype
                  // during Vue.extend(). We only need to proxy props defined at
                  // instantiation here.
                  if (!(key in vm)) {
                    proxy(vm, '_props', key)
                  }
                }
                for (var key in propsOptions) {
                  loop(key)
                }
                toggleObserving(true)
              }
              function initData(vm) {
                var data = vm.$options.data
                data = vm._data =
                  typeof data === 'function' ? getData(data, vm) : data || {}
                if (!isPlainObject(data)) {
                  data = {}
                  warn(
                    'data functions should return an object:\n' +
                      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',
                    vm
                  )
                } // proxy data on instance
                var keys = Object.keys(data)
                var props = vm.$options.props
                var methods = vm.$options.methods
                var i = keys.length
                while (i--) {
                  var key = keys[i]
                  {
                    if (methods && hasOwn(methods, key)) {
                      warn(
                        'Method "' +
                          key +
                          '" has already been defined as a data property.',
                        vm
                      )
                    }
                  }
                  if (props && hasOwn(props, key)) {
                    warn(
                      'The data property "' +
                        key +
                        '" is already declared as a prop. ' +
                        'Use prop default value instead.',
                      vm
                    )
                  } else if (!isReserved(key)) {
                    proxy(vm, '_data', key)
                  }
                } // observe data
                observe(data, true /* asRootData */)
              }
              function getData(data, vm) {
                // #7573 disable dep collection when invoking data getters
                pushTarget()
                try {
                  return data.call(vm, vm)
                } catch (e) {
                  handleError(e, vm, 'data()')
                  return {}
                } finally {
                  popTarget()
                }
              }
              var computedWatcherOptions = { lazy: true }
              function initComputed(vm, computed) {
                // $flow-disable-line
                var watchers = (vm._computedWatchers = Object.create(null)) // computed properties are just getters during SSR
                var isSSR = isServerRendering()
                for (var key in computed) {
                  var userDef = computed[key]
                  var getter =
                    typeof userDef === 'function' ? userDef : userDef.get
                  if (getter == null) {
                    warn(
                      'Getter is missing for computed property "' + key + '".',
                      vm
                    )
                  }
                  if (!isSSR) {
                    // create internal watcher for the computed property.
                    watchers[key] = new Watcher(
                      vm,
                      getter || noop,
                      noop,
                      computedWatcherOptions
                    )
                  } // component-defined computed properties are already defined on the
                  // component prototype. We only need to define computed properties defined
                  // at instantiation here.
                  if (!(key in vm)) {
                    defineComputed(vm, key, userDef)
                  } else {
                    if (key in vm.$data) {
                      warn(
                        'The computed property "' +
                          key +
                          '" is already defined in data.',
                        vm
                      )
                    } else if (vm.$options.props && key in vm.$options.props) {
                      warn(
                        'The computed property "' +
                          key +
                          '" is already defined as a prop.',
                        vm
                      )
                    }
                  }
                }
              }
              function defineComputed(target, key, userDef) {
                var shouldCache = !isServerRendering()
                if (typeof userDef === 'function') {
                  sharedPropertyDefinition.get = shouldCache
                    ? createComputedGetter(key)
                    : createGetterInvoker(userDef)
                  sharedPropertyDefinition.set = noop
                } else {
                  sharedPropertyDefinition.get = userDef.get
                    ? shouldCache && userDef.cache !== false
                      ? createComputedGetter(key)
                      : createGetterInvoker(userDef.get)
                    : noop
                  sharedPropertyDefinition.set = userDef.set || noop
                }
                if (sharedPropertyDefinition.set === noop) {
                  sharedPropertyDefinition.set = function() {
                    warn(
                      'Computed property "' +
                        key +
                        '" was assigned to but it has no setter.',
                      this
                    )
                  }
                }
                Object.defineProperty(target, key, sharedPropertyDefinition)
              }
              function createComputedGetter(key) {
                return function computedGetter() {
                  var watcher =
                    this._computedWatchers && this._computedWatchers[key]
                  if (watcher) {
                    if (watcher.dirty) {
                      watcher.evaluate()
                    }
                    if (Dep.target) {
                      watcher.depend()
                    }
                    return watcher.value
                  }
                }
              }
              function createGetterInvoker(fn) {
                return function computedGetter() {
                  return fn.call(this, this)
                }
              }
              function initMethods(vm, methods) {
                var props = vm.$options.props
                for (var key in methods) {
                  {
                    if (typeof methods[key] !== 'function') {
                      warn(
                        'Method "' +
                          key +
                          '" has type "' +
                          (0, _typeof3['default'])(methods[key]) +
                          '" in the component definition. ' +
                          'Did you reference the function correctly?',
                        vm
                      )
                    }
                    if (props && hasOwn(props, key)) {
                      warn(
                        'Method "' +
                          key +
                          '" has already been defined as a prop.',
                        vm
                      )
                    }
                    if (key in vm && isReserved(key)) {
                      warn(
                        'Method "' +
                          key +
                          '" conflicts with an existing Vue instance method. ' +
                          'Avoid defining component methods that start with _ or $.'
                      )
                    }
                  }
                  vm[key] =
                    typeof methods[key] !== 'function'
                      ? noop
                      : bind(methods[key], vm)
                }
              }
              function initWatch(vm, watch) {
                for (var key in watch) {
                  var handler = watch[key]
                  if (Array.isArray(handler)) {
                    for (var i = 0; i < handler.length; i++) {
                      createWatcher(vm, key, handler[i])
                    }
                  } else {
                    createWatcher(vm, key, handler)
                  }
                }
              }
              function createWatcher(vm, expOrFn, handler, options) {
                if (isPlainObject(handler)) {
                  options = handler
                  handler = handler.handler
                }
                if (typeof handler === 'string') {
                  handler = vm[handler]
                }
                return vm.$watch(expOrFn, handler, options)
              }
              function stateMixin(Vue) {
                // flow somehow has problems with directly declared definition object
                // when using Object.defineProperty, so we have to procedurally build up
                // the object here.
                var dataDef = {}
                dataDef.get = function() {
                  return this._data
                }
                var propsDef = {}
                propsDef.get = function() {
                  return this._props
                }
                {
                  dataDef.set = function() {
                    warn(
                      'Avoid replacing instance root $data. ' +
                        'Use nested data properties instead.',
                      this
                    )
                  }
                  propsDef.set = function() {
                    warn('$props is readonly.', this)
                  }
                }
                Object.defineProperty(Vue.prototype, '$data', dataDef)
                Object.defineProperty(Vue.prototype, '$props', propsDef)
                Vue.prototype.$set = set
                Vue.prototype.$delete = del
                Vue.prototype.$watch = function(expOrFn, cb, options) {
                  var vm = this
                  if (isPlainObject(cb)) {
                    return createWatcher(vm, expOrFn, cb, options)
                  }
                  options = options || {}
                  options.user = true
                  var watcher = new Watcher(vm, expOrFn, cb, options)
                  if (options.immediate) {
                    try {
                      cb.call(vm, watcher.value)
                    } catch (error) {
                      handleError(
                        error,
                        vm,
                        'callback for immediate watcher "' +
                          watcher.expression +
                          '"'
                      )
                    }
                  }
                  return function unwatchFn() {
                    watcher.teardown()
                  }
                }
              }
              /*  */ var uid$3 = 0
              function initMixin(Vue) {
                Vue.prototype._init = function(options) {
                  var vm = this // a uid
                  vm._uid = uid$3++
                  var startTag, endTag
                  /* istanbul ignore if */ if (config.performance && mark) {
                    startTag = 'vue-perf-start:' + vm._uid
                    endTag = 'vue-perf-end:' + vm._uid
                    mark(startTag)
                  } // a flag to avoid this being observed
                  vm._isVue = true // merge options
                  if (options && options._isComponent) {
                    // optimize internal component instantiation
                    // since dynamic options merging is pretty slow, and none of the
                    // internal component options needs special treatment.
                    initInternalComponent(vm, options)
                  } else {
                    vm.$options = mergeOptions(
                      resolveConstructorOptions(vm.constructor),
                      options || {},
                      vm
                    )
                  }
                  /* istanbul ignore else */ {
                    initProxy(vm)
                  } // expose real self
                  vm._self = vm
                  initLifecycle(vm)
                  initEvents(vm)
                  initRender(vm)
                  callHook(vm, 'beforeCreate')
                  initInjections(vm) // resolve injections before data/props
                  initState(vm)
                  initProvide(vm) // resolve provide after data/props
                  callHook(vm, 'created')
                  /* istanbul ignore if */ if (config.performance && mark) {
                    vm._name = formatComponentName(vm, false)
                    mark(endTag)
                    measure('vue ' + vm._name + ' init', startTag, endTag)
                  }
                  if (vm.$options.el) {
                    vm.$mount(vm.$options.el)
                  }
                }
              }
              function initInternalComponent(vm, options) {
                var opts = (vm.$options = Object.create(vm.constructor.options)) // doing this because it's faster than dynamic enumeration.
                var parentVnode = options._parentVnode
                opts.parent = options.parent
                opts._parentVnode = parentVnode
                var vnodeComponentOptions = parentVnode.componentOptions
                opts.propsData = vnodeComponentOptions.propsData
                opts._parentListeners = vnodeComponentOptions.listeners
                opts._renderChildren = vnodeComponentOptions.children
                opts._componentTag = vnodeComponentOptions.tag
                if (options.render) {
                  opts.render = options.render
                  opts.staticRenderFns = options.staticRenderFns
                }
              }
              function resolveConstructorOptions(Ctor) {
                var options = Ctor.options
                if (Ctor['super']) {
                  var superOptions = resolveConstructorOptions(Ctor['super'])
                  var cachedSuperOptions = Ctor.superOptions
                  if (superOptions !== cachedSuperOptions) {
                    // super option changed,
                    // need to resolve new options.
                    Ctor.superOptions = superOptions // check if there are any late-modified/attached options (#4976)
                    var modifiedOptions = resolveModifiedOptions(Ctor) // update base extend options
                    if (modifiedOptions) {
                      extend(Ctor.extendOptions, modifiedOptions)
                    }
                    options = Ctor.options = mergeOptions(
                      superOptions,
                      Ctor.extendOptions
                    )
                    if (options.name) {
                      options.components[options.name] = Ctor
                    }
                  }
                }
                return options
              }
              function resolveModifiedOptions(Ctor) {
                var modified
                var latest = Ctor.options
                var sealed = Ctor.sealedOptions
                for (var key in latest) {
                  if (latest[key] !== sealed[key]) {
                    if (!modified) {
                      modified = {}
                    }
                    modified[key] = latest[key]
                  }
                }
                return modified
              }
              function Vue(options) {
                if (!(this instanceof Vue)) {
                  warn(
                    'Vue is a constructor and should be called with the `new` keyword'
                  )
                }
                this._init(options)
              }
              initMixin(Vue)
              stateMixin(Vue)
              eventsMixin(Vue)
              lifecycleMixin(Vue)
              renderMixin(Vue)
              /*  */ function initUse(Vue) {
                Vue.use = function(plugin) {
                  var installedPlugins =
                    this._installedPlugins || (this._installedPlugins = [])
                  if (installedPlugins.indexOf(plugin) > -1) {
                    return this
                  } // additional parameters
                  var args = toArray(arguments, 1)
                  args.unshift(this)
                  if (typeof plugin.install === 'function') {
                    plugin.install.apply(plugin, args)
                  } else if (typeof plugin === 'function') {
                    plugin.apply(null, args)
                  }
                  installedPlugins.push(plugin)
                  return this
                }
              }
              /*  */ function initMixin$1(Vue) {
                Vue.mixin = function(mixin) {
                  this.options = mergeOptions(this.options, mixin)
                  return this
                }
              }
              /*  */ function initExtend(Vue) {
                /**
                 * Each instance constructor, including Vue, has a unique
                 * cid. This enables us to create wrapped "child
                 * constructors" for prototypal inheritance and cache them.
                 */ Vue.cid = 0
                var cid = 1
                /**
                 * Class inheritance
                 */ Vue.extend = function(extendOptions) {
                  extendOptions = extendOptions || {}
                  var Super = this
                  var SuperId = Super.cid
                  var cachedCtors =
                    extendOptions._Ctor || (extendOptions._Ctor = {})
                  if (cachedCtors[SuperId]) {
                    return cachedCtors[SuperId]
                  }
                  var name = extendOptions.name || Super.options.name
                  if (name) {
                    validateComponentName(name)
                  }
                  var Sub = function VueComponent(options) {
                    this._init(options)
                  }
                  Sub.prototype = Object.create(Super.prototype)
                  Sub.prototype.constructor = Sub
                  Sub.cid = cid++
                  Sub.options = mergeOptions(Super.options, extendOptions)
                  Sub['super'] = Super // For props and computed properties, we define the proxy getters on
                  // the Vue instances at extension time, on the extended prototype. This
                  // avoids Object.defineProperty calls for each instance created.
                  if (Sub.options.props) {
                    initProps$1(Sub)
                  }
                  if (Sub.options.computed) {
                    initComputed$1(Sub)
                  } // allow further extension/mixin/plugin usage
                  Sub.extend = Super.extend
                  Sub.mixin = Super.mixin
                  Sub.use = Super.use // create asset registers, so extended classes
                  // can have their private assets too.
                  ASSET_TYPES.forEach(function(type) {
                    Sub[type] = Super[type]
                  }) // enable recursive self-lookup
                  if (name) {
                    Sub.options.components[name] = Sub
                  } // keep a reference to the super options at extension time.
                  // later at instantiation we can check if Super's options have
                  // been updated.
                  Sub.superOptions = Super.options
                  Sub.extendOptions = extendOptions
                  Sub.sealedOptions = extend({}, Sub.options) // cache constructor
                  cachedCtors[SuperId] = Sub
                  return Sub
                }
              }
              function initProps$1(Comp) {
                var props = Comp.options.props
                for (var key in props) {
                  proxy(Comp.prototype, '_props', key)
                }
              }
              function initComputed$1(Comp) {
                var computed = Comp.options.computed
                for (var key in computed) {
                  defineComputed(Comp.prototype, key, computed[key])
                }
              }
              /*  */ function initAssetRegisters(Vue) {
                /**
                 * Create asset registration methods.
                 */ ASSET_TYPES.forEach(function(type) {
                  Vue[type] = function(id, definition) {
                    if (!definition) {
                      return this.options[type + 's'][id]
                    } else {
                      /* istanbul ignore if */ if (type === 'component') {
                        validateComponentName(id)
                      }
                      if (type === 'component' && isPlainObject(definition)) {
                        definition.name = definition.name || id
                        definition = this.options._base.extend(definition)
                      }
                      if (
                        type === 'directive' &&
                        typeof definition === 'function'
                      ) {
                        definition = { bind: definition, update: definition }
                      }
                      this.options[type + 's'][id] = definition
                      return definition
                    }
                  }
                })
              }
              /*  */ function getComponentName(opts) {
                return opts && (opts.Ctor.options.name || opts.tag)
              }
              function matches(pattern, name) {
                if (Array.isArray(pattern)) {
                  return pattern.indexOf(name) > -1
                } else if (typeof pattern === 'string') {
                  return pattern.split(',').indexOf(name) > -1
                } else if (isRegExp(pattern)) {
                  return pattern.test(name)
                }
                /* istanbul ignore next */ return false
              }
              function pruneCache(keepAliveInstance, filter) {
                var cache = keepAliveInstance.cache
                var keys = keepAliveInstance.keys
                var _vnode = keepAliveInstance._vnode
                for (var key in cache) {
                  var cachedNode = cache[key]
                  if (cachedNode) {
                    var name = getComponentName(cachedNode.componentOptions)
                    if (name && !filter(name)) {
                      pruneCacheEntry(cache, key, keys, _vnode)
                    }
                  }
                }
              }
              function pruneCacheEntry(cache, key, keys, current) {
                var cached$$1 = cache[key]
                if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {
                  cached$$1.componentInstance.$destroy()
                }
                cache[key] = null
                remove(keys, key)
              }
              var patternTypes = [String, RegExp, Array]
              var KeepAlive = {
                name: 'keep-alive',
                abstract: true,
                props: {
                  include: patternTypes,
                  exclude: patternTypes,
                  max: [String, Number]
                },
                created: function created() {
                  this.cache = Object.create(null)
                  this.keys = []
                },
                destroyed: function destroyed() {
                  for (var key in this.cache) {
                    pruneCacheEntry(this.cache, key, this.keys)
                  }
                },
                mounted: function mounted() {
                  var this$1 = this
                  this.$watch('include', function(val) {
                    pruneCache(this$1, function(name) {
                      return matches(val, name)
                    })
                  })
                  this.$watch('exclude', function(val) {
                    pruneCache(this$1, function(name) {
                      return !matches(val, name)
                    })
                  })
                },
                render: function render() {
                  var slot = this.$slots['default']
                  var vnode = getFirstComponentChild(slot)
                  var componentOptions = vnode && vnode.componentOptions
                  if (componentOptions) {
                    // check pattern
                    var name = getComponentName(componentOptions)
                    var ref = this
                    var include = ref.include
                    var exclude = ref.exclude
                    if (
                      // not included
                      (include && (!name || !matches(include, name))) || // excluded
                      (exclude && name && matches(exclude, name))
                    ) {
                      return vnode
                    }
                    var ref$1 = this
                    var cache = ref$1.cache
                    var keys = ref$1.keys
                    var key =
                      vnode.key == null // same constructor may get registered as different local components
                        ? // so cid alone is not enough (#3269)
                          componentOptions.Ctor.cid +
                          (componentOptions.tag
                            ? '::' + componentOptions.tag
                            : '')
                        : vnode.key
                    if (cache[key]) {
                      vnode.componentInstance = cache[key].componentInstance // make current key freshest
                      remove(keys, key)
                      keys.push(key)
                    } else {
                      cache[key] = vnode
                      keys.push(key) // prune oldest entry
                      if (this.max && keys.length > parseInt(this.max)) {
                        pruneCacheEntry(cache, keys[0], keys, this._vnode)
                      }
                    }
                    vnode.data.keepAlive = true
                  }
                  return vnode || (slot && slot[0])
                }
              }
              var builtInComponents = { KeepAlive: KeepAlive }
              /*  */ function initGlobalAPI(Vue) {
                // config
                var configDef = {}
                configDef.get = function() {
                  return config
                }
                {
                  configDef.set = function() {
                    warn(
                      'Do not replace the Vue.config object, set individual fields instead.'
                    )
                  }
                }
                Object.defineProperty(Vue, 'config', configDef) // exposed util methods.
                // NOTE: these are not considered part of the public API - avoid relying on
                // them unless you are aware of the risk.
                Vue.util = {
                  warn: warn,
                  extend: extend,
                  mergeOptions: mergeOptions,
                  defineReactive: defineReactive$$1
                }
                Vue.set = set
                Vue['delete'] = del
                Vue.nextTick = nextTick // 2.6 explicit observable API
                Vue.observable = function(obj) {
                  observe(obj)
                  return obj
                }
                Vue.options = Object.create(null)
                ASSET_TYPES.forEach(function(type) {
                  Vue.options[type + 's'] = Object.create(null)
                }) // this is used to identify the "base" constructor to extend all plain-object
                // components with in Weex's multi-instance scenarios.
                Vue.options._base = Vue
                extend(Vue.options.components, builtInComponents)
                initUse(Vue)
                initMixin$1(Vue)
                initExtend(Vue)
                initAssetRegisters(Vue)
              }
              initGlobalAPI(Vue)
              Object.defineProperty(Vue.prototype, '$isServer', {
                get: isServerRendering
              })
              Object.defineProperty(Vue.prototype, '$ssrContext', {
                get: function get() {
                  /* istanbul ignore next */ return (
                    this.$vnode && this.$vnode.ssrContext
                  )
                }
              }) // expose FunctionalRenderContext for ssr runtime helper installation
              Object.defineProperty(Vue, 'FunctionalRenderContext', {
                value: FunctionalRenderContext
              })
              Vue.version = '2.6.11' /*  */ // these are reserved for web because they are directly compiled away
              // during template compilation
              var isReservedAttr = makeMap('style,class') // attributes that should be using props for binding
              var acceptValue = makeMap('input,textarea,option,select,progress')
              var mustUseProp = function mustUseProp(tag, type, attr) {
                return (
                  (attr === 'value' && acceptValue(tag) && type !== 'button') ||
                  (attr === 'selected' && tag === 'option') ||
                  (attr === 'checked' && tag === 'input') ||
                  (attr === 'muted' && tag === 'video')
                )
              }
              var isEnumeratedAttr = makeMap(
                'contenteditable,draggable,spellcheck'
              )
              var isValidContentEditableValue = makeMap(
                'events,caret,typing,plaintext-only'
              )
              var convertEnumeratedValue = function convertEnumeratedValue(
                key,
                value
              ) {
                return isFalsyAttrValue(value) || value === 'false'
                  ? 'false' // allow arbitrary string value for contenteditable
                  : key === 'contenteditable' &&
                    isValidContentEditableValue(value)
                  ? value
                  : 'true'
              }
              var isBooleanAttr = makeMap(
                'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +
                  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +
                  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +
                  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +
                  'required,reversed,scoped,seamless,selected,sortable,translate,' +
                  'truespeed,typemustmatch,visible'
              )
              var xlinkNS = 'http://www.w3.org/1999/xlink'
              var isXlink = function isXlink(name) {
                return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'
              }
              var getXlinkProp = function getXlinkProp(name) {
                return isXlink(name) ? name.slice(6, name.length) : ''
              }
              var isFalsyAttrValue = function isFalsyAttrValue(val) {
                return val == null || val === false
              }
              /*  */ function genClassForVnode(vnode) {
                var data = vnode.data
                var parentNode = vnode
                var childNode = vnode
                while (isDef(childNode.componentInstance)) {
                  childNode = childNode.componentInstance._vnode
                  if (childNode && childNode.data) {
                    data = mergeClassData(childNode.data, data)
                  }
                }
                while (isDef((parentNode = parentNode.parent))) {
                  if (parentNode && parentNode.data) {
                    data = mergeClassData(data, parentNode.data)
                  }
                }
                return renderClass(data.staticClass, data['class'])
              }
              function mergeClassData(child, parent) {
                return {
                  staticClass: concat(child.staticClass, parent.staticClass),
                  class: isDef(child['class'])
                    ? [child['class'], parent['class']]
                    : parent['class']
                }
              }
              function renderClass(staticClass, dynamicClass) {
                if (isDef(staticClass) || isDef(dynamicClass)) {
                  return concat(staticClass, stringifyClass(dynamicClass))
                }
                /* istanbul ignore next */ return ''
              }
              function concat(a, b) {
                return a ? (b ? a + ' ' + b : a) : b || ''
              }
              function stringifyClass(value) {
                if (Array.isArray(value)) {
                  return stringifyArray(value)
                }
                if (isObject(value)) {
                  return stringifyObject(value)
                }
                if (typeof value === 'string') {
                  return value
                }
                /* istanbul ignore next */ return ''
              }
              function stringifyArray(value) {
                var res = ''
                var stringified
                for (var i = 0, l = value.length; i < l; i++) {
                  if (
                    isDef((stringified = stringifyClass(value[i]))) &&
                    stringified !== ''
                  ) {
                    if (res) {
                      res += ' '
                    }
                    res += stringified
                  }
                }
                return res
              }
              function stringifyObject(value) {
                var res = ''
                for (var key in value) {
                  if (value[key]) {
                    if (res) {
                      res += ' '
                    }
                    res += key
                  }
                }
                return res
              }
              /*  */ var namespaceMap = {
                svg: 'http://www.w3.org/2000/svg',
                math: 'http://www.w3.org/1998/Math/MathML'
              }
              var isHTMLTag = makeMap(
                'html,body,base,head,link,meta,style,title,' +
                  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +
                  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +
                  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +
                  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +
                  'embed,object,param,source,canvas,script,noscript,del,ins,' +
                  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +
                  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +
                  'output,progress,select,textarea,' +
                  'details,dialog,menu,menuitem,summary,' +
                  'content,element,shadow,template,blockquote,iframe,tfoot'
              ) // this map is intentionally selective, only covering SVG elements that may
              // contain child elements.
              var isSVG = makeMap(
                'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +
                  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +
                  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',
                true
              )
              var isPreTag = function isPreTag(tag) {
                return tag === 'pre'
              }
              var isReservedTag = function isReservedTag(tag) {
                return isHTMLTag(tag) || isSVG(tag)
              }
              function getTagNamespace(tag) {
                if (isSVG(tag)) {
                  return 'svg'
                } // basic support for MathML
                // note it doesn't support other MathML elements being component roots
                if (tag === 'math') {
                  return 'math'
                }
              }
              var unknownElementCache = Object.create(null)
              function isUnknownElement(tag) {
                /* istanbul ignore if */ if (!inBrowser) {
                  return true
                }
                if (isReservedTag(tag)) {
                  return false
                }
                tag = tag.toLowerCase()
                /* istanbul ignore if */ if (unknownElementCache[tag] != null) {
                  return unknownElementCache[tag]
                }
                var el = document.createElement(tag)
                if (tag.indexOf('-') > -1) {
                  // http://stackoverflow.com/a/28210364/1070244
                  return (unknownElementCache[tag] =
                    el.constructor === window.HTMLUnknownElement ||
                    el.constructor === window.HTMLElement)
                } else {
                  return (unknownElementCache[tag] = /HTMLUnknownElement/.test(
                    el.toString()
                  ))
                }
              }
              var isTextInputType = makeMap(
                'text,number,password,search,email,tel,url'
              )
              /*  */ /**
               * Query an element selector if it's not an element already.
               */ function query(el) {
                if (typeof el === 'string') {
                  var selected = document.querySelector(el)
                  if (!selected) {
                    warn('Cannot find element: ' + el)
                    return document.createElement('div')
                  }
                  return selected
                } else {
                  return el
                }
              }
              /*  */ function createElement$1(tagName, vnode) {
                var elm = document.createElement(tagName)
                if (tagName !== 'select') {
                  return elm
                } // false or null will remove the attribute but undefined will not
                if (
                  vnode.data &&
                  vnode.data.attrs &&
                  vnode.data.attrs.multiple !== undefined
                ) {
                  elm.setAttribute('multiple', 'multiple')
                }
                return elm
              }
              function createElementNS(namespace, tagName) {
                return document.createElementNS(
                  namespaceMap[namespace],
                  tagName
                )
              }
              function createTextNode(text) {
                return document.createTextNode(text)
              }
              function createComment(text) {
                return document.createComment(text)
              }
              function insertBefore(parentNode, newNode, referenceNode) {
                parentNode.insertBefore(newNode, referenceNode)
              }
              function removeChild(node, child) {
                node.removeChild(child)
              }
              function appendChild(node, child) {
                node.appendChild(child)
              }
              function parentNode(node) {
                return node.parentNode
              }
              function nextSibling(node) {
                return node.nextSibling
              }
              function tagName(node) {
                return node.tagName
              }
              function setTextContent(node, text) {
                node.textContent = text
              }
              function setStyleScope(node, scopeId) {
                node.setAttribute(scopeId, '')
              }
              var nodeOps = /*#__PURE__*/ Object.freeze({
                createElement: createElement$1,
                createElementNS: createElementNS,
                createTextNode: createTextNode,
                createComment: createComment,
                insertBefore: insertBefore,
                removeChild: removeChild,
                appendChild: appendChild,
                parentNode: parentNode,
                nextSibling: nextSibling,
                tagName: tagName,
                setTextContent: setTextContent,
                setStyleScope: setStyleScope
              })
              /*  */ var ref = {
                create: function create(_, vnode) {
                  registerRef(vnode)
                },
                update: function update(oldVnode, vnode) {
                  if (oldVnode.data.ref !== vnode.data.ref) {
                    registerRef(oldVnode, true)
                    registerRef(vnode)
                  }
                },
                destroy: function destroy(vnode) {
                  registerRef(vnode, true)
                }
              }
              function registerRef(vnode, isRemoval) {
                var key = vnode.data.ref
                if (!isDef(key)) {
                  return
                }
                var vm = vnode.context
                var ref = vnode.componentInstance || vnode.elm
                var refs = vm.$refs
                if (isRemoval) {
                  if (Array.isArray(refs[key])) {
                    remove(refs[key], ref)
                  } else if (refs[key] === ref) {
                    refs[key] = undefined
                  }
                } else {
                  if (vnode.data.refInFor) {
                    if (!Array.isArray(refs[key])) {
                      refs[key] = [ref]
                    } else if (refs[key].indexOf(ref) < 0) {
                      // $flow-disable-line
                      refs[key].push(ref)
                    }
                  } else {
                    refs[key] = ref
                  }
                }
              }
              /**
               * Virtual DOM patching algorithm based on Snabbdom by
               * Simon Friis Vindum (@paldepind)
               * Licensed under the MIT License
               * https://github.com/paldepind/snabbdom/blob/master/LICENSE
               *
               * modified by Evan You (@yyx990803)
               *
               * Not type-checking this because this file is perf-critical and the cost
               * of making flow understand it is not worth it.
               */ var emptyNode = new VNode('', {}, [])
              var hooks = ['create', 'activate', 'update', 'remove', 'destroy']
              function sameVnode(a, b) {
                return (
                  a.key === b.key &&
                  ((a.tag === b.tag &&
                    a.isComment === b.isComment &&
                    isDef(a.data) === isDef(b.data) &&
                    sameInputType(a, b)) ||
                    (isTrue(a.isAsyncPlaceholder) &&
                      a.asyncFactory === b.asyncFactory &&
                      isUndef(b.asyncFactory.error)))
                )
              }
              function sameInputType(a, b) {
                if (a.tag !== 'input') {
                  return true
                }
                var i
                var typeA =
                  isDef((i = a.data)) && isDef((i = i.attrs)) && i.type
                var typeB =
                  isDef((i = b.data)) && isDef((i = i.attrs)) && i.type
                return (
                  typeA === typeB ||
                  (isTextInputType(typeA) && isTextInputType(typeB))
                )
              }
              function createKeyToOldIdx(children, beginIdx, endIdx) {
                var i, key
                var map = {}
                for (i = beginIdx; i <= endIdx; ++i) {
                  key = children[i].key
                  if (isDef(key)) {
                    map[key] = i
                  }
                }
                return map
              }
              function createPatchFunction(backend) {
                var i, j
                var cbs = {}
                var modules = backend.modules
                var nodeOps = backend.nodeOps
                for (i = 0; i < hooks.length; ++i) {
                  cbs[hooks[i]] = []
                  for (j = 0; j < modules.length; ++j) {
                    if (isDef(modules[j][hooks[i]])) {
                      cbs[hooks[i]].push(modules[j][hooks[i]])
                    }
                  }
                }
                function emptyNodeAt(elm) {
                  return new VNode(
                    nodeOps.tagName(elm).toLowerCase(),
                    {},
                    [],
                    undefined,
                    elm
                  )
                }
                function createRmCb(childElm, listeners) {
                  function remove$$1() {
                    if (--remove$$1.listeners === 0) {
                      removeNode(childElm)
                    }
                  }
                  remove$$1.listeners = listeners
                  return remove$$1
                }
                function removeNode(el) {
                  var parent = nodeOps.parentNode(el) // element may have already been removed due to v-html / v-text
                  if (isDef(parent)) {
                    nodeOps.removeChild(parent, el)
                  }
                }
                function isUnknownElement$$1(vnode, inVPre) {
                  return (
                    !inVPre &&
                    !vnode.ns &&
                    !(
                      config.ignoredElements.length &&
                      config.ignoredElements.some(function(ignore) {
                        return isRegExp(ignore)
                          ? ignore.test(vnode.tag)
                          : ignore === vnode.tag
                      })
                    ) &&
                    config.isUnknownElement(vnode.tag)
                  )
                }
                var creatingElmInVPre = 0
                function createElm(
                  vnode,
                  insertedVnodeQueue,
                  parentElm,
                  refElm,
                  nested,
                  ownerArray,
                  index
                ) {
                  if (isDef(vnode.elm) && isDef(ownerArray)) {
                    // This vnode was used in a previous render!
                    // now it's used as a new node, overwriting its elm would cause
                    // potential patch errors down the road when it's used as an insertion
                    // reference node. Instead, we clone the node on-demand before creating
                    // associated DOM element for it.
                    vnode = ownerArray[index] = cloneVNode(vnode)
                  }
                  vnode.isRootInsert = !nested // for transition enter check
                  if (
                    createComponent(
                      vnode,
                      insertedVnodeQueue,
                      parentElm,
                      refElm
                    )
                  ) {
                    return
                  }
                  var data = vnode.data
                  var children = vnode.children
                  var tag = vnode.tag
                  if (isDef(tag)) {
                    {
                      if (data && data.pre) {
                        creatingElmInVPre++
                      }
                      if (isUnknownElement$$1(vnode, creatingElmInVPre)) {
                        warn(
                          'Unknown custom element: <' +
                            tag +
                            '> - did you ' +
                            'register the component correctly? For recursive components, ' +
                            'make sure to provide the "name" option.',
                          vnode.context
                        )
                      }
                    }
                    vnode.elm = vnode.ns
                      ? nodeOps.createElementNS(vnode.ns, tag)
                      : nodeOps.createElement(tag, vnode)
                    setScope(vnode)
                    /* istanbul ignore if */ {
                      createChildren(vnode, children, insertedVnodeQueue)
                      if (isDef(data)) {
                        invokeCreateHooks(vnode, insertedVnodeQueue)
                      }
                      insert(parentElm, vnode.elm, refElm)
                    }
                    if (data && data.pre) {
                      creatingElmInVPre--
                    }
                  } else if (isTrue(vnode.isComment)) {
                    vnode.elm = nodeOps.createComment(vnode.text)
                    insert(parentElm, vnode.elm, refElm)
                  } else {
                    vnode.elm = nodeOps.createTextNode(vnode.text)
                    insert(parentElm, vnode.elm, refElm)
                  }
                }
                function createComponent(
                  vnode,
                  insertedVnodeQueue,
                  parentElm,
                  refElm
                ) {
                  var i = vnode.data
                  if (isDef(i)) {
                    var isReactivated =
                      isDef(vnode.componentInstance) && i.keepAlive
                    if (isDef((i = i.hook)) && isDef((i = i.init))) {
                      i(vnode, false /* hydrating */)
                    } // after calling the init hook, if the vnode is a child component
                    // it should've created a child instance and mounted it. the child
                    // component also has set the placeholder vnode's elm.
                    // in that case we can just return the element and be done.
                    if (isDef(vnode.componentInstance)) {
                      initComponent(vnode, insertedVnodeQueue)
                      insert(parentElm, vnode.elm, refElm)
                      if (isTrue(isReactivated)) {
                        reactivateComponent(
                          vnode,
                          insertedVnodeQueue,
                          parentElm,
                          refElm
                        )
                      }
                      return true
                    }
                  }
                }
                function initComponent(vnode, insertedVnodeQueue) {
                  if (isDef(vnode.data.pendingInsert)) {
                    insertedVnodeQueue.push.apply(
                      insertedVnodeQueue,
                      vnode.data.pendingInsert
                    )
                    vnode.data.pendingInsert = null
                  }
                  vnode.elm = vnode.componentInstance.$el
                  if (isPatchable(vnode)) {
                    invokeCreateHooks(vnode, insertedVnodeQueue)
                    setScope(vnode)
                  } else {
                    // empty component root.
                    // skip all element-related modules except for ref (#3455)
                    registerRef(vnode) // make sure to invoke the insert hook
                    insertedVnodeQueue.push(vnode)
                  }
                }
                function reactivateComponent(
                  vnode,
                  insertedVnodeQueue,
                  parentElm,
                  refElm
                ) {
                  var i // hack for #4339: a reactivated component with inner transition
                  // does not trigger because the inner node's created hooks are not called
                  // again. It's not ideal to involve module-specific logic in here but
                  // there doesn't seem to be a better way to do it.
                  var innerNode = vnode
                  while (innerNode.componentInstance) {
                    innerNode = innerNode.componentInstance._vnode
                    if (
                      isDef((i = innerNode.data)) &&
                      isDef((i = i.transition))
                    ) {
                      for (i = 0; i < cbs.activate.length; ++i) {
                        cbs.activate[i](emptyNode, innerNode)
                      }
                      insertedVnodeQueue.push(innerNode)
                      break
                    }
                  } // unlike a newly created component,
                  // a reactivated keep-alive component doesn't insert itself
                  insert(parentElm, vnode.elm, refElm)
                }
                function insert(parent, elm, ref$$1) {
                  if (isDef(parent)) {
                    if (isDef(ref$$1)) {
                      if (nodeOps.parentNode(ref$$1) === parent) {
                        nodeOps.insertBefore(parent, elm, ref$$1)
                      }
                    } else {
                      nodeOps.appendChild(parent, elm)
                    }
                  }
                }
                function createChildren(vnode, children, insertedVnodeQueue) {
                  if (Array.isArray(children)) {
                    {
                      checkDuplicateKeys(children)
                    }
                    for (var i = 0; i < children.length; ++i) {
                      createElm(
                        children[i],
                        insertedVnodeQueue,
                        vnode.elm,
                        null,
                        true,
                        children,
                        i
                      )
                    }
                  } else if (isPrimitive(vnode.text)) {
                    nodeOps.appendChild(
                      vnode.elm,
                      nodeOps.createTextNode(String(vnode.text))
                    )
                  }
                }
                function isPatchable(vnode) {
                  while (vnode.componentInstance) {
                    vnode = vnode.componentInstance._vnode
                  }
                  return isDef(vnode.tag)
                }
                function invokeCreateHooks(vnode, insertedVnodeQueue) {
                  for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
                    cbs.create[i$1](emptyNode, vnode)
                  }
                  i = vnode.data.hook // Reuse variable
                  if (isDef(i)) {
                    if (isDef(i.create)) {
                      i.create(emptyNode, vnode)
                    }
                    if (isDef(i.insert)) {
                      insertedVnodeQueue.push(vnode)
                    }
                  }
                } // set scope id attribute for scoped CSS.
                // this is implemented as a special case to avoid the overhead
                // of going through the normal attribute patching process.
                function setScope(vnode) {
                  var i
                  if (isDef((i = vnode.fnScopeId))) {
                    nodeOps.setStyleScope(vnode.elm, i)
                  } else {
                    var ancestor = vnode
                    while (ancestor) {
                      if (
                        isDef((i = ancestor.context)) &&
                        isDef((i = i.$options._scopeId))
                      ) {
                        nodeOps.setStyleScope(vnode.elm, i)
                      }
                      ancestor = ancestor.parent
                    }
                  } // for slot content they should also get the scopeId from the host instance.
                  if (
                    isDef((i = activeInstance)) &&
                    i !== vnode.context &&
                    i !== vnode.fnContext &&
                    isDef((i = i.$options._scopeId))
                  ) {
                    nodeOps.setStyleScope(vnode.elm, i)
                  }
                }
                function addVnodes(
                  parentElm,
                  refElm,
                  vnodes,
                  startIdx,
                  endIdx,
                  insertedVnodeQueue
                ) {
                  for (; startIdx <= endIdx; ++startIdx) {
                    createElm(
                      vnodes[startIdx],
                      insertedVnodeQueue,
                      parentElm,
                      refElm,
                      false,
                      vnodes,
                      startIdx
                    )
                  }
                }
                function invokeDestroyHook(vnode) {
                  var i, j
                  var data = vnode.data
                  if (isDef(data)) {
                    if (isDef((i = data.hook)) && isDef((i = i.destroy))) {
                      i(vnode)
                    }
                    for (i = 0; i < cbs.destroy.length; ++i) {
                      cbs.destroy[i](vnode)
                    }
                  }
                  if (isDef((i = vnode.children))) {
                    for (j = 0; j < vnode.children.length; ++j) {
                      invokeDestroyHook(vnode.children[j])
                    }
                  }
                }
                function removeVnodes(vnodes, startIdx, endIdx) {
                  for (; startIdx <= endIdx; ++startIdx) {
                    var ch = vnodes[startIdx]
                    if (isDef(ch)) {
                      if (isDef(ch.tag)) {
                        removeAndInvokeRemoveHook(ch)
                        invokeDestroyHook(ch)
                      } else {
                        // Text node
                        removeNode(ch.elm)
                      }
                    }
                  }
                }
                function removeAndInvokeRemoveHook(vnode, rm) {
                  if (isDef(rm) || isDef(vnode.data)) {
                    var i
                    var listeners = cbs.remove.length + 1
                    if (isDef(rm)) {
                      // we have a recursively passed down rm callback
                      // increase the listeners count
                      rm.listeners += listeners
                    } else {
                      // directly removing
                      rm = createRmCb(vnode.elm, listeners)
                    } // recursively invoke hooks on child component root node
                    if (
                      isDef((i = vnode.componentInstance)) &&
                      isDef((i = i._vnode)) &&
                      isDef(i.data)
                    ) {
                      removeAndInvokeRemoveHook(i, rm)
                    }
                    for (i = 0; i < cbs.remove.length; ++i) {
                      cbs.remove[i](vnode, rm)
                    }
                    if (isDef((i = vnode.data.hook)) && isDef((i = i.remove))) {
                      i(vnode, rm)
                    } else {
                      rm()
                    }
                  } else {
                    removeNode(vnode.elm)
                  }
                }
                function updateChildren(
                  parentElm,
                  oldCh,
                  newCh,
                  insertedVnodeQueue,
                  removeOnly
                ) {
                  var oldStartIdx = 0
                  var newStartIdx = 0
                  var oldEndIdx = oldCh.length - 1
                  var oldStartVnode = oldCh[0]
                  var oldEndVnode = oldCh[oldEndIdx]
                  var newEndIdx = newCh.length - 1
                  var newStartVnode = newCh[0]
                  var newEndVnode = newCh[newEndIdx]
                  var oldKeyToIdx, idxInOld, vnodeToMove, refElm // removeOnly is a special flag used only by <transition-group>
                  // to ensure removed elements stay in correct relative positions
                  // during leaving transitions
                  var canMove = !removeOnly
                  {
                    checkDuplicateKeys(newCh)
                  }
                  while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
                    if (isUndef(oldStartVnode)) {
                      oldStartVnode = oldCh[++oldStartIdx] // Vnode has been moved left
                    } else if (isUndef(oldEndVnode)) {
                      oldEndVnode = oldCh[--oldEndIdx]
                    } else if (sameVnode(oldStartVnode, newStartVnode)) {
                      patchVnode(
                        oldStartVnode,
                        newStartVnode,
                        insertedVnodeQueue,
                        newCh,
                        newStartIdx
                      )
                      oldStartVnode = oldCh[++oldStartIdx]
                      newStartVnode = newCh[++newStartIdx]
                    } else if (sameVnode(oldEndVnode, newEndVnode)) {
                      patchVnode(
                        oldEndVnode,
                        newEndVnode,
                        insertedVnodeQueue,
                        newCh,
                        newEndIdx
                      )
                      oldEndVnode = oldCh[--oldEndIdx]
                      newEndVnode = newCh[--newEndIdx]
                    } else if (sameVnode(oldStartVnode, newEndVnode)) {
                      // Vnode moved right
                      patchVnode(
                        oldStartVnode,
                        newEndVnode,
                        insertedVnodeQueue,
                        newCh,
                        newEndIdx
                      )
                      canMove &&
                        nodeOps.insertBefore(
                          parentElm,
                          oldStartVnode.elm,
                          nodeOps.nextSibling(oldEndVnode.elm)
                        )
                      oldStartVnode = oldCh[++oldStartIdx]
                      newEndVnode = newCh[--newEndIdx]
                    } else if (sameVnode(oldEndVnode, newStartVnode)) {
                      // Vnode moved left
                      patchVnode(
                        oldEndVnode,
                        newStartVnode,
                        insertedVnodeQueue,
                        newCh,
                        newStartIdx
                      )
                      canMove &&
                        nodeOps.insertBefore(
                          parentElm,
                          oldEndVnode.elm,
                          oldStartVnode.elm
                        )
                      oldEndVnode = oldCh[--oldEndIdx]
                      newStartVnode = newCh[++newStartIdx]
                    } else {
                      if (isUndef(oldKeyToIdx)) {
                        oldKeyToIdx = createKeyToOldIdx(
                          oldCh,
                          oldStartIdx,
                          oldEndIdx
                        )
                      }
                      idxInOld = isDef(newStartVnode.key)
                        ? oldKeyToIdx[newStartVnode.key]
                        : findIdxInOld(
                            newStartVnode,
                            oldCh,
                            oldStartIdx,
                            oldEndIdx
                          )
                      if (isUndef(idxInOld)) {
                        // New element
                        createElm(
                          newStartVnode,
                          insertedVnodeQueue,
                          parentElm,
                          oldStartVnode.elm,
                          false,
                          newCh,
                          newStartIdx
                        )
                      } else {
                        vnodeToMove = oldCh[idxInOld]
                        if (sameVnode(vnodeToMove, newStartVnode)) {
                          patchVnode(
                            vnodeToMove,
                            newStartVnode,
                            insertedVnodeQueue,
                            newCh,
                            newStartIdx
                          )
                          oldCh[idxInOld] = undefined
                          canMove &&
                            nodeOps.insertBefore(
                              parentElm,
                              vnodeToMove.elm,
                              oldStartVnode.elm
                            )
                        } else {
                          // same key but different element. treat as new element
                          createElm(
                            newStartVnode,
                            insertedVnodeQueue,
                            parentElm,
                            oldStartVnode.elm,
                            false,
                            newCh,
                            newStartIdx
                          )
                        }
                      }
                      newStartVnode = newCh[++newStartIdx]
                    }
                  }
                  if (oldStartIdx > oldEndIdx) {
                    refElm = isUndef(newCh[newEndIdx + 1])
                      ? null
                      : newCh[newEndIdx + 1].elm
                    addVnodes(
                      parentElm,
                      refElm,
                      newCh,
                      newStartIdx,
                      newEndIdx,
                      insertedVnodeQueue
                    )
                  } else if (newStartIdx > newEndIdx) {
                    removeVnodes(oldCh, oldStartIdx, oldEndIdx)
                  }
                }
                function checkDuplicateKeys(children) {
                  var seenKeys = {}
                  for (var i = 0; i < children.length; i++) {
                    var vnode = children[i]
                    var key = vnode.key
                    if (isDef(key)) {
                      if (seenKeys[key]) {
                        warn(
                          "Duplicate keys detected: '" +
                            key +
                            "'. This may cause an update error.",
                          vnode.context
                        )
                      } else {
                        seenKeys[key] = true
                      }
                    }
                  }
                }
                function findIdxInOld(node, oldCh, start, end) {
                  for (var i = start; i < end; i++) {
                    var c = oldCh[i]
                    if (isDef(c) && sameVnode(node, c)) {
                      return i
                    }
                  }
                }
                function patchVnode(
                  oldVnode,
                  vnode,
                  insertedVnodeQueue,
                  ownerArray,
                  index,
                  removeOnly
                ) {
                  if (oldVnode === vnode) {
                    return
                  }
                  if (isDef(vnode.elm) && isDef(ownerArray)) {
                    // clone reused vnode
                    vnode = ownerArray[index] = cloneVNode(vnode)
                  }
                  var elm = (vnode.elm = oldVnode.elm)
                  if (isTrue(oldVnode.isAsyncPlaceholder)) {
                    if (isDef(vnode.asyncFactory.resolved)) {
                      hydrate(oldVnode.elm, vnode, insertedVnodeQueue)
                    } else {
                      vnode.isAsyncPlaceholder = true
                    }
                    return
                  } // reuse element for static trees.
                  // note we only do this if the vnode is cloned -
                  // if the new node is not cloned it means the render functions have been
                  // reset by the hot-reload-api and we need to do a proper re-render.
                  if (
                    isTrue(vnode.isStatic) &&
                    isTrue(oldVnode.isStatic) &&
                    vnode.key === oldVnode.key &&
                    (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))
                  ) {
                    vnode.componentInstance = oldVnode.componentInstance
                    return
                  }
                  var i
                  var data = vnode.data
                  if (
                    isDef(data) &&
                    isDef((i = data.hook)) &&
                    isDef((i = i.prepatch))
                  ) {
                    i(oldVnode, vnode)
                  }
                  var oldCh = oldVnode.children
                  var ch = vnode.children
                  if (isDef(data) && isPatchable(vnode)) {
                    for (i = 0; i < cbs.update.length; ++i) {
                      cbs.update[i](oldVnode, vnode)
                    }
                    if (isDef((i = data.hook)) && isDef((i = i.update))) {
                      i(oldVnode, vnode)
                    }
                  }
                  if (isUndef(vnode.text)) {
                    if (isDef(oldCh) && isDef(ch)) {
                      if (oldCh !== ch) {
                        updateChildren(
                          elm,
                          oldCh,
                          ch,
                          insertedVnodeQueue,
                          removeOnly
                        )
                      }
                    } else if (isDef(ch)) {
                      {
                        checkDuplicateKeys(ch)
                      }
                      if (isDef(oldVnode.text)) {
                        nodeOps.setTextContent(elm, '')
                      }
                      addVnodes(
                        elm,
                        null,
                        ch,
                        0,
                        ch.length - 1,
                        insertedVnodeQueue
                      )
                    } else if (isDef(oldCh)) {
                      removeVnodes(oldCh, 0, oldCh.length - 1)
                    } else if (isDef(oldVnode.text)) {
                      nodeOps.setTextContent(elm, '')
                    }
                  } else if (oldVnode.text !== vnode.text) {
                    nodeOps.setTextContent(elm, vnode.text)
                  }
                  if (isDef(data)) {
                    if (isDef((i = data.hook)) && isDef((i = i.postpatch))) {
                      i(oldVnode, vnode)
                    }
                  }
                }
                function invokeInsertHook(vnode, queue, initial) {
                  // delay insert hooks for component root nodes, invoke them after the
                  // element is really inserted
                  if (isTrue(initial) && isDef(vnode.parent)) {
                    vnode.parent.data.pendingInsert = queue
                  } else {
                    for (var i = 0; i < queue.length; ++i) {
                      queue[i].data.hook.insert(queue[i])
                    }
                  }
                }
                var hydrationBailed = false // list of modules that can skip create hook during hydration because they
                // are already rendered on the client or has no need for initialization
                // Note: style is excluded because it relies on initial clone for future
                // deep updates (#7063).
                var isRenderedModule = makeMap(
                  'attrs,class,staticClass,staticStyle,key'
                ) // Note: this is a browser-only function so we can assume elms are DOM nodes.
                function hydrate(elm, vnode, insertedVnodeQueue, inVPre) {
                  var i
                  var tag = vnode.tag
                  var data = vnode.data
                  var children = vnode.children
                  inVPre = inVPre || (data && data.pre)
                  vnode.elm = elm
                  if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {
                    vnode.isAsyncPlaceholder = true
                    return true
                  } // assert node match
                  {
                    if (!assertNodeMatch(elm, vnode, inVPre)) {
                      return false
                    }
                  }
                  if (isDef(data)) {
                    if (isDef((i = data.hook)) && isDef((i = i.init))) {
                      i(vnode, true /* hydrating */)
                    }
                    if (isDef((i = vnode.componentInstance))) {
                      // child component. it should have hydrated its own tree.
                      initComponent(vnode, insertedVnodeQueue)
                      return true
                    }
                  }
                  if (isDef(tag)) {
                    if (isDef(children)) {
                      // empty element, allow client to pick up and populate children
                      if (!elm.hasChildNodes()) {
                        createChildren(vnode, children, insertedVnodeQueue)
                      } else {
                        // v-html and domProps: innerHTML
                        if (
                          isDef((i = data)) &&
                          isDef((i = i.domProps)) &&
                          isDef((i = i.innerHTML))
                        ) {
                          if (i !== elm.innerHTML) {
                            /* istanbul ignore if */ if (
                              typeof console !== 'undefined' &&
                              !hydrationBailed
                            ) {
                              hydrationBailed = true
                              console.warn('Parent: ', elm)
                              console.warn('server innerHTML: ', i)
                              console.warn('client innerHTML: ', elm.innerHTML)
                            }
                            return false
                          }
                        } else {
                          // iterate and compare children lists
                          var childrenMatch = true
                          var childNode = elm.firstChild
                          for (var i$1 = 0; i$1 < children.length; i$1++) {
                            if (
                              !childNode ||
                              !hydrate(
                                childNode,
                                children[i$1],
                                insertedVnodeQueue,
                                inVPre
                              )
                            ) {
                              childrenMatch = false
                              break
                            }
                            childNode = childNode.nextSibling
                          } // if childNode is not null, it means the actual childNodes list is
                          // longer than the virtual children list.
                          if (!childrenMatch || childNode) {
                            /* istanbul ignore if */ if (
                              typeof console !== 'undefined' &&
                              !hydrationBailed
                            ) {
                              hydrationBailed = true
                              console.warn('Parent: ', elm)
                              console.warn(
                                'Mismatching childNodes vs. VNodes: ',
                                elm.childNodes,
                                children
                              )
                            }
                            return false
                          }
                        }
                      }
                    }
                    if (isDef(data)) {
                      var fullInvoke = false
                      for (var key in data) {
                        if (!isRenderedModule(key)) {
                          fullInvoke = true
                          invokeCreateHooks(vnode, insertedVnodeQueue)
                          break
                        }
                      }
                      if (!fullInvoke && data['class']) {
                        // ensure collecting deps for deep class bindings for future updates
                        traverse(data['class'])
                      }
                    }
                  } else if (elm.data !== vnode.text) {
                    elm.data = vnode.text
                  }
                  return true
                }
                function assertNodeMatch(node, vnode, inVPre) {
                  if (isDef(vnode.tag)) {
                    return (
                      vnode.tag.indexOf('vue-component') === 0 ||
                      (!isUnknownElement$$1(vnode, inVPre) &&
                        vnode.tag.toLowerCase() ===
                          (node.tagName && node.tagName.toLowerCase()))
                    )
                  } else {
                    return node.nodeType === (vnode.isComment ? 8 : 3)
                  }
                }
                return function patch(oldVnode, vnode, hydrating, removeOnly) {
                  if (isUndef(vnode)) {
                    if (isDef(oldVnode)) {
                      invokeDestroyHook(oldVnode)
                    }
                    return
                  }
                  var isInitialPatch = false
                  var insertedVnodeQueue = []
                  if (isUndef(oldVnode)) {
                    // empty mount (likely as component), create new root element
                    isInitialPatch = true
                    createElm(vnode, insertedVnodeQueue)
                  } else {
                    var isRealElement = isDef(oldVnode.nodeType)
                    if (!isRealElement && sameVnode(oldVnode, vnode)) {
                      // patch existing root node
                      patchVnode(
                        oldVnode,
                        vnode,
                        insertedVnodeQueue,
                        null,
                        null,
                        removeOnly
                      )
                    } else {
                      if (isRealElement) {
                        // mounting to a real element
                        // check if this is server-rendered content and if we can perform
                        // a successful hydration.
                        if (
                          oldVnode.nodeType === 1 &&
                          oldVnode.hasAttribute(SSR_ATTR)
                        ) {
                          oldVnode.removeAttribute(SSR_ATTR)
                          hydrating = true
                        }
                        if (isTrue(hydrating)) {
                          if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {
                            invokeInsertHook(vnode, insertedVnodeQueue, true)
                            return oldVnode
                          } else {
                            warn(
                              'The client-side rendered virtual DOM tree is not matching ' +
                                'server-rendered content. This is likely caused by incorrect ' +
                                'HTML markup, for example nesting block-level elements inside ' +
                                '<p>, or missing <tbody>. Bailing hydration and performing ' +
                                'full client-side render.'
                            )
                          }
                        } // either not server-rendered, or hydration failed.
                        // create an empty node and replace it
                        oldVnode = emptyNodeAt(oldVnode)
                      } // replacing existing element
                      var oldElm = oldVnode.elm
                      var parentElm = nodeOps.parentNode(oldElm) // create new node
                      createElm(
                        vnode,
                        insertedVnodeQueue, // extremely rare edge case: do not insert if old element is in a
                        // leaving transition. Only happens when combining transition +
                        // keep-alive + HOCs. (#4590)
                        oldElm._leaveCb ? null : parentElm,
                        nodeOps.nextSibling(oldElm)
                      ) // update parent placeholder node element, recursively
                      if (isDef(vnode.parent)) {
                        var ancestor = vnode.parent
                        var patchable = isPatchable(vnode)
                        while (ancestor) {
                          for (var i = 0; i < cbs.destroy.length; ++i) {
                            cbs.destroy[i](ancestor)
                          }
                          ancestor.elm = vnode.elm
                          if (patchable) {
                            for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
                              cbs.create[i$1](emptyNode, ancestor)
                            } // #6513
                            // invoke insert hooks that may have been merged by create hooks.
                            // e.g. for directives that uses the "inserted" hook.
                            var insert = ancestor.data.hook.insert
                            if (insert.merged) {
                              // start at index 1 to avoid re-invoking component mounted hook
                              for (
                                var i$2 = 1;
                                i$2 < insert.fns.length;
                                i$2++
                              ) {
                                insert.fns[i$2]()
                              }
                            }
                          } else {
                            registerRef(ancestor)
                          }
                          ancestor = ancestor.parent
                        }
                      } // destroy old node
                      if (isDef(parentElm)) {
                        removeVnodes([oldVnode], 0, 0)
                      } else if (isDef(oldVnode.tag)) {
                        invokeDestroyHook(oldVnode)
                      }
                    }
                  }
                  invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch)
                  return vnode.elm
                }
              }
              /*  */ var directives = {
                create: updateDirectives,
                update: updateDirectives,
                destroy: function unbindDirectives(vnode) {
                  updateDirectives(vnode, emptyNode)
                }
              }
              function updateDirectives(oldVnode, vnode) {
                if (oldVnode.data.directives || vnode.data.directives) {
                  _update(oldVnode, vnode)
                }
              }
              function _update(oldVnode, vnode) {
                var isCreate = oldVnode === emptyNode
                var isDestroy = vnode === emptyNode
                var oldDirs = normalizeDirectives$1(
                  oldVnode.data.directives,
                  oldVnode.context
                )
                var newDirs = normalizeDirectives$1(
                  vnode.data.directives,
                  vnode.context
                )
                var dirsWithInsert = []
                var dirsWithPostpatch = []
                var key, oldDir, dir
                for (key in newDirs) {
                  oldDir = oldDirs[key]
                  dir = newDirs[key]
                  if (!oldDir) {
                    // new directive, bind
                    callHook$1(dir, 'bind', vnode, oldVnode)
                    if (dir.def && dir.def.inserted) {
                      dirsWithInsert.push(dir)
                    }
                  } else {
                    // existing directive, update
                    dir.oldValue = oldDir.value
                    dir.oldArg = oldDir.arg
                    callHook$1(dir, 'update', vnode, oldVnode)
                    if (dir.def && dir.def.componentUpdated) {
                      dirsWithPostpatch.push(dir)
                    }
                  }
                }
                if (dirsWithInsert.length) {
                  var callInsert = function callInsert() {
                    for (var i = 0; i < dirsWithInsert.length; i++) {
                      callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode)
                    }
                  }
                  if (isCreate) {
                    mergeVNodeHook(vnode, 'insert', callInsert)
                  } else {
                    callInsert()
                  }
                }
                if (dirsWithPostpatch.length) {
                  mergeVNodeHook(vnode, 'postpatch', function() {
                    for (var i = 0; i < dirsWithPostpatch.length; i++) {
                      callHook$1(
                        dirsWithPostpatch[i],
                        'componentUpdated',
                        vnode,
                        oldVnode
                      )
                    }
                  })
                }
                if (!isCreate) {
                  for (key in oldDirs) {
                    if (!newDirs[key]) {
                      // no longer present, unbind
                      callHook$1(
                        oldDirs[key],
                        'unbind',
                        oldVnode,
                        oldVnode,
                        isDestroy
                      )
                    }
                  }
                }
              }
              var emptyModifiers = Object.create(null)
              function normalizeDirectives$1(dirs, vm) {
                var res = Object.create(null)
                if (!dirs) {
                  // $flow-disable-line
                  return res
                }
                var i, dir
                for (i = 0; i < dirs.length; i++) {
                  dir = dirs[i]
                  if (!dir.modifiers) {
                    // $flow-disable-line
                    dir.modifiers = emptyModifiers
                  }
                  res[getRawDirName(dir)] = dir
                  dir.def = resolveAsset(
                    vm.$options,
                    'directives',
                    dir.name,
                    true
                  )
                } // $flow-disable-line
                return res
              }
              function getRawDirName(dir) {
                return (
                  dir.rawName ||
                  dir.name + '.' + Object.keys(dir.modifiers || {}).join('.')
                )
              }
              function callHook$1(dir, hook, vnode, oldVnode, isDestroy) {
                var fn = dir.def && dir.def[hook]
                if (fn) {
                  try {
                    fn(vnode.elm, dir, vnode, oldVnode, isDestroy)
                  } catch (e) {
                    handleError(
                      e,
                      vnode.context,
                      'directive ' + dir.name + ' ' + hook + ' hook'
                    )
                  }
                }
              }
              var baseModules = [ref, directives]
              /*  */ function updateAttrs(oldVnode, vnode) {
                var opts = vnode.componentOptions
                if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {
                  return
                }
                if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {
                  return
                }
                var key, cur, old
                var elm = vnode.elm
                var oldAttrs = oldVnode.data.attrs || {}
                var attrs = vnode.data.attrs || {} // clone observed objects, as the user probably wants to mutate it
                if (isDef(attrs.__ob__)) {
                  attrs = vnode.data.attrs = extend({}, attrs)
                }
                for (key in attrs) {
                  cur = attrs[key]
                  old = oldAttrs[key]
                  if (old !== cur) {
                    setAttr(elm, key, cur)
                  }
                } // #4391: in IE9, setting type can reset value for input[type=radio]
                // #6666: IE/Edge forces progress value down to 1 before setting a max
                /* istanbul ignore if */ if (
                  (isIE || isEdge) &&
                  attrs.value !== oldAttrs.value
                ) {
                  setAttr(elm, 'value', attrs.value)
                }
                for (key in oldAttrs) {
                  if (isUndef(attrs[key])) {
                    if (isXlink(key)) {
                      elm.removeAttributeNS(xlinkNS, getXlinkProp(key))
                    } else if (!isEnumeratedAttr(key)) {
                      elm.removeAttribute(key)
                    }
                  }
                }
              }
              function setAttr(el, key, value) {
                if (el.tagName.indexOf('-') > -1) {
                  baseSetAttr(el, key, value)
                } else if (isBooleanAttr(key)) {
                  // set attribute for blank value
                  // e.g. <option disabled>Select one</option>
                  if (isFalsyAttrValue(value)) {
                    el.removeAttribute(key)
                  } else {
                    // technically allowfullscreen is a boolean attribute for <iframe>,
                    // but Flash expects a value of "true" when used on <embed> tag
                    value =
                      key === 'allowfullscreen' && el.tagName === 'EMBED'
                        ? 'true'
                        : key
                    el.setAttribute(key, value)
                  }
                } else if (isEnumeratedAttr(key)) {
                  el.setAttribute(key, convertEnumeratedValue(key, value))
                } else if (isXlink(key)) {
                  if (isFalsyAttrValue(value)) {
                    el.removeAttributeNS(xlinkNS, getXlinkProp(key))
                  } else {
                    el.setAttributeNS(xlinkNS, key, value)
                  }
                } else {
                  baseSetAttr(el, key, value)
                }
              }
              function baseSetAttr(el, key, value) {
                if (isFalsyAttrValue(value)) {
                  el.removeAttribute(key)
                } else {
                  // #7138: IE10 & 11 fires input event when setting placeholder on
                  // <textarea>... block the first input event and remove the blocker
                  // immediately.
                  /* istanbul ignore if */ if (
                    isIE &&
                    !isIE9 &&
                    el.tagName === 'TEXTAREA' &&
                    key === 'placeholder' &&
                    value !== '' &&
                    !el.__ieph
                  ) {
                    var blocker = function blocker(e) {
                      e.stopImmediatePropagation()
                      el.removeEventListener('input', blocker)
                    }
                    el.addEventListener('input', blocker) // $flow-disable-line
                    el.__ieph = true /* IE placeholder patched */
                  }
                  el.setAttribute(key, value)
                }
              }
              var attrs = { create: updateAttrs, update: updateAttrs }
              /*  */ function updateClass(oldVnode, vnode) {
                var el = vnode.elm
                var data = vnode.data
                var oldData = oldVnode.data
                if (
                  isUndef(data.staticClass) &&
                  isUndef(data['class']) &&
                  (isUndef(oldData) ||
                    (isUndef(oldData.staticClass) && isUndef(oldData['class'])))
                ) {
                  return
                }
                var cls = genClassForVnode(vnode) // handle transition classes
                var transitionClass = el._transitionClasses
                if (isDef(transitionClass)) {
                  cls = concat(cls, stringifyClass(transitionClass))
                } // set the class
                if (cls !== el._prevClass) {
                  el.setAttribute('class', cls)
                  el._prevClass = cls
                }
              }
              var klass = { create: updateClass, update: updateClass }
              /*  */ var validDivisionCharRE = /[\w).+\-_$\]]/
              function parseFilters(exp) {
                var inSingle = false
                var inDouble = false
                var inTemplateString = false
                var inRegex = false
                var curly = 0
                var square = 0
                var paren = 0
                var lastFilterIndex = 0
                var c, prev, i, expression, filters
                for (i = 0; i < exp.length; i++) {
                  prev = c
                  c = exp.charCodeAt(i)
                  if (inSingle) {
                    if (c === 0x27 && prev !== 0x5c) {
                      inSingle = false
                    }
                  } else if (inDouble) {
                    if (c === 0x22 && prev !== 0x5c) {
                      inDouble = false
                    }
                  } else if (inTemplateString) {
                    if (c === 0x60 && prev !== 0x5c) {
                      inTemplateString = false
                    }
                  } else if (inRegex) {
                    if (c === 0x2f && prev !== 0x5c) {
                      inRegex = false
                    }
                  } else if (
                    c === 0x7c && // pipe
                    exp.charCodeAt(i + 1) !== 0x7c &&
                    exp.charCodeAt(i - 1) !== 0x7c &&
                    !curly &&
                    !square &&
                    !paren
                  ) {
                    if (expression === undefined) {
                      // first filter, end of expression
                      lastFilterIndex = i + 1
                      expression = exp.slice(0, i).trim()
                    } else {
                      pushFilter()
                    }
                  } else {
                    switch (c) {
                      case 0x22:
                        inDouble = true
                        break // "
                      case 0x27:
                        inSingle = true
                        break // '
                      case 0x60:
                        inTemplateString = true
                        break // `
                      case 0x28:
                        paren++
                        break // (
                      case 0x29:
                        paren--
                        break // )
                      case 0x5b:
                        square++
                        break // [
                      case 0x5d:
                        square--
                        break // ]
                      case 0x7b:
                        curly++
                        break // {
                      case 0x7d:
                        curly--
                        break // }
                    }
                    if (c === 0x2f) {
                      // /
                      var j = i - 1
                      var p = void 0 // find first non-whitespace prev char
                      for (; j >= 0; j--) {
                        p = exp.charAt(j)
                        if (p !== ' ') {
                          break
                        }
                      }
                      if (!p || !validDivisionCharRE.test(p)) {
                        inRegex = true
                      }
                    }
                  }
                }
                if (expression === undefined) {
                  expression = exp.slice(0, i).trim()
                } else if (lastFilterIndex !== 0) {
                  pushFilter()
                }
                function pushFilter() {
                  ;(filters || (filters = [])).push(
                    exp.slice(lastFilterIndex, i).trim()
                  )
                  lastFilterIndex = i + 1
                }
                if (filters) {
                  for (i = 0; i < filters.length; i++) {
                    expression = wrapFilter(expression, filters[i])
                  }
                }
                return expression
              }
              function wrapFilter(exp, filter) {
                var i = filter.indexOf('(')
                if (i < 0) {
                  // _f: resolveFilter
                  return '_f("' + filter + '")(' + exp + ')'
                } else {
                  var name = filter.slice(0, i)
                  var args = filter.slice(i + 1)
                  return (
                    '_f("' +
                    name +
                    '")(' +
                    exp +
                    (args !== ')' ? ',' + args : args)
                  )
                }
              }
              /*  */ /* eslint-disable no-unused-vars */ function baseWarn(
                msg,
                range
              ) {
                console.error('[Vue compiler]: ' + msg)
              }
              /* eslint-enable no-unused-vars */ function pluckModuleFunction(
                modules,
                key
              ) {
                return modules
                  ? modules
                      .map(function(m) {
                        return m[key]
                      })
                      .filter(function(_) {
                        return _
                      })
                  : []
              }
              function addProp(el, name, value, range, dynamic) {
                ;(el.props || (el.props = [])).push(
                  rangeSetItem(
                    { name: name, value: value, dynamic: dynamic },
                    range
                  )
                )
                el.plain = false
              }
              function addAttr(el, name, value, range, dynamic) {
                var attrs = dynamic
                  ? el.dynamicAttrs || (el.dynamicAttrs = [])
                  : el.attrs || (el.attrs = [])
                attrs.push(
                  rangeSetItem(
                    { name: name, value: value, dynamic: dynamic },
                    range
                  )
                )
                el.plain = false
              } // add a raw attr (use this in preTransforms)
              function addRawAttr(el, name, value, range) {
                el.attrsMap[name] = value
                el.attrsList.push(
                  rangeSetItem({ name: name, value: value }, range)
                )
              }
              function addDirective(
                el,
                name,
                rawName,
                value,
                arg,
                isDynamicArg,
                modifiers,
                range
              ) {
                ;(el.directives || (el.directives = [])).push(
                  rangeSetItem(
                    {
                      name: name,
                      rawName: rawName,
                      value: value,
                      arg: arg,
                      isDynamicArg: isDynamicArg,
                      modifiers: modifiers
                    },
                    range
                  )
                )
                el.plain = false
              }
              function prependModifierMarker(symbol, name, dynamic) {
                return dynamic
                  ? '_p(' + name + ',"' + symbol + '")'
                  : symbol + name // mark the event as captured
              }
              function addHandler(
                el,
                name,
                value,
                modifiers,
                important,
                warn,
                range,
                dynamic
              ) {
                modifiers = modifiers || emptyObject // warn prevent and passive modifier
                /* istanbul ignore if */ if (
                  warn &&
                  modifiers.prevent &&
                  modifiers.passive
                ) {
                  warn(
                    "passive and prevent can't be used together. " +
                      "Passive handler can't prevent default event.",
                    range
                  )
                } // normalize click.right and click.middle since they don't actually fire
                // this is technically browser-specific, but at least for now browsers are
                // the only target envs that have right/middle clicks.
                if (modifiers.right) {
                  if (dynamic) {
                    name =
                      '(' + name + ")==='click'?'contextmenu':(" + name + ')'
                  } else if (name === 'click') {
                    name = 'contextmenu'
                    delete modifiers.right
                  }
                } else if (modifiers.middle) {
                  if (dynamic) {
                    name = '(' + name + ")==='click'?'mouseup':(" + name + ')'
                  } else if (name === 'click') {
                    name = 'mouseup'
                  }
                } // check capture modifier
                if (modifiers.capture) {
                  delete modifiers.capture
                  name = prependModifierMarker('!', name, dynamic)
                }
                if (modifiers.once) {
                  delete modifiers.once
                  name = prependModifierMarker('~', name, dynamic)
                }
                /* istanbul ignore if */ if (modifiers.passive) {
                  delete modifiers.passive
                  name = prependModifierMarker('&', name, dynamic)
                }
                var events
                if (modifiers['native']) {
                  delete modifiers['native']
                  events = el.nativeEvents || (el.nativeEvents = {})
                } else {
                  events = el.events || (el.events = {})
                }
                var newHandler = rangeSetItem(
                  { value: value.trim(), dynamic: dynamic },
                  range
                )
                if (modifiers !== emptyObject) {
                  newHandler.modifiers = modifiers
                }
                var handlers = events[name]
                /* istanbul ignore if */ if (Array.isArray(handlers)) {
                  important
                    ? handlers.unshift(newHandler)
                    : handlers.push(newHandler)
                } else if (handlers) {
                  events[name] = important
                    ? [newHandler, handlers]
                    : [handlers, newHandler]
                } else {
                  events[name] = newHandler
                }
                el.plain = false
              }
              function getRawBindingAttr(el, name) {
                return (
                  el.rawAttrsMap[':' + name] ||
                  el.rawAttrsMap['v-bind:' + name] ||
                  el.rawAttrsMap[name]
                )
              }
              function getBindingAttr(el, name, getStatic) {
                var dynamicValue =
                  getAndRemoveAttr(el, ':' + name) ||
                  getAndRemoveAttr(el, 'v-bind:' + name)
                if (dynamicValue != null) {
                  return parseFilters(dynamicValue)
                } else if (getStatic !== false) {
                  var staticValue = getAndRemoveAttr(el, name)
                  if (staticValue != null) {
                    return JSON.stringify(staticValue)
                  }
                }
              } // note: this only removes the attr from the Array (attrsList) so that it
              // doesn't get processed by processAttrs.
              // By default it does NOT remove it from the map (attrsMap) because the map is
              // needed during codegen.
              function getAndRemoveAttr(el, name, removeFromMap) {
                var val
                if ((val = el.attrsMap[name]) != null) {
                  var list = el.attrsList
                  for (var i = 0, l = list.length; i < l; i++) {
                    if (list[i].name === name) {
                      list.splice(i, 1)
                      break
                    }
                  }
                }
                if (removeFromMap) {
                  delete el.attrsMap[name]
                }
                return val
              }
              function getAndRemoveAttrByRegex(el, name) {
                var list = el.attrsList
                for (var i = 0, l = list.length; i < l; i++) {
                  var attr = list[i]
                  if (name.test(attr.name)) {
                    list.splice(i, 1)
                    return attr
                  }
                }
              }
              function rangeSetItem(item, range) {
                if (range) {
                  if (range.start != null) {
                    item.start = range.start
                  }
                  if (range.end != null) {
                    item.end = range.end
                  }
                }
                return item
              }
              /*  */ /**
               * Cross-platform code generation for component v-model
               */ function genComponentModel(el, value, modifiers) {
                var ref = modifiers || {}
                var number = ref.number
                var trim = ref.trim
                var baseValueExpression = '$$v'
                var valueExpression = baseValueExpression
                if (trim) {
                  valueExpression =
                    '(typeof ' +
                    baseValueExpression +
                    " === 'string'" +
                    '? ' +
                    baseValueExpression +
                    '.trim()' +
                    ': ' +
                    baseValueExpression +
                    ')'
                }
                if (number) {
                  valueExpression = '_n(' + valueExpression + ')'
                }
                var assignment = genAssignmentCode(value, valueExpression)
                el.model = {
                  value: '(' + value + ')',
                  expression: JSON.stringify(value),
                  callback:
                    'function (' +
                    baseValueExpression +
                    ') {' +
                    assignment +
                    '}'
                }
              }
              /**
               * Cross-platform codegen helper for generating v-model value assignment code.
               */ function genAssignmentCode(value, assignment) {
                var res = parseModel(value)
                if (res.key === null) {
                  return value + '=' + assignment
                } else {
                  return (
                    '$set(' + res.exp + ', ' + res.key + ', ' + assignment + ')'
                  )
                }
              }
              /**
               * Parse a v-model expression into a base path and a final key segment.
               * Handles both dot-path and possible square brackets.
               *
               * Possible cases:
               *
               * - test
               * - test[key]
               * - test[test1[key]]
               * - test["a"][key]
               * - xxx.test[a[a].test1[key]]
               * - test.xxx.a["asa"][test1[key]]
               *
               */ var len, str, chr, index$1, expressionPos, expressionEndPos
              function parseModel(val) {
                // Fix https://github.com/vuejs/vue/pull/7730
                // allow v-model="obj.val " (trailing whitespace)
                val = val.trim()
                len = val.length
                if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {
                  index$1 = val.lastIndexOf('.')
                  if (index$1 > -1) {
                    return {
                      exp: val.slice(0, index$1),
                      key: '"' + val.slice(index$1 + 1) + '"'
                    }
                  } else {
                    return { exp: val, key: null }
                  }
                }
                str = val
                index$1 = expressionPos = expressionEndPos = 0
                while (!eof()) {
                  chr = next()
                  /* istanbul ignore if */ if (isStringStart(chr)) {
                    parseString(chr)
                  } else if (chr === 0x5b) {
                    parseBracket(chr)
                  }
                }
                return {
                  exp: val.slice(0, expressionPos),
                  key: val.slice(expressionPos + 1, expressionEndPos)
                }
              }
              function next() {
                return str.charCodeAt(++index$1)
              }
              function eof() {
                return index$1 >= len
              }
              function isStringStart(chr) {
                return chr === 0x22 || chr === 0x27
              }
              function parseBracket(chr) {
                var inBracket = 1
                expressionPos = index$1
                while (!eof()) {
                  chr = next()
                  if (isStringStart(chr)) {
                    parseString(chr)
                    continue
                  }
                  if (chr === 0x5b) {
                    inBracket++
                  }
                  if (chr === 0x5d) {
                    inBracket--
                  }
                  if (inBracket === 0) {
                    expressionEndPos = index$1
                    break
                  }
                }
              }
              function parseString(chr) {
                var stringQuote = chr
                while (!eof()) {
                  chr = next()
                  if (chr === stringQuote) {
                    break
                  }
                }
              }
              /*  */ var warn$1 // in some cases, the event used has to be determined at runtime
              // so we used some reserved tokens during compile.
              var RANGE_TOKEN = '__r'
              var CHECKBOX_RADIO_TOKEN = '__c'
              function model(el, dir, _warn) {
                warn$1 = _warn
                var value = dir.value
                var modifiers = dir.modifiers
                var tag = el.tag
                var type = el.attrsMap.type
                {
                  // inputs with type="file" are read only and setting the input's
                  // value will throw an error.
                  if (tag === 'input' && type === 'file') {
                    warn$1(
                      '<' +
                        el.tag +
                        ' v-model="' +
                        value +
                        '" type="file">:\n' +
                        'File inputs are read only. Use a v-on:change listener instead.',
                      el.rawAttrsMap['v-model']
                    )
                  }
                }
                if (el.component) {
                  genComponentModel(el, value, modifiers) // component v-model doesn't need extra runtime
                  return false
                } else if (tag === 'select') {
                  genSelect(el, value, modifiers)
                } else if (tag === 'input' && type === 'checkbox') {
                  genCheckboxModel(el, value, modifiers)
                } else if (tag === 'input' && type === 'radio') {
                  genRadioModel(el, value, modifiers)
                } else if (tag === 'input' || tag === 'textarea') {
                  genDefaultModel(el, value, modifiers)
                } else if (!config.isReservedTag(tag)) {
                  genComponentModel(el, value, modifiers) // component v-model doesn't need extra runtime
                  return false
                } else {
                  warn$1(
                    '<' +
                      el.tag +
                      ' v-model="' +
                      value +
                      '">: ' +
                      'v-model is not supported on this element type. ' +
                      "If you are working with contenteditable, it's recommended to " +
                      'wrap a library dedicated for that purpose inside a custom component.',
                    el.rawAttrsMap['v-model']
                  )
                } // ensure runtime directive metadata
                return true
              }
              function genCheckboxModel(el, value, modifiers) {
                var number = modifiers && modifiers.number
                var valueBinding = getBindingAttr(el, 'value') || 'null'
                var trueValueBinding =
                  getBindingAttr(el, 'true-value') || 'true'
                var falseValueBinding =
                  getBindingAttr(el, 'false-value') || 'false'
                addProp(
                  el,
                  'checked',
                  'Array.isArray(' +
                    value +
                    ')' +
                    '?_i(' +
                    value +
                    ',' +
                    valueBinding +
                    ')>-1' +
                    (trueValueBinding === 'true'
                      ? ':(' + value + ')'
                      : ':_q(' + value + ',' + trueValueBinding + ')')
                )
                addHandler(
                  el,
                  'change',
                  'var $$a=' +
                    value +
                    ',' +
                    '$$el=$event.target,' +
                    '$$c=$$el.checked?(' +
                    trueValueBinding +
                    '):(' +
                    falseValueBinding +
                    ');' +
                    'if(Array.isArray($$a)){' +
                    'var $$v=' +
                    (number ? '_n(' + valueBinding + ')' : valueBinding) +
                    ',' +
                    '$$i=_i($$a,$$v);' +
                    'if($$el.checked){$$i<0&&(' +
                    genAssignmentCode(value, '$$a.concat([$$v])') +
                    ')}' +
                    'else{$$i>-1&&(' +
                    genAssignmentCode(
                      value,
                      '$$a.slice(0,$$i).concat($$a.slice($$i+1))'
                    ) +
                    ')}' +
                    '}else{' +
                    genAssignmentCode(value, '$$c') +
                    '}',
                  null,
                  true
                )
              }
              function genRadioModel(el, value, modifiers) {
                var number = modifiers && modifiers.number
                var valueBinding = getBindingAttr(el, 'value') || 'null'
                valueBinding = number
                  ? '_n(' + valueBinding + ')'
                  : valueBinding
                addProp(el, 'checked', '_q(' + value + ',' + valueBinding + ')')
                addHandler(
                  el,
                  'change',
                  genAssignmentCode(value, valueBinding),
                  null,
                  true
                )
              }
              function genSelect(el, value, modifiers) {
                var number = modifiers && modifiers.number
                var selectedVal =
                  'Array.prototype.filter' +
                  '.call($event.target.options,function(o){return o.selected})' +
                  '.map(function(o){var val = "_value" in o ? o._value : o.value;' +
                  'return ' +
                  (number ? '_n(val)' : 'val') +
                  '})'
                var assignment =
                  '$event.target.multiple ? $$selectedVal : $$selectedVal[0]'
                var code = 'var $$selectedVal = ' + selectedVal + ';'
                code = code + ' ' + genAssignmentCode(value, assignment)
                addHandler(el, 'change', code, null, true)
              }
              function genDefaultModel(el, value, modifiers) {
                var type = el.attrsMap.type // warn if v-bind:value conflicts with v-model
                // except for inputs with v-bind:type
                {
                  var value$1 =
                    el.attrsMap['v-bind:value'] || el.attrsMap[':value']
                  var typeBinding =
                    el.attrsMap['v-bind:type'] || el.attrsMap[':type']
                  if (value$1 && !typeBinding) {
                    var binding = el.attrsMap['v-bind:value']
                      ? 'v-bind:value'
                      : ':value'
                    warn$1(
                      binding +
                        '="' +
                        value$1 +
                        '" conflicts with v-model on the same element ' +
                        'because the latter already expands to a value binding internally',
                      el.rawAttrsMap[binding]
                    )
                  }
                }
                var ref = modifiers || {}
                var lazy = ref.lazy
                var number = ref.number
                var trim = ref.trim
                var needCompositionGuard = !lazy && type !== 'range'
                var event = lazy
                  ? 'change'
                  : type === 'range'
                  ? RANGE_TOKEN
                  : 'input'
                var valueExpression = '$event.target.value'
                if (trim) {
                  valueExpression = '$event.target.value.trim()'
                }
                if (number) {
                  valueExpression = '_n(' + valueExpression + ')'
                }
                var code = genAssignmentCode(value, valueExpression)
                if (needCompositionGuard) {
                  code = 'if($event.target.composing)return;' + code
                }
                addProp(el, 'value', '(' + value + ')')
                addHandler(el, event, code, null, true)
                if (trim || number) {
                  addHandler(el, 'blur', '$forceUpdate()')
                }
              } /*  */ // normalize v-model event tokens that can only be determined at runtime.
              // it's important to place the event as the first in the array because
              // the whole point is ensuring the v-model callback gets called before
              // user-attached handlers.
              function normalizeEvents(on) {
                /* istanbul ignore if */ if (isDef(on[RANGE_TOKEN])) {
                  // IE input[type=range] only supports `change` event
                  var event = isIE ? 'change' : 'input'
                  on[event] = [].concat(on[RANGE_TOKEN], on[event] || [])
                  delete on[RANGE_TOKEN]
                } // This was originally intended to fix #4521 but no longer necessary
                // after 2.5. Keeping it for backwards compat with generated code from < 2.4
                /* istanbul ignore if */ if (isDef(on[CHECKBOX_RADIO_TOKEN])) {
                  on.change = [].concat(
                    on[CHECKBOX_RADIO_TOKEN],
                    on.change || []
                  )
                  delete on[CHECKBOX_RADIO_TOKEN]
                }
              }
              var target$1
              function createOnceHandler$1(event, handler, capture) {
                var _target = target$1 // save current target element in closure
                return function onceHandler() {
                  var res = handler.apply(null, arguments)
                  if (res !== null) {
                    remove$2(event, onceHandler, capture, _target)
                  }
                }
              } // #9446: Firefox <= 53 (in particular, ESR 52) has incorrect Event.timeStamp
              // implementation and does not fire microtasks in between event propagation, so
              // safe to exclude.
              var useMicrotaskFix =
                isUsingMicroTask && !(isFF && Number(isFF[1]) <= 53)
              function add$1(name, handler, capture, passive) {
                // async edge case #6566: inner click event triggers patch, event handler
                // attached to outer element during patch, and triggered again. This
                // happens because browsers fire microtask ticks between event propagation.
                // the solution is simple: we save the timestamp when a handler is attached,
                // and the handler would only fire if the event passed to it was fired
                // AFTER it was attached.
                if (useMicrotaskFix) {
                  var attachedTimestamp = currentFlushTimestamp
                  var original = handler
                  handler = original._wrapper = function(e) {
                    if (
                      // no bubbling, should always fire.
                      // this is just a safety net in case event.timeStamp is unreliable in
                      // certain weird environments...
                      e.target === e.currentTarget || // event is fired after handler attachment
                      e.timeStamp >= attachedTimestamp || // bail for environments that have buggy event.timeStamp implementations
                      // #9462 iOS 9 bug: event.timeStamp is 0 after history.pushState
                      // #9681 QtWebEngine event.timeStamp is negative value
                      e.timeStamp <= 0 || // #9448 bail if event is fired in another document in a multi-page
                      // electron/nw.js app, since event.timeStamp will be using a different
                      // starting reference
                      e.target.ownerDocument !== document
                    ) {
                      return original.apply(this, arguments)
                    }
                  }
                }
                target$1.addEventListener(
                  name,
                  handler,
                  supportsPassive
                    ? { capture: capture, passive: passive }
                    : capture
                )
              }
              function remove$2(name, handler, capture, _target) {
                ;(_target || target$1).removeEventListener(
                  name,
                  handler._wrapper || handler,
                  capture
                )
              }
              function updateDOMListeners(oldVnode, vnode) {
                if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {
                  return
                }
                var on = vnode.data.on || {}
                var oldOn = oldVnode.data.on || {}
                target$1 = vnode.elm
                normalizeEvents(on)
                updateListeners(
                  on,
                  oldOn,
                  add$1,
                  remove$2,
                  createOnceHandler$1,
                  vnode.context
                )
                target$1 = undefined
              }
              var events = {
                create: updateDOMListeners,
                update: updateDOMListeners
              }
              /*  */ var svgContainer
              function updateDOMProps(oldVnode, vnode) {
                if (
                  isUndef(oldVnode.data.domProps) &&
                  isUndef(vnode.data.domProps)
                ) {
                  return
                }
                var key, cur
                var elm = vnode.elm
                var oldProps = oldVnode.data.domProps || {}
                var props = vnode.data.domProps || {} // clone observed objects, as the user probably wants to mutate it
                if (isDef(props.__ob__)) {
                  props = vnode.data.domProps = extend({}, props)
                }
                for (key in oldProps) {
                  if (!(key in props)) {
                    elm[key] = ''
                  }
                }
                for (key in props) {
                  cur = props[key] // ignore children if the node has textContent or innerHTML,
                  // as these will throw away existing DOM nodes and cause removal errors
                  // on subsequent patches (#3360)
                  if (key === 'textContent' || key === 'innerHTML') {
                    if (vnode.children) {
                      vnode.children.length = 0
                    }
                    if (cur === oldProps[key]) {
                      continue
                    } // #6601 work around Chrome version <= 55 bug where single textNode
                    // replaced by innerHTML/textContent retains its parentNode property
                    if (elm.childNodes.length === 1) {
                      elm.removeChild(elm.childNodes[0])
                    }
                  }
                  if (key === 'value' && elm.tagName !== 'PROGRESS') {
                    // store value as _value as well since
                    // non-string values will be stringified
                    elm._value = cur // avoid resetting cursor position when value is the same
                    var strCur = isUndef(cur) ? '' : String(cur)
                    if (shouldUpdateValue(elm, strCur)) {
                      elm.value = strCur
                    }
                  } else if (
                    key === 'innerHTML' &&
                    isSVG(elm.tagName) &&
                    isUndef(elm.innerHTML)
                  ) {
                    // IE doesn't support innerHTML for SVG elements
                    svgContainer = svgContainer || document.createElement('div')
                    svgContainer.innerHTML = '<svg>' + cur + '</svg>'
                    var svg = svgContainer.firstChild
                    while (elm.firstChild) {
                      elm.removeChild(elm.firstChild)
                    }
                    while (svg.firstChild) {
                      elm.appendChild(svg.firstChild)
                    }
                  } else if (
                    // skip the update if old and new VDOM state is the same.
                    // `value` is handled separately because the DOM value may be temporarily
                    // out of sync with VDOM state due to focus, composition and modifiers.
                    // This  #4521 by skipping the unnecesarry `checked` update.
                    cur !== oldProps[key]
                  ) {
                    // some property updates can throw
                    // e.g. `value` on <progress> w/ non-finite value
                    try {
                      elm[key] = cur
                    } catch (e) {}
                  }
                }
              } // check platforms/web/util/attrs.js acceptValue
              function shouldUpdateValue(elm, checkVal) {
                return (
                  !elm.composing &&
                  (elm.tagName === 'OPTION' ||
                    isNotInFocusAndDirty(elm, checkVal) ||
                    isDirtyWithModifiers(elm, checkVal))
                )
              }
              function isNotInFocusAndDirty(elm, checkVal) {
                // return true when textbox (.number and .trim) loses focus and its value is
                // not equal to the updated value
                var notInFocus = true // #6157
                // work around IE bug when accessing document.activeElement in an iframe
                try {
                  notInFocus = document.activeElement !== elm
                } catch (e) {}
                return notInFocus && elm.value !== checkVal
              }
              function isDirtyWithModifiers(elm, newVal) {
                var value = elm.value
                var modifiers = elm._vModifiers // injected by v-model runtime
                if (isDef(modifiers)) {
                  if (modifiers.number) {
                    return toNumber(value) !== toNumber(newVal)
                  }
                  if (modifiers.trim) {
                    return value.trim() !== newVal.trim()
                  }
                }
                return value !== newVal
              }
              var domProps = { create: updateDOMProps, update: updateDOMProps }
              /*  */ var parseStyleText = cached(function(cssText) {
                var res = {}
                var listDelimiter = /;(?![^(]*\))/g
                var propertyDelimiter = /:(.+)/
                cssText.split(listDelimiter).forEach(function(item) {
                  if (item) {
                    var tmp = item.split(propertyDelimiter)
                    tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim())
                  }
                })
                return res
              }) // merge static and dynamic style data on the same vnode
              function normalizeStyleData(data) {
                var style = normalizeStyleBinding(data.style) // static style is pre-processed into an object during compilation
                // and is always a fresh object, so it's safe to merge into it
                return data.staticStyle
                  ? extend(data.staticStyle, style)
                  : style
              } // normalize possible array / string values into Object
              function normalizeStyleBinding(bindingStyle) {
                if (Array.isArray(bindingStyle)) {
                  return toObject(bindingStyle)
                }
                if (typeof bindingStyle === 'string') {
                  return parseStyleText(bindingStyle)
                }
                return bindingStyle
              }
              /**
               * parent component style should be after child's
               * so that parent component's style could override it
               */ function getStyle(vnode, checkChild) {
                var res = {}
                var styleData
                if (checkChild) {
                  var childNode = vnode
                  while (childNode.componentInstance) {
                    childNode = childNode.componentInstance._vnode
                    if (
                      childNode &&
                      childNode.data &&
                      (styleData = normalizeStyleData(childNode.data))
                    ) {
                      extend(res, styleData)
                    }
                  }
                }
                if ((styleData = normalizeStyleData(vnode.data))) {
                  extend(res, styleData)
                }
                var parentNode = vnode
                while ((parentNode = parentNode.parent)) {
                  if (
                    parentNode.data &&
                    (styleData = normalizeStyleData(parentNode.data))
                  ) {
                    extend(res, styleData)
                  }
                }
                return res
              }
              /*  */ var cssVarRE = /^--/
              var importantRE = /\s*!important$/
              var setProp = function setProp(el, name, val) {
                /* istanbul ignore if */ if (cssVarRE.test(name)) {
                  el.style.setProperty(name, val)
                } else if (importantRE.test(val)) {
                  el.style.setProperty(
                    hyphenate(name),
                    val.replace(importantRE, ''),
                    'important'
                  )
                } else {
                  var normalizedName = normalize(name)
                  if (Array.isArray(val)) {
                    // Support values array created by autoprefixer, e.g.
                    // {display: ["-webkit-box", "-ms-flexbox", "flex"]}
                    // Set them one by one, and the browser will only set those it can recognize
                    for (var i = 0, len = val.length; i < len; i++) {
                      el.style[normalizedName] = val[i]
                    }
                  } else {
                    el.style[normalizedName] = val
                  }
                }
              }
              var vendorNames = ['Webkit', 'Moz', 'ms']
              var emptyStyle
              var normalize = cached(function(prop) {
                emptyStyle = emptyStyle || document.createElement('div').style
                prop = camelize(prop)
                if (prop !== 'filter' && prop in emptyStyle) {
                  return prop
                }
                var capName = prop.charAt(0).toUpperCase() + prop.slice(1)
                for (var i = 0; i < vendorNames.length; i++) {
                  var name = vendorNames[i] + capName
                  if (name in emptyStyle) {
                    return name
                  }
                }
              })
              function updateStyle(oldVnode, vnode) {
                var data = vnode.data
                var oldData = oldVnode.data
                if (
                  isUndef(data.staticStyle) &&
                  isUndef(data.style) &&
                  isUndef(oldData.staticStyle) &&
                  isUndef(oldData.style)
                ) {
                  return
                }
                var cur, name
                var el = vnode.elm
                var oldStaticStyle = oldData.staticStyle
                var oldStyleBinding =
                  oldData.normalizedStyle || oldData.style || {} // if static style exists, stylebinding already merged into it when doing normalizeStyleData
                var oldStyle = oldStaticStyle || oldStyleBinding
                var style = normalizeStyleBinding(vnode.data.style) || {} // store normalized style under a different key for next diff
                // make sure to clone it if it's reactive, since the user likely wants
                // to mutate it.
                vnode.data.normalizedStyle = isDef(style.__ob__)
                  ? extend({}, style)
                  : style
                var newStyle = getStyle(vnode, true)
                for (name in oldStyle) {
                  if (isUndef(newStyle[name])) {
                    setProp(el, name, '')
                  }
                }
                for (name in newStyle) {
                  cur = newStyle[name]
                  if (cur !== oldStyle[name]) {
                    // ie9 setting to null has no effect, must use empty string
                    setProp(el, name, cur == null ? '' : cur)
                  }
                }
              }
              var style = { create: updateStyle, update: updateStyle }
              /*  */ var whitespaceRE = /\s+/
              /**
               * Add class with compatibility for SVG since classList is not supported on
               * SVG elements in IE
               */ function addClass(el, cls) {
                /* istanbul ignore if */ if (!cls || !(cls = cls.trim())) {
                  return
                }
                /* istanbul ignore else */ if (el.classList) {
                  if (cls.indexOf(' ') > -1) {
                    cls.split(whitespaceRE).forEach(function(c) {
                      return el.classList.add(c)
                    })
                  } else {
                    el.classList.add(cls)
                  }
                } else {
                  var cur = ' ' + (el.getAttribute('class') || '') + ' '
                  if (cur.indexOf(' ' + cls + ' ') < 0) {
                    el.setAttribute('class', (cur + cls).trim())
                  }
                }
              }
              /**
               * Remove class with compatibility for SVG since classList is not supported on
               * SVG elements in IE
               */ function removeClass(el, cls) {
                /* istanbul ignore if */ if (!cls || !(cls = cls.trim())) {
                  return
                }
                /* istanbul ignore else */ if (el.classList) {
                  if (cls.indexOf(' ') > -1) {
                    cls.split(whitespaceRE).forEach(function(c) {
                      return el.classList.remove(c)
                    })
                  } else {
                    el.classList.remove(cls)
                  }
                  if (!el.classList.length) {
                    el.removeAttribute('class')
                  }
                } else {
                  var cur = ' ' + (el.getAttribute('class') || '') + ' '
                  var tar = ' ' + cls + ' '
                  while (cur.indexOf(tar) >= 0) {
                    cur = cur.replace(tar, ' ')
                  }
                  cur = cur.trim()
                  if (cur) {
                    el.setAttribute('class', cur)
                  } else {
                    el.removeAttribute('class')
                  }
                }
              }
              /*  */ function resolveTransition(def$$1) {
                if (!def$$1) {
                  return
                }
                /* istanbul ignore else */ if (
                  (0, _typeof3['default'])(def$$1) === 'object'
                ) {
                  var res = {}
                  if (def$$1.css !== false) {
                    extend(res, autoCssTransition(def$$1.name || 'v'))
                  }
                  extend(res, def$$1)
                  return res
                } else if (typeof def$$1 === 'string') {
                  return autoCssTransition(def$$1)
                }
              }
              var autoCssTransition = cached(function(name) {
                return {
                  enterClass: name + '-enter',
                  enterToClass: name + '-enter-to',
                  enterActiveClass: name + '-enter-active',
                  leaveClass: name + '-leave',
                  leaveToClass: name + '-leave-to',
                  leaveActiveClass: name + '-leave-active'
                }
              })
              var hasTransition = inBrowser && !isIE9
              var TRANSITION = 'transition'
              var ANIMATION = 'animation' // Transition property/event sniffing
              var transitionProp = 'transition'
              var transitionEndEvent = 'transitionend'
              var animationProp = 'animation'
              var animationEndEvent = 'animationend'
              if (hasTransition) {
                /* istanbul ignore if */ if (
                  window.ontransitionend === undefined &&
                  window.onwebkittransitionend !== undefined
                ) {
                  transitionProp = 'WebkitTransition'
                  transitionEndEvent = 'webkitTransitionEnd'
                }
                if (
                  window.onanimationend === undefined &&
                  window.onwebkitanimationend !== undefined
                ) {
                  animationProp = 'WebkitAnimation'
                  animationEndEvent = 'webkitAnimationEnd'
                }
              } // binding to window is necessary to make hot reload work in IE in strict mode
              var raf = inBrowser
                ? window.requestAnimationFrame
                  ? window.requestAnimationFrame.bind(window)
                  : setTimeout
                : /* istanbul ignore next */ function(fn) {
                    return fn()
                  }
              function nextFrame(fn) {
                raf(function() {
                  raf(fn)
                })
              }
              function addTransitionClass(el, cls) {
                var transitionClasses =
                  el._transitionClasses || (el._transitionClasses = [])
                if (transitionClasses.indexOf(cls) < 0) {
                  transitionClasses.push(cls)
                  addClass(el, cls)
                }
              }
              function removeTransitionClass(el, cls) {
                if (el._transitionClasses) {
                  remove(el._transitionClasses, cls)
                }
                removeClass(el, cls)
              }
              function whenTransitionEnds(el, expectedType, cb) {
                var ref = getTransitionInfo(el, expectedType)
                var type = ref.type
                var timeout = ref.timeout
                var propCount = ref.propCount
                if (!type) {
                  return cb()
                }
                var event =
                  type === TRANSITION ? transitionEndEvent : animationEndEvent
                var ended = 0
                var end = function end() {
                  el.removeEventListener(event, onEnd)
                  cb()
                }
                var onEnd = function onEnd(e) {
                  if (e.target === el) {
                    if (++ended >= propCount) {
                      end()
                    }
                  }
                }
                setTimeout(function() {
                  if (ended < propCount) {
                    end()
                  }
                }, timeout + 1)
                el.addEventListener(event, onEnd)
              }
              var transformRE = /\b(transform|all)(,|$)/
              function getTransitionInfo(el, expectedType) {
                var styles = window.getComputedStyle(el) // JSDOM may return undefined for transition properties
                var transitionDelays = (
                  styles[transitionProp + 'Delay'] || ''
                ).split(', ')
                var transitionDurations = (
                  styles[transitionProp + 'Duration'] || ''
                ).split(', ')
                var transitionTimeout = getTimeout(
                  transitionDelays,
                  transitionDurations
                )
                var animationDelays = (
                  styles[animationProp + 'Delay'] || ''
                ).split(', ')
                var animationDurations = (
                  styles[animationProp + 'Duration'] || ''
                ).split(', ')
                var animationTimeout = getTimeout(
                  animationDelays,
                  animationDurations
                )
                var type
                var timeout = 0
                var propCount = 0
                /* istanbul ignore if */ if (expectedType === TRANSITION) {
                  if (transitionTimeout > 0) {
                    type = TRANSITION
                    timeout = transitionTimeout
                    propCount = transitionDurations.length
                  }
                } else if (expectedType === ANIMATION) {
                  if (animationTimeout > 0) {
                    type = ANIMATION
                    timeout = animationTimeout
                    propCount = animationDurations.length
                  }
                } else {
                  timeout = Math.max(transitionTimeout, animationTimeout)
                  type =
                    timeout > 0
                      ? transitionTimeout > animationTimeout
                        ? TRANSITION
                        : ANIMATION
                      : null
                  propCount = type
                    ? type === TRANSITION
                      ? transitionDurations.length
                      : animationDurations.length
                    : 0
                }
                var hasTransform =
                  type === TRANSITION &&
                  transformRE.test(styles[transitionProp + 'Property'])
                return {
                  type: type,
                  timeout: timeout,
                  propCount: propCount,
                  hasTransform: hasTransform
                }
              }
              function getTimeout(delays, durations) {
                /* istanbul ignore next */ while (
                  delays.length < durations.length
                ) {
                  delays = delays.concat(delays)
                }
                return Math.max.apply(
                  null,
                  durations.map(function(d, i) {
                    return toMs(d) + toMs(delays[i])
                  })
                )
              } // Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers
              // in a locale-dependent way, using a comma instead of a dot.
              // If comma is not replaced with a dot, the input will be rounded down (i.e. acting
              // as a floor function) causing unexpected behaviors
              function toMs(s) {
                return Number(s.slice(0, -1).replace(',', '.')) * 1000
              }
              /*  */ function enter(vnode, toggleDisplay) {
                var el = vnode.elm // call leave callback now
                if (isDef(el._leaveCb)) {
                  el._leaveCb.cancelled = true
                  el._leaveCb()
                }
                var data = resolveTransition(vnode.data.transition)
                if (isUndef(data)) {
                  return
                }
                /* istanbul ignore if */ if (
                  isDef(el._enterCb) ||
                  el.nodeType !== 1
                ) {
                  return
                }
                var css = data.css
                var type = data.type
                var enterClass = data.enterClass
                var enterToClass = data.enterToClass
                var enterActiveClass = data.enterActiveClass
                var appearClass = data.appearClass
                var appearToClass = data.appearToClass
                var appearActiveClass = data.appearActiveClass
                var beforeEnter = data.beforeEnter
                var enter = data.enter
                var afterEnter = data.afterEnter
                var enterCancelled = data.enterCancelled
                var beforeAppear = data.beforeAppear
                var appear = data.appear
                var afterAppear = data.afterAppear
                var appearCancelled = data.appearCancelled
                var duration = data.duration // activeInstance will always be the <transition> component managing this
                // transition. One edge case to check is when the <transition> is placed
                // as the root node of a child component. In that case we need to check
                // <transition>'s parent for appear check.
                var context = activeInstance
                var transitionNode = activeInstance.$vnode
                while (transitionNode && transitionNode.parent) {
                  context = transitionNode.context
                  transitionNode = transitionNode.parent
                }
                var isAppear = !context._isMounted || !vnode.isRootInsert
                if (isAppear && !appear && appear !== '') {
                  return
                }
                var startClass =
                  isAppear && appearClass ? appearClass : enterClass
                var activeClass =
                  isAppear && appearActiveClass
                    ? appearActiveClass
                    : enterActiveClass
                var toClass =
                  isAppear && appearToClass ? appearToClass : enterToClass
                var beforeEnterHook = isAppear
                  ? beforeAppear || beforeEnter
                  : beforeEnter
                var enterHook = isAppear
                  ? typeof appear === 'function'
                    ? appear
                    : enter
                  : enter
                var afterEnterHook = isAppear
                  ? afterAppear || afterEnter
                  : afterEnter
                var enterCancelledHook = isAppear
                  ? appearCancelled || enterCancelled
                  : enterCancelled
                var explicitEnterDuration = toNumber(
                  isObject(duration) ? duration.enter : duration
                )
                if (explicitEnterDuration != null) {
                  checkDuration(explicitEnterDuration, 'enter', vnode)
                }
                var expectsCSS = css !== false && !isIE9
                var userWantsControl = getHookArgumentsLength(enterHook)
                var cb = (el._enterCb = once(function() {
                  if (expectsCSS) {
                    removeTransitionClass(el, toClass)
                    removeTransitionClass(el, activeClass)
                  }
                  if (cb.cancelled) {
                    if (expectsCSS) {
                      removeTransitionClass(el, startClass)
                    }
                    enterCancelledHook && enterCancelledHook(el)
                  } else {
                    afterEnterHook && afterEnterHook(el)
                  }
                  el._enterCb = null
                }))
                if (!vnode.data.show) {
                  // remove pending leave element on enter by injecting an insert hook
                  mergeVNodeHook(vnode, 'insert', function() {
                    var parent = el.parentNode
                    var pendingNode =
                      parent && parent._pending && parent._pending[vnode.key]
                    if (
                      pendingNode &&
                      pendingNode.tag === vnode.tag &&
                      pendingNode.elm._leaveCb
                    ) {
                      pendingNode.elm._leaveCb()
                    }
                    enterHook && enterHook(el, cb)
                  })
                } // start enter transition
                beforeEnterHook && beforeEnterHook(el)
                if (expectsCSS) {
                  addTransitionClass(el, startClass)
                  addTransitionClass(el, activeClass)
                  nextFrame(function() {
                    removeTransitionClass(el, startClass)
                    if (!cb.cancelled) {
                      addTransitionClass(el, toClass)
                      if (!userWantsControl) {
                        if (isValidDuration(explicitEnterDuration)) {
                          setTimeout(cb, explicitEnterDuration)
                        } else {
                          whenTransitionEnds(el, type, cb)
                        }
                      }
                    }
                  })
                }
                if (vnode.data.show) {
                  toggleDisplay && toggleDisplay()
                  enterHook && enterHook(el, cb)
                }
                if (!expectsCSS && !userWantsControl) {
                  cb()
                }
              }
              function leave(vnode, rm) {
                var el = vnode.elm // call enter callback now
                if (isDef(el._enterCb)) {
                  el._enterCb.cancelled = true
                  el._enterCb()
                }
                var data = resolveTransition(vnode.data.transition)
                if (isUndef(data) || el.nodeType !== 1) {
                  return rm()
                }
                /* istanbul ignore if */ if (isDef(el._leaveCb)) {
                  return
                }
                var css = data.css
                var type = data.type
                var leaveClass = data.leaveClass
                var leaveToClass = data.leaveToClass
                var leaveActiveClass = data.leaveActiveClass
                var beforeLeave = data.beforeLeave
                var leave = data.leave
                var afterLeave = data.afterLeave
                var leaveCancelled = data.leaveCancelled
                var delayLeave = data.delayLeave
                var duration = data.duration
                var expectsCSS = css !== false && !isIE9
                var userWantsControl = getHookArgumentsLength(leave)
                var explicitLeaveDuration = toNumber(
                  isObject(duration) ? duration.leave : duration
                )
                if (isDef(explicitLeaveDuration)) {
                  checkDuration(explicitLeaveDuration, 'leave', vnode)
                }
                var cb = (el._leaveCb = once(function() {
                  if (el.parentNode && el.parentNode._pending) {
                    el.parentNode._pending[vnode.key] = null
                  }
                  if (expectsCSS) {
                    removeTransitionClass(el, leaveToClass)
                    removeTransitionClass(el, leaveActiveClass)
                  }
                  if (cb.cancelled) {
                    if (expectsCSS) {
                      removeTransitionClass(el, leaveClass)
                    }
                    leaveCancelled && leaveCancelled(el)
                  } else {
                    rm()
                    afterLeave && afterLeave(el)
                  }
                  el._leaveCb = null
                }))
                if (delayLeave) {
                  delayLeave(performLeave)
                } else {
                  performLeave()
                }
                function performLeave() {
                  // the delayed leave may have already been cancelled
                  if (cb.cancelled) {
                    return
                  } // record leaving element
                  if (!vnode.data.show && el.parentNode) {
                    ;(el.parentNode._pending || (el.parentNode._pending = {}))[
                      vnode.key
                    ] = vnode
                  }
                  beforeLeave && beforeLeave(el)
                  if (expectsCSS) {
                    addTransitionClass(el, leaveClass)
                    addTransitionClass(el, leaveActiveClass)
                    nextFrame(function() {
                      removeTransitionClass(el, leaveClass)
                      if (!cb.cancelled) {
                        addTransitionClass(el, leaveToClass)
                        if (!userWantsControl) {
                          if (isValidDuration(explicitLeaveDuration)) {
                            setTimeout(cb, explicitLeaveDuration)
                          } else {
                            whenTransitionEnds(el, type, cb)
                          }
                        }
                      }
                    })
                  }
                  leave && leave(el, cb)
                  if (!expectsCSS && !userWantsControl) {
                    cb()
                  }
                }
              } // only used in dev mode
              function checkDuration(val, name, vnode) {
                if (typeof val !== 'number') {
                  warn(
                    '<transition> explicit ' +
                      name +
                      ' duration is not a valid number - ' +
                      'got ' +
                      JSON.stringify(val) +
                      '.',
                    vnode.context
                  )
                } else if (isNaN(val)) {
                  warn(
                    '<transition> explicit ' +
                      name +
                      ' duration is NaN - ' +
                      'the duration expression might be incorrect.',
                    vnode.context
                  )
                }
              }
              function isValidDuration(val) {
                return typeof val === 'number' && !isNaN(val)
              }
              /**
               * Normalize a transition hook's argument length. The hook may be:
               * - a merged hook (invoker) with the original in .fns
               * - a wrapped component method (check ._length)
               * - a plain function (.length)
               */ function getHookArgumentsLength(fn) {
                if (isUndef(fn)) {
                  return false
                }
                var invokerFns = fn.fns
                if (isDef(invokerFns)) {
                  // invoker
                  return getHookArgumentsLength(
                    Array.isArray(invokerFns) ? invokerFns[0] : invokerFns
                  )
                } else {
                  return (fn._length || fn.length) > 1
                }
              }
              function _enter(_, vnode) {
                if (vnode.data.show !== true) {
                  enter(vnode)
                }
              }
              var transition = inBrowser
                ? {
                    create: _enter,
                    activate: _enter,
                    remove: function remove$$1(vnode, rm) {
                      /* istanbul ignore else */ if (vnode.data.show !== true) {
                        leave(vnode, rm)
                      } else {
                        rm()
                      }
                    }
                  }
                : {}
              var platformModules = [
                attrs,
                klass,
                events,
                domProps,
                style,
                transition
              ] /*  */ // the directive module should be applied last, after all
              // built-in modules have been applied.
              var modules = platformModules.concat(baseModules)
              var patch = createPatchFunction({
                nodeOps: nodeOps,
                modules: modules
              })
              /**
               * Not type checking this file because flow doesn't like attaching
               * properties to Elements.
               */ /* istanbul ignore if */ if (isIE9) {
                // http://www.matts411.com/post/internet-explorer-9-oninput/
                document.addEventListener('selectionchange', function() {
                  var el = document.activeElement
                  if (el && el.vmodel) {
                    trigger(el, 'input')
                  }
                })
              }
              var directive = {
                inserted: function inserted(el, binding, vnode, oldVnode) {
                  if (vnode.tag === 'select') {
                    // #6903
                    if (oldVnode.elm && !oldVnode.elm._vOptions) {
                      mergeVNodeHook(vnode, 'postpatch', function() {
                        directive.componentUpdated(el, binding, vnode)
                      })
                    } else {
                      setSelected(el, binding, vnode.context)
                    }
                    el._vOptions = [].map.call(el.options, getValue)
                  } else if (
                    vnode.tag === 'textarea' ||
                    isTextInputType(el.type)
                  ) {
                    el._vModifiers = binding.modifiers
                    if (!binding.modifiers.lazy) {
                      el.addEventListener(
                        'compositionstart',
                        onCompositionStart
                      )
                      el.addEventListener('compositionend', onCompositionEnd) // Safari < 10.2 & UIWebView doesn't fire compositionend when
                      // switching focus before confirming composition choice
                      // this also fixes the issue where some browsers e.g. iOS Chrome
                      // fires "change" instead of "input" on autocomplete.
                      el.addEventListener('change', onCompositionEnd)
                      /* istanbul ignore if */ if (isIE9) {
                        el.vmodel = true
                      }
                    }
                  }
                },
                componentUpdated: function componentUpdated(
                  el,
                  binding,
                  vnode
                ) {
                  if (vnode.tag === 'select') {
                    setSelected(el, binding, vnode.context) // in case the options rendered by v-for have changed,
                    // it's possible that the value is out-of-sync with the rendered options.
                    // detect such cases and filter out values that no longer has a matching
                    // option in the DOM.
                    var prevOptions = el._vOptions
                    var curOptions = (el._vOptions = [].map.call(
                      el.options,
                      getValue
                    ))
                    if (
                      curOptions.some(function(o, i) {
                        return !looseEqual(o, prevOptions[i])
                      })
                    ) {
                      // trigger change event if
                      // no matching option found for at least one value
                      var needReset = el.multiple
                        ? binding.value.some(function(v) {
                            return hasNoMatchingOption(v, curOptions)
                          })
                        : binding.value !== binding.oldValue &&
                          hasNoMatchingOption(binding.value, curOptions)
                      if (needReset) {
                        trigger(el, 'change')
                      }
                    }
                  }
                }
              }
              function setSelected(el, binding, vm) {
                actuallySetSelected(el, binding, vm)
                /* istanbul ignore if */ if (isIE || isEdge) {
                  setTimeout(function() {
                    actuallySetSelected(el, binding, vm)
                  }, 0)
                }
              }
              function actuallySetSelected(el, binding, vm) {
                var value = binding.value
                var isMultiple = el.multiple
                if (isMultiple && !Array.isArray(value)) {
                  warn(
                    '<select multiple v-model="' +
                      binding.expression +
                      '"> ' +
                      'expects an Array value for its binding, but got ' +
                      Object.prototype.toString.call(value).slice(8, -1),
                    vm
                  )
                  return
                }
                var selected, option
                for (var i = 0, l = el.options.length; i < l; i++) {
                  option = el.options[i]
                  if (isMultiple) {
                    selected = looseIndexOf(value, getValue(option)) > -1
                    if (option.selected !== selected) {
                      option.selected = selected
                    }
                  } else {
                    if (looseEqual(getValue(option), value)) {
                      if (el.selectedIndex !== i) {
                        el.selectedIndex = i
                      }
                      return
                    }
                  }
                }
                if (!isMultiple) {
                  el.selectedIndex = -1
                }
              }
              function hasNoMatchingOption(value, options) {
                return options.every(function(o) {
                  return !looseEqual(o, value)
                })
              }
              function getValue(option) {
                return '_value' in option ? option._value : option.value
              }
              function onCompositionStart(e) {
                e.target.composing = true
              }
              function onCompositionEnd(e) {
                // prevent triggering an input event for no reason
                if (!e.target.composing) {
                  return
                }
                e.target.composing = false
                trigger(e.target, 'input')
              }
              function trigger(el, type) {
                var e = document.createEvent('HTMLEvents')
                e.initEvent(type, true, true)
                el.dispatchEvent(e)
              } /*  */ // recursively search for possible transition defined inside the component root
              function locateNode(vnode) {
                return vnode.componentInstance &&
                  (!vnode.data || !vnode.data.transition)
                  ? locateNode(vnode.componentInstance._vnode)
                  : vnode
              }
              var show = {
                bind: function bind(el, ref, vnode) {
                  var value = ref.value
                  vnode = locateNode(vnode)
                  var transition$$1 = vnode.data && vnode.data.transition
                  var originalDisplay = (el.__vOriginalDisplay =
                    el.style.display === 'none' ? '' : el.style.display)
                  if (value && transition$$1) {
                    vnode.data.show = true
                    enter(vnode, function() {
                      el.style.display = originalDisplay
                    })
                  } else {
                    el.style.display = value ? originalDisplay : 'none'
                  }
                },
                update: function update(el, ref, vnode) {
                  var value = ref.value
                  var oldValue = ref.oldValue
                  /* istanbul ignore if */ if (!value === !oldValue) {
                    return
                  }
                  vnode = locateNode(vnode)
                  var transition$$1 = vnode.data && vnode.data.transition
                  if (transition$$1) {
                    vnode.data.show = true
                    if (value) {
                      enter(vnode, function() {
                        el.style.display = el.__vOriginalDisplay
                      })
                    } else {
                      leave(vnode, function() {
                        el.style.display = 'none'
                      })
                    }
                  } else {
                    el.style.display = value ? el.__vOriginalDisplay : 'none'
                  }
                },
                unbind: function unbind(
                  el,
                  binding,
                  vnode,
                  oldVnode,
                  isDestroy
                ) {
                  if (!isDestroy) {
                    el.style.display = el.__vOriginalDisplay
                  }
                }
              }
              var platformDirectives = { model: directive, show: show }
              /*  */ var transitionProps = {
                name: String,
                appear: Boolean,
                css: Boolean,
                mode: String,
                type: String,
                enterClass: String,
                leaveClass: String,
                enterToClass: String,
                leaveToClass: String,
                enterActiveClass: String,
                leaveActiveClass: String,
                appearClass: String,
                appearActiveClass: String,
                appearToClass: String,
                duration: [Number, String, Object]
              } // in case the child is also an abstract component, e.g. <keep-alive>
              // we want to recursively retrieve the real component to be rendered
              function getRealChild(vnode) {
                var compOptions = vnode && vnode.componentOptions
                if (compOptions && compOptions.Ctor.options['abstract']) {
                  return getRealChild(
                    getFirstComponentChild(compOptions.children)
                  )
                } else {
                  return vnode
                }
              }
              function extractTransitionData(comp) {
                var data = {}
                var options = comp.$options // props
                for (var key in options.propsData) {
                  data[key] = comp[key]
                } // events.
                // extract listeners and pass them directly to the transition methods
                var listeners = options._parentListeners
                for (var key$1 in listeners) {
                  data[camelize(key$1)] = listeners[key$1]
                }
                return data
              }
              function placeholder(h, rawChild) {
                if (/\d-keep-alive$/.test(rawChild.tag)) {
                  return h('keep-alive', {
                    props: rawChild.componentOptions.propsData
                  })
                }
              }
              function hasParentTransition(vnode) {
                while ((vnode = vnode.parent)) {
                  if (vnode.data.transition) {
                    return true
                  }
                }
              }
              function isSameChild(child, oldChild) {
                return oldChild.key === child.key && oldChild.tag === child.tag
              }
              var isNotTextNode = function isNotTextNode(c) {
                return c.tag || isAsyncPlaceholder(c)
              }
              var isVShowDirective = function isVShowDirective(d) {
                return d.name === 'show'
              }
              var Transition = {
                name: 'transition',
                props: transitionProps,
                abstract: true,
                render: function render(h) {
                  var this$1 = this
                  var children = this.$slots['default']
                  if (!children) {
                    return
                  } // filter out text nodes (possible whitespaces)
                  children = children.filter(isNotTextNode)
                  /* istanbul ignore if */ if (!children.length) {
                    return
                  } // warn multiple elements
                  if (children.length > 1) {
                    warn(
                      '<transition> can only be used on a single element. Use ' +
                        '<transition-group> for lists.',
                      this.$parent
                    )
                  }
                  var mode = this.mode // warn invalid mode
                  if (mode && mode !== 'in-out' && mode !== 'out-in') {
                    warn('invalid <transition> mode: ' + mode, this.$parent)
                  }
                  var rawChild = children[0] // if this is a component root node and the component's
                  // parent container node also has transition, skip.
                  if (hasParentTransition(this.$vnode)) {
                    return rawChild
                  } // apply transition data to child
                  // use getRealChild() to ignore abstract components e.g. keep-alive
                  var child = getRealChild(rawChild)
                  /* istanbul ignore if */ if (!child) {
                    return rawChild
                  }
                  if (this._leaving) {
                    return placeholder(h, rawChild)
                  } // ensure a key that is unique to the vnode type and to this transition
                  // component instance. This key will be used to remove pending leaving nodes
                  // during entering.
                  var id = '__transition-' + this._uid + '-'
                  child.key =
                    child.key == null
                      ? child.isComment
                        ? id + 'comment'
                        : id + child.tag
                      : isPrimitive(child.key)
                      ? String(child.key).indexOf(id) === 0
                        ? child.key
                        : id + child.key
                      : child.key
                  var data = ((
                    child.data || (child.data = {})
                  ).transition = extractTransitionData(this))
                  var oldRawChild = this._vnode
                  var oldChild = getRealChild(oldRawChild) // mark v-show
                  // so that the transition module can hand over the control to the directive
                  if (
                    child.data.directives &&
                    child.data.directives.some(isVShowDirective)
                  ) {
                    child.data.show = true
                  }
                  if (
                    oldChild &&
                    oldChild.data &&
                    !isSameChild(child, oldChild) &&
                    !isAsyncPlaceholder(oldChild) && // #6687 component root is a comment node
                    !(
                      oldChild.componentInstance &&
                      oldChild.componentInstance._vnode.isComment
                    )
                  ) {
                    // replace old child transition data with fresh one
                    // important for dynamic transitions!
                    var oldData = (oldChild.data.transition = extend({}, data)) // handle transition mode
                    if (mode === 'out-in') {
                      // return placeholder node and queue update when leave finishes
                      this._leaving = true
                      mergeVNodeHook(oldData, 'afterLeave', function() {
                        this$1._leaving = false
                        this$1.$forceUpdate()
                      })
                      return placeholder(h, rawChild)
                    } else if (mode === 'in-out') {
                      if (isAsyncPlaceholder(child)) {
                        return oldRawChild
                      }
                      var delayedLeave
                      var performLeave = function performLeave() {
                        delayedLeave()
                      }
                      mergeVNodeHook(data, 'afterEnter', performLeave)
                      mergeVNodeHook(data, 'enterCancelled', performLeave)
                      mergeVNodeHook(oldData, 'delayLeave', function(leave) {
                        delayedLeave = leave
                      })
                    }
                  }
                  return rawChild
                }
              }
              /*  */ var props = extend(
                { tag: String, moveClass: String },
                transitionProps
              )
              delete props.mode
              var TransitionGroup = {
                props: props,
                beforeMount: function beforeMount() {
                  var this$1 = this
                  var update = this._update
                  this._update = function(vnode, hydrating) {
                    var restoreActiveInstance = setActiveInstance(this$1) // force removing pass
                    this$1.__patch__(
                      this$1._vnode,
                      this$1.kept,
                      false, // hydrating
                      true // removeOnly (!important, avoids unnecessary moves)
                    )
                    this$1._vnode = this$1.kept
                    restoreActiveInstance()
                    update.call(this$1, vnode, hydrating)
                  }
                },
                render: function render(h) {
                  var tag = this.tag || this.$vnode.data.tag || 'span'
                  var map = Object.create(null)
                  var prevChildren = (this.prevChildren = this.children)
                  var rawChildren = this.$slots['default'] || []
                  var children = (this.children = [])
                  var transitionData = extractTransitionData(this)
                  for (var i = 0; i < rawChildren.length; i++) {
                    var c = rawChildren[i]
                    if (c.tag) {
                      if (
                        c.key != null &&
                        String(c.key).indexOf('__vlist') !== 0
                      ) {
                        children.push(c)
                        map[c.key] = c
                        ;(c.data || (c.data = {})).transition = transitionData
                      } else {
                        var opts = c.componentOptions
                        var name = opts
                          ? opts.Ctor.options.name || opts.tag || ''
                          : c.tag
                        warn(
                          '<transition-group> children must be keyed: <' +
                            name +
                            '>'
                        )
                      }
                    }
                  }
                  if (prevChildren) {
                    var kept = []
                    var removed = []
                    for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {
                      var c$1 = prevChildren[i$1]
                      c$1.data.transition = transitionData
                      c$1.data.pos = c$1.elm.getBoundingClientRect()
                      if (map[c$1.key]) {
                        kept.push(c$1)
                      } else {
                        removed.push(c$1)
                      }
                    }
                    this.kept = h(tag, null, kept)
                    this.removed = removed
                  }
                  return h(tag, null, children)
                },
                updated: function updated() {
                  var children = this.prevChildren
                  var moveClass = this.moveClass || (this.name || 'v') + '-move'
                  if (
                    !children.length ||
                    !this.hasMove(children[0].elm, moveClass)
                  ) {
                    return
                  } // we divide the work into three loops to avoid mixing DOM reads and writes
                  // in each iteration - which helps prevent layout thrashing.
                  children.forEach(callPendingCbs)
                  children.forEach(recordPosition)
                  children.forEach(applyTranslation) // force reflow to put everything in position
                  // assign to this to avoid being removed in tree-shaking
                  // $flow-disable-line
                  this._reflow = document.body.offsetHeight
                  children.forEach(function(c) {
                    if (c.data.moved) {
                      var el = c.elm
                      var s = el.style
                      addTransitionClass(el, moveClass)
                      s.transform = s.WebkitTransform = s.transitionDuration =
                        ''
                      el.addEventListener(
                        transitionEndEvent,
                        (el._moveCb = function cb(e) {
                          if (e && e.target !== el) {
                            return
                          }
                          if (!e || /transform$/.test(e.propertyName)) {
                            el.removeEventListener(transitionEndEvent, cb)
                            el._moveCb = null
                            removeTransitionClass(el, moveClass)
                          }
                        })
                      )
                    }
                  })
                },
                methods: {
                  hasMove: function hasMove(el, moveClass) {
                    /* istanbul ignore if */ if (!hasTransition) {
                      return false
                    }
                    /* istanbul ignore if */ if (this._hasMove) {
                      return this._hasMove
                    } // Detect whether an element with the move class applied has
                    // CSS transitions. Since the element may be inside an entering
                    // transition at this very moment, we make a clone of it and remove
                    // all other transition classes applied to ensure only the move class
                    // is applied.
                    var clone = el.cloneNode()
                    if (el._transitionClasses) {
                      el._transitionClasses.forEach(function(cls) {
                        removeClass(clone, cls)
                      })
                    }
                    addClass(clone, moveClass)
                    clone.style.display = 'none'
                    this.$el.appendChild(clone)
                    var info = getTransitionInfo(clone)
                    this.$el.removeChild(clone)
                    return (this._hasMove = info.hasTransform)
                  }
                }
              }
              function callPendingCbs(c) {
                /* istanbul ignore if */ if (c.elm._moveCb) {
                  c.elm._moveCb()
                }
                /* istanbul ignore if */ if (c.elm._enterCb) {
                  c.elm._enterCb()
                }
              }
              function recordPosition(c) {
                c.data.newPos = c.elm.getBoundingClientRect()
              }
              function applyTranslation(c) {
                var oldPos = c.data.pos
                var newPos = c.data.newPos
                var dx = oldPos.left - newPos.left
                var dy = oldPos.top - newPos.top
                if (dx || dy) {
                  c.data.moved = true
                  var s = c.elm.style
                  s.transform = s.WebkitTransform =
                    'translate(' + dx + 'px,' + dy + 'px)'
                  s.transitionDuration = '0s'
                }
              }
              var platformComponents = {
                Transition: Transition,
                TransitionGroup: TransitionGroup
              } /*  */ // install platform specific utils
              Vue.config.mustUseProp = mustUseProp
              Vue.config.isReservedTag = isReservedTag
              Vue.config.isReservedAttr = isReservedAttr
              Vue.config.getTagNamespace = getTagNamespace
              Vue.config.isUnknownElement = isUnknownElement // install platform runtime directives & components
              extend(Vue.options.directives, platformDirectives)
              extend(Vue.options.components, platformComponents) // install platform patch function
              Vue.prototype.__patch__ = inBrowser ? patch : noop // public mount method
              Vue.prototype.$mount = function(el, hydrating) {
                el = el && inBrowser ? query(el) : undefined
                return mountComponent(this, el, hydrating)
              } // devtools global hook
              /* istanbul ignore next */ if (inBrowser) {
                setTimeout(function() {
                  if (config.devtools) {
                    if (devtools) {
                      devtools.emit('init', Vue)
                    } else {
                      console[console.info ? 'info' : 'log'](
                        'Download the Vue Devtools extension for a better development experience:\n' +
                          'https://github.com/vuejs/vue-devtools'
                      )
                    }
                  }
                  if (
                    config.productionTip !== false &&
                    typeof console !== 'undefined'
                  ) {
                    console[console.info ? 'info' : 'log'](
                      'You are running Vue in development mode.\n' +
                        'Make sure to turn on production mode when deploying for production.\n' +
                        'See more tips at https://vuejs.org/guide/deployment.html'
                    )
                  }
                }, 0)
              }
              /*  */ var defaultTagRE = /\{\{((?:.|\r?\n)+?)\}\}/g
              var regexEscapeRE = /[-.*+?^${}()|[\]\/\\]/g
              var buildRegex = cached(function(delimiters) {
                var open = delimiters[0].replace(regexEscapeRE, '\\$&')
                var close = delimiters[1].replace(regexEscapeRE, '\\$&')
                return new RegExp(open + '((?:.|\\n)+?)' + close, 'g')
              })
              function parseText(text, delimiters) {
                var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE
                if (!tagRE.test(text)) {
                  return
                }
                var tokens = []
                var rawTokens = []
                var lastIndex = (tagRE.lastIndex = 0)
                var match, index, tokenValue
                while ((match = tagRE.exec(text))) {
                  index = match.index // push text token
                  if (index > lastIndex) {
                    rawTokens.push((tokenValue = text.slice(lastIndex, index)))
                    tokens.push(JSON.stringify(tokenValue))
                  } // tag token
                  var exp = parseFilters(match[1].trim())
                  tokens.push('_s(' + exp + ')')
                  rawTokens.push({ '@binding': exp })
                  lastIndex = index + match[0].length
                }
                if (lastIndex < text.length) {
                  rawTokens.push((tokenValue = text.slice(lastIndex)))
                  tokens.push(JSON.stringify(tokenValue))
                }
                return { expression: tokens.join('+'), tokens: rawTokens }
              }
              /*  */ function transformNode(el, options) {
                var warn = options.warn || baseWarn
                var staticClass = getAndRemoveAttr(el, 'class')
                if (staticClass) {
                  var res = parseText(staticClass, options.delimiters)
                  if (res) {
                    warn(
                      'class="' +
                        staticClass +
                        '": ' +
                        'Interpolation inside attributes has been removed. ' +
                        'Use v-bind or the colon shorthand instead. For example, ' +
                        'instead of <div class="{{ val }}">, use <div :class="val">.',
                      el.rawAttrsMap['class']
                    )
                  }
                }
                if (staticClass) {
                  el.staticClass = JSON.stringify(staticClass)
                }
                var classBinding = getBindingAttr(
                  el,
                  'class',
                  false /* getStatic */
                )
                if (classBinding) {
                  el.classBinding = classBinding
                }
              }
              function genData(el) {
                var data = ''
                if (el.staticClass) {
                  data += 'staticClass:' + el.staticClass + ','
                }
                if (el.classBinding) {
                  data += 'class:' + el.classBinding + ','
                }
                return data
              }
              var klass$1 = {
                staticKeys: ['staticClass'],
                transformNode: transformNode,
                genData: genData
              }
              /*  */ function transformNode$1(el, options) {
                var warn = options.warn || baseWarn
                var staticStyle = getAndRemoveAttr(el, 'style')
                if (staticStyle) {
                  /* istanbul ignore if */ {
                    var res = parseText(staticStyle, options.delimiters)
                    if (res) {
                      warn(
                        'style="' +
                          staticStyle +
                          '": ' +
                          'Interpolation inside attributes has been removed. ' +
                          'Use v-bind or the colon shorthand instead. For example, ' +
                          'instead of <div style="{{ val }}">, use <div :style="val">.',
                        el.rawAttrsMap['style']
                      )
                    }
                  }
                  el.staticStyle = JSON.stringify(parseStyleText(staticStyle))
                }
                var styleBinding = getBindingAttr(
                  el,
                  'style',
                  false /* getStatic */
                )
                if (styleBinding) {
                  el.styleBinding = styleBinding
                }
              }
              function genData$1(el) {
                var data = ''
                if (el.staticStyle) {
                  data += 'staticStyle:' + el.staticStyle + ','
                }
                if (el.styleBinding) {
                  data += 'style:(' + el.styleBinding + '),'
                }
                return data
              }
              var style$1 = {
                staticKeys: ['staticStyle'],
                transformNode: transformNode$1,
                genData: genData$1
              }
              /*  */ var decoder
              var he = {
                decode: function decode(html) {
                  decoder = decoder || document.createElement('div')
                  decoder.innerHTML = html
                  return decoder.textContent
                }
              }
              /*  */ var isUnaryTag = makeMap(
                'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +
                  'link,meta,param,source,track,wbr'
              ) // Elements that you can, intentionally, leave open
              // (and which close themselves)
              var canBeLeftOpenTag = makeMap(
                'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'
              ) // HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3
              // Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content
              var isNonPhrasingTag = makeMap(
                'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +
                  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +
                  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +
                  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +
                  'title,tr,track'
              )  // Regular Expressions for parsing tags and attributes
              /**
               * Not type-checking this file because it's mostly vendor code.
               */
              var attribute = /^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/
              var dynamicArgAttribute = /^\s*((?:v-[\w-]+:|@|:|#)\[[^=]+\][^\s"'<>\/=]*)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/
              var ncname =
                '[a-zA-Z_][\\-\\.0-9_a-zA-Z' + unicodeRegExp.source + ']*'
              var qnameCapture = '((?:' + ncname + '\\:)?' + ncname + ')'
              var startTagOpen = new RegExp('^<' + qnameCapture)
              var startTagClose = /^\s*(\/?)>/
              var endTag = new RegExp('^<\\/' + qnameCapture + '[^>]*>')
              var doctype = /^<!DOCTYPE [^>]+>/i // #7298: escape - to avoid being passed as HTML comment when inlined in page
              var comment = /^<!\--/
              var conditionalComment = /^<!\[/ // Special Elements (can contain anything)
              var isPlainTextElement = makeMap('script,style,textarea', true)
              var reCache = {}
              var decodingMap = {
                '&lt;': '<',
                '&gt;': '>',
                '&quot;': '"',
                '&amp;': '&',
                '&#10;': '\n',
                '&#9;': '\t',
                '&#39;': "'"
              }
              var encodedAttr = /&(?:lt|gt|quot|amp|#39);/g
              var encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#39|#10|#9);/g // #5992
              var isIgnoreNewlineTag = makeMap('pre,textarea', true)
              var shouldIgnoreFirstNewline = function shouldIgnoreFirstNewline(
                tag,
                html
              ) {
                return tag && isIgnoreNewlineTag(tag) && html[0] === '\n'
              }
              function decodeAttr(value, shouldDecodeNewlines) {
                var re = shouldDecodeNewlines
                  ? encodedAttrWithNewLines
                  : encodedAttr
                return value.replace(re, function(match) {
                  return decodingMap[match]
                })
              }
              function parseHTML(html, options) {
                var stack = []
                var expectHTML = options.expectHTML
                var isUnaryTag$$1 = options.isUnaryTag || no
                var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no
                var index = 0
                var last, lastTag
                while (html) {
                  last = html // Make sure we're not in a plaintext content element like script/style
                  if (!lastTag || !isPlainTextElement(lastTag)) {
                    var textEnd = html.indexOf('<')
                    if (textEnd === 0) {
                      // Comment:
                      if (comment.test(html)) {
                        var commentEnd = html.indexOf('-->')
                        if (commentEnd >= 0) {
                          if (options.shouldKeepComment) {
                            options.comment(
                              html.substring(4, commentEnd),
                              index,
                              index + commentEnd + 3
                            )
                          }
                          advance(commentEnd + 3)
                          continue
                        }
                      } // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment
                      if (conditionalComment.test(html)) {
                        var conditionalEnd = html.indexOf(']>')
                        if (conditionalEnd >= 0) {
                          advance(conditionalEnd + 2)
                          continue
                        }
                      } // Doctype:
                      var doctypeMatch = html.match(doctype)
                      if (doctypeMatch) {
                        advance(doctypeMatch[0].length)
                        continue
                      } // End tag:
                      var endTagMatch = html.match(endTag)
                      if (endTagMatch) {
                        var curIndex = index
                        advance(endTagMatch[0].length)
                        parseEndTag(endTagMatch[1], curIndex, index)
                        continue
                      } // Start tag:
                      var startTagMatch = parseStartTag()
                      if (startTagMatch) {
                        handleStartTag(startTagMatch)
                        if (
                          shouldIgnoreFirstNewline(startTagMatch.tagName, html)
                        ) {
                          advance(1)
                        }
                        continue
                      }
                    }
                    var text = void 0,
                      rest = void 0,
                      next = void 0
                    if (textEnd >= 0) {
                      rest = html.slice(textEnd)
                      while (
                        !endTag.test(rest) &&
                        !startTagOpen.test(rest) &&
                        !comment.test(rest) &&
                        !conditionalComment.test(rest)
                      ) {
                        // < in plain text, be forgiving and treat it as text
                        next = rest.indexOf('<', 1)
                        if (next < 0) {
                          break
                        }
                        textEnd += next
                        rest = html.slice(textEnd)
                      }
                      text = html.substring(0, textEnd)
                    }
                    if (textEnd < 0) {
                      text = html
                    }
                    if (text) {
                      advance(text.length)
                    }
                    if (options.chars && text) {
                      options.chars(text, index - text.length, index)
                    }
                  } else {
                    var endTagLength = 0
                    var stackedTag = lastTag.toLowerCase()
                    var reStackedTag =
                      reCache[stackedTag] ||
                      (reCache[stackedTag] = new RegExp(
                        '([\\s\\S]*?)(</' + stackedTag + '[^>]*>)',
                        'i'
                      ))
                    var rest$1 = html.replace(reStackedTag, function(
                      all,
                      text,
                      endTag
                    ) {
                      endTagLength = endTag.length
                      if (
                        !isPlainTextElement(stackedTag) &&
                        stackedTag !== 'noscript'
                      ) {
                        text = text
                          .replace(/<!\--([\s\S]*?)-->/g, '$1') // #7298
                          .replace(/<!\[CDATA\[([\s\S]*?)]]>/g, '$1')
                      }
                      if (shouldIgnoreFirstNewline(stackedTag, text)) {
                        text = text.slice(1)
                      }
                      if (options.chars) {
                        options.chars(text)
                      }
                      return ''
                    })
                    index += html.length - rest$1.length
                    html = rest$1
                    parseEndTag(stackedTag, index - endTagLength, index)
                  }
                  if (html === last) {
                    options.chars && options.chars(html)
                    if (!stack.length && options.warn) {
                      options.warn(
                        'Mal-formatted tag at end of template: "' + html + '"',
                        { start: index + html.length }
                      )
                    }
                    break
                  }
                } // Clean up any remaining tags
                parseEndTag()
                function advance(n) {
                  index += n
                  html = html.substring(n)
                }
                function parseStartTag() {
                  var start = html.match(startTagOpen)
                  if (start) {
                    var match = { tagName: start[1], attrs: [], start: index }
                    advance(start[0].length)
                    var end, attr
                    while (
                      !(end = html.match(startTagClose)) &&
                      (attr =
                        html.match(dynamicArgAttribute) ||
                        html.match(attribute))
                    ) {
                      attr.start = index
                      advance(attr[0].length)
                      attr.end = index
                      match.attrs.push(attr)
                    }
                    if (end) {
                      match.unarySlash = end[1]
                      advance(end[0].length)
                      match.end = index
                      return match
                    }
                  }
                }
                function handleStartTag(match) {
                  var tagName = match.tagName
                  var unarySlash = match.unarySlash
                  if (expectHTML) {
                    if (lastTag === 'p' && isNonPhrasingTag(tagName)) {
                      parseEndTag(lastTag)
                    }
                    if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {
                      parseEndTag(tagName)
                    }
                  }
                  var unary = isUnaryTag$$1(tagName) || !!unarySlash
                  var l = match.attrs.length
                  var attrs = new Array(l)
                  for (var i = 0; i < l; i++) {
                    var args = match.attrs[i]
                    var value = args[3] || args[4] || args[5] || ''
                    var shouldDecodeNewlines =
                      tagName === 'a' && args[1] === 'href'
                        ? options.shouldDecodeNewlinesForHref
                        : options.shouldDecodeNewlines
                    attrs[i] = {
                      name: args[1],
                      value: decodeAttr(value, shouldDecodeNewlines)
                    }
                    if (options.outputSourceRange) {
                      attrs[i].start = args.start + args[0].match(/^\s*/).length
                      attrs[i].end = args.end
                    }
                  }
                  if (!unary) {
                    stack.push({
                      tag: tagName,
                      lowerCasedTag: tagName.toLowerCase(),
                      attrs: attrs,
                      start: match.start,
                      end: match.end
                    })
                    lastTag = tagName
                  }
                  if (options.start) {
                    options.start(tagName, attrs, unary, match.start, match.end)
                  }
                }
                function parseEndTag(tagName, start, end) {
                  var pos, lowerCasedTagName
                  if (start == null) {
                    start = index
                  }
                  if (end == null) {
                    end = index
                  } // Find the closest opened tag of the same type
                  if (tagName) {
                    lowerCasedTagName = tagName.toLowerCase()
                    for (pos = stack.length - 1; pos >= 0; pos--) {
                      if (stack[pos].lowerCasedTag === lowerCasedTagName) {
                        break
                      }
                    }
                  } else {
                    // If no tag name is provided, clean shop
                    pos = 0
                  }
                  if (pos >= 0) {
                    // Close all the open elements, up the stack
                    for (var i = stack.length - 1; i >= pos; i--) {
                      if (i > pos || (!tagName && options.warn)) {
                        options.warn(
                          'tag <' + stack[i].tag + '> has no matching end tag.',
                          { start: stack[i].start, end: stack[i].end }
                        )
                      }
                      if (options.end) {
                        options.end(stack[i].tag, start, end)
                      }
                    } // Remove the open elements from the stack
                    stack.length = pos
                    lastTag = pos && stack[pos - 1].tag
                  } else if (lowerCasedTagName === 'br') {
                    if (options.start) {
                      options.start(tagName, [], true, start, end)
                    }
                  } else if (lowerCasedTagName === 'p') {
                    if (options.start) {
                      options.start(tagName, [], false, start, end)
                    }
                    if (options.end) {
                      options.end(tagName, start, end)
                    }
                  }
                }
              }
              /*  */ var onRE = /^@|^v-on:/
              var dirRE = /^v-|^@|^:|^#/
              var forAliasRE = /([\s\S]*?)\s+(?:in|of)\s+([\s\S]*)/
              var forIteratorRE = /,([^,\}\]]*)(?:,([^,\}\]]*))?$/
              var stripParensRE = /^\(|\)$/g
              var dynamicArgRE = /^\[.*\]$/
              var argRE = /:(.*)$/
              var bindRE = /^:|^\.|^v-bind:/
              var modifierRE = /\.[^.\]]+(?=[^\]]*$)/g
              var slotRE = /^v-slot(:|$)|^#/
              var lineBreakRE = /[\r\n]/
              var whitespaceRE$1 = /\s+/g
              var invalidAttributeRE = /[\s"'<>\/=]/
              var decodeHTMLCached = cached(he.decode)
              var emptySlotScopeToken = '_empty_' // configurable state
              var warn$2
              var delimiters
              var transforms
              var preTransforms
              var postTransforms
              var platformIsPreTag
              var platformMustUseProp
              var platformGetTagNamespace
              var maybeComponent
              function createASTElement(tag, attrs, parent) {
                return {
                  type: 1,
                  tag: tag,
                  attrsList: attrs,
                  attrsMap: makeAttrsMap(attrs),
                  rawAttrsMap: {},
                  parent: parent,
                  children: []
                }
              }
              /**
               * Convert HTML string to AST.
               */ function parse(template, options) {
                warn$2 = options.warn || baseWarn
                platformIsPreTag = options.isPreTag || no
                platformMustUseProp = options.mustUseProp || no
                platformGetTagNamespace = options.getTagNamespace || no
                var isReservedTag = options.isReservedTag || no
                maybeComponent = function maybeComponent(el) {
                  return !!el.component || !isReservedTag(el.tag)
                }
                transforms = pluckModuleFunction(
                  options.modules,
                  'transformNode'
                )
                preTransforms = pluckModuleFunction(
                  options.modules,
                  'preTransformNode'
                )
                postTransforms = pluckModuleFunction(
                  options.modules,
                  'postTransformNode'
                )
                delimiters = options.delimiters
                var stack = []
                var preserveWhitespace = options.preserveWhitespace !== false
                var whitespaceOption = options.whitespace
                var root
                var currentParent
                var inVPre = false
                var inPre = false
                var warned = false
                function warnOnce(msg, range) {
                  if (!warned) {
                    warned = true
                    warn$2(msg, range)
                  }
                }
                function closeElement(element) {
                  trimEndingWhitespace(element)
                  if (!inVPre && !element.processed) {
                    element = processElement(element, options)
                  } // tree management
                  if (!stack.length && element !== root) {
                    // allow root elements with v-if, v-else-if and v-else
                    if (root['if'] && (element.elseif || element['else'])) {
                      {
                        checkRootConstraints(element)
                      }
                      addIfCondition(root, {
                        exp: element.elseif,
                        block: element
                      })
                    } else {
                      warnOnce(
                        'Component template should contain exactly one root element. ' +
                          'If you are using v-if on multiple elements, ' +
                          'use v-else-if to chain them instead.',
                        { start: element.start }
                      )
                    }
                  }
                  if (currentParent && !element.forbidden) {
                    if (element.elseif || element['else']) {
                      processIfConditions(element, currentParent)
                    } else {
                      if (element.slotScope) {
                        // scoped slot
                        // keep it in the children list so that v-else(-if) conditions can
                        // find it as the prev node.
                        var name = element.slotTarget || '"default"'
                        ;(currentParent.scopedSlots ||
                          (currentParent.scopedSlots = {}))[name] = element
                      }
                      currentParent.children.push(element)
                      element.parent = currentParent
                    }
                  } // final children cleanup
                  // filter out scoped slots
                  element.children = element.children.filter(function(c) {
                    return !c.slotScope
                  }) // remove trailing whitespace node again
                  trimEndingWhitespace(element) // check pre state
                  if (element.pre) {
                    inVPre = false
                  }
                  if (platformIsPreTag(element.tag)) {
                    inPre = false
                  } // apply post-transforms
                  for (var i = 0; i < postTransforms.length; i++) {
                    postTransforms[i](element, options)
                  }
                }
                function trimEndingWhitespace(el) {
                  // remove trailing whitespace node
                  if (!inPre) {
                    var lastNode
                    while (
                      (lastNode = el.children[el.children.length - 1]) &&
                      lastNode.type === 3 &&
                      lastNode.text === ' '
                    ) {
                      el.children.pop()
                    }
                  }
                }
                function checkRootConstraints(el) {
                  if (el.tag === 'slot' || el.tag === 'template') {
                    warnOnce(
                      'Cannot use <' +
                        el.tag +
                        '> as component root element because it may ' +
                        'contain multiple nodes.',
                      { start: el.start }
                    )
                  }
                  if (el.attrsMap.hasOwnProperty('v-for')) {
                    warnOnce(
                      'Cannot use v-for on stateful component root element because ' +
                        'it renders multiple elements.',
                      el.rawAttrsMap['v-for']
                    )
                  }
                }
                parseHTML(template, {
                  warn: warn$2,
                  expectHTML: options.expectHTML,
                  isUnaryTag: options.isUnaryTag,
                  canBeLeftOpenTag: options.canBeLeftOpenTag,
                  shouldDecodeNewlines: options.shouldDecodeNewlines,
                  shouldDecodeNewlinesForHref:
                    options.shouldDecodeNewlinesForHref,
                  shouldKeepComment: options.comments,
                  outputSourceRange: options.outputSourceRange,
                  start: function start(tag, attrs, unary, start$1, end) {
                    // check namespace.
                    // inherit parent ns if there is one
                    var ns =
                      (currentParent && currentParent.ns) ||
                      platformGetTagNamespace(tag) // handle IE svg bug
                    /* istanbul ignore if */ if (isIE && ns === 'svg') {
                      attrs = guardIESVGBug(attrs)
                    }
                    var element = createASTElement(tag, attrs, currentParent)
                    if (ns) {
                      element.ns = ns
                    }
                    {
                      if (options.outputSourceRange) {
                        element.start = start$1
                        element.end = end
                        element.rawAttrsMap = element.attrsList.reduce(function(
                          cumulated,
                          attr
                        ) {
                          cumulated[attr.name] = attr
                          return cumulated
                        },
                        {})
                      }
                      attrs.forEach(function(attr) {
                        if (invalidAttributeRE.test(attr.name)) {
                          warn$2(
                            'Invalid dynamic argument expression: attribute names cannot contain ' +
                              'spaces, quotes, <, >, / or =.',
                            {
                              start: attr.start + attr.name.indexOf('['),
                              end: attr.start + attr.name.length
                            }
                          )
                        }
                      })
                    }
                    if (isForbiddenTag(element) && !isServerRendering()) {
                      element.forbidden = true
                      warn$2(
                        'Templates should only be responsible for mapping the state to the ' +
                          'UI. Avoid placing tags with side-effects in your templates, such as ' +
                          '<' +
                          tag +
                          '>' +
                          ', as they will not be parsed.',
                        { start: element.start }
                      )
                    } // apply pre-transforms
                    for (var i = 0; i < preTransforms.length; i++) {
                      element = preTransforms[i](element, options) || element
                    }
                    if (!inVPre) {
                      processPre(element)
                      if (element.pre) {
                        inVPre = true
                      }
                    }
                    if (platformIsPreTag(element.tag)) {
                      inPre = true
                    }
                    if (inVPre) {
                      processRawAttrs(element)
                    } else if (!element.processed) {
                      // structural directives
                      processFor(element)
                      processIf(element)
                      processOnce(element)
                    }
                    if (!root) {
                      root = element
                      {
                        checkRootConstraints(root)
                      }
                    }
                    if (!unary) {
                      currentParent = element
                      stack.push(element)
                    } else {
                      closeElement(element)
                    }
                  },
                  end: function end(tag, start, end$1) {
                    var element = stack[stack.length - 1] // pop stack
                    stack.length -= 1
                    currentParent = stack[stack.length - 1]
                    if (options.outputSourceRange) {
                      element.end = end$1
                    }
                    closeElement(element)
                  },
                  chars: function chars(text, start, end) {
                    if (!currentParent) {
                      {
                        if (text === template) {
                          warnOnce(
                            'Component template requires a root element, rather than just text.',
                            { start: start }
                          )
                        } else if ((text = text.trim())) {
                          warnOnce(
                            'text "' +
                              text +
                              '" outside root element will be ignored.',
                            { start: start }
                          )
                        }
                      }
                      return
                    } // IE textarea placeholder bug
                    /* istanbul ignore if */ if (
                      isIE &&
                      currentParent.tag === 'textarea' &&
                      currentParent.attrsMap.placeholder === text
                    ) {
                      return
                    }
                    var children = currentParent.children
                    if (inPre || text.trim()) {
                      text = isTextTag(currentParent)
                        ? text
                        : decodeHTMLCached(text)
                    } else if (!children.length) {
                      // remove the whitespace-only node right after an opening tag
                      text = ''
                    } else if (whitespaceOption) {
                      if (whitespaceOption === 'condense') {
                        // in condense mode, remove the whitespace node if it contains
                        // line break, otherwise condense to a single space
                        text = lineBreakRE.test(text) ? '' : ' '
                      } else {
                        text = ' '
                      }
                    } else {
                      text = preserveWhitespace ? ' ' : ''
                    }
                    if (text) {
                      if (!inPre && whitespaceOption === 'condense') {
                        // condense consecutive whitespaces into single space
                        text = text.replace(whitespaceRE$1, ' ')
                      }
                      var res
                      var child
                      if (
                        !inVPre &&
                        text !== ' ' &&
                        (res = parseText(text, delimiters))
                      ) {
                        child = {
                          type: 2,
                          expression: res.expression,
                          tokens: res.tokens,
                          text: text
                        }
                      } else if (
                        text !== ' ' ||
                        !children.length ||
                        children[children.length - 1].text !== ' '
                      ) {
                        child = { type: 3, text: text }
                      }
                      if (child) {
                        if (options.outputSourceRange) {
                          child.start = start
                          child.end = end
                        }
                        children.push(child)
                      }
                    }
                  },
                  comment: function comment(text, start, end) {
                    // adding anyting as a sibling to the root node is forbidden
                    // comments should still be allowed, but ignored
                    if (currentParent) {
                      var child = { type: 3, text: text, isComment: true }
                      if (options.outputSourceRange) {
                        child.start = start
                        child.end = end
                      }
                      currentParent.children.push(child)
                    }
                  }
                })
                return root
              }
              function processPre(el) {
                if (getAndRemoveAttr(el, 'v-pre') != null) {
                  el.pre = true
                }
              }
              function processRawAttrs(el) {
                var list = el.attrsList
                var len = list.length
                if (len) {
                  var attrs = (el.attrs = new Array(len))
                  for (var i = 0; i < len; i++) {
                    attrs[i] = {
                      name: list[i].name,
                      value: JSON.stringify(list[i].value)
                    }
                    if (list[i].start != null) {
                      attrs[i].start = list[i].start
                      attrs[i].end = list[i].end
                    }
                  }
                } else if (!el.pre) {
                  // non root node in pre blocks with no attributes
                  el.plain = true
                }
              }
              function processElement(element, options) {
                processKey(element) // determine whether this is a plain element after
                // removing structural attributes
                element.plain =
                  !element.key &&
                  !element.scopedSlots &&
                  !element.attrsList.length
                processRef(element)
                processSlotContent(element)
                processSlotOutlet(element)
                processComponent(element)
                for (var i = 0; i < transforms.length; i++) {
                  element = transforms[i](element, options) || element
                }
                processAttrs(element)
                return element
              }
              function processKey(el) {
                var exp = getBindingAttr(el, 'key')
                if (exp) {
                  {
                    if (el.tag === 'template') {
                      warn$2(
                        '<template> cannot be keyed. Place the key on real elements instead.',
                        getRawBindingAttr(el, 'key')
                      )
                    }
                    if (el['for']) {
                      var iterator = el.iterator2 || el.iterator1
                      var parent = el.parent
                      if (
                        iterator &&
                        iterator === exp &&
                        parent &&
                        parent.tag === 'transition-group'
                      ) {
                        warn$2(
                          'Do not use v-for index as key on <transition-group> children, ' +
                            'this is the same as not using keys.',
                          getRawBindingAttr(el, 'key'),
                          true /* tip */
                        )
                      }
                    }
                  }
                  el.key = exp
                }
              }
              function processRef(el) {
                var ref = getBindingAttr(el, 'ref')
                if (ref) {
                  el.ref = ref
                  el.refInFor = checkInFor(el)
                }
              }
              function processFor(el) {
                var exp
                if ((exp = getAndRemoveAttr(el, 'v-for'))) {
                  var res = parseFor(exp)
                  if (res) {
                    extend(el, res)
                  } else {
                    warn$2(
                      'Invalid v-for expression: ' + exp,
                      el.rawAttrsMap['v-for']
                    )
                  }
                }
              }
              function parseFor(exp) {
                var inMatch = exp.match(forAliasRE)
                if (!inMatch) {
                  return
                }
                var res = {}
                res['for'] = inMatch[2].trim()
                var alias = inMatch[1].trim().replace(stripParensRE, '')
                var iteratorMatch = alias.match(forIteratorRE)
                if (iteratorMatch) {
                  res.alias = alias.replace(forIteratorRE, '').trim()
                  res.iterator1 = iteratorMatch[1].trim()
                  if (iteratorMatch[2]) {
                    res.iterator2 = iteratorMatch[2].trim()
                  }
                } else {
                  res.alias = alias
                }
                return res
              }
              function processIf(el) {
                var exp = getAndRemoveAttr(el, 'v-if')
                if (exp) {
                  el['if'] = exp
                  addIfCondition(el, { exp: exp, block: el })
                } else {
                  if (getAndRemoveAttr(el, 'v-else') != null) {
                    el['else'] = true
                  }
                  var elseif = getAndRemoveAttr(el, 'v-else-if')
                  if (elseif) {
                    el.elseif = elseif
                  }
                }
              }
              function processIfConditions(el, parent) {
                var prev = findPrevElement(parent.children)
                if (prev && prev['if']) {
                  addIfCondition(prev, { exp: el.elseif, block: el })
                } else {
                  warn$2(
                    'v-' +
                      (el.elseif ? 'else-if="' + el.elseif + '"' : 'else') +
                      ' ' +
                      'used on element <' +
                      el.tag +
                      '> without corresponding v-if.',
                    el.rawAttrsMap[el.elseif ? 'v-else-if' : 'v-else']
                  )
                }
              }
              function findPrevElement(children) {
                var i = children.length
                while (i--) {
                  if (children[i].type === 1) {
                    return children[i]
                  } else {
                    if (children[i].text !== ' ') {
                      warn$2(
                        'text "' +
                          children[i].text.trim() +
                          '" between v-if and v-else(-if) ' +
                          'will be ignored.',
                        children[i]
                      )
                    }
                    children.pop()
                  }
                }
              }
              function addIfCondition(el, condition) {
                if (!el.ifConditions) {
                  el.ifConditions = []
                }
                el.ifConditions.push(condition)
              }
              function processOnce(el) {
                var once$$1 = getAndRemoveAttr(el, 'v-once')
                if (once$$1 != null) {
                  el.once = true
                }
              } // handle content being passed to a component as slot,
              // e.g. <template slot="xxx">, <div slot-scope="xxx">
              function processSlotContent(el) {
                var slotScope
                if (el.tag === 'template') {
                  slotScope = getAndRemoveAttr(el, 'scope')
                  /* istanbul ignore if */ if (slotScope) {
                    warn$2(
                      'the "scope" attribute for scoped slots have been deprecated and ' +
                        'replaced by "slot-scope" since 2.5. The new "slot-scope" attribute ' +
                        'can also be used on plain elements in addition to <template> to ' +
                        'denote scoped slots.',
                      el.rawAttrsMap['scope'],
                      true
                    )
                  }
                  el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope')
                } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {
                  /* istanbul ignore if */ if (el.attrsMap['v-for']) {
                    warn$2(
                      'Ambiguous combined usage of slot-scope and v-for on <' +
                        el.tag +
                        '> ' +
                        '(v-for takes higher priority). Use a wrapper <template> for the ' +
                        'scoped slot to make it clearer.',
                      el.rawAttrsMap['slot-scope'],
                      true
                    )
                  }
                  el.slotScope = slotScope
                } // slot="xxx"
                var slotTarget = getBindingAttr(el, 'slot')
                if (slotTarget) {
                  el.slotTarget = slotTarget === '""' ? '"default"' : slotTarget
                  el.slotTargetDynamic = !!(
                    el.attrsMap[':slot'] || el.attrsMap['v-bind:slot']
                  ) // preserve slot as an attribute for native shadow DOM compat
                  // only for non-scoped slots.
                  if (el.tag !== 'template' && !el.slotScope) {
                    addAttr(
                      el,
                      'slot',
                      slotTarget,
                      getRawBindingAttr(el, 'slot')
                    )
                  }
                } // 2.6 v-slot syntax
                {
                  if (el.tag === 'template') {
                    // v-slot on <template>
                    var slotBinding = getAndRemoveAttrByRegex(el, slotRE)
                    if (slotBinding) {
                      {
                        if (el.slotTarget || el.slotScope) {
                          warn$2(
                            'Unexpected mixed usage of different slot syntaxes.',
                            el
                          )
                        }
                        if (el.parent && !maybeComponent(el.parent)) {
                          warn$2(
                            '<template v-slot> can only appear at the root level inside ' +
                              'the receiving component',
                            el
                          )
                        }
                      }
                      var ref = getSlotName(slotBinding)
                      var name = ref.name
                      var dynamic = ref.dynamic
                      el.slotTarget = name
                      el.slotTargetDynamic = dynamic
                      el.slotScope = slotBinding.value || emptySlotScopeToken // force it into a scoped slot for perf
                    }
                  } else {
                    // v-slot on component, denotes default slot
                    var slotBinding$1 = getAndRemoveAttrByRegex(el, slotRE)
                    if (slotBinding$1) {
                      {
                        if (!maybeComponent(el)) {
                          warn$2(
                            'v-slot can only be used on components or <template>.',
                            slotBinding$1
                          )
                        }
                        if (el.slotScope || el.slotTarget) {
                          warn$2(
                            'Unexpected mixed usage of different slot syntaxes.',
                            el
                          )
                        }
                        if (el.scopedSlots) {
                          warn$2(
                            'To avoid scope ambiguity, the default slot should also use ' +
                              '<template> syntax when there are other named slots.',
                            slotBinding$1
                          )
                        }
                      } // add the component's children to its default slot
                      var slots = el.scopedSlots || (el.scopedSlots = {})
                      var ref$1 = getSlotName(slotBinding$1)
                      var name$1 = ref$1.name
                      var dynamic$1 = ref$1.dynamic
                      var slotContainer = (slots[name$1] = createASTElement(
                        'template',
                        [],
                        el
                      ))
                      slotContainer.slotTarget = name$1
                      slotContainer.slotTargetDynamic = dynamic$1
                      slotContainer.children = el.children.filter(function(c) {
                        if (!c.slotScope) {
                          c.parent = slotContainer
                          return true
                        }
                      })
                      slotContainer.slotScope =
                        slotBinding$1.value || emptySlotScopeToken // remove children as they are returned from scopedSlots now
                      el.children = [] // mark el non-plain so data gets generated
                      el.plain = false
                    }
                  }
                }
              }
              function getSlotName(binding) {
                var name = binding.name.replace(slotRE, '')
                if (!name) {
                  if (binding.name[0] !== '#') {
                    name = 'default'
                  } else {
                    warn$2(
                      'v-slot shorthand syntax requires a slot name.',
                      binding
                    )
                  }
                }
                return dynamicArgRE.test(name) // dynamic [name]
                  ? { name: name.slice(1, -1), dynamic: true } // static name
                  : { name: '"' + name + '"', dynamic: false }
              } // handle <slot/> outlets
              function processSlotOutlet(el) {
                if (el.tag === 'slot') {
                  el.slotName = getBindingAttr(el, 'name')
                  if (el.key) {
                    warn$2(
                      '`key` does not work on <slot> because slots are abstract outlets ' +
                        'and can possibly expand into multiple elements. ' +
                        'Use the key on a wrapping element instead.',
                      getRawBindingAttr(el, 'key')
                    )
                  }
                }
              }
              function processComponent(el) {
                var binding
                if ((binding = getBindingAttr(el, 'is'))) {
                  el.component = binding
                }
                if (getAndRemoveAttr(el, 'inline-template') != null) {
                  el.inlineTemplate = true
                }
              }
              function processAttrs(el) {
                var list = el.attrsList
                var i, l, name, rawName, value, modifiers, syncGen, isDynamic
                for (i = 0, l = list.length; i < l; i++) {
                  name = rawName = list[i].name
                  value = list[i].value
                  if (dirRE.test(name)) {
                    // mark element as dynamic
                    el.hasBindings = true // modifiers
                    modifiers = parseModifiers(name.replace(dirRE, '')) // support .foo shorthand syntax for the .prop modifier
                    if (modifiers) {
                      name = name.replace(modifierRE, '')
                    }
                    if (bindRE.test(name)) {
                      // v-bind
                      name = name.replace(bindRE, '')
                      value = parseFilters(value)
                      isDynamic = dynamicArgRE.test(name)
                      if (isDynamic) {
                        name = name.slice(1, -1)
                      }
                      if (value.trim().length === 0) {
                        warn$2(
                          'The value for a v-bind expression cannot be empty. Found in "v-bind:' +
                            name +
                            '"'
                        )
                      }
                      if (modifiers) {
                        if (modifiers.prop && !isDynamic) {
                          name = camelize(name)
                          if (name === 'innerHtml') {
                            name = 'innerHTML'
                          }
                        }
                        if (modifiers.camel && !isDynamic) {
                          name = camelize(name)
                        }
                        if (modifiers.sync) {
                          syncGen = genAssignmentCode(value, '$event')
                          if (!isDynamic) {
                            addHandler(
                              el,
                              'update:' + camelize(name),
                              syncGen,
                              null,
                              false,
                              warn$2,
                              list[i]
                            )
                            if (hyphenate(name) !== camelize(name)) {
                              addHandler(
                                el,
                                'update:' + hyphenate(name),
                                syncGen,
                                null,
                                false,
                                warn$2,
                                list[i]
                              )
                            }
                          } else {
                            // handler w/ dynamic event name
                            addHandler(
                              el,
                              '"update:"+(' + name + ')',
                              syncGen,
                              null,
                              false,
                              warn$2,
                              list[i],
                              true // dynamic
                            )
                          }
                        }
                      }
                      if (
                        (modifiers && modifiers.prop) ||
                        (!el.component &&
                          platformMustUseProp(el.tag, el.attrsMap.type, name))
                      ) {
                        addProp(el, name, value, list[i], isDynamic)
                      } else {
                        addAttr(el, name, value, list[i], isDynamic)
                      }
                    } else if (onRE.test(name)) {
                      // v-on
                      name = name.replace(onRE, '')
                      isDynamic = dynamicArgRE.test(name)
                      if (isDynamic) {
                        name = name.slice(1, -1)
                      }
                      addHandler(
                        el,
                        name,
                        value,
                        modifiers,
                        false,
                        warn$2,
                        list[i],
                        isDynamic
                      )
                    } else {
                      // normal directives
                      name = name.replace(dirRE, '') // parse arg
                      var argMatch = name.match(argRE)
                      var arg = argMatch && argMatch[1]
                      isDynamic = false
                      if (arg) {
                        name = name.slice(0, -(arg.length + 1))
                        if (dynamicArgRE.test(arg)) {
                          arg = arg.slice(1, -1)
                          isDynamic = true
                        }
                      }
                      addDirective(
                        el,
                        name,
                        rawName,
                        value,
                        arg,
                        isDynamic,
                        modifiers,
                        list[i]
                      )
                      if (name === 'model') {
                        checkForAliasModel(el, value)
                      }
                    }
                  } else {
                    // literal attribute
                    {
                      var res = parseText(value, delimiters)
                      if (res) {
                        warn$2(
                          name +
                            '="' +
                            value +
                            '": ' +
                            'Interpolation inside attributes has been removed. ' +
                            'Use v-bind or the colon shorthand instead. For example, ' +
                            'instead of <div id="{{ val }}">, use <div :id="val">.',
                          list[i]
                        )
                      }
                    }
                    addAttr(el, name, JSON.stringify(value), list[i]) // #6887 firefox doesn't update muted state if set via attribute
                    // even immediately after element creation
                    if (
                      !el.component &&
                      name === 'muted' &&
                      platformMustUseProp(el.tag, el.attrsMap.type, name)
                    ) {
                      addProp(el, name, 'true', list[i])
                    }
                  }
                }
              }
              function checkInFor(el) {
                var parent = el
                while (parent) {
                  if (parent['for'] !== undefined) {
                    return true
                  }
                  parent = parent.parent
                }
                return false
              }
              function parseModifiers(name) {
                var match = name.match(modifierRE)
                if (match) {
                  var ret = {}
                  match.forEach(function(m) {
                    ret[m.slice(1)] = true
                  })
                  return ret
                }
              }
              function makeAttrsMap(attrs) {
                var map = {}
                for (var i = 0, l = attrs.length; i < l; i++) {
                  if (map[attrs[i].name] && !isIE && !isEdge) {
                    warn$2('duplicate attribute: ' + attrs[i].name, attrs[i])
                  }
                  map[attrs[i].name] = attrs[i].value
                }
                return map
              } // for script (e.g. type="x/template") or style, do not decode content
              function isTextTag(el) {
                return el.tag === 'script' || el.tag === 'style'
              }
              function isForbiddenTag(el) {
                return (
                  el.tag === 'style' ||
                  (el.tag === 'script' &&
                    (!el.attrsMap.type ||
                      el.attrsMap.type === 'text/javascript'))
                )
              }
              var ieNSBug = /^xmlns:NS\d+/
              var ieNSPrefix = /^NS\d+:/
              /* istanbul ignore next */ function guardIESVGBug(attrs) {
                var res = []
                for (var i = 0; i < attrs.length; i++) {
                  var attr = attrs[i]
                  if (!ieNSBug.test(attr.name)) {
                    attr.name = attr.name.replace(ieNSPrefix, '')
                    res.push(attr)
                  }
                }
                return res
              }
              function checkForAliasModel(el, value) {
                var _el = el
                while (_el) {
                  if (_el['for'] && _el.alias === value) {
                    warn$2(
                      '<' +
                        el.tag +
                        ' v-model="' +
                        value +
                        '">: ' +
                        'You are binding v-model directly to a v-for iteration alias. ' +
                        'This will not be able to modify the v-for source array because ' +
                        'writing to the alias is like modifying a function local variable. ' +
                        'Consider using an array of objects and use v-model on an object property instead.',
                      el.rawAttrsMap['v-model']
                    )
                  }
                  _el = _el.parent
                }
              }
              /*  */ function preTransformNode(el, options) {
                if (el.tag === 'input') {
                  var map = el.attrsMap
                  if (!map['v-model']) {
                    return
                  }
                  var typeBinding
                  if (map[':type'] || map['v-bind:type']) {
                    typeBinding = getBindingAttr(el, 'type')
                  }
                  if (!map.type && !typeBinding && map['v-bind']) {
                    typeBinding = '(' + map['v-bind'] + ').type'
                  }
                  if (typeBinding) {
                    var ifCondition = getAndRemoveAttr(el, 'v-if', true)
                    var ifConditionExtra = ifCondition
                      ? '&&(' + ifCondition + ')'
                      : ''
                    var hasElse = getAndRemoveAttr(el, 'v-else', true) != null
                    var elseIfCondition = getAndRemoveAttr(
                      el,
                      'v-else-if',
                      true
                    ) // 1. checkbox
                    var branch0 = cloneASTElement(el) // process for on the main node
                    processFor(branch0)
                    addRawAttr(branch0, 'type', 'checkbox')
                    processElement(branch0, options)
                    branch0.processed = true // prevent it from double-processed
                    branch0['if'] =
                      '(' + typeBinding + ")==='checkbox'" + ifConditionExtra
                    addIfCondition(branch0, {
                      exp: branch0['if'],
                      block: branch0
                    }) // 2. add radio else-if condition
                    var branch1 = cloneASTElement(el)
                    getAndRemoveAttr(branch1, 'v-for', true)
                    addRawAttr(branch1, 'type', 'radio')
                    processElement(branch1, options)
                    addIfCondition(branch0, {
                      exp: '(' + typeBinding + ")==='radio'" + ifConditionExtra,
                      block: branch1
                    }) // 3. other
                    var branch2 = cloneASTElement(el)
                    getAndRemoveAttr(branch2, 'v-for', true)
                    addRawAttr(branch2, ':type', typeBinding)
                    processElement(branch2, options)
                    addIfCondition(branch0, {
                      exp: ifCondition,
                      block: branch2
                    })
                    if (hasElse) {
                      branch0['else'] = true
                    } else if (elseIfCondition) {
                      branch0.elseif = elseIfCondition
                    }
                    return branch0
                  }
                }
              }
              function cloneASTElement(el) {
                return createASTElement(el.tag, el.attrsList.slice(), el.parent)
              }
              var model$1 = { preTransformNode: preTransformNode }
              var modules$1 = [klass$1, style$1, model$1]
              /*  */ function text(el, dir) {
                if (dir.value) {
                  addProp(el, 'textContent', '_s(' + dir.value + ')', dir)
                }
              }
              /*  */ function html(el, dir) {
                if (dir.value) {
                  addProp(el, 'innerHTML', '_s(' + dir.value + ')', dir)
                }
              }
              var directives$1 = { model: model, text: text, html: html }
              /*  */ var baseOptions = {
                expectHTML: true,
                modules: modules$1,
                directives: directives$1,
                isPreTag: isPreTag,
                isUnaryTag: isUnaryTag,
                mustUseProp: mustUseProp,
                canBeLeftOpenTag: canBeLeftOpenTag,
                isReservedTag: isReservedTag,
                getTagNamespace: getTagNamespace,
                staticKeys: genStaticKeys(modules$1)
              }
              /*  */ var isStaticKey
              var isPlatformReservedTag
              var genStaticKeysCached = cached(genStaticKeys$1)
              /**
               * Goal of the optimizer: walk the generated template AST tree
               * and detect sub-trees that are purely static, i.e. parts of
               * the DOM that never needs to change.
               *
               * Once we detect these sub-trees, we can:
               *
               * 1. Hoist them into constants, so that we no longer need to
               *    create fresh nodes for them on each re-render;
               * 2. Completely skip them in the patching process.
               */ function optimize(root, options) {
                if (!root) {
                  return
                }
                isStaticKey = genStaticKeysCached(options.staticKeys || '')
                isPlatformReservedTag = options.isReservedTag || no // first pass: mark all non-static nodes.
                markStatic$1(root) // second pass: mark static roots.
                markStaticRoots(root, false)
              }
              function genStaticKeys$1(keys) {
                return makeMap(
                  'type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap' +
                    (keys ? ',' + keys : '')
                )
              }
              function markStatic$1(node) {
                node['static'] = isStatic(node)
                if (node.type === 1) {
                  // do not make component slot content static. this avoids
                  // 1. components not able to mutate slot nodes
                  // 2. static slot content fails for hot-reloading
                  if (
                    !isPlatformReservedTag(node.tag) &&
                    node.tag !== 'slot' &&
                    node.attrsMap['inline-template'] == null
                  ) {
                    return
                  }
                  for (var i = 0, l = node.children.length; i < l; i++) {
                    var child = node.children[i]
                    markStatic$1(child)
                    if (!child['static']) {
                      node['static'] = false
                    }
                  }
                  if (node.ifConditions) {
                    for (
                      var i$1 = 1, l$1 = node.ifConditions.length;
                      i$1 < l$1;
                      i$1++
                    ) {
                      var block = node.ifConditions[i$1].block
                      markStatic$1(block)
                      if (!block['static']) {
                        node['static'] = false
                      }
                    }
                  }
                }
              }
              function markStaticRoots(node, isInFor) {
                if (node.type === 1) {
                  if (node['static'] || node.once) {
                    node.staticInFor = isInFor
                  } // For a node to qualify as a static root, it should have children that
                  // are not just static text. Otherwise the cost of hoisting out will
                  // outweigh the benefits and it's better off to just always render it fresh.
                  if (
                    node['static'] &&
                    node.children.length &&
                    !(node.children.length === 1 && node.children[0].type === 3)
                  ) {
                    node.staticRoot = true
                    return
                  } else {
                    node.staticRoot = false
                  }
                  if (node.children) {
                    for (var i = 0, l = node.children.length; i < l; i++) {
                      markStaticRoots(
                        node.children[i],
                        isInFor || !!node['for']
                      )
                    }
                  }
                  if (node.ifConditions) {
                    for (
                      var i$1 = 1, l$1 = node.ifConditions.length;
                      i$1 < l$1;
                      i$1++
                    ) {
                      markStaticRoots(node.ifConditions[i$1].block, isInFor)
                    }
                  }
                }
              }
              function isStatic(node) {
                if (node.type === 2) {
                  // expression
                  return false
                }
                if (node.type === 3) {
                  // text
                  return true
                }
                return !!(
                  node.pre ||
                  (!node.hasBindings && // no dynamic bindings
                  !node['if'] &&
                  !node['for'] && // not v-if or v-for or v-else
                  !isBuiltInTag(node.tag) && // not a built-in
                  isPlatformReservedTag(node.tag) && // not a component
                    !isDirectChildOfTemplateFor(node) &&
                    Object.keys(node).every(isStaticKey))
                )
              }
              function isDirectChildOfTemplateFor(node) {
                while (node.parent) {
                  node = node.parent
                  if (node.tag !== 'template') {
                    return false
                  }
                  if (node['for']) {
                    return true
                  }
                }
                return false
              }
              /*  */ var fnExpRE = /^([\w$_]+|\([^)]*?\))\s*=>|^function(?:\s+[\w$]+)?\s*\(/
              var fnInvokeRE = /\([^)]*?\);*$/
              var simplePathRE = /^[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['[^']*?']|\["[^"]*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*$/ // KeyboardEvent.keyCode aliases
              var keyCodes = {
                esc: 27,
                tab: 9,
                enter: 13,
                space: 32,
                up: 38,
                left: 37,
                right: 39,
                down: 40,
                delete: [8, 46]
              } // KeyboardEvent.key aliases
              var keyNames = {
                // #7880: IE11 and Edge use `Esc` for Escape key name.
                esc: ['Esc', 'Escape'],
                tab: 'Tab',
                enter: 'Enter', // #9112: IE11 uses `Spacebar` for Space key name.
                space: [' ', 'Spacebar'], // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.
                up: ['Up', 'ArrowUp'],
                left: ['Left', 'ArrowLeft'],
                right: ['Right', 'ArrowRight'],
                down: ['Down', 'ArrowDown'], // #9112: IE11 uses `Del` for Delete key name.
                delete: ['Backspace', 'Delete', 'Del']
              } // #4868: modifiers that prevent the execution of the listener
              // need to explicitly return null so that we can determine whether to remove
              // the listener for .once
              var genGuard = function genGuard(condition) {
                return 'if(' + condition + ')return null;'
              }
              var modifierCode = {
                stop: '$event.stopPropagation();',
                prevent: '$event.preventDefault();',
                self: genGuard('$event.target !== $event.currentTarget'),
                ctrl: genGuard('!$event.ctrlKey'),
                shift: genGuard('!$event.shiftKey'),
                alt: genGuard('!$event.altKey'),
                meta: genGuard('!$event.metaKey'),
                left: genGuard("'button' in $event && $event.button !== 0"),
                middle: genGuard("'button' in $event && $event.button !== 1"),
                right: genGuard("'button' in $event && $event.button !== 2")
              }
              function genHandlers(events, isNative) {
                var prefix = isNative ? 'nativeOn:' : 'on:'
                var staticHandlers = ''
                var dynamicHandlers = ''
                for (var name in events) {
                  var handlerCode = genHandler(events[name])
                  if (events[name] && events[name].dynamic) {
                    dynamicHandlers += name + ',' + handlerCode + ','
                  } else {
                    staticHandlers += '"' + name + '":' + handlerCode + ','
                  }
                }
                staticHandlers = '{' + staticHandlers.slice(0, -1) + '}'
                if (dynamicHandlers) {
                  return (
                    prefix +
                    '_d(' +
                    staticHandlers +
                    ',[' +
                    dynamicHandlers.slice(0, -1) +
                    '])'
                  )
                } else {
                  return prefix + staticHandlers
                }
              }
              function genHandler(handler) {
                if (!handler) {
                  return 'function(){}'
                }
                if (Array.isArray(handler)) {
                  return (
                    '[' +
                    handler
                      .map(function(handler) {
                        return genHandler(handler)
                      })
                      .join(',') +
                    ']'
                  )
                }
                var isMethodPath = simplePathRE.test(handler.value)
                var isFunctionExpression = fnExpRE.test(handler.value)
                var isFunctionInvocation = simplePathRE.test(
                  handler.value.replace(fnInvokeRE, '')
                )
                if (!handler.modifiers) {
                  if (isMethodPath || isFunctionExpression) {
                    return handler.value
                  }
                  return (
                    'function($event){' +
                    (isFunctionInvocation
                      ? 'return ' + handler.value
                      : handler.value) +
                    '}'
                  ) // inline statement
                } else {
                  var code = ''
                  var genModifierCode = ''
                  var keys = []
                  for (var key in handler.modifiers) {
                    if (modifierCode[key]) {
                      genModifierCode += modifierCode[key] // left/right
                      if (keyCodes[key]) {
                        keys.push(key)
                      }
                    } else if (key === 'exact') {
                      var modifiers = handler.modifiers
                      genModifierCode += genGuard(
                        ['ctrl', 'shift', 'alt', 'meta']
                          .filter(function(keyModifier) {
                            return !modifiers[keyModifier]
                          })
                          .map(function(keyModifier) {
                            return '$event.' + keyModifier + 'Key'
                          })
                          .join('||')
                      )
                    } else {
                      keys.push(key)
                    }
                  }
                  if (keys.length) {
                    code += genKeyFilter(keys)
                  } // Make sure modifiers like prevent and stop get executed after key filtering
                  if (genModifierCode) {
                    code += genModifierCode
                  }
                  var handlerCode = isMethodPath
                    ? 'return ' + handler.value + '($event)'
                    : isFunctionExpression
                    ? 'return (' + handler.value + ')($event)'
                    : isFunctionInvocation
                    ? 'return ' + handler.value
                    : handler.value
                  return 'function($event){' + code + handlerCode + '}'
                }
              }
              function genKeyFilter(keys) {
                return (
                  // make sure the key filters only apply to KeyboardEvents
                  // #9441: can't use 'keyCode' in $event because Chrome autofill fires fake
                  // key events that do not have keyCode property...
                  "if(!$event.type.indexOf('key')&&" +
                  keys.map(genFilterCode).join('&&') +
                  ')return null;'
                )
              }
              function genFilterCode(key) {
                var keyVal = parseInt(key, 10)
                if (keyVal) {
                  return '$event.keyCode!==' + keyVal
                }
                var keyCode = keyCodes[key]
                var keyName = keyNames[key]
                return (
                  '_k($event.keyCode,' +
                  JSON.stringify(key) +
                  ',' +
                  JSON.stringify(keyCode) +
                  ',' +
                  '$event.key,' +
                  '' +
                  JSON.stringify(keyName) +
                  ')'
                )
              }
              /*  */ function on(el, dir) {
                if (dir.modifiers) {
                  warn('v-on without argument does not support modifiers.')
                }
                el.wrapListeners = function(code) {
                  return '_g(' + code + ',' + dir.value + ')'
                }
              }
              /*  */ function bind$1(el, dir) {
                el.wrapData = function(code) {
                  return (
                    '_b(' +
                    code +
                    ",'" +
                    el.tag +
                    "'," +
                    dir.value +
                    ',' +
                    (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') +
                    (dir.modifiers && dir.modifiers.sync ? ',true' : '') +
                    ')'
                  )
                }
              }
              /*  */ var baseDirectives = { on: on, bind: bind$1, cloak: noop }
              /*  */ var CodegenState = function CodegenState(options) {
                this.options = options
                this.warn = options.warn || baseWarn
                this.transforms = pluckModuleFunction(
                  options.modules,
                  'transformCode'
                )
                this.dataGenFns = pluckModuleFunction(
                  options.modules,
                  'genData'
                )
                this.directives = extend(
                  extend({}, baseDirectives),
                  options.directives
                )
                var isReservedTag = options.isReservedTag || no
                this.maybeComponent = function(el) {
                  return !!el.component || !isReservedTag(el.tag)
                }
                this.onceId = 0
                this.staticRenderFns = []
                this.pre = false
              }
              function generate(ast, options) {
                var state = new CodegenState(options)
                var code = ast ? genElement(ast, state) : '_c("div")'
                return {
                  render: 'with(this){return ' + code + '}',
                  staticRenderFns: state.staticRenderFns
                }
              }
              function genElement(el, state) {
                if (el.parent) {
                  el.pre = el.pre || el.parent.pre
                }
                if (el.staticRoot && !el.staticProcessed) {
                  return genStatic(el, state)
                } else if (el.once && !el.onceProcessed) {
                  return genOnce(el, state)
                } else if (el['for'] && !el.forProcessed) {
                  return genFor(el, state)
                } else if (el['if'] && !el.ifProcessed) {
                  return genIf(el, state)
                } else if (
                  el.tag === 'template' &&
                  !el.slotTarget &&
                  !state.pre
                ) {
                  return genChildren(el, state) || 'void 0'
                } else if (el.tag === 'slot') {
                  return genSlot(el, state)
                } else {
                  // component or element
                  var code
                  if (el.component) {
                    code = genComponent(el.component, el, state)
                  } else {
                    var data
                    if (!el.plain || (el.pre && state.maybeComponent(el))) {
                      data = genData$2(el, state)
                    }
                    var children = el.inlineTemplate
                      ? null
                      : genChildren(el, state, true)
                    code =
                      "_c('" +
                      el.tag +
                      "'" +
                      (data ? ',' + data : '') +
                      (children ? ',' + children : '') +
                      ')'
                  } // module transforms
                  for (var i = 0; i < state.transforms.length; i++) {
                    code = state.transforms[i](el, code)
                  }
                  return code
                }
              } // hoist static sub-trees out
              function genStatic(el, state) {
                el.staticProcessed = true // Some elements (templates) need to behave differently inside of a v-pre
                // node.  All pre nodes are static roots, so we can use this as a location to
                // wrap a state change and reset it upon exiting the pre node.
                var originalPreState = state.pre
                if (el.pre) {
                  state.pre = el.pre
                }
                state.staticRenderFns.push(
                  'with(this){return ' + genElement(el, state) + '}'
                )
                state.pre = originalPreState
                return (
                  '_m(' +
                  (state.staticRenderFns.length - 1) +
                  (el.staticInFor ? ',true' : '') +
                  ')'
                )
              } // v-once
              function genOnce(el, state) {
                el.onceProcessed = true
                if (el['if'] && !el.ifProcessed) {
                  return genIf(el, state)
                } else if (el.staticInFor) {
                  var key = ''
                  var parent = el.parent
                  while (parent) {
                    if (parent['for']) {
                      key = parent.key
                      break
                    }
                    parent = parent.parent
                  }
                  if (!key) {
                    state.warn(
                      'v-once can only be used inside v-for that is keyed. ',
                      el.rawAttrsMap['v-once']
                    )
                    return genElement(el, state)
                  }
                  return (
                    '_o(' +
                    genElement(el, state) +
                    ',' +
                    state.onceId++ +
                    ',' +
                    key +
                    ')'
                  )
                } else {
                  return genStatic(el, state)
                }
              }
              function genIf(el, state, altGen, altEmpty) {
                el.ifProcessed = true // avoid recursion
                return genIfConditions(
                  el.ifConditions.slice(),
                  state,
                  altGen,
                  altEmpty
                )
              }
              function genIfConditions(conditions, state, altGen, altEmpty) {
                if (!conditions.length) {
                  return altEmpty || '_e()'
                }
                var condition = conditions.shift()
                if (condition.exp) {
                  return (
                    '(' +
                    condition.exp +
                    ')?' +
                    genTernaryExp(condition.block) +
                    ':' +
                    genIfConditions(conditions, state, altGen, altEmpty)
                  )
                } else {
                  return '' + genTernaryExp(condition.block)
                } // v-if with v-once should generate code like (a)?_m(0):_m(1)
                function genTernaryExp(el) {
                  return altGen
                    ? altGen(el, state)
                    : el.once
                    ? genOnce(el, state)
                    : genElement(el, state)
                }
              }
              function genFor(el, state, altGen, altHelper) {
                var exp = el['for']
                var alias = el.alias
                var iterator1 = el.iterator1 ? ',' + el.iterator1 : ''
                var iterator2 = el.iterator2 ? ',' + el.iterator2 : ''
                if (
                  state.maybeComponent(el) &&
                  el.tag !== 'slot' &&
                  el.tag !== 'template' &&
                  !el.key
                ) {
                  state.warn(
                    '<' +
                      el.tag +
                      ' v-for="' +
                      alias +
                      ' in ' +
                      exp +
                      '">: component lists rendered with ' +
                      'v-for should have explicit keys. ' +
                      'See https://vuejs.org/guide/list.html#key for more info.',
                    el.rawAttrsMap['v-for'],
                    true /* tip */
                  )
                }
                el.forProcessed = true // avoid recursion
                return (
                  (altHelper || '_l') +
                  '((' +
                  exp +
                  '),' +
                  'function(' +
                  alias +
                  iterator1 +
                  iterator2 +
                  '){' +
                  'return ' +
                  (altGen || genElement)(el, state) +
                  '})'
                )
              }
              function genData$2(el, state) {
                var data = '{' // directives first.
                // directives may mutate the el's other properties before they are generated.
                var dirs = genDirectives(el, state)
                if (dirs) {
                  data += dirs + ','
                } // key
                if (el.key) {
                  data += 'key:' + el.key + ','
                } // ref
                if (el.ref) {
                  data += 'ref:' + el.ref + ','
                }
                if (el.refInFor) {
                  data += 'refInFor:true,'
                } // pre
                if (el.pre) {
                  data += 'pre:true,'
                } // record original tag name for components using "is" attribute
                if (el.component) {
                  data += 'tag:"' + el.tag + '",'
                } // module data generation functions
                for (var i = 0; i < state.dataGenFns.length; i++) {
                  data += state.dataGenFns[i](el)
                } // attributes
                if (el.attrs) {
                  data += 'attrs:' + genProps(el.attrs) + ','
                } // DOM props
                if (el.props) {
                  data += 'domProps:' + genProps(el.props) + ','
                } // event handlers
                if (el.events) {
                  data += genHandlers(el.events, false) + ','
                }
                if (el.nativeEvents) {
                  data += genHandlers(el.nativeEvents, true) + ','
                } // slot target
                // only for non-scoped slots
                if (el.slotTarget && !el.slotScope) {
                  data += 'slot:' + el.slotTarget + ','
                } // scoped slots
                if (el.scopedSlots) {
                  data += genScopedSlots(el, el.scopedSlots, state) + ','
                } // component v-model
                if (el.model) {
                  data +=
                    'model:{value:' +
                    el.model.value +
                    ',callback:' +
                    el.model.callback +
                    ',expression:' +
                    el.model.expression +
                    '},'
                } // inline-template
                if (el.inlineTemplate) {
                  var inlineTemplate = genInlineTemplate(el, state)
                  if (inlineTemplate) {
                    data += inlineTemplate + ','
                  }
                }
                data = data.replace(/,$/, '') + '}' // v-bind dynamic argument wrap
                // v-bind with dynamic arguments must be applied using the same v-bind object
                // merge helper so that class/style/mustUseProp attrs are handled correctly.
                if (el.dynamicAttrs) {
                  data =
                    '_b(' +
                    data +
                    ',"' +
                    el.tag +
                    '",' +
                    genProps(el.dynamicAttrs) +
                    ')'
                } // v-bind data wrap
                if (el.wrapData) {
                  data = el.wrapData(data)
                } // v-on data wrap
                if (el.wrapListeners) {
                  data = el.wrapListeners(data)
                }
                return data
              }
              function genDirectives(el, state) {
                var dirs = el.directives
                if (!dirs) {
                  return
                }
                var res = 'directives:['
                var hasRuntime = false
                var i, l, dir, needRuntime
                for (i = 0, l = dirs.length; i < l; i++) {
                  dir = dirs[i]
                  needRuntime = true
                  var gen = state.directives[dir.name]
                  if (gen) {
                    // compile-time directive that manipulates AST.
                    // returns true if it also needs a runtime counterpart.
                    needRuntime = !!gen(el, dir, state.warn)
                  }
                  if (needRuntime) {
                    hasRuntime = true
                    res +=
                      '{name:"' +
                      dir.name +
                      '",rawName:"' +
                      dir.rawName +
                      '"' +
                      (dir.value
                        ? ',value:(' +
                          dir.value +
                          '),expression:' +
                          JSON.stringify(dir.value)
                        : '') +
                      (dir.arg
                        ? ',arg:' +
                          (dir.isDynamicArg ? dir.arg : '"' + dir.arg + '"')
                        : '') +
                      (dir.modifiers
                        ? ',modifiers:' + JSON.stringify(dir.modifiers)
                        : '') +
                      '},'
                  }
                }
                if (hasRuntime) {
                  return res.slice(0, -1) + ']'
                }
              }
              function genInlineTemplate(el, state) {
                var ast = el.children[0]
                if (el.children.length !== 1 || ast.type !== 1) {
                  state.warn(
                    'Inline-template components must have exactly one child element.',
                    { start: el.start }
                  )
                }
                if (ast && ast.type === 1) {
                  var inlineRenderFns = generate(ast, state.options)
                  return (
                    'inlineTemplate:{render:function(){' +
                    inlineRenderFns.render +
                    '},staticRenderFns:[' +
                    inlineRenderFns.staticRenderFns
                      .map(function(code) {
                        return 'function(){' + code + '}'
                      })
                      .join(',') +
                    ']}'
                  )
                }
              }
              function genScopedSlots(el, slots, state) {
                // by default scoped slots are considered "stable", this allows child
                // components with only scoped slots to skip forced updates from parent.
                // but in some cases we have to bail-out of this optimization
                // for example if the slot contains dynamic names, has v-if or v-for on them...
                var needsForceUpdate =
                  el['for'] ||
                  Object.keys(slots).some(function(key) {
                    var slot = slots[key]
                    return (
                      slot.slotTargetDynamic ||
                      slot['if'] ||
                      slot['for'] ||
                      containsSlotChild(slot) // is passing down slot from parent which may be dynamic
                    )
                  }) // #9534: if a component with scoped slots is inside a conditional branch,
                // it's possible for the same component to be reused but with different
                // compiled slot content. To avoid that, we generate a unique key based on
                // the generated code of all the slot contents.
                var needsKey = !!el['if'] // OR when it is inside another scoped slot or v-for (the reactivity may be
                // disconnected due to the intermediate scope variable)
                // #9438, #9506
                // TODO: this can be further optimized by properly analyzing in-scope bindings
                // and skip force updating ones that do not actually use scope variables.
                if (!needsForceUpdate) {
                  var parent = el.parent
                  while (parent) {
                    if (
                      (parent.slotScope &&
                        parent.slotScope !== emptySlotScopeToken) ||
                      parent['for']
                    ) {
                      needsForceUpdate = true
                      break
                    }
                    if (parent['if']) {
                      needsKey = true
                    }
                    parent = parent.parent
                  }
                }
                var generatedSlots = Object.keys(slots)
                  .map(function(key) {
                    return genScopedSlot(slots[key], state)
                  })
                  .join(',')
                return (
                  'scopedSlots:_u([' +
                  generatedSlots +
                  ']' +
                  (needsForceUpdate ? ',null,true' : '') +
                  (!needsForceUpdate && needsKey
                    ? ',null,false,' + hash(generatedSlots)
                    : '') +
                  ')'
                )
              }
              function hash(str) {
                var hash = 5381
                var i = str.length
                while (i) {
                  hash = (hash * 33) ^ str.charCodeAt(--i)
                }
                return hash >>> 0
              }
              function containsSlotChild(el) {
                if (el.type === 1) {
                  if (el.tag === 'slot') {
                    return true
                  }
                  return el.children.some(containsSlotChild)
                }
                return false
              }
              function genScopedSlot(el, state) {
                var isLegacySyntax = el.attrsMap['slot-scope']
                if (el['if'] && !el.ifProcessed && !isLegacySyntax) {
                  return genIf(el, state, genScopedSlot, 'null')
                }
                if (el['for'] && !el.forProcessed) {
                  return genFor(el, state, genScopedSlot)
                }
                var slotScope =
                  el.slotScope === emptySlotScopeToken
                    ? ''
                    : String(el.slotScope)
                var fn =
                  'function(' +
                  slotScope +
                  '){' +
                  'return ' +
                  (el.tag === 'template'
                    ? el['if'] && isLegacySyntax
                      ? '(' +
                        el['if'] +
                        ')?' +
                        (genChildren(el, state) || 'undefined') +
                        ':undefined'
                      : genChildren(el, state) || 'undefined'
                    : genElement(el, state)) +
                  '}' // reverse proxy v-slot without scope on this.$slots
                var reverseProxy = slotScope ? '' : ',proxy:true'
                return (
                  '{key:' +
                  (el.slotTarget || '"default"') +
                  ',fn:' +
                  fn +
                  reverseProxy +
                  '}'
                )
              }
              function genChildren(
                el,
                state,
                checkSkip,
                altGenElement,
                altGenNode
              ) {
                var children = el.children
                if (children.length) {
                  var el$1 = children[0] // optimize single v-for
                  if (
                    children.length === 1 &&
                    el$1['for'] &&
                    el$1.tag !== 'template' &&
                    el$1.tag !== 'slot'
                  ) {
                    var normalizationType = checkSkip
                      ? state.maybeComponent(el$1)
                        ? ',1'
                        : ',0'
                      : ''
                    return (
                      '' +
                      (altGenElement || genElement)(el$1, state) +
                      normalizationType
                    )
                  }
                  var normalizationType$1 = checkSkip
                    ? getNormalizationType(children, state.maybeComponent)
                    : 0
                  var gen = altGenNode || genNode
                  return (
                    '[' +
                    children
                      .map(function(c) {
                        return gen(c, state)
                      })
                      .join(',') +
                    ']' +
                    (normalizationType$1 ? ',' + normalizationType$1 : '')
                  )
                }
              } // determine the normalization needed for the children array.
              // 0: no normalization needed
              // 1: simple normalization needed (possible 1-level deep nested array)
              // 2: full normalization needed
              function getNormalizationType(children, maybeComponent) {
                var res = 0
                for (var i = 0; i < children.length; i++) {
                  var el = children[i]
                  if (el.type !== 1) {
                    continue
                  }
                  if (
                    needsNormalization(el) ||
                    (el.ifConditions &&
                      el.ifConditions.some(function(c) {
                        return needsNormalization(c.block)
                      }))
                  ) {
                    res = 2
                    break
                  }
                  if (
                    maybeComponent(el) ||
                    (el.ifConditions &&
                      el.ifConditions.some(function(c) {
                        return maybeComponent(c.block)
                      }))
                  ) {
                    res = 1
                  }
                }
                return res
              }
              function needsNormalization(el) {
                return (
                  el['for'] !== undefined ||
                  el.tag === 'template' ||
                  el.tag === 'slot'
                )
              }
              function genNode(node, state) {
                if (node.type === 1) {
                  return genElement(node, state)
                } else if (node.type === 3 && node.isComment) {
                  return genComment(node)
                } else {
                  return genText(node)
                }
              }
              function genText(text) {
                return (
                  '_v(' +
                  (text.type === 2
                    ? text.expression // no need for () because already wrapped in _s()
                    : transformSpecialNewlines(JSON.stringify(text.text))) +
                  ')'
                )
              }
              function genComment(comment) {
                return '_e(' + JSON.stringify(comment.text) + ')'
              }
              function genSlot(el, state) {
                var slotName = el.slotName || '"default"'
                var children = genChildren(el, state)
                var res = '_t(' + slotName + (children ? ',' + children : '')
                var attrs =
                  el.attrs || el.dynamicAttrs
                    ? genProps(
                        (el.attrs || [])
                          .concat(el.dynamicAttrs || [])
                          .map(function(attr) {
                            return {
                              // slot props are camelized
                              name: camelize(attr.name),
                              value: attr.value,
                              dynamic: attr.dynamic
                            }
                          })
                      )
                    : null
                var bind$$1 = el.attrsMap['v-bind']
                if ((attrs || bind$$1) && !children) {
                  res += ',null'
                }
                if (attrs) {
                  res += ',' + attrs
                }
                if (bind$$1) {
                  res += (attrs ? '' : ',null') + ',' + bind$$1
                }
                return res + ')'
              } // componentName is el.component, take it as argument to shun flow's pessimistic refinement
              function genComponent(componentName, el, state) {
                var children = el.inlineTemplate
                  ? null
                  : genChildren(el, state, true)
                return (
                  '_c(' +
                  componentName +
                  ',' +
                  genData$2(el, state) +
                  (children ? ',' + children : '') +
                  ')'
                )
              }
              function genProps(props) {
                var staticProps = ''
                var dynamicProps = ''
                for (var i = 0; i < props.length; i++) {
                  var prop = props[i]
                  var value = transformSpecialNewlines(prop.value)
                  if (prop.dynamic) {
                    dynamicProps += prop.name + ',' + value + ','
                  } else {
                    staticProps += '"' + prop.name + '":' + value + ','
                  }
                }
                staticProps = '{' + staticProps.slice(0, -1) + '}'
                if (dynamicProps) {
                  return (
                    '_d(' +
                    staticProps +
                    ',[' +
                    dynamicProps.slice(0, -1) +
                    '])'
                  )
                } else {
                  return staticProps
                }
              } // #3895, #4268
              function transformSpecialNewlines(text) {
                return text
                  .replace(/\u2028/g, '\\u2028')
                  .replace(/\u2029/g, '\\u2029')
              } /*  */ // these keywords should not appear inside expressions, but operators like
              // typeof, instanceof and in are allowed
              var prohibitedKeywordRE = new RegExp(
                '\\b' +
                  (
                    'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +
                    'super,throw,while,yield,delete,export,import,return,switch,default,' +
                    'extends,finally,continue,debugger,function,arguments'
                  )
                    .split(',')
                    .join('\\b|\\b') +
                  '\\b'
              ) // these unary operators should not be used as property/method names
              var unaryOperatorsRE = new RegExp(
                '\\b' +
                  'delete,typeof,void'
                    .split(',')
                    .join('\\s*\\([^\\)]*\\)|\\b') +
                  '\\s*\\([^\\)]*\\)'
              ) // strip strings in expressions
              var stripStringRE = /'(?:[^'\\]|\\.)*'|"(?:[^"\\]|\\.)*"|`(?:[^`\\]|\\.)*\$\{|\}(?:[^`\\]|\\.)*`|`(?:[^`\\]|\\.)*`/g // detect problematic expressions in a template
              function detectErrors(ast, warn) {
                if (ast) {
                  checkNode(ast, warn)
                }
              }
              function checkNode(node, warn) {
                if (node.type === 1) {
                  for (var name in node.attrsMap) {
                    if (dirRE.test(name)) {
                      var value = node.attrsMap[name]
                      if (value) {
                        var range = node.rawAttrsMap[name]
                        if (name === 'v-for') {
                          checkFor(node, 'v-for="' + value + '"', warn, range)
                        } else if (name === 'v-slot' || name[0] === '#') {
                          checkFunctionParameterExpression(
                            value,
                            name + '="' + value + '"',
                            warn,
                            range
                          )
                        } else if (onRE.test(name)) {
                          checkEvent(
                            value,
                            name + '="' + value + '"',
                            warn,
                            range
                          )
                        } else {
                          checkExpression(
                            value,
                            name + '="' + value + '"',
                            warn,
                            range
                          )
                        }
                      }
                    }
                  }
                  if (node.children) {
                    for (var i = 0; i < node.children.length; i++) {
                      checkNode(node.children[i], warn)
                    }
                  }
                } else if (node.type === 2) {
                  checkExpression(node.expression, node.text, warn, node)
                }
              }
              function checkEvent(exp, text, warn, range) {
                var stripped = exp.replace(stripStringRE, '')
                var keywordMatch = stripped.match(unaryOperatorsRE)
                if (
                  keywordMatch &&
                  stripped.charAt(keywordMatch.index - 1) !== '$'
                ) {
                  warn(
                    'avoid using JavaScript unary operator as property name: ' +
                      '"' +
                      keywordMatch[0] +
                      '" in expression ' +
                      text.trim(),
                    range
                  )
                }
                checkExpression(exp, text, warn, range)
              }
              function checkFor(node, text, warn, range) {
                checkExpression(node['for'] || '', text, warn, range)
                checkIdentifier(node.alias, 'v-for alias', text, warn, range)
                checkIdentifier(
                  node.iterator1,
                  'v-for iterator',
                  text,
                  warn,
                  range
                )
                checkIdentifier(
                  node.iterator2,
                  'v-for iterator',
                  text,
                  warn,
                  range
                )
              }
              function checkIdentifier(ident, type, text, warn, range) {
                if (typeof ident === 'string') {
                  try {
                    new Function('var ' + ident + '=_')
                  } catch (e) {
                    warn(
                      'invalid ' +
                        type +
                        ' "' +
                        ident +
                        '" in expression: ' +
                        text.trim(),
                      range
                    )
                  }
                }
              }
              function checkExpression(exp, text, warn, range) {
                try {
                  new Function('return ' + exp)
                } catch (e) {
                  var keywordMatch = exp
                    .replace(stripStringRE, '')
                    .match(prohibitedKeywordRE)
                  if (keywordMatch) {
                    warn(
                      'avoid using JavaScript keyword as property name: ' +
                        '"' +
                        keywordMatch[0] +
                        '"\n  Raw expression: ' +
                        text.trim(),
                      range
                    )
                  } else {
                    warn(
                      'invalid expression: ' +
                        e.message +
                        ' in\n\n' +
                        '    ' +
                        exp +
                        '\n\n' +
                        '  Raw expression: ' +
                        text.trim() +
                        '\n',
                      range
                    )
                  }
                }
              }
              function checkFunctionParameterExpression(
                exp,
                text,
                warn,
                range
              ) {
                try {
                  new Function(exp, '')
                } catch (e) {
                  warn(
                    'invalid function parameter expression: ' +
                      e.message +
                      ' in\n\n' +
                      '    ' +
                      exp +
                      '\n\n' +
                      '  Raw expression: ' +
                      text.trim() +
                      '\n',
                    range
                  )
                }
              }
              /*  */ var range = 2
              function generateCodeFrame(source, start, end) {
                if (start === void 0) start = 0
                if (end === void 0) end = source.length
                var lines = source.split(/\r?\n/)
                var count = 0
                var res = []
                for (var i = 0; i < lines.length; i++) {
                  count += lines[i].length + 1
                  if (count >= start) {
                    for (
                      var j = i - range;
                      j <= i + range || end > count;
                      j++
                    ) {
                      if (j < 0 || j >= lines.length) {
                        continue
                      }
                      res.push(
                        '' +
                          (j + 1) +
                          repeat$1(' ', 3 - String(j + 1).length) +
                          '|  ' +
                          lines[j]
                      )
                      var lineLength = lines[j].length
                      if (j === i) {
                        // push underline
                        var pad = start - (count - lineLength) + 1
                        var length =
                          end > count ? lineLength - pad : end - start
                        res.push(
                          '   |  ' + repeat$1(' ', pad) + repeat$1('^', length)
                        )
                      } else if (j > i) {
                        if (end > count) {
                          var length$1 = Math.min(end - count, lineLength)
                          res.push('   |  ' + repeat$1('^', length$1))
                        }
                        count += lineLength + 1
                      }
                    }
                    break
                  }
                }
                return res.join('\n')
              }
              function repeat$1(str, n) {
                var result = ''
                if (n > 0) {
                  while (true) {
                    // eslint-disable-line
                    if (n & 1) {
                      result += str
                    }
                    n >>>= 1
                    if (n <= 0) {
                      break
                    }
                    str += str
                  }
                }
                return result
              }
              /*  */ function createFunction(code, errors) {
                try {
                  return new Function(code)
                } catch (err) {
                  errors.push({ err: err, code: code })
                  return noop
                }
              }
              function createCompileToFunctionFn(compile) {
                var cache = Object.create(null)
                return function compileToFunctions(template, options, vm) {
                  options = extend({}, options)
                  var warn$$1 = options.warn || warn
                  delete options.warn
                  /* istanbul ignore if */ {
                    // detect possible CSP restriction
                    try {
                      new Function('return 1')
                    } catch (e) {
                      if (e.toString().match(/unsafe-eval|CSP/)) {
                        warn$$1(
                          'It seems you are using the standalone build of Vue.js in an ' +
                            'environment with Content Security Policy that prohibits unsafe-eval. ' +
                            'The template compiler cannot work in this environment. Consider ' +
                            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +
                            'templates into render functions.'
                        )
                      }
                    }
                  } // check cache
                  var key = options.delimiters
                    ? String(options.delimiters) + template
                    : template
                  if (cache[key]) {
                    return cache[key]
                  } // compile
                  var compiled = compile(template, options) // check compilation errors/tips
                  {
                    if (compiled.errors && compiled.errors.length) {
                      if (options.outputSourceRange) {
                        compiled.errors.forEach(function(e) {
                          warn$$1(
                            'Error compiling template:\n\n' +
                              e.msg +
                              '\n\n' +
                              generateCodeFrame(template, e.start, e.end),
                            vm
                          )
                        })
                      } else {
                        warn$$1(
                          'Error compiling template:\n\n' +
                            template +
                            '\n\n' +
                            compiled.errors
                              .map(function(e) {
                                return '- ' + e
                              })
                              .join('\n') +
                            '\n',
                          vm
                        )
                      }
                    }
                    if (compiled.tips && compiled.tips.length) {
                      if (options.outputSourceRange) {
                        compiled.tips.forEach(function(e) {
                          return tip(e.msg, vm)
                        })
                      } else {
                        compiled.tips.forEach(function(msg) {
                          return tip(msg, vm)
                        })
                      }
                    }
                  } // turn code into functions
                  var res = {}
                  var fnGenErrors = []
                  res.render = createFunction(compiled.render, fnGenErrors)
                  res.staticRenderFns = compiled.staticRenderFns.map(function(
                    code
                  ) {
                    return createFunction(code, fnGenErrors)
                  }) // check function generation errors.
                  // this should only happen if there is a bug in the compiler itself.
                  // mostly for codegen development use
                  /* istanbul ignore if */ {
                    if (
                      (!compiled.errors || !compiled.errors.length) &&
                      fnGenErrors.length
                    ) {
                      warn$$1(
                        'Failed to generate render function:\n\n' +
                          fnGenErrors
                            .map(function(ref) {
                              var err = ref.err
                              var code = ref.code
                              return err.toString() + ' in\n\n' + code + '\n'
                            })
                            .join('\n'),
                        vm
                      )
                    }
                  }
                  return (cache[key] = res)
                }
              }
              /*  */ function createCompilerCreator(baseCompile) {
                return function createCompiler(baseOptions) {
                  function compile(template, options) {
                    var finalOptions = Object.create(baseOptions)
                    var errors = []
                    var tips = []
                    var warn = function warn(msg, range, tip) {
                      ;(tip ? tips : errors).push(msg)
                    }
                    if (options) {
                      if (options.outputSourceRange) {
                        // $flow-disable-line
                        var leadingSpaceLength = template.match(/^\s*/)[0]
                          .length
                        warn = function warn(msg, range, tip) {
                          var data = { msg: msg }
                          if (range) {
                            if (range.start != null) {
                              data.start = range.start + leadingSpaceLength
                            }
                            if (range.end != null) {
                              data.end = range.end + leadingSpaceLength
                            }
                          }
                          ;(tip ? tips : errors).push(data)
                        }
                      } // merge custom modules
                      if (options.modules) {
                        finalOptions.modules = (
                          baseOptions.modules || []
                        ).concat(options.modules)
                      } // merge custom directives
                      if (options.directives) {
                        finalOptions.directives = extend(
                          Object.create(baseOptions.directives || null),
                          options.directives
                        )
                      } // copy other options
                      for (var key in options) {
                        if (key !== 'modules' && key !== 'directives') {
                          finalOptions[key] = options[key]
                        }
                      }
                    }
                    finalOptions.warn = warn
                    var compiled = baseCompile(template.trim(), finalOptions)
                    {
                      detectErrors(compiled.ast, warn)
                    }
                    compiled.errors = errors
                    compiled.tips = tips
                    return compiled
                  }
                  return {
                    compile: compile,
                    compileToFunctions: createCompileToFunctionFn(compile)
                  }
                }
              } /*  */ // `createCompilerCreator` allows creating compilers that use alternative
              // parser/optimizer/codegen, e.g the SSR optimizing compiler.
              // Here we just export a default compiler using the default parts.
              var createCompiler = createCompilerCreator(function baseCompile(
                template,
                options
              ) {
                var ast = parse(template.trim(), options)
                if (options.optimize !== false) {
                  optimize(ast, options)
                }
                var code = generate(ast, options)
                return {
                  ast: ast,
                  render: code.render,
                  staticRenderFns: code.staticRenderFns
                }
              })
              /*  */ var ref$1 = createCompiler(baseOptions)
              var compile = ref$1.compile
              var compileToFunctions = ref$1.compileToFunctions /*  */ // check whether current browser encodes a char inside attribute values
              var div
              function getShouldDecode(href) {
                div = div || document.createElement('div')
                div.innerHTML = href ? '<a href="\n"/>' : '<div a="\n"/>'
                return div.innerHTML.indexOf('&#10;') > 0
              } // #3663: IE encodes newlines inside attribute values while other browsers don't
              var shouldDecodeNewlines = inBrowser
                ? getShouldDecode(false)
                : false // #6828: chrome encodes content in a[href]
              var shouldDecodeNewlinesForHref = inBrowser
                ? getShouldDecode(true)
                : false
              /*  */ var idToTemplate = cached(function(id) {
                var el = query(id)
                return el && el.innerHTML
              })
              var mount = Vue.prototype.$mount
              Vue.prototype.$mount = function(el, hydrating) {
                el = el && query(el)
                /* istanbul ignore if */ if (
                  el === document.body ||
                  el === document.documentElement
                ) {
                  warn(
                    'Do not mount Vue to <html> or <body> - mount to normal elements instead.'
                  )
                  return this
                }
                var options = this.$options // resolve template/el and convert to render function
                if (!options.render) {
                  var template = options.template
                  if (template) {
                    if (typeof template === 'string') {
                      if (template.charAt(0) === '#') {
                        template = idToTemplate(template)
                        /* istanbul ignore if */ if (!template) {
                          warn(
                            'Template element not found or is empty: ' +
                              options.template,
                            this
                          )
                        }
                      }
                    } else if (template.nodeType) {
                      template = template.innerHTML
                    } else {
                      {
                        warn('invalid template option:' + template, this)
                      }
                      return this
                    }
                  } else if (el) {
                    template = getOuterHTML(el)
                  }
                  if (template) {
                    /* istanbul ignore if */ if (config.performance && mark) {
                      mark('compile')
                    }
                    var ref = compileToFunctions(
                      template,
                      {
                        outputSourceRange: 'development' !== 'production',
                        shouldDecodeNewlines: shouldDecodeNewlines,
                        shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,
                        delimiters: options.delimiters,
                        comments: options.comments
                      },
                      this
                    )
                    var render = ref.render
                    var staticRenderFns = ref.staticRenderFns
                    options.render = render
                    options.staticRenderFns = staticRenderFns
                    /* istanbul ignore if */ if (config.performance && mark) {
                      mark('compile end')
                      measure(
                        'vue ' + this._name + ' compile',
                        'compile',
                        'compile end'
                      )
                    }
                  }
                }
                return mount.call(this, el, hydrating)
              }
              /**
               * Get outerHTML of elements, taking care
               * of SVG elements in IE as well.
               */ function getOuterHTML(el) {
                if (el.outerHTML) {
                  return el.outerHTML
                } else {
                  var container = document.createElement('div')
                  container.appendChild(el.cloneNode(true))
                  return container.innerHTML
                }
              }
              Vue.compile = compileToFunctions
              return Vue
            })
          }.call(
            this,
            typeof global !== 'undefined'
              ? global
              : typeof self !== 'undefined'
              ? self
              : typeof window !== 'undefined'
              ? window
              : {},
            require('timers').setImmediate
          ))
        }.apply(this, arguments))
      },
      { timers: 226 }
    ],
    233: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/vue/dist/vue.runtime.common.dev.js',
          module
        )
        ;(function() {
          ;(function(global, setImmediate) {
            /*!
             * Vue.js v2.6.11
             * (c) 2014-2019 Evan You
             * Released under the MIT License.
             */ 'use strict'
            /*  */ var emptyObject = Object.freeze({}) // These helpers produce better VM code in JS engines due to their
            // explicitness and function inlining.
            function isUndef(v) {
              return v === undefined || v === null
            }
            function isDef(v) {
              return v !== undefined && v !== null
            }
            function isTrue(v) {
              return v === true
            }
            function isFalse(v) {
              return v === false
            }
            /**
             * Check if value is primitive.
             */ function isPrimitive(value) {
              return (
                typeof value === 'string' ||
                typeof value === 'number' || // $flow-disable-line
                (0, _typeof3['default'])(value) === 'symbol' ||
                typeof value === 'boolean'
              )
            }
            /**
             * Quick object check - this is primarily used to tell
             * Objects from primitive values when we know the value
             * is a JSON-compliant type.
             */ function isObject(obj) {
              return obj !== null && (0, _typeof3['default'])(obj) === 'object'
            }
            /**
             * Get the raw type string of a value, e.g., [object Object].
             */ var _toString = Object.prototype.toString
            function toRawType(value) {
              return _toString.call(value).slice(8, -1)
            }
            /**
             * Strict object type check. Only returns true
             * for plain JavaScript objects.
             */ function isPlainObject(obj) {
              return _toString.call(obj) === '[object Object]'
            }
            function isRegExp(v) {
              return _toString.call(v) === '[object RegExp]'
            }
            /**
             * Check if val is a valid array index.
             */ function isValidArrayIndex(val) {
              var n = parseFloat(String(val))
              return n >= 0 && Math.floor(n) === n && isFinite(val)
            }
            function isPromise(val) {
              return (
                isDef(val) &&
                typeof val.then === 'function' &&
                typeof val['catch'] === 'function'
              )
            }
            /**
             * Convert a value to a string that is actually rendered.
             */ function toString(val) {
              return val == null
                ? ''
                : Array.isArray(val) ||
                  (isPlainObject(val) && val.toString === _toString)
                ? JSON.stringify(val, null, 2)
                : String(val)
            }
            /**
             * Convert an input value to a number for persistence.
             * If the conversion fails, return original string.
             */ function toNumber(val) {
              var n = parseFloat(val)
              return isNaN(n) ? val : n
            }
            /**
             * Make a map and return a function for checking if a key
             * is in that map.
             */ function makeMap(str, expectsLowerCase) {
              var map = Object.create(null)
              var list = str.split(',')
              for (var i = 0; i < list.length; i++) {
                map[list[i]] = true
              }
              return expectsLowerCase
                ? function(val) {
                    return map[val.toLowerCase()]
                  }
                : function(val) {
                    return map[val]
                  }
            }
            /**
             * Check if a tag is a built-in tag.
             */ var isBuiltInTag = makeMap('slot,component', true)
            /**
             * Check if an attribute is a reserved attribute.
             */ var isReservedAttribute = makeMap('key,ref,slot,slot-scope,is')
            /**
             * Remove an item from an array.
             */ function remove(arr, item) {
              if (arr.length) {
                var index = arr.indexOf(item)
                if (index > -1) {
                  return arr.splice(index, 1)
                }
              }
            }
            /**
             * Check whether an object has the property.
             */ var hasOwnProperty = Object.prototype.hasOwnProperty
            function hasOwn(obj, key) {
              return hasOwnProperty.call(obj, key)
            }
            /**
             * Create a cached version of a pure function.
             */ function cached(fn) {
              var cache = Object.create(null)
              return function cachedFn(str) {
                var hit = cache[str]
                return hit || (cache[str] = fn(str))
              }
            }
            /**
             * Camelize a hyphen-delimited string.
             */ var camelizeRE = /-(\w)/g
            var camelize = cached(function(str) {
              return str.replace(camelizeRE, function(_, c) {
                return c ? c.toUpperCase() : ''
              })
            })
            /**
             * Capitalize a string.
             */ var capitalize = cached(function(str) {
              return str.charAt(0).toUpperCase() + str.slice(1)
            })
            /**
             * Hyphenate a camelCase string.
             */ var hyphenateRE = /\B([A-Z])/g
            var hyphenate = cached(function(str) {
              return str.replace(hyphenateRE, '-$1').toLowerCase()
            })
            /**
             * Simple bind polyfill for environments that do not support it,
             * e.g., PhantomJS 1.x. Technically, we don't need this anymore
             * since native bind is now performant enough in most browsers.
             * But removing it would mean breaking code that was able to run in
             * PhantomJS 1.x, so this must be kept for backward compatibility.
             */ /* istanbul ignore next */ function polyfillBind(fn, ctx) {
              function boundFn(a) {
                var l = arguments.length
                return l
                  ? l > 1
                    ? fn.apply(ctx, arguments)
                    : fn.call(ctx, a)
                  : fn.call(ctx)
              }
              boundFn._length = fn.length
              return boundFn
            }
            function nativeBind(fn, ctx) {
              return fn.bind(ctx)
            }
            var bind = Function.prototype.bind ? nativeBind : polyfillBind
            /**
             * Convert an Array-like object to a real Array.
             */ function toArray(list, start) {
              start = start || 0
              var i = list.length - start
              var ret = new Array(i)
              while (i--) {
                ret[i] = list[i + start]
              }
              return ret
            }
            /**
             * Mix properties into target object.
             */ function extend(to, _from) {
              for (var key in _from) {
                to[key] = _from[key]
              }
              return to
            }
            /**
             * Merge an Array of Objects into a single Object.
             */ function toObject(arr) {
              var res = {}
              for (var i = 0; i < arr.length; i++) {
                if (arr[i]) {
                  extend(res, arr[i])
                }
              }
              return res
            }
            /* eslint-disable no-unused-vars */ /**
             * Perform no operation.
             * Stubbing args to make Flow happy without leaving useless transpiled code
             * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).
             */ function noop(a, b, c) {}
            /**
             * Always return false.
             */ var no = function no(a, b, c) {
              return false
            }
            /* eslint-enable no-unused-vars */ /**
             * Return the same value.
             */ var identity = function identity(_) {
              return _
            }
            /**
             * Check if two values are loosely equal - that is,
             * if they are plain objects, do they have the same shape?
             */ function looseEqual(a, b) {
              if (a === b) {
                return true
              }
              var isObjectA = isObject(a)
              var isObjectB = isObject(b)
              if (isObjectA && isObjectB) {
                try {
                  var isArrayA = Array.isArray(a)
                  var isArrayB = Array.isArray(b)
                  if (isArrayA && isArrayB) {
                    return (
                      a.length === b.length &&
                      a.every(function(e, i) {
                        return looseEqual(e, b[i])
                      })
                    )
                  } else if (a instanceof Date && b instanceof Date) {
                    return a.getTime() === b.getTime()
                  } else if (!isArrayA && !isArrayB) {
                    var keysA = Object.keys(a)
                    var keysB = Object.keys(b)
                    return (
                      keysA.length === keysB.length &&
                      keysA.every(function(key) {
                        return looseEqual(a[key], b[key])
                      })
                    )
                  } else {
                    /* istanbul ignore next */ return false
                  }
                } catch (e) {
                  /* istanbul ignore next */ return false
                }
              } else if (!isObjectA && !isObjectB) {
                return String(a) === String(b)
              } else {
                return false
              }
            }
            /**
             * Return the first index at which a loosely equal value can be
             * found in the array (if value is a plain object, the array must
             * contain an object of the same shape), or -1 if it is not present.
             */ function looseIndexOf(arr, val) {
              for (var i = 0; i < arr.length; i++) {
                if (looseEqual(arr[i], val)) {
                  return i
                }
              }
              return -1
            }
            /**
             * Ensure a function is called only once.
             */ function once(fn) {
              var called = false
              return function() {
                if (!called) {
                  called = true
                  fn.apply(this, arguments)
                }
              }
            }
            var SSR_ATTR = 'data-server-rendered'
            var ASSET_TYPES = ['component', 'directive', 'filter']
            var LIFECYCLE_HOOKS = [
              'beforeCreate',
              'created',
              'beforeMount',
              'mounted',
              'beforeUpdate',
              'updated',
              'beforeDestroy',
              'destroyed',
              'activated',
              'deactivated',
              'errorCaptured',
              'serverPrefetch'
            ]
            /*  */ var config = {
              /**
               * Option merge strategies (used in core/util/options)
               */ // $flow-disable-line
              optionMergeStrategies: Object.create(null),
              /**
               * Whether to suppress warnings.
               */ silent: false,
              /**
               * Show production mode tip message on boot?
               */ productionTip: 'development' !== 'production',
              /**
               * Whether to enable devtools
               */ devtools: 'development' !== 'production',
              /**
               * Whether to record perf
               */ performance: false,
              /**
               * Error handler for watcher errors
               */ errorHandler: null,
              /**
               * Warn handler for watcher warns
               */ warnHandler: null,
              /**
               * Ignore certain custom elements
               */ ignoredElements: []  // $flow-disable-line
              /**
               * Custom user key aliases for v-on
               */,
              keyCodes: Object.create(null),
              /**
               * Check if a tag is reserved so that it cannot be registered as a
               * component. This is platform-dependent and may be overwritten.
               */ isReservedTag: no,
              /**
               * Check if an attribute is reserved so that it cannot be used as a component
               * prop. This is platform-dependent and may be overwritten.
               */ isReservedAttr: no,
              /**
               * Check if a tag is an unknown element.
               * Platform-dependent.
               */ isUnknownElement: no,
              /**
               * Get the namespace of an element
               */ getTagNamespace: noop,
              /**
               * Parse the real tag name for the specific platform.
               */ parsePlatformTagName: identity,
              /**
               * Check if an attribute must be bound using property, e.g. value
               * Platform-dependent.
               */ mustUseProp: no,
              /**
               * Perform updates asynchronously. Intended to be used by Vue Test Utils
               * This will significantly reduce performance if set to false.
               */ async: true,
              /**
               * Exposed for legacy reasons
               */ _lifecycleHooks: LIFECYCLE_HOOKS
            }
            /*  */ /**
             * unicode letters used for parsing html tags, component names and property paths.
             * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname
             * skipping \u10000-\uEFFFF due to it freezing up PhantomJS
             */ var unicodeRegExp = /a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/
            /**
             * Check if a string starts with $ or _
             */ function isReserved(str) {
              var c = (str + '').charCodeAt(0)
              return c === 0x24 || c === 0x5f
            }
            /**
             * Define a property.
             */ function def(obj, key, val, enumerable) {
              Object.defineProperty(obj, key, {
                value: val,
                enumerable: !!enumerable,
                writable: true,
                configurable: true
              })
            }
            /**
             * Parse simple path.
             */ var bailRE = new RegExp('[^' + unicodeRegExp.source + '.$_\\d]')
            function parsePath(path) {
              if (bailRE.test(path)) {
                return
              }
              var segments = path.split('.')
              return function(obj) {
                for (var i = 0; i < segments.length; i++) {
                  if (!obj) {
                    return
                  }
                  obj = obj[segments[i]]
                }
                return obj
              }
            } /*  */ // can we use __proto__?
            var hasProto = '__proto__' in {} // Browser environment sniffing
            var inBrowser = typeof window !== 'undefined'
            var inWeex =
              typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform
            var weexPlatform = inWeex && WXEnvironment.platform.toLowerCase()
            var UA = inBrowser && window.navigator.userAgent.toLowerCase()
            var isIE = UA && /msie|trident/.test(UA)
            var isIE9 = UA && UA.indexOf('msie 9.0') > 0
            var isEdge = UA && UA.indexOf('edge/') > 0
            var isAndroid =
              (UA && UA.indexOf('android') > 0) || weexPlatform === 'android'
            var isIOS =
              (UA && /iphone|ipad|ipod|ios/.test(UA)) || weexPlatform === 'ios'
            var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge
            var isPhantomJS = UA && /phantomjs/.test(UA)
            var isFF = UA && UA.match(/firefox\/(\d+)/) // Firefox has a "watch" function on Object.prototype...
            var nativeWatch = {}.watch
            var supportsPassive = false
            if (inBrowser) {
              try {
                var opts = {}
                Object.defineProperty(opts, 'passive', {
                  get: function get() {
                    /* istanbul ignore next */ supportsPassive = true
                  }
                }) // https://github.com/facebook/flow/issues/285
                window.addEventListener('test-passive', null, opts)
              } catch (e) {}
            } // this needs to be lazy-evaled because vue may be required before
            // vue-server-renderer can set VUE_ENV
            var _isServer
            var isServerRendering = function isServerRendering() {
              if (_isServer === undefined) {
                /* istanbul ignore if */ if (
                  !inBrowser &&
                  !inWeex &&
                  typeof global !== 'undefined'
                ) {
                  // detect presence of vue-server-renderer and avoid
                  // Webpack shimming the process
                  _isServer =
                    global['process'] &&
                    global['process'].env.VUE_ENV === 'server'
                } else {
                  _isServer = false
                }
              }
              return _isServer
            } // detect devtools
            var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__
            /* istanbul ignore next */ function isNative(Ctor) {
              return (
                typeof Ctor === 'function' &&
                /native code/.test(Ctor.toString())
              )
            }
            var hasSymbol =
              typeof Symbol !== 'undefined' &&
              isNative(Symbol) &&
              typeof Reflect !== 'undefined' &&
              isNative(Reflect.ownKeys)
            var _Set /* istanbul ignore if */ // $flow-disable-line
            if (typeof Set !== 'undefined' && isNative(Set)) {
              // use native Set when available.
              _Set = Set
            } else {
              // a non-standard Set polyfill that only works with primitive keys.
              _Set = /*@__PURE__*/ (function() {
                function Set() {
                  this.set = Object.create(null)
                }
                Set.prototype.has = function has(key) {
                  return this.set[key] === true
                }
                Set.prototype.add = function add(key) {
                  this.set[key] = true
                }
                Set.prototype.clear = function clear() {
                  this.set = Object.create(null)
                }
                return Set
              })()
            }
            /*  */ var warn = noop
            var tip = noop
            var generateComponentTrace = noop // work around flow check
            var formatComponentName = noop
            {
              var hasConsole = typeof console !== 'undefined'
              var classifyRE = /(?:^|[-_])(\w)/g
              var classify = function classify(str) {
                return str
                  .replace(classifyRE, function(c) {
                    return c.toUpperCase()
                  })
                  .replace(/[-_]/g, '')
              }
              warn = function warn(msg, vm) {
                var trace = vm ? generateComponentTrace(vm) : ''
                if (config.warnHandler) {
                  config.warnHandler.call(null, msg, vm, trace)
                } else if (hasConsole && !config.silent) {
                  console.error('[Vue warn]: ' + msg + trace)
                }
              }
              tip = function tip(msg, vm) {
                if (hasConsole && !config.silent) {
                  console.warn(
                    '[Vue tip]: ' + msg + (vm ? generateComponentTrace(vm) : '')
                  )
                }
              }
              formatComponentName = function formatComponentName(
                vm,
                includeFile
              ) {
                if (vm.$root === vm) {
                  return '<Root>'
                }
                var options =
                  typeof vm === 'function' && vm.cid != null
                    ? vm.options
                    : vm._isVue
                    ? vm.$options || vm.constructor.options
                    : vm
                var name = options.name || options._componentTag
                var file = options.__file
                if (!name && file) {
                  var match = file.match(/([^/\\]+)\.vue$/)
                  name = match && match[1]
                }
                return (
                  (name ? '<' + classify(name) + '>' : '<Anonymous>') +
                  (file && includeFile !== false ? ' at ' + file : '')
                )
              }
              var repeat = function repeat(str, n) {
                var res = ''
                while (n) {
                  if (n % 2 === 1) {
                    res += str
                  }
                  if (n > 1) {
                    str += str
                  }
                  n >>= 1
                }
                return res
              }
              generateComponentTrace = function generateComponentTrace(vm) {
                if (vm._isVue && vm.$parent) {
                  var tree = []
                  var currentRecursiveSequence = 0
                  while (vm) {
                    if (tree.length > 0) {
                      var last = tree[tree.length - 1]
                      if (last.constructor === vm.constructor) {
                        currentRecursiveSequence++
                        vm = vm.$parent
                        continue
                      } else if (currentRecursiveSequence > 0) {
                        tree[tree.length - 1] = [last, currentRecursiveSequence]
                        currentRecursiveSequence = 0
                      }
                    }
                    tree.push(vm)
                    vm = vm.$parent
                  }
                  return (
                    '\n\nfound in\n\n' +
                    tree
                      .map(function(vm, i) {
                        return (
                          '' +
                          (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) +
                          (Array.isArray(vm)
                            ? formatComponentName(vm[0]) +
                              '... (' +
                              vm[1] +
                              ' recursive calls)'
                            : formatComponentName(vm))
                        )
                      })
                      .join('\n')
                  )
                } else {
                  return '\n\n(found in ' + formatComponentName(vm) + ')'
                }
              }
            }
            /*  */ var uid = 0
            /**
             * A dep is an observable that can have multiple
             * directives subscribing to it.
             */ var Dep = function Dep() {
              this.id = uid++
              this.subs = []
            }
            Dep.prototype.addSub = function addSub(sub) {
              this.subs.push(sub)
            }
            Dep.prototype.removeSub = function removeSub(sub) {
              remove(this.subs, sub)
            }
            Dep.prototype.depend = function depend() {
              if (Dep.target) {
                Dep.target.addDep(this)
              }
            }
            Dep.prototype.notify = function notify() {
              // stabilize the subscriber list first
              var subs = this.subs.slice()
              if (!config.async) {
                // subs aren't sorted in scheduler if not running async
                // we need to sort them now to make sure they fire in correct
                // order
                subs.sort(function(a, b) {
                  return a.id - b.id
                })
              }
              for (var i = 0, l = subs.length; i < l; i++) {
                subs[i].update()
              }
            } // The current target watcher being evaluated.
            // This is globally unique because only one watcher
            // can be evaluated at a time.
            Dep.target = null
            var targetStack = []
            function pushTarget(target) {
              targetStack.push(target)
              Dep.target = target
            }
            function popTarget() {
              targetStack.pop()
              Dep.target = targetStack[targetStack.length - 1]
            }
            /*  */ var VNode = function VNode(
              tag,
              data,
              children,
              text,
              elm,
              context,
              componentOptions,
              asyncFactory
            ) {
              this.tag = tag
              this.data = data
              this.children = children
              this.text = text
              this.elm = elm
              this.ns = undefined
              this.context = context
              this.fnContext = undefined
              this.fnOptions = undefined
              this.fnScopeId = undefined
              this.key = data && data.key
              this.componentOptions = componentOptions
              this.componentInstance = undefined
              this.parent = undefined
              this.raw = false
              this.isStatic = false
              this.isRootInsert = true
              this.isComment = false
              this.isCloned = false
              this.isOnce = false
              this.asyncFactory = asyncFactory
              this.asyncMeta = undefined
              this.isAsyncPlaceholder = false
            }
            var prototypeAccessors = { child: { configurable: true } } // DEPRECATED: alias for componentInstance for backwards compat.
            /* istanbul ignore next */ prototypeAccessors.child.get = function() {
              return this.componentInstance
            }
            Object.defineProperties(VNode.prototype, prototypeAccessors)
            var createEmptyVNode = function createEmptyVNode(text) {
              if (text === void 0) text = ''
              var node = new VNode()
              node.text = text
              node.isComment = true
              return node
            }
            function createTextVNode(val) {
              return new VNode(undefined, undefined, undefined, String(val))
            } // optimized shallow clone
            // used for static nodes and slot nodes because they may be reused across
            // multiple renders, cloning them avoids errors when DOM manipulations rely
            // on their elm reference.
            function cloneVNode(vnode) {
              var cloned = new VNode(
                vnode.tag,
                vnode.data, // #7975
                // clone children array to avoid mutating original in case of cloning
                // a child.
                vnode.children && vnode.children.slice(),
                vnode.text,
                vnode.elm,
                vnode.context,
                vnode.componentOptions,
                vnode.asyncFactory
              )
              cloned.ns = vnode.ns
              cloned.isStatic = vnode.isStatic
              cloned.key = vnode.key
              cloned.isComment = vnode.isComment
              cloned.fnContext = vnode.fnContext
              cloned.fnOptions = vnode.fnOptions
              cloned.fnScopeId = vnode.fnScopeId
              cloned.asyncMeta = vnode.asyncMeta
              cloned.isCloned = true
              return cloned
            }
            /*
             * not type checking this file because flow doesn't play well with
             * dynamically accessing methods on Array prototype
             */ var arrayProto = Array.prototype
            var arrayMethods = Object.create(arrayProto)
            var methodsToPatch = [
              'push',
              'pop',
              'shift',
              'unshift',
              'splice',
              'sort',
              'reverse'
            ]
            /**
             * Intercept mutating methods and emit events
             */ methodsToPatch.forEach(function(method) {
              // cache original method
              var original = arrayProto[method]
              def(arrayMethods, method, function mutator() {
                var args = [],
                  len = arguments.length
                while (len--) {
                  args[len] = arguments[len]
                }
                var result = original.apply(this, args)
                var ob = this.__ob__
                var inserted
                switch (method) {
                  case 'push':
                  case 'unshift':
                    inserted = args
                    break
                  case 'splice':
                    inserted = args.slice(2)
                    break
                }
                if (inserted) {
                  ob.observeArray(inserted)
                } // notify change
                ob.dep.notify()
                return result
              })
            })
            /*  */ var arrayKeys = Object.getOwnPropertyNames(arrayMethods)
            /**
             * In some cases we may want to disable observation inside a component's
             * update computation.
             */ var shouldObserve = true
            function toggleObserving(value) {
              shouldObserve = value
            }
            /**
             * Observer class that is attached to each observed
             * object. Once attached, the observer converts the target
             * object's property keys into getter/setters that
             * collect dependencies and dispatch updates.
             */ var Observer = function Observer(value) {
              this.value = value
              this.dep = new Dep()
              this.vmCount = 0
              def(value, '__ob__', this)
              if (Array.isArray(value)) {
                if (hasProto) {
                  protoAugment(value, arrayMethods)
                } else {
                  copyAugment(value, arrayMethods, arrayKeys)
                }
                this.observeArray(value)
              } else {
                this.walk(value)
              }
            }
            /**
             * Walk through all properties and convert them into
             * getter/setters. This method should only be called when
             * value type is Object.
             */ Observer.prototype.walk = function walk(obj) {
              var keys = Object.keys(obj)
              for (var i = 0; i < keys.length; i++) {
                defineReactive$$1(obj, keys[i])
              }
            }
            /**
             * Observe a list of Array items.
             */ Observer.prototype.observeArray = function observeArray(items) {
              for (var i = 0, l = items.length; i < l; i++) {
                observe(items[i])
              }
            } // helpers
            /**
             * Augment a target Object or Array by intercepting
             * the prototype chain using __proto__
             */ function protoAugment(target, src) {
              /* eslint-disable no-proto */ target.__proto__ = src /* eslint-enable no-proto */
            }
            /**
             * Augment a target Object or Array by defining
             * hidden properties.
             */ /* istanbul ignore next */ function copyAugment(
              target,
              src,
              keys
            ) {
              for (var i = 0, l = keys.length; i < l; i++) {
                var key = keys[i]
                def(target, key, src[key])
              }
            }
            /**
             * Attempt to create an observer instance for a value,
             * returns the new observer if successfully observed,
             * or the existing observer if the value already has one.
             */ function observe(value, asRootData) {
              if (!isObject(value) || value instanceof VNode) {
                return
              }
              var ob
              if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
                ob = value.__ob__
              } else if (
                shouldObserve &&
                !isServerRendering() &&
                (Array.isArray(value) || isPlainObject(value)) &&
                Object.isExtensible(value) &&
                !value._isVue
              ) {
                ob = new Observer(value)
              }
              if (asRootData && ob) {
                ob.vmCount++
              }
              return ob
            }
            /**
             * Define a reactive property on an Object.
             */ function defineReactive$$1(
              obj,
              key,
              val,
              customSetter,
              shallow
            ) {
              var dep = new Dep()
              var property = Object.getOwnPropertyDescriptor(obj, key)
              if (property && property.configurable === false) {
                return
              } // cater for pre-defined getter/setters
              var getter = property && property.get
              var setter = property && property.set
              if ((!getter || setter) && arguments.length === 2) {
                val = obj[key]
              }
              var childOb = !shallow && observe(val)
              Object.defineProperty(obj, key, {
                enumerable: true,
                configurable: true,
                get: function reactiveGetter() {
                  var value = getter ? getter.call(obj) : val
                  if (Dep.target) {
                    dep.depend()
                    if (childOb) {
                      childOb.dep.depend()
                      if (Array.isArray(value)) {
                        dependArray(value)
                      }
                    }
                  }
                  return value
                },
                set: function reactiveSetter(newVal) {
                  var value = getter ? getter.call(obj) : val
                  /* eslint-disable no-self-compare */ if (
                    newVal === value ||
                    (newVal !== newVal && value !== value)
                  ) {
                    return
                  }
                  /* eslint-enable no-self-compare */ if (customSetter) {
                    customSetter()
                  } // #7981: for accessor properties without setter
                  if (getter && !setter) {
                    return
                  }
                  if (setter) {
                    setter.call(obj, newVal)
                  } else {
                    val = newVal
                  }
                  childOb = !shallow && observe(newVal)
                  dep.notify()
                }
              })
            }
            /**
             * Set a property on an object. Adds the new property and
             * triggers change notification if the property doesn't
             * already exist.
             */ function set(target, key, val) {
              if (isUndef(target) || isPrimitive(target)) {
                warn(
                  'Cannot set reactive property on undefined, null, or primitive value: ' +
                    target
                )
              }
              if (Array.isArray(target) && isValidArrayIndex(key)) {
                target.length = Math.max(target.length, key)
                target.splice(key, 1, val)
                return val
              }
              if (key in target && !(key in Object.prototype)) {
                target[key] = val
                return val
              }
              var ob = target.__ob__
              if (target._isVue || (ob && ob.vmCount)) {
                warn(
                  'Avoid adding reactive properties to a Vue instance or its root $data ' +
                    'at runtime - declare it upfront in the data option.'
                )
                return val
              }
              if (!ob) {
                target[key] = val
                return val
              }
              defineReactive$$1(ob.value, key, val)
              ob.dep.notify()
              return val
            }
            /**
             * Delete a property and trigger change if necessary.
             */ function del(target, key) {
              if (isUndef(target) || isPrimitive(target)) {
                warn(
                  'Cannot delete reactive property on undefined, null, or primitive value: ' +
                    target
                )
              }
              if (Array.isArray(target) && isValidArrayIndex(key)) {
                target.splice(key, 1)
                return
              }
              var ob = target.__ob__
              if (target._isVue || (ob && ob.vmCount)) {
                warn(
                  'Avoid deleting properties on a Vue instance or its root $data ' +
                    '- just set it to null.'
                )
                return
              }
              if (!hasOwn(target, key)) {
                return
              }
              delete target[key]
              if (!ob) {
                return
              }
              ob.dep.notify()
            }
            /**
             * Collect dependencies on array elements when the array is touched, since
             * we cannot intercept array element access like property getters.
             */ function dependArray(value) {
              for (var e = void 0, i = 0, l = value.length; i < l; i++) {
                e = value[i]
                e && e.__ob__ && e.__ob__.dep.depend()
                if (Array.isArray(e)) {
                  dependArray(e)
                }
              }
            }
            /*  */ /**
             * Option overwriting strategies are functions that handle
             * how to merge a parent option value and a child option
             * value into the final value.
             */ var strats = config.optionMergeStrategies
            /**
             * Options with restrictions
             */ {
              strats.el = strats.propsData = function(parent, child, vm, key) {
                if (!vm) {
                  warn(
                    'option "' +
                      key +
                      '" can only be used during instance ' +
                      'creation with the `new` keyword.'
                  )
                }
                return defaultStrat(parent, child)
              }
            }
            /**
             * Helper that recursively merges two data objects together.
             */ function mergeData(to, from) {
              if (!from) {
                return to
              }
              var key, toVal, fromVal
              var keys = hasSymbol ? Reflect.ownKeys(from) : Object.keys(from)
              for (var i = 0; i < keys.length; i++) {
                key = keys[i] // in case the object is already observed...
                if (key === '__ob__') {
                  continue
                }
                toVal = to[key]
                fromVal = from[key]
                if (!hasOwn(to, key)) {
                  set(to, key, fromVal)
                } else if (
                  toVal !== fromVal &&
                  isPlainObject(toVal) &&
                  isPlainObject(fromVal)
                ) {
                  mergeData(toVal, fromVal)
                }
              }
              return to
            }
            /**
             * Data
             */ function mergeDataOrFn(parentVal, childVal, vm) {
              if (!vm) {
                // in a Vue.extend merge, both should be functions
                if (!childVal) {
                  return parentVal
                }
                if (!parentVal) {
                  return childVal
                } // when parentVal & childVal are both present,
                // we need to return a function that returns the
                // merged result of both functions... no need to
                // check if parentVal is a function here because
                // it has to be a function to pass previous merges.
                return function mergedDataFn() {
                  return mergeData(
                    typeof childVal === 'function'
                      ? childVal.call(this, this)
                      : childVal,
                    typeof parentVal === 'function'
                      ? parentVal.call(this, this)
                      : parentVal
                  )
                }
              } else {
                return function mergedInstanceDataFn() {
                  // instance merge
                  var instanceData =
                    typeof childVal === 'function'
                      ? childVal.call(vm, vm)
                      : childVal
                  var defaultData =
                    typeof parentVal === 'function'
                      ? parentVal.call(vm, vm)
                      : parentVal
                  if (instanceData) {
                    return mergeData(instanceData, defaultData)
                  } else {
                    return defaultData
                  }
                }
              }
            }
            strats.data = function(parentVal, childVal, vm) {
              if (!vm) {
                if (childVal && typeof childVal !== 'function') {
                  warn(
                    'The "data" option should be a function ' +
                      'that returns a per-instance value in component ' +
                      'definitions.',
                    vm
                  )
                  return parentVal
                }
                return mergeDataOrFn(parentVal, childVal)
              }
              return mergeDataOrFn(parentVal, childVal, vm)
            }
            /**
             * Hooks and props are merged as arrays.
             */ function mergeHook(parentVal, childVal) {
              var res = childVal
                ? parentVal
                  ? parentVal.concat(childVal)
                  : Array.isArray(childVal)
                  ? childVal
                  : [childVal]
                : parentVal
              return res ? dedupeHooks(res) : res
            }
            function dedupeHooks(hooks) {
              var res = []
              for (var i = 0; i < hooks.length; i++) {
                if (res.indexOf(hooks[i]) === -1) {
                  res.push(hooks[i])
                }
              }
              return res
            }
            LIFECYCLE_HOOKS.forEach(function(hook) {
              strats[hook] = mergeHook
            })
            /**
             * Assets
             *
             * When a vm is present (instance creation), we need to do
             * a three-way merge between constructor options, instance
             * options and parent options.
             */ function mergeAssets(parentVal, childVal, vm, key) {
              var res = Object.create(parentVal || null)
              if (childVal) {
                assertObjectType(key, childVal, vm)
                return extend(res, childVal)
              } else {
                return res
              }
            }
            ASSET_TYPES.forEach(function(type) {
              strats[type + 's'] = mergeAssets
            })
            /**
             * Watchers.
             *
             * Watchers hashes should not overwrite one
             * another, so we merge them as arrays.
             */ strats.watch = function(parentVal, childVal, vm, key) {
              // work around Firefox's Object.prototype.watch...
              if (parentVal === nativeWatch) {
                parentVal = undefined
              }
              if (childVal === nativeWatch) {
                childVal = undefined
              }
              /* istanbul ignore if */ if (!childVal) {
                return Object.create(parentVal || null)
              }
              {
                assertObjectType(key, childVal, vm)
              }
              if (!parentVal) {
                return childVal
              }
              var ret = {}
              extend(ret, parentVal)
              for (var key$1 in childVal) {
                var parent = ret[key$1]
                var child = childVal[key$1]
                if (parent && !Array.isArray(parent)) {
                  parent = [parent]
                }
                ret[key$1] = parent
                  ? parent.concat(child)
                  : Array.isArray(child)
                  ? child
                  : [child]
              }
              return ret
            }
            /**
             * Other object hashes.
             */ strats.props = strats.methods = strats.inject = strats.computed = function(
              parentVal,
              childVal,
              vm,
              key
            ) {
              if (childVal && 'development' !== 'production') {
                assertObjectType(key, childVal, vm)
              }
              if (!parentVal) {
                return childVal
              }
              var ret = Object.create(null)
              extend(ret, parentVal)
              if (childVal) {
                extend(ret, childVal)
              }
              return ret
            }
            strats.provide = mergeDataOrFn
            /**
             * Default strategy.
             */ var defaultStrat = function defaultStrat(parentVal, childVal) {
              return childVal === undefined ? parentVal : childVal
            }
            /**
             * Validate component names
             */ function checkComponents(options) {
              for (var key in options.components) {
                validateComponentName(key)
              }
            }
            function validateComponentName(name) {
              if (
                !new RegExp(
                  '^[a-zA-Z][\\-\\.0-9_' + unicodeRegExp.source + ']*$'
                ).test(name)
              ) {
                warn(
                  'Invalid component name: "' +
                    name +
                    '". Component names ' +
                    'should conform to valid custom element name in html5 specification.'
                )
              }
              if (isBuiltInTag(name) || config.isReservedTag(name)) {
                warn(
                  'Do not use built-in or reserved HTML elements as component ' +
                    'id: ' +
                    name
                )
              }
            }
            /**
             * Ensure all props option syntax are normalized into the
             * Object-based format.
             */ function normalizeProps(options, vm) {
              var props = options.props
              if (!props) {
                return
              }
              var res = {}
              var i, val, name
              if (Array.isArray(props)) {
                i = props.length
                while (i--) {
                  val = props[i]
                  if (typeof val === 'string') {
                    name = camelize(val)
                    res[name] = { type: null }
                  } else {
                    warn('props must be strings when using array syntax.')
                  }
                }
              } else if (isPlainObject(props)) {
                for (var key in props) {
                  val = props[key]
                  name = camelize(key)
                  res[name] = isPlainObject(val) ? val : { type: val }
                }
              } else {
                warn(
                  'Invalid value for option "props": expected an Array or an Object, ' +
                    'but got ' +
                    toRawType(props) +
                    '.',
                  vm
                )
              }
              options.props = res
            }
            /**
             * Normalize all injections into Object-based format
             */ function normalizeInject(options, vm) {
              var inject = options.inject
              if (!inject) {
                return
              }
              var normalized = (options.inject = {})
              if (Array.isArray(inject)) {
                for (var i = 0; i < inject.length; i++) {
                  normalized[inject[i]] = { from: inject[i] }
                }
              } else if (isPlainObject(inject)) {
                for (var key in inject) {
                  var val = inject[key]
                  normalized[key] = isPlainObject(val)
                    ? extend({ from: key }, val)
                    : { from: val }
                }
              } else {
                warn(
                  'Invalid value for option "inject": expected an Array or an Object, ' +
                    'but got ' +
                    toRawType(inject) +
                    '.',
                  vm
                )
              }
            }
            /**
             * Normalize raw function directives into object format.
             */ function normalizeDirectives(options) {
              var dirs = options.directives
              if (dirs) {
                for (var key in dirs) {
                  var def$$1 = dirs[key]
                  if (typeof def$$1 === 'function') {
                    dirs[key] = { bind: def$$1, update: def$$1 }
                  }
                }
              }
            }
            function assertObjectType(name, value, vm) {
              if (!isPlainObject(value)) {
                warn(
                  'Invalid value for option "' +
                    name +
                    '": expected an Object, ' +
                    'but got ' +
                    toRawType(value) +
                    '.',
                  vm
                )
              }
            }
            /**
             * Merge two option objects into a new one.
             * Core utility used in both instantiation and inheritance.
             */ function mergeOptions(parent, child, vm) {
              {
                checkComponents(child)
              }
              if (typeof child === 'function') {
                child = child.options
              }
              normalizeProps(child, vm)
              normalizeInject(child, vm)
              normalizeDirectives(child) // Apply extends and mixins on the child options,
              // but only if it is a raw options object that isn't
              // the result of another mergeOptions call.
              // Only merged options has the _base property.
              if (!child._base) {
                if (child['extends']) {
                  parent = mergeOptions(parent, child['extends'], vm)
                }
                if (child.mixins) {
                  for (var i = 0, l = child.mixins.length; i < l; i++) {
                    parent = mergeOptions(parent, child.mixins[i], vm)
                  }
                }
              }
              var options = {}
              var key
              for (key in parent) {
                mergeField(key)
              }
              for (key in child) {
                if (!hasOwn(parent, key)) {
                  mergeField(key)
                }
              }
              function mergeField(key) {
                var strat = strats[key] || defaultStrat
                options[key] = strat(parent[key], child[key], vm, key)
              }
              return options
            }
            /**
             * Resolve an asset.
             * This function is used because child instances need access
             * to assets defined in its ancestor chain.
             */ function resolveAsset(options, type, id, warnMissing) {
              /* istanbul ignore if */ if (typeof id !== 'string') {
                return
              }
              var assets = options[type] // check local registration variations first
              if (hasOwn(assets, id)) {
                return assets[id]
              }
              var camelizedId = camelize(id)
              if (hasOwn(assets, camelizedId)) {
                return assets[camelizedId]
              }
              var PascalCaseId = capitalize(camelizedId)
              if (hasOwn(assets, PascalCaseId)) {
                return assets[PascalCaseId]
              } // fallback to prototype chain
              var res =
                assets[id] || assets[camelizedId] || assets[PascalCaseId]
              if (warnMissing && !res) {
                warn(
                  'Failed to resolve ' + type.slice(0, -1) + ': ' + id,
                  options
                )
              }
              return res
            }
            /*  */ function validateProp(key, propOptions, propsData, vm) {
              var prop = propOptions[key]
              var absent = !hasOwn(propsData, key)
              var value = propsData[key] // boolean casting
              var booleanIndex = getTypeIndex(Boolean, prop.type)
              if (booleanIndex > -1) {
                if (absent && !hasOwn(prop, 'default')) {
                  value = false
                } else if (value === '' || value === hyphenate(key)) {
                  // only cast empty string / same name to boolean if
                  // boolean has higher priority
                  var stringIndex = getTypeIndex(String, prop.type)
                  if (stringIndex < 0 || booleanIndex < stringIndex) {
                    value = true
                  }
                }
              } // check default value
              if (value === undefined) {
                value = getPropDefaultValue(vm, prop, key) // since the default value is a fresh copy,
                // make sure to observe it.
                var prevShouldObserve = shouldObserve
                toggleObserving(true)
                observe(value)
                toggleObserving(prevShouldObserve)
              }
              {
                assertProp(prop, key, value, vm, absent)
              }
              return value
            }
            /**
             * Get the default value of a prop.
             */ function getPropDefaultValue(vm, prop, key) {
              // no default, return undefined
              if (!hasOwn(prop, 'default')) {
                return undefined
              }
              var def = prop['default'] // warn against non-factory defaults for Object & Array
              if (isObject(def)) {
                warn(
                  'Invalid default value for prop "' +
                    key +
                    '": ' +
                    'Props with type Object/Array must use a factory function ' +
                    'to return the default value.',
                  vm
                )
              } // the raw prop value was also undefined from previous render,
              // return previous default value to avoid unnecessary watcher trigger
              if (
                vm &&
                vm.$options.propsData &&
                vm.$options.propsData[key] === undefined &&
                vm._props[key] !== undefined
              ) {
                return vm._props[key]
              } // call factory function for non-Function types
              // a value is Function if its prototype is function even across different execution context
              return typeof def === 'function' &&
                getType(prop.type) !== 'Function'
                ? def.call(vm)
                : def
            }
            /**
             * Assert whether a prop is valid.
             */ function assertProp(prop, name, value, vm, absent) {
              if (prop.required && absent) {
                warn('Missing required prop: "' + name + '"', vm)
                return
              }
              if (value == null && !prop.required) {
                return
              }
              var type = prop.type
              var valid = !type || type === true
              var expectedTypes = []
              if (type) {
                if (!Array.isArray(type)) {
                  type = [type]
                }
                for (var i = 0; i < type.length && !valid; i++) {
                  var assertedType = assertType(value, type[i])
                  expectedTypes.push(assertedType.expectedType || '')
                  valid = assertedType.valid
                }
              }
              if (!valid) {
                warn(getInvalidTypeMessage(name, value, expectedTypes), vm)
                return
              }
              var validator = prop.validator
              if (validator) {
                if (!validator(value)) {
                  warn(
                    'Invalid prop: custom validator check failed for prop "' +
                      name +
                      '".',
                    vm
                  )
                }
              }
            }
            var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/
            function assertType(value, type) {
              var valid
              var expectedType = getType(type)
              if (simpleCheckRE.test(expectedType)) {
                var t = (0, _typeof3['default'])(value)
                valid = t === expectedType.toLowerCase() // for primitive wrapper objects
                if (!valid && t === 'object') {
                  valid = value instanceof type
                }
              } else if (expectedType === 'Object') {
                valid = isPlainObject(value)
              } else if (expectedType === 'Array') {
                valid = Array.isArray(value)
              } else {
                valid = value instanceof type
              }
              return { valid: valid, expectedType: expectedType }
            }
            /**
             * Use function string name to check built-in types,
             * because a simple equality check will fail when running
             * across different vms / iframes.
             */ function getType(fn) {
              var match = fn && fn.toString().match(/^\s*function (\w+)/)
              return match ? match[1] : ''
            }
            function isSameType(a, b) {
              return getType(a) === getType(b)
            }
            function getTypeIndex(type, expectedTypes) {
              if (!Array.isArray(expectedTypes)) {
                return isSameType(expectedTypes, type) ? 0 : -1
              }
              for (var i = 0, len = expectedTypes.length; i < len; i++) {
                if (isSameType(expectedTypes[i], type)) {
                  return i
                }
              }
              return -1
            }
            function getInvalidTypeMessage(name, value, expectedTypes) {
              var message =
                'Invalid prop: type check failed for prop "' +
                name +
                '".' +
                ' Expected ' +
                expectedTypes.map(capitalize).join(', ')
              var expectedType = expectedTypes[0]
              var receivedType = toRawType(value)
              var expectedValue = styleValue(value, expectedType)
              var receivedValue = styleValue(value, receivedType) // check if we need to specify expected value
              if (
                expectedTypes.length === 1 &&
                isExplicable(expectedType) &&
                !isBoolean(expectedType, receivedType)
              ) {
                message += ' with value ' + expectedValue
              }
              message += ', got ' + receivedType + ' ' // check if we need to specify received value
              if (isExplicable(receivedType)) {
                message += 'with value ' + receivedValue + '.'
              }
              return message
            }
            function styleValue(value, type) {
              if (type === 'String') {
                return '"' + value + '"'
              } else if (type === 'Number') {
                return '' + Number(value)
              } else {
                return '' + value
              }
            }
            function isExplicable(value) {
              var explicitTypes = ['string', 'number', 'boolean']
              return explicitTypes.some(function(elem) {
                return value.toLowerCase() === elem
              })
            }
            function isBoolean() {
              var args = [],
                len = arguments.length
              while (len--) {
                args[len] = arguments[len]
              }
              return args.some(function(elem) {
                return elem.toLowerCase() === 'boolean'
              })
            }
            /*  */ function handleError(err, vm, info) {
              // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.
              // See: https://github.com/vuejs/vuex/issues/1505
              pushTarget()
              try {
                if (vm) {
                  var cur = vm
                  while ((cur = cur.$parent)) {
                    var hooks = cur.$options.errorCaptured
                    if (hooks) {
                      for (var i = 0; i < hooks.length; i++) {
                        try {
                          var capture =
                            hooks[i].call(cur, err, vm, info) === false
                          if (capture) {
                            return
                          }
                        } catch (e) {
                          globalHandleError(e, cur, 'errorCaptured hook')
                        }
                      }
                    }
                  }
                }
                globalHandleError(err, vm, info)
              } finally {
                popTarget()
              }
            }
            function invokeWithErrorHandling(handler, context, args, vm, info) {
              var res
              try {
                res = args
                  ? handler.apply(context, args)
                  : handler.call(context)
                if (res && !res._isVue && isPromise(res) && !res._handled) {
                  res['catch'](function(e) {
                    return handleError(e, vm, info + ' (Promise/async)')
                  }) // issue #9511
                  // avoid catch triggering multiple times when nested calls
                  res._handled = true
                }
              } catch (e) {
                handleError(e, vm, info)
              }
              return res
            }
            function globalHandleError(err, vm, info) {
              if (config.errorHandler) {
                try {
                  return config.errorHandler.call(null, err, vm, info)
                } catch (e) {
                  // if the user intentionally throws the original error in the handler,
                  // do not log it twice
                  if (e !== err) {
                    logError(e, null, 'config.errorHandler')
                  }
                }
              }
              logError(err, vm, info)
            }
            function logError(err, vm, info) {
              {
                warn('Error in ' + info + ': "' + err.toString() + '"', vm)
              }
              /* istanbul ignore else */ if (
                (inBrowser || inWeex) &&
                typeof console !== 'undefined'
              ) {
                console.error(err)
              } else {
                throw err
              }
            }
            /*  */ var isUsingMicroTask = false
            var callbacks = []
            var pending = false
            function flushCallbacks() {
              pending = false
              var copies = callbacks.slice(0)
              callbacks.length = 0
              for (var i = 0; i < copies.length; i++) {
                copies[i]()
              }
            } // Here we have async deferring wrappers using microtasks.
            // In 2.5 we used (macro) tasks (in combination with microtasks).
            // However, it has subtle problems when state is changed right before repaint
            // (e.g. #6813, out-in transitions).
            // Also, using (macro) tasks in event handler would cause some weird behaviors
            // that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).
            // So we now use microtasks everywhere, again.
            // A major drawback of this tradeoff is that there are some scenarios
            // where microtasks have too high a priority and fire in between supposedly
            // sequential events (e.g. #4521, #6690, which have workarounds)
            // or even between bubbling of the same event (#6566).
            var timerFunc // The nextTick behavior leverages the microtask queue, which can be accessed
            // via either native Promise.then or MutationObserver.
            // MutationObserver has wider support, however it is seriously bugged in
            // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It
            // completely stops working after triggering a few times... so, if native
            // Promise is available, we will use it:
            /* istanbul ignore next, $flow-disable-line */ if (
              typeof Promise !== 'undefined' &&
              isNative(Promise)
            ) {
              var p = Promise.resolve()
              timerFunc = function timerFunc() {
                p.then(flushCallbacks) // In problematic UIWebViews, Promise.then doesn't completely break, but
                // it can get stuck in a weird state where callbacks are pushed into the
                // microtask queue but the queue isn't being flushed, until the browser
                // needs to do some other work, e.g. handle a timer. Therefore we can
                // "force" the microtask queue to be flushed by adding an empty timer.
                if (isIOS) {
                  setTimeout(noop)
                }
              }
              isUsingMicroTask = true
            } else if (
              !isIE &&
              typeof MutationObserver !== 'undefined' &&
              (isNative(MutationObserver) || // PhantomJS and iOS 7.x
                MutationObserver.toString() ===
                  '[object MutationObserverConstructor]')
            ) {
              // Use MutationObserver where native Promise is not available,
              // e.g. PhantomJS, iOS7, Android 4.4
              // (#6466 MutationObserver is unreliable in IE11)
              var counter = 1
              var observer = new MutationObserver(flushCallbacks)
              var textNode = document.createTextNode(String(counter))
              observer.observe(textNode, { characterData: true })
              timerFunc = function timerFunc() {
                counter = (counter + 1) % 2
                textNode.data = String(counter)
              }
              isUsingMicroTask = true
            } else if (
              typeof setImmediate !== 'undefined' &&
              isNative(setImmediate)
            ) {
              // Fallback to setImmediate.
              // Technically it leverages the (macro) task queue,
              // but it is still a better choice than setTimeout.
              timerFunc = function timerFunc() {
                setImmediate(flushCallbacks)
              }
            } else {
              // Fallback to setTimeout.
              timerFunc = function timerFunc() {
                setTimeout(flushCallbacks, 0)
              }
            }
            function nextTick(cb, ctx) {
              var _resolve
              callbacks.push(function() {
                if (cb) {
                  try {
                    cb.call(ctx)
                  } catch (e) {
                    handleError(e, ctx, 'nextTick')
                  }
                } else if (_resolve) {
                  _resolve(ctx)
                }
              })
              if (!pending) {
                pending = true
                timerFunc()
              } // $flow-disable-line
              if (!cb && typeof Promise !== 'undefined') {
                return new Promise(function(resolve) {
                  _resolve = resolve
                })
              }
            }
            /*  */ /* not type checking this file because flow doesn't play well with Proxy */ var initProxy
            {
              var allowedGlobals = makeMap(
                'Infinity,undefined,NaN,isFinite,isNaN,' +
                  'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +
                  'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +
                  'require' // for Webpack/Browserify
              )
              var warnNonPresent = function warnNonPresent(target, key) {
                warn(
                  'Property or method "' +
                    key +
                    '" is not defined on the instance but ' +
                    'referenced during render. Make sure that this property is reactive, ' +
                    'either in the data option, or for class-based components, by ' +
                    'initializing the property. ' +
                    'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',
                  target
                )
              }
              var warnReservedPrefix = function warnReservedPrefix(
                target,
                key
              ) {
                warn(
                  'Property "' +
                    key +
                    '" must be accessed with "$data.' +
                    key +
                    '" because ' +
                    'properties starting with "$" or "_" are not proxied in the Vue instance to ' +
                    'prevent conflicts with Vue internals. ' +
                    'See: https://vuejs.org/v2/api/#data',
                  target
                )
              }
              var hasProxy = typeof Proxy !== 'undefined' && isNative(Proxy)
              if (hasProxy) {
                var isBuiltInModifier = makeMap(
                  'stop,prevent,self,ctrl,shift,alt,meta,exact'
                )
                config.keyCodes = new Proxy(config.keyCodes, {
                  set: function set(target, key, value) {
                    if (isBuiltInModifier(key)) {
                      warn(
                        'Avoid overwriting built-in modifier in config.keyCodes: .' +
                          key
                      )
                      return false
                    } else {
                      target[key] = value
                      return true
                    }
                  }
                })
              }
              var hasHandler = {
                has: function has(target, key) {
                  var has = key in target
                  var isAllowed =
                    allowedGlobals(key) ||
                    (typeof key === 'string' &&
                      key.charAt(0) === '_' &&
                      !(key in target.$data))
                  if (!has && !isAllowed) {
                    if (key in target.$data) {
                      warnReservedPrefix(target, key)
                    } else {
                      warnNonPresent(target, key)
                    }
                  }
                  return has || !isAllowed
                }
              }
              var getHandler = {
                get: function get(target, key) {
                  if (typeof key === 'string' && !(key in target)) {
                    if (key in target.$data) {
                      warnReservedPrefix(target, key)
                    } else {
                      warnNonPresent(target, key)
                    }
                  }
                  return target[key]
                }
              }
              initProxy = function initProxy(vm) {
                if (hasProxy) {
                  // determine which proxy handler to use
                  var options = vm.$options
                  var handlers =
                    options.render && options.render._withStripped
                      ? getHandler
                      : hasHandler
                  vm._renderProxy = new Proxy(vm, handlers)
                } else {
                  vm._renderProxy = vm
                }
              }
            }
            /*  */ var seenObjects = new _Set()
            /**
             * Recursively traverse an object to evoke all converted
             * getters, so that every nested property inside the object
             * is collected as a "deep" dependency.
             */ function traverse(val) {
              _traverse(val, seenObjects)
              seenObjects.clear()
            }
            function _traverse(val, seen) {
              var i, keys
              var isA = Array.isArray(val)
              if (
                (!isA && !isObject(val)) ||
                Object.isFrozen(val) ||
                val instanceof VNode
              ) {
                return
              }
              if (val.__ob__) {
                var depId = val.__ob__.dep.id
                if (seen.has(depId)) {
                  return
                }
                seen.add(depId)
              }
              if (isA) {
                i = val.length
                while (i--) {
                  _traverse(val[i], seen)
                }
              } else {
                keys = Object.keys(val)
                i = keys.length
                while (i--) {
                  _traverse(val[keys[i]], seen)
                }
              }
            }
            var mark
            var measure
            {
              var perf = inBrowser && window.performance
              /* istanbul ignore if */ if (
                perf &&
                perf.mark &&
                perf.measure &&
                perf.clearMarks &&
                perf.clearMeasures
              ) {
                mark = function mark(tag) {
                  return perf.mark(tag)
                }
                measure = function measure(name, startTag, endTag) {
                  perf.measure(name, startTag, endTag)
                  perf.clearMarks(startTag)
                  perf.clearMarks(endTag) // perf.clearMeasures(name)
                }
              }
            }
            /*  */ var normalizeEvent = cached(function(name) {
              var passive = name.charAt(0) === '&'
              name = passive ? name.slice(1) : name
              var once$$1 = name.charAt(0) === '~' // Prefixed last, checked first
              name = once$$1 ? name.slice(1) : name
              var capture = name.charAt(0) === '!'
              name = capture ? name.slice(1) : name
              return {
                name: name,
                once: once$$1,
                capture: capture,
                passive: passive
              }
            })
            function createFnInvoker(fns, vm) {
              function invoker() {
                var arguments$1 = arguments
                var fns = invoker.fns
                if (Array.isArray(fns)) {
                  var cloned = fns.slice()
                  for (var i = 0; i < cloned.length; i++) {
                    invokeWithErrorHandling(
                      cloned[i],
                      null,
                      arguments$1,
                      vm,
                      'v-on handler'
                    )
                  }
                } else {
                  // return handler return value for single handlers
                  return invokeWithErrorHandling(
                    fns,
                    null,
                    arguments,
                    vm,
                    'v-on handler'
                  )
                }
              }
              invoker.fns = fns
              return invoker
            }
            function updateListeners(
              on,
              oldOn,
              add,
              remove$$1,
              createOnceHandler,
              vm
            ) {
              var name, def$$1, cur, old, event
              for (name in on) {
                def$$1 = cur = on[name]
                old = oldOn[name]
                event = normalizeEvent(name)
                if (isUndef(cur)) {
                  warn(
                    'Invalid handler for event "' +
                      event.name +
                      '": got ' +
                      String(cur),
                    vm
                  )
                } else if (isUndef(old)) {
                  if (isUndef(cur.fns)) {
                    cur = on[name] = createFnInvoker(cur, vm)
                  }
                  if (isTrue(event.once)) {
                    cur = on[name] = createOnceHandler(
                      event.name,
                      cur,
                      event.capture
                    )
                  }
                  add(
                    event.name,
                    cur,
                    event.capture,
                    event.passive,
                    event.params
                  )
                } else if (cur !== old) {
                  old.fns = cur
                  on[name] = old
                }
              }
              for (name in oldOn) {
                if (isUndef(on[name])) {
                  event = normalizeEvent(name)
                  remove$$1(event.name, oldOn[name], event.capture)
                }
              }
            }
            /*  */ function mergeVNodeHook(def, hookKey, hook) {
              if (def instanceof VNode) {
                def = def.data.hook || (def.data.hook = {})
              }
              var invoker
              var oldHook = def[hookKey]
              function wrappedHook() {
                hook.apply(this, arguments) // important: remove merged hook to ensure it's called only once
                // and prevent memory leak
                remove(invoker.fns, wrappedHook)
              }
              if (isUndef(oldHook)) {
                // no existing hook
                invoker = createFnInvoker([wrappedHook])
              } else {
                /* istanbul ignore if */ if (
                  isDef(oldHook.fns) &&
                  isTrue(oldHook.merged)
                ) {
                  // already a merged invoker
                  invoker = oldHook
                  invoker.fns.push(wrappedHook)
                } else {
                  // existing plain hook
                  invoker = createFnInvoker([oldHook, wrappedHook])
                }
              }
              invoker.merged = true
              def[hookKey] = invoker
            }
            /*  */ function extractPropsFromVNodeData(data, Ctor, tag) {
              // we are only extracting raw values here.
              // validation and default values are handled in the child
              // component itself.
              var propOptions = Ctor.options.props
              if (isUndef(propOptions)) {
                return
              }
              var res = {}
              var attrs = data.attrs
              var props = data.props
              if (isDef(attrs) || isDef(props)) {
                for (var key in propOptions) {
                  var altKey = hyphenate(key)
                  {
                    var keyInLowerCase = key.toLowerCase()
                    if (
                      key !== keyInLowerCase &&
                      attrs &&
                      hasOwn(attrs, keyInLowerCase)
                    ) {
                      tip(
                        'Prop "' +
                          keyInLowerCase +
                          '" is passed to component ' +
                          formatComponentName(tag || Ctor) +
                          ', but the declared prop name is' +
                          ' "' +
                          key +
                          '". ' +
                          'Note that HTML attributes are case-insensitive and camelCased ' +
                          'props need to use their kebab-case equivalents when using in-DOM ' +
                          'templates. You should probably use "' +
                          altKey +
                          '" instead of "' +
                          key +
                          '".'
                      )
                    }
                  }
                  checkProp(res, props, key, altKey, true) ||
                    checkProp(res, attrs, key, altKey, false)
                }
              }
              return res
            }
            function checkProp(res, hash, key, altKey, preserve) {
              if (isDef(hash)) {
                if (hasOwn(hash, key)) {
                  res[key] = hash[key]
                  if (!preserve) {
                    delete hash[key]
                  }
                  return true
                } else if (hasOwn(hash, altKey)) {
                  res[key] = hash[altKey]
                  if (!preserve) {
                    delete hash[altKey]
                  }
                  return true
                }
              }
              return false
            } /*  */ // The template compiler attempts to minimize the need for normalization by
            // statically analyzing the template at compile time.
            //
            // For plain HTML markup, normalization can be completely skipped because the
            // generated render function is guaranteed to return Array<VNode>. There are
            // two cases where extra normalization is needed:
            // 1. When the children contains components - because a functional component
            // may return an Array instead of a single root. In this case, just a simple
            // normalization is needed - if any child is an Array, we flatten the whole
            // thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
            // because functional components already normalize their own children.
            function simpleNormalizeChildren(children) {
              for (var i = 0; i < children.length; i++) {
                if (Array.isArray(children[i])) {
                  return Array.prototype.concat.apply([], children)
                }
              }
              return children
            } // 2. When the children contains constructs that always generated nested Arrays,
            // e.g. <template>, <slot>, v-for, or when the children is provided by user
            // with hand-written render functions / JSX. In such cases a full normalization
            // is needed to cater to all possible types of children values.
            function normalizeChildren(children) {
              return isPrimitive(children)
                ? [createTextVNode(children)]
                : Array.isArray(children)
                ? normalizeArrayChildren(children)
                : undefined
            }
            function isTextNode(node) {
              return isDef(node) && isDef(node.text) && isFalse(node.isComment)
            }
            function normalizeArrayChildren(children, nestedIndex) {
              var res = []
              var i, c, lastIndex, last
              for (i = 0; i < children.length; i++) {
                c = children[i]
                if (isUndef(c) || typeof c === 'boolean') {
                  continue
                }
                lastIndex = res.length - 1
                last = res[lastIndex] //  nested
                if (Array.isArray(c)) {
                  if (c.length > 0) {
                    c = normalizeArrayChildren(c, (nestedIndex || '') + '_' + i) // merge adjacent text nodes
                    if (isTextNode(c[0]) && isTextNode(last)) {
                      res[lastIndex] = createTextVNode(last.text + c[0].text)
                      c.shift()
                    }
                    res.push.apply(res, c)
                  }
                } else if (isPrimitive(c)) {
                  if (isTextNode(last)) {
                    // merge adjacent text nodes
                    // this is necessary for SSR hydration because text nodes are
                    // essentially merged when rendered to HTML strings
                    res[lastIndex] = createTextVNode(last.text + c)
                  } else if (c !== '') {
                    // convert primitive to vnode
                    res.push(createTextVNode(c))
                  }
                } else {
                  if (isTextNode(c) && isTextNode(last)) {
                    // merge adjacent text nodes
                    res[lastIndex] = createTextVNode(last.text + c.text)
                  } else {
                    // default key for nested array children (likely generated by v-for)
                    if (
                      isTrue(children._isVList) &&
                      isDef(c.tag) &&
                      isUndef(c.key) &&
                      isDef(nestedIndex)
                    ) {
                      c.key = '__vlist' + nestedIndex + '_' + i + '__'
                    }
                    res.push(c)
                  }
                }
              }
              return res
            }
            /*  */ function initProvide(vm) {
              var provide = vm.$options.provide
              if (provide) {
                vm._provided =
                  typeof provide === 'function' ? provide.call(vm) : provide
              }
            }
            function initInjections(vm) {
              var result = resolveInject(vm.$options.inject, vm)
              if (result) {
                toggleObserving(false)
                Object.keys(result).forEach(function(key) {
                  /* istanbul ignore else */ {
                    defineReactive$$1(vm, key, result[key], function() {
                      warn(
                        'Avoid mutating an injected value directly since the changes will be ' +
                          'overwritten whenever the provided component re-renders. ' +
                          'injection being mutated: "' +
                          key +
                          '"',
                        vm
                      )
                    })
                  }
                })
                toggleObserving(true)
              }
            }
            function resolveInject(inject, vm) {
              if (inject) {
                // inject is :any because flow is not smart enough to figure out cached
                var result = Object.create(null)
                var keys = hasSymbol
                  ? Reflect.ownKeys(inject)
                  : Object.keys(inject)
                for (var i = 0; i < keys.length; i++) {
                  var key = keys[i] // #6574 in case the inject object is observed...
                  if (key === '__ob__') {
                    continue
                  }
                  var provideKey = inject[key].from
                  var source = vm
                  while (source) {
                    if (
                      source._provided &&
                      hasOwn(source._provided, provideKey)
                    ) {
                      result[key] = source._provided[provideKey]
                      break
                    }
                    source = source.$parent
                  }
                  if (!source) {
                    if ('default' in inject[key]) {
                      var provideDefault = inject[key]['default']
                      result[key] =
                        typeof provideDefault === 'function'
                          ? provideDefault.call(vm)
                          : provideDefault
                    } else {
                      warn('Injection "' + key + '" not found', vm)
                    }
                  }
                }
                return result
              }
            }
            /*  */ /**
             * Runtime helper for resolving raw children VNodes into a slot object.
             */ function resolveSlots(children, context) {
              if (!children || !children.length) {
                return {}
              }
              var slots = {}
              for (var i = 0, l = children.length; i < l; i++) {
                var child = children[i]
                var data = child.data // remove slot attribute if the node is resolved as a Vue slot node
                if (data && data.attrs && data.attrs.slot) {
                  delete data.attrs.slot
                } // named slots should only be respected if the vnode was rendered in the
                // same context.
                if (
                  (child.context === context || child.fnContext === context) &&
                  data &&
                  data.slot != null
                ) {
                  var name = data.slot
                  var slot = slots[name] || (slots[name] = [])
                  if (child.tag === 'template') {
                    slot.push.apply(slot, child.children || [])
                  } else {
                    slot.push(child)
                  }
                } else {
                  ;(slots['default'] || (slots['default'] = [])).push(child)
                }
              } // ignore slots that contains only whitespace
              for (var name$1 in slots) {
                if (slots[name$1].every(isWhitespace)) {
                  delete slots[name$1]
                }
              }
              return slots
            }
            function isWhitespace(node) {
              return (node.isComment && !node.asyncFactory) || node.text === ' '
            }
            /*  */ function normalizeScopedSlots(
              slots,
              normalSlots,
              prevSlots
            ) {
              var res
              var hasNormalSlots = Object.keys(normalSlots).length > 0
              var isStable = slots ? !!slots.$stable : !hasNormalSlots
              var key = slots && slots.$key
              if (!slots) {
                res = {}
              } else if (slots._normalized) {
                // fast path 1: child component re-render only, parent did not change
                return slots._normalized
              } else if (
                isStable &&
                prevSlots &&
                prevSlots !== emptyObject &&
                key === prevSlots.$key &&
                !hasNormalSlots &&
                !prevSlots.$hasNormal
              ) {
                // fast path 2: stable scoped slots w/ no normal slots to proxy,
                // only need to normalize once
                return prevSlots
              } else {
                res = {}
                for (var key$1 in slots) {
                  if (slots[key$1] && key$1[0] !== '$') {
                    res[key$1] = normalizeScopedSlot(
                      normalSlots,
                      key$1,
                      slots[key$1]
                    )
                  }
                }
              } // expose normal slots on scopedSlots
              for (var key$2 in normalSlots) {
                if (!(key$2 in res)) {
                  res[key$2] = proxyNormalSlot(normalSlots, key$2)
                }
              } // avoriaz seems to mock a non-extensible $scopedSlots object
              // and when that is passed down this would cause an error
              if (slots && Object.isExtensible(slots)) {
                slots._normalized = res
              }
              def(res, '$stable', isStable)
              def(res, '$key', key)
              def(res, '$hasNormal', hasNormalSlots)
              return res
            }
            function normalizeScopedSlot(normalSlots, key, fn) {
              var normalized = function normalized() {
                var res = arguments.length ? fn.apply(null, arguments) : fn({})
                res =
                  res &&
                  (0, _typeof3['default'])(res) === 'object' &&
                  !Array.isArray(res)
                    ? [res] // single vnode
                    : normalizeChildren(res)
                return res &&
                  (res.length === 0 || (res.length === 1 && res[0].isComment)) // #9658
                  ? undefined
                  : res
              } // this is a slot using the new v-slot syntax without scope. although it is
              // compiled as a scoped slot, render fn users would expect it to be present
              // on this.$slots because the usage is semantically a normal slot.
              if (fn.proxy) {
                Object.defineProperty(normalSlots, key, {
                  get: normalized,
                  enumerable: true,
                  configurable: true
                })
              }
              return normalized
            }
            function proxyNormalSlot(slots, key) {
              return function() {
                return slots[key]
              }
            }
            /*  */ /**
             * Runtime helper for rendering v-for lists.
             */ function renderList(val, render) {
              var ret, i, l, keys, key
              if (Array.isArray(val) || typeof val === 'string') {
                ret = new Array(val.length)
                for (i = 0, l = val.length; i < l; i++) {
                  ret[i] = render(val[i], i)
                }
              } else if (typeof val === 'number') {
                ret = new Array(val)
                for (i = 0; i < val; i++) {
                  ret[i] = render(i + 1, i)
                }
              } else if (isObject(val)) {
                if (hasSymbol && val[Symbol.iterator]) {
                  ret = []
                  var iterator = val[Symbol.iterator]()
                  var result = iterator.next()
                  while (!result.done) {
                    ret.push(render(result.value, ret.length))
                    result = iterator.next()
                  }
                } else {
                  keys = Object.keys(val)
                  ret = new Array(keys.length)
                  for (i = 0, l = keys.length; i < l; i++) {
                    key = keys[i]
                    ret[i] = render(val[key], key, i)
                  }
                }
              }
              if (!isDef(ret)) {
                ret = []
              }
              ret._isVList = true
              return ret
            }
            /*  */ /**
             * Runtime helper for rendering <slot>
             */ function renderSlot(name, fallback, props, bindObject) {
              var scopedSlotFn = this.$scopedSlots[name]
              var nodes
              if (scopedSlotFn) {
                // scoped slot
                props = props || {}
                if (bindObject) {
                  if (!isObject(bindObject)) {
                    warn('slot v-bind without argument expects an Object', this)
                  }
                  props = extend(extend({}, bindObject), props)
                }
                nodes = scopedSlotFn(props) || fallback
              } else {
                nodes = this.$slots[name] || fallback
              }
              var target = props && props.slot
              if (target) {
                return this.$createElement('template', { slot: target }, nodes)
              } else {
                return nodes
              }
            }
            /*  */ /**
             * Runtime helper for resolving filters
             */ function resolveFilter(id) {
              return (
                resolveAsset(this.$options, 'filters', id, true) || identity
              )
            }
            /*  */ function isKeyNotMatch(expect, actual) {
              if (Array.isArray(expect)) {
                return expect.indexOf(actual) === -1
              } else {
                return expect !== actual
              }
            }
            /**
             * Runtime helper for checking keyCodes from config.
             * exposed as Vue.prototype._k
             * passing in eventKeyName as last argument separately for backwards compat
             */ function checkKeyCodes(
              eventKeyCode,
              key,
              builtInKeyCode,
              eventKeyName,
              builtInKeyName
            ) {
              var mappedKeyCode = config.keyCodes[key] || builtInKeyCode
              if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {
                return isKeyNotMatch(builtInKeyName, eventKeyName)
              } else if (mappedKeyCode) {
                return isKeyNotMatch(mappedKeyCode, eventKeyCode)
              } else if (eventKeyName) {
                return hyphenate(eventKeyName) !== key
              }
            }
            /*  */ /**
             * Runtime helper for merging v-bind="object" into a VNode's data.
             */ function bindObjectProps(data, tag, value, asProp, isSync) {
              if (value) {
                if (!isObject(value)) {
                  warn(
                    'v-bind without argument expects an Object or Array value',
                    this
                  )
                } else {
                  if (Array.isArray(value)) {
                    value = toObject(value)
                  }
                  var hash
                  var loop = function loop(key) {
                    if (
                      key === 'class' ||
                      key === 'style' ||
                      isReservedAttribute(key)
                    ) {
                      hash = data
                    } else {
                      var type = data.attrs && data.attrs.type
                      hash =
                        asProp || config.mustUseProp(tag, type, key)
                          ? data.domProps || (data.domProps = {})
                          : data.attrs || (data.attrs = {})
                    }
                    var camelizedKey = camelize(key)
                    var hyphenatedKey = hyphenate(key)
                    if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {
                      hash[key] = value[key]
                      if (isSync) {
                        var on = data.on || (data.on = {})
                        on['update:' + key] = function($event) {
                          value[key] = $event
                        }
                      }
                    }
                  }
                  for (var key in value) {
                    loop(key)
                  }
                }
              }
              return data
            }
            /*  */ /**
             * Runtime helper for rendering static trees.
             */ function renderStatic(index, isInFor) {
              var cached = this._staticTrees || (this._staticTrees = [])
              var tree = cached[index] // if has already-rendered static tree and not inside v-for,
              // we can reuse the same tree.
              if (tree && !isInFor) {
                return tree
              } // otherwise, render a fresh tree.
              tree = cached[index] = this.$options.staticRenderFns[index].call(
                this._renderProxy,
                null,
                this // for render fns generated for functional component templates
              )
              markStatic(tree, '__static__' + index, false)
              return tree
            }
            /**
             * Runtime helper for v-once.
             * Effectively it means marking the node as static with a unique key.
             */ function markOnce(tree, index, key) {
              markStatic(
                tree,
                '__once__' + index + (key ? '_' + key : ''),
                true
              )
              return tree
            }
            function markStatic(tree, key, isOnce) {
              if (Array.isArray(tree)) {
                for (var i = 0; i < tree.length; i++) {
                  if (tree[i] && typeof tree[i] !== 'string') {
                    markStaticNode(tree[i], key + '_' + i, isOnce)
                  }
                }
              } else {
                markStaticNode(tree, key, isOnce)
              }
            }
            function markStaticNode(node, key, isOnce) {
              node.isStatic = true
              node.key = key
              node.isOnce = isOnce
            }
            /*  */ function bindObjectListeners(data, value) {
              if (value) {
                if (!isPlainObject(value)) {
                  warn('v-on without argument expects an Object value', this)
                } else {
                  var on = (data.on = data.on ? extend({}, data.on) : {})
                  for (var key in value) {
                    var existing = on[key]
                    var ours = value[key]
                    on[key] = existing ? [].concat(existing, ours) : ours
                  }
                }
              }
              return data
            }
            /*  */ function resolveScopedSlots(
              fns, // see flow/vnode
              res, // the following are added in 2.6
              hasDynamicKeys,
              contentHashKey
            ) {
              res = res || { $stable: !hasDynamicKeys }
              for (var i = 0; i < fns.length; i++) {
                var slot = fns[i]
                if (Array.isArray(slot)) {
                  resolveScopedSlots(slot, res, hasDynamicKeys)
                } else if (slot) {
                  // marker for reverse proxying v-slot without scope on this.$slots
                  if (slot.proxy) {
                    slot.fn.proxy = true
                  }
                  res[slot.key] = slot.fn
                }
              }
              if (contentHashKey) {
                res.$key = contentHashKey
              }
              return res
            }
            /*  */ function bindDynamicKeys(baseObj, values) {
              for (var i = 0; i < values.length; i += 2) {
                var key = values[i]
                if (typeof key === 'string' && key) {
                  baseObj[values[i]] = values[i + 1]
                } else if (key !== '' && key !== null) {
                  // null is a special value for explicitly removing a binding
                  warn(
                    'Invalid value for dynamic directive argument (expected string or null): ' +
                      key,
                    this
                  )
                }
              }
              return baseObj
            } // helper to dynamically append modifier runtime markers to event names.
            // ensure only append when value is already string, otherwise it will be cast
            // to string and cause the type check to miss.
            function prependModifier(value, symbol) {
              return typeof value === 'string' ? symbol + value : value
            }
            /*  */ function installRenderHelpers(target) {
              target._o = markOnce
              target._n = toNumber
              target._s = toString
              target._l = renderList
              target._t = renderSlot
              target._q = looseEqual
              target._i = looseIndexOf
              target._m = renderStatic
              target._f = resolveFilter
              target._k = checkKeyCodes
              target._b = bindObjectProps
              target._v = createTextVNode
              target._e = createEmptyVNode
              target._u = resolveScopedSlots
              target._g = bindObjectListeners
              target._d = bindDynamicKeys
              target._p = prependModifier
            }
            /*  */ function FunctionalRenderContext(
              data,
              props,
              children,
              parent,
              Ctor
            ) {
              var this$1 = this
              var options = Ctor.options // ensure the createElement function in functional components
              // gets a unique context - this is necessary for correct named slot check
              var contextVm
              if (hasOwn(parent, '_uid')) {
                contextVm = Object.create(parent) // $flow-disable-line
                contextVm._original = parent
              } else {
                // the context vm passed in is a functional context as well.
                // in this case we want to make sure we are able to get a hold to the
                // real context instance.
                contextVm = parent // $flow-disable-line
                parent = parent._original
              }
              var isCompiled = isTrue(options._compiled)
              var needNormalization = !isCompiled
              this.data = data
              this.props = props
              this.children = children
              this.parent = parent
              this.listeners = data.on || emptyObject
              this.injections = resolveInject(options.inject, parent)
              this.slots = function() {
                if (!this$1.$slots) {
                  normalizeScopedSlots(
                    data.scopedSlots,
                    (this$1.$slots = resolveSlots(children, parent))
                  )
                }
                return this$1.$slots
              }
              Object.defineProperty(this, 'scopedSlots', {
                enumerable: true,
                get: function get() {
                  return normalizeScopedSlots(data.scopedSlots, this.slots())
                }
              }) // support for compiled functional template
              if (isCompiled) {
                // exposing $options for renderStatic()
                this.$options = options // pre-resolve slots for renderSlot()
                this.$slots = this.slots()
                this.$scopedSlots = normalizeScopedSlots(
                  data.scopedSlots,
                  this.$slots
                )
              }
              if (options._scopeId) {
                this._c = function(a, b, c, d) {
                  var vnode = createElement(
                    contextVm,
                    a,
                    b,
                    c,
                    d,
                    needNormalization
                  )
                  if (vnode && !Array.isArray(vnode)) {
                    vnode.fnScopeId = options._scopeId
                    vnode.fnContext = parent
                  }
                  return vnode
                }
              } else {
                this._c = function(a, b, c, d) {
                  return createElement(contextVm, a, b, c, d, needNormalization)
                }
              }
            }
            installRenderHelpers(FunctionalRenderContext.prototype)
            function createFunctionalComponent(
              Ctor,
              propsData,
              data,
              contextVm,
              children
            ) {
              var options = Ctor.options
              var props = {}
              var propOptions = options.props
              if (isDef(propOptions)) {
                for (var key in propOptions) {
                  props[key] = validateProp(
                    key,
                    propOptions,
                    propsData || emptyObject
                  )
                }
              } else {
                if (isDef(data.attrs)) {
                  mergeProps(props, data.attrs)
                }
                if (isDef(data.props)) {
                  mergeProps(props, data.props)
                }
              }
              var renderContext = new FunctionalRenderContext(
                data,
                props,
                children,
                contextVm,
                Ctor
              )
              var vnode = options.render.call(
                null,
                renderContext._c,
                renderContext
              )
              if (vnode instanceof VNode) {
                return cloneAndMarkFunctionalResult(
                  vnode,
                  data,
                  renderContext.parent,
                  options,
                  renderContext
                )
              } else if (Array.isArray(vnode)) {
                var vnodes = normalizeChildren(vnode) || []
                var res = new Array(vnodes.length)
                for (var i = 0; i < vnodes.length; i++) {
                  res[i] = cloneAndMarkFunctionalResult(
                    vnodes[i],
                    data,
                    renderContext.parent,
                    options,
                    renderContext
                  )
                }
                return res
              }
            }
            function cloneAndMarkFunctionalResult(
              vnode,
              data,
              contextVm,
              options,
              renderContext
            ) {
              // #7817 clone node before setting fnContext, otherwise if the node is reused
              // (e.g. it was from a cached normal slot) the fnContext causes named slots
              // that should not be matched to match.
              var clone = cloneVNode(vnode)
              clone.fnContext = contextVm
              clone.fnOptions = options
              {
                ;(clone.devtoolsMeta =
                  clone.devtoolsMeta || {}).renderContext = renderContext
              }
              if (data.slot) {
                ;(clone.data || (clone.data = {})).slot = data.slot
              }
              return clone
            }
            function mergeProps(to, from) {
              for (var key in from) {
                to[camelize(key)] = from[key]
              }
            } /*  */ /*  */ /*  */ /*  */ // inline hooks to be invoked on component VNodes during patch
            var componentVNodeHooks = {
              init: function init(vnode, hydrating) {
                if (
                  vnode.componentInstance &&
                  !vnode.componentInstance._isDestroyed &&
                  vnode.data.keepAlive
                ) {
                  // kept-alive components, treat as a patch
                  var mountedNode = vnode // work around flow
                  componentVNodeHooks.prepatch(mountedNode, mountedNode)
                } else {
                  var child = (vnode.componentInstance = createComponentInstanceForVnode(
                    vnode,
                    activeInstance
                  ))
                  child.$mount(hydrating ? vnode.elm : undefined, hydrating)
                }
              },
              prepatch: function prepatch(oldVnode, vnode) {
                var options = vnode.componentOptions
                var child = (vnode.componentInstance =
                  oldVnode.componentInstance)
                updateChildComponent(
                  child,
                  options.propsData, // updated props
                  options.listeners, // updated listeners
                  vnode, // new parent vnode
                  options.children // new children
                )
              },
              insert: function insert(vnode) {
                var context = vnode.context
                var componentInstance = vnode.componentInstance
                if (!componentInstance._isMounted) {
                  componentInstance._isMounted = true
                  callHook(componentInstance, 'mounted')
                }
                if (vnode.data.keepAlive) {
                  if (context._isMounted) {
                    // vue-router#1212
                    // During updates, a kept-alive component's child components may
                    // change, so directly walking the tree here may call activated hooks
                    // on incorrect children. Instead we push them into a queue which will
                    // be processed after the whole patch process ended.
                    queueActivatedComponent(componentInstance)
                  } else {
                    activateChildComponent(componentInstance, true /* direct */)
                  }
                }
              },
              destroy: function destroy(vnode) {
                var componentInstance = vnode.componentInstance
                if (!componentInstance._isDestroyed) {
                  if (!vnode.data.keepAlive) {
                    componentInstance.$destroy()
                  } else {
                    deactivateChildComponent(
                      componentInstance,
                      true /* direct */
                    )
                  }
                }
              }
            }
            var hooksToMerge = Object.keys(componentVNodeHooks)
            function createComponent(Ctor, data, context, children, tag) {
              if (isUndef(Ctor)) {
                return
              }
              var baseCtor = context.$options._base // plain options object: turn it into a constructor
              if (isObject(Ctor)) {
                Ctor = baseCtor.extend(Ctor)
              } // if at this stage it's not a constructor or an async component factory,
              // reject.
              if (typeof Ctor !== 'function') {
                {
                  warn('Invalid Component definition: ' + String(Ctor), context)
                }
                return
              } // async component
              var asyncFactory
              if (isUndef(Ctor.cid)) {
                asyncFactory = Ctor
                Ctor = resolveAsyncComponent(asyncFactory, baseCtor)
                if (Ctor === undefined) {
                  // return a placeholder node for async component, which is rendered
                  // as a comment node but preserves all the raw information for the node.
                  // the information will be used for async server-rendering and hydration.
                  return createAsyncPlaceholder(
                    asyncFactory,
                    data,
                    context,
                    children,
                    tag
                  )
                }
              }
              data = data || {} // resolve constructor options in case global mixins are applied after
              // component constructor creation
              resolveConstructorOptions(Ctor) // transform component v-model data into props & events
              if (isDef(data.model)) {
                transformModel(Ctor.options, data)
              } // extract props
              var propsData = extractPropsFromVNodeData(data, Ctor, tag) // functional component
              if (isTrue(Ctor.options.functional)) {
                return createFunctionalComponent(
                  Ctor,
                  propsData,
                  data,
                  context,
                  children
                )
              } // extract listeners, since these needs to be treated as
              // child component listeners instead of DOM listeners
              var listeners = data.on // replace with listeners with .native modifier
              // so it gets processed during parent component patch.
              data.on = data.nativeOn
              if (isTrue(Ctor.options['abstract'])) {
                // abstract components do not keep anything
                // other than props & listeners & slot
                // work around flow
                var slot = data.slot
                data = {}
                if (slot) {
                  data.slot = slot
                }
              } // install component management hooks onto the placeholder node
              installComponentHooks(data) // return a placeholder vnode
              var name = Ctor.options.name || tag
              var vnode = new VNode(
                'vue-component-' + Ctor.cid + (name ? '-' + name : ''),
                data,
                undefined,
                undefined,
                undefined,
                context,
                {
                  Ctor: Ctor,
                  propsData: propsData,
                  listeners: listeners,
                  tag: tag,
                  children: children
                },
                asyncFactory
              )
              return vnode
            }
            function createComponentInstanceForVnode(
              vnode, // we know it's MountedComponentVNode but flow doesn't
              parent // activeInstance in lifecycle state
            ) {
              var options = {
                _isComponent: true,
                _parentVnode: vnode,
                parent: parent
              } // check inline-template render functions
              var inlineTemplate = vnode.data.inlineTemplate
              if (isDef(inlineTemplate)) {
                options.render = inlineTemplate.render
                options.staticRenderFns = inlineTemplate.staticRenderFns
              }
              return new vnode.componentOptions.Ctor(options)
            }
            function installComponentHooks(data) {
              var hooks = data.hook || (data.hook = {})
              for (var i = 0; i < hooksToMerge.length; i++) {
                var key = hooksToMerge[i]
                var existing = hooks[key]
                var toMerge = componentVNodeHooks[key]
                if (existing !== toMerge && !(existing && existing._merged)) {
                  hooks[key] = existing
                    ? mergeHook$1(toMerge, existing)
                    : toMerge
                }
              }
            }
            function mergeHook$1(f1, f2) {
              var merged = function merged(a, b) {
                // flow complains about extra args which is why we use any
                f1(a, b)
                f2(a, b)
              }
              merged._merged = true
              return merged
            } // transform component v-model info (value and callback) into
            // prop and event handler respectively.
            function transformModel(options, data) {
              var prop = (options.model && options.model.prop) || 'value'
              var event = (options.model && options.model.event) || 'input'
              ;(data.attrs || (data.attrs = {}))[prop] = data.model.value
              var on = data.on || (data.on = {})
              var existing = on[event]
              var callback = data.model.callback
              if (isDef(existing)) {
                if (
                  Array.isArray(existing)
                    ? existing.indexOf(callback) === -1
                    : existing !== callback
                ) {
                  on[event] = [callback].concat(existing)
                }
              } else {
                on[event] = callback
              }
            }
            /*  */ var SIMPLE_NORMALIZE = 1
            var ALWAYS_NORMALIZE = 2 // wrapper function for providing a more flexible interface
            // without getting yelled at by flow
            function createElement(
              context,
              tag,
              data,
              children,
              normalizationType,
              alwaysNormalize
            ) {
              if (Array.isArray(data) || isPrimitive(data)) {
                normalizationType = children
                children = data
                data = undefined
              }
              if (isTrue(alwaysNormalize)) {
                normalizationType = ALWAYS_NORMALIZE
              }
              return _createElement(
                context,
                tag,
                data,
                children,
                normalizationType
              )
            }
            function _createElement(
              context,
              tag,
              data,
              children,
              normalizationType
            ) {
              if (isDef(data) && isDef(data.__ob__)) {
                warn(
                  'Avoid using observed data object as vnode data: ' +
                    JSON.stringify(data) +
                    '\n' +
                    'Always create fresh vnode data objects in each render!',
                  context
                )
                return createEmptyVNode()
              } // object syntax in v-bind
              if (isDef(data) && isDef(data.is)) {
                tag = data.is
              }
              if (!tag) {
                // in case of component :is set to falsy value
                return createEmptyVNode()
              } // warn against non-primitive key
              if (isDef(data) && isDef(data.key) && !isPrimitive(data.key)) {
                {
                  warn(
                    'Avoid using non-primitive value as key, ' +
                      'use string/number value instead.',
                    context
                  )
                }
              } // support single function children as default scoped slot
              if (
                Array.isArray(children) &&
                typeof children[0] === 'function'
              ) {
                data = data || {}
                data.scopedSlots = { default: children[0] }
                children.length = 0
              }
              if (normalizationType === ALWAYS_NORMALIZE) {
                children = normalizeChildren(children)
              } else if (normalizationType === SIMPLE_NORMALIZE) {
                children = simpleNormalizeChildren(children)
              }
              var vnode, ns
              if (typeof tag === 'string') {
                var Ctor
                ns =
                  (context.$vnode && context.$vnode.ns) ||
                  config.getTagNamespace(tag)
                if (config.isReservedTag(tag)) {
                  // platform built-in elements
                  if (isDef(data) && isDef(data.nativeOn)) {
                    warn(
                      'The .native modifier for v-on is only valid on components but it was used on <' +
                        tag +
                        '>.',
                      context
                    )
                  }
                  vnode = new VNode(
                    config.parsePlatformTagName(tag),
                    data,
                    children,
                    undefined,
                    undefined,
                    context
                  )
                } else if (
                  (!data || !data.pre) &&
                  isDef(
                    (Ctor = resolveAsset(context.$options, 'components', tag))
                  )
                ) {
                  // component
                  vnode = createComponent(Ctor, data, context, children, tag)
                } else {
                  // unknown or unlisted namespaced elements
                  // check at runtime because it may get assigned a namespace when its
                  // parent normalizes children
                  vnode = new VNode(
                    tag,
                    data,
                    children,
                    undefined,
                    undefined,
                    context
                  )
                }
              } else {
                // direct component options / constructor
                vnode = createComponent(tag, data, context, children)
              }
              if (Array.isArray(vnode)) {
                return vnode
              } else if (isDef(vnode)) {
                if (isDef(ns)) {
                  applyNS(vnode, ns)
                }
                if (isDef(data)) {
                  registerDeepBindings(data)
                }
                return vnode
              } else {
                return createEmptyVNode()
              }
            }
            function applyNS(vnode, ns, force) {
              vnode.ns = ns
              if (vnode.tag === 'foreignObject') {
                // use default namespace inside foreignObject
                ns = undefined
                force = true
              }
              if (isDef(vnode.children)) {
                for (var i = 0, l = vnode.children.length; i < l; i++) {
                  var child = vnode.children[i]
                  if (
                    isDef(child.tag) &&
                    (isUndef(child.ns) ||
                      (isTrue(force) && child.tag !== 'svg'))
                  ) {
                    applyNS(child, ns, force)
                  }
                }
              }
            } // ref #5318
            // necessary to ensure parent re-render when deep bindings like :style and
            // :class are used on slot nodes
            function registerDeepBindings(data) {
              if (isObject(data.style)) {
                traverse(data.style)
              }
              if (isObject(data['class'])) {
                traverse(data['class'])
              }
            }
            /*  */ function initRender(vm) {
              vm._vnode = null // the root of the child tree
              vm._staticTrees = null // v-once cached trees
              var options = vm.$options
              var parentVnode = (vm.$vnode = options._parentVnode) // the placeholder node in parent tree
              var renderContext = parentVnode && parentVnode.context
              vm.$slots = resolveSlots(options._renderChildren, renderContext)
              vm.$scopedSlots = emptyObject // bind the createElement fn to this instance
              // so that we get proper render context inside it.
              // args order: tag, data, children, normalizationType, alwaysNormalize
              // internal version is used by render functions compiled from templates
              vm._c = function(a, b, c, d) {
                return createElement(vm, a, b, c, d, false)
              } // normalization is always applied for the public version, used in
              // user-written render functions.
              vm.$createElement = function(a, b, c, d) {
                return createElement(vm, a, b, c, d, true)
              } // $attrs & $listeners are exposed for easier HOC creation.
              // they need to be reactive so that HOCs using them are always updated
              var parentData = parentVnode && parentVnode.data
              /* istanbul ignore else */ {
                defineReactive$$1(
                  vm,
                  '$attrs',
                  (parentData && parentData.attrs) || emptyObject,
                  function() {
                    !isUpdatingChildComponent && warn('$attrs is readonly.', vm)
                  },
                  true
                )
                defineReactive$$1(
                  vm,
                  '$listeners',
                  options._parentListeners || emptyObject,
                  function() {
                    !isUpdatingChildComponent &&
                      warn('$listeners is readonly.', vm)
                  },
                  true
                )
              }
            }
            var currentRenderingInstance = null
            function renderMixin(Vue) {
              // install runtime convenience helpers
              installRenderHelpers(Vue.prototype)
              Vue.prototype.$nextTick = function(fn) {
                return nextTick(fn, this)
              }
              Vue.prototype._render = function() {
                var vm = this
                var ref = vm.$options
                var render = ref.render
                var _parentVnode = ref._parentVnode
                if (_parentVnode) {
                  vm.$scopedSlots = normalizeScopedSlots(
                    _parentVnode.data.scopedSlots,
                    vm.$slots,
                    vm.$scopedSlots
                  )
                } // set parent vnode. this allows render functions to have access
                // to the data on the placeholder node.
                vm.$vnode = _parentVnode // render self
                var vnode
                try {
                  // There's no need to maintain a stack because all render fns are called
                  // separately from one another. Nested component's render fns are called
                  // when parent component is patched.
                  currentRenderingInstance = vm
                  vnode = render.call(vm._renderProxy, vm.$createElement)
                } catch (e) {
                  handleError(e, vm, 'render') // return error render result,
                  // or previous vnode to prevent render error causing blank component
                  /* istanbul ignore else */ if (vm.$options.renderError) {
                    try {
                      vnode = vm.$options.renderError.call(
                        vm._renderProxy,
                        vm.$createElement,
                        e
                      )
                    } catch (e) {
                      handleError(e, vm, 'renderError')
                      vnode = vm._vnode
                    }
                  } else {
                    vnode = vm._vnode
                  }
                } finally {
                  currentRenderingInstance = null
                } // if the returned array contains only a single node, allow it
                if (Array.isArray(vnode) && vnode.length === 1) {
                  vnode = vnode[0]
                } // return empty vnode in case the render function errored out
                if (!(vnode instanceof VNode)) {
                  if (Array.isArray(vnode)) {
                    warn(
                      'Multiple root nodes returned from render function. Render function ' +
                        'should return a single root node.',
                      vm
                    )
                  }
                  vnode = createEmptyVNode()
                } // set parent
                vnode.parent = _parentVnode
                return vnode
              }
            }
            /*  */ function ensureCtor(comp, base) {
              if (
                comp.__esModule ||
                (hasSymbol && comp[Symbol.toStringTag] === 'Module')
              ) {
                comp = comp['default']
              }
              return isObject(comp) ? base.extend(comp) : comp
            }
            function createAsyncPlaceholder(
              factory,
              data,
              context,
              children,
              tag
            ) {
              var node = createEmptyVNode()
              node.asyncFactory = factory
              node.asyncMeta = {
                data: data,
                context: context,
                children: children,
                tag: tag
              }
              return node
            }
            function resolveAsyncComponent(factory, baseCtor) {
              if (isTrue(factory.error) && isDef(factory.errorComp)) {
                return factory.errorComp
              }
              if (isDef(factory.resolved)) {
                return factory.resolved
              }
              var owner = currentRenderingInstance
              if (
                owner &&
                isDef(factory.owners) &&
                factory.owners.indexOf(owner) === -1
              ) {
                // already pending
                factory.owners.push(owner)
              }
              if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
                return factory.loadingComp
              }
              if (owner && !isDef(factory.owners)) {
                var owners = (factory.owners = [owner])
                var sync = true
                var timerLoading = null
                var timerTimeout = null
                owner.$on('hook:destroyed', function() {
                  return remove(owners, owner)
                })
                var forceRender = function forceRender(renderCompleted) {
                  for (var i = 0, l = owners.length; i < l; i++) {
                    owners[i].$forceUpdate()
                  }
                  if (renderCompleted) {
                    owners.length = 0
                    if (timerLoading !== null) {
                      clearTimeout(timerLoading)
                      timerLoading = null
                    }
                    if (timerTimeout !== null) {
                      clearTimeout(timerTimeout)
                      timerTimeout = null
                    }
                  }
                }
                var resolve = once(function(res) {
                  // cache resolved
                  factory.resolved = ensureCtor(res, baseCtor) // invoke callbacks only if this is not a synchronous resolve
                  // (async resolves are shimmed as synchronous during SSR)
                  if (!sync) {
                    forceRender(true)
                  } else {
                    owners.length = 0
                  }
                })
                var reject = once(function(reason) {
                  warn(
                    'Failed to resolve async component: ' +
                      String(factory) +
                      (reason ? '\nReason: ' + reason : '')
                  )
                  if (isDef(factory.errorComp)) {
                    factory.error = true
                    forceRender(true)
                  }
                })
                var res = factory(resolve, reject)
                if (isObject(res)) {
                  if (isPromise(res)) {
                    // () => Promise
                    if (isUndef(factory.resolved)) {
                      res.then(resolve, reject)
                    }
                  } else if (isPromise(res.component)) {
                    res.component.then(resolve, reject)
                    if (isDef(res.error)) {
                      factory.errorComp = ensureCtor(res.error, baseCtor)
                    }
                    if (isDef(res.loading)) {
                      factory.loadingComp = ensureCtor(res.loading, baseCtor)
                      if (res.delay === 0) {
                        factory.loading = true
                      } else {
                        timerLoading = setTimeout(function() {
                          timerLoading = null
                          if (
                            isUndef(factory.resolved) &&
                            isUndef(factory.error)
                          ) {
                            factory.loading = true
                            forceRender(false)
                          }
                        }, res.delay || 200)
                      }
                    }
                    if (isDef(res.timeout)) {
                      timerTimeout = setTimeout(function() {
                        timerTimeout = null
                        if (isUndef(factory.resolved)) {
                          reject('timeout (' + res.timeout + 'ms)')
                        }
                      }, res.timeout)
                    }
                  }
                }
                sync = false // return in case resolved synchronously
                return factory.loading ? factory.loadingComp : factory.resolved
              }
            }
            /*  */ function isAsyncPlaceholder(node) {
              return node.isComment && node.asyncFactory
            }
            /*  */ function getFirstComponentChild(children) {
              if (Array.isArray(children)) {
                for (var i = 0; i < children.length; i++) {
                  var c = children[i]
                  if (
                    isDef(c) &&
                    (isDef(c.componentOptions) || isAsyncPlaceholder(c))
                  ) {
                    return c
                  }
                }
              }
            }
            /*  */ /*  */ function initEvents(vm) {
              vm._events = Object.create(null)
              vm._hasHookEvent = false // init parent attached events
              var listeners = vm.$options._parentListeners
              if (listeners) {
                updateComponentListeners(vm, listeners)
              }
            }
            var target
            function add(event, fn) {
              target.$on(event, fn)
            }
            function remove$1(event, fn) {
              target.$off(event, fn)
            }
            function createOnceHandler(event, fn) {
              var _target = target
              return function onceHandler() {
                var res = fn.apply(null, arguments)
                if (res !== null) {
                  _target.$off(event, onceHandler)
                }
              }
            }
            function updateComponentListeners(vm, listeners, oldListeners) {
              target = vm
              updateListeners(
                listeners,
                oldListeners || {},
                add,
                remove$1,
                createOnceHandler,
                vm
              )
              target = undefined
            }
            function eventsMixin(Vue) {
              var hookRE = /^hook:/
              Vue.prototype.$on = function(event, fn) {
                var vm = this
                if (Array.isArray(event)) {
                  for (var i = 0, l = event.length; i < l; i++) {
                    vm.$on(event[i], fn)
                  }
                } else {
                  ;(vm._events[event] || (vm._events[event] = [])).push(fn) // optimize hook:event cost by using a boolean flag marked at registration
                  // instead of a hash lookup
                  if (hookRE.test(event)) {
                    vm._hasHookEvent = true
                  }
                }
                return vm
              }
              Vue.prototype.$once = function(event, fn) {
                var vm = this
                function on() {
                  vm.$off(event, on)
                  fn.apply(vm, arguments)
                }
                on.fn = fn
                vm.$on(event, on)
                return vm
              }
              Vue.prototype.$off = function(event, fn) {
                var vm = this // all
                if (!arguments.length) {
                  vm._events = Object.create(null)
                  return vm
                } // array of events
                if (Array.isArray(event)) {
                  for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {
                    vm.$off(event[i$1], fn)
                  }
                  return vm
                } // specific event
                var cbs = vm._events[event]
                if (!cbs) {
                  return vm
                }
                if (!fn) {
                  vm._events[event] = null
                  return vm
                } // specific handler
                var cb
                var i = cbs.length
                while (i--) {
                  cb = cbs[i]
                  if (cb === fn || cb.fn === fn) {
                    cbs.splice(i, 1)
                    break
                  }
                }
                return vm
              }
              Vue.prototype.$emit = function(event) {
                var vm = this
                {
                  var lowerCaseEvent = event.toLowerCase()
                  if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
                    tip(
                      'Event "' +
                        lowerCaseEvent +
                        '" is emitted in component ' +
                        formatComponentName(vm) +
                        ' but the handler is registered for "' +
                        event +
                        '". ' +
                        'Note that HTML attributes are case-insensitive and you cannot use ' +
                        'v-on to listen to camelCase events when using in-DOM templates. ' +
                        'You should probably use "' +
                        hyphenate(event) +
                        '" instead of "' +
                        event +
                        '".'
                    )
                  }
                }
                var cbs = vm._events[event]
                if (cbs) {
                  cbs = cbs.length > 1 ? toArray(cbs) : cbs
                  var args = toArray(arguments, 1)
                  var info = 'event handler for "' + event + '"'
                  for (var i = 0, l = cbs.length; i < l; i++) {
                    invokeWithErrorHandling(cbs[i], vm, args, vm, info)
                  }
                }
                return vm
              }
            }
            /*  */ var activeInstance = null
            var isUpdatingChildComponent = false
            function setActiveInstance(vm) {
              var prevActiveInstance = activeInstance
              activeInstance = vm
              return function() {
                activeInstance = prevActiveInstance
              }
            }
            function initLifecycle(vm) {
              var options = vm.$options // locate first non-abstract parent
              var parent = options.parent
              if (parent && !options['abstract']) {
                while (parent.$options['abstract'] && parent.$parent) {
                  parent = parent.$parent
                }
                parent.$children.push(vm)
              }
              vm.$parent = parent
              vm.$root = parent ? parent.$root : vm
              vm.$children = []
              vm.$refs = {}
              vm._watcher = null
              vm._inactive = null
              vm._directInactive = false
              vm._isMounted = false
              vm._isDestroyed = false
              vm._isBeingDestroyed = false
            }
            function lifecycleMixin(Vue) {
              Vue.prototype._update = function(vnode, hydrating) {
                var vm = this
                var prevEl = vm.$el
                var prevVnode = vm._vnode
                var restoreActiveInstance = setActiveInstance(vm)
                vm._vnode = vnode // Vue.prototype.__patch__ is injected in entry points
                // based on the rendering backend used.
                if (!prevVnode) {
                  // initial render
                  vm.$el = vm.__patch__(
                    vm.$el,
                    vnode,
                    hydrating,
                    false /* removeOnly */
                  )
                } else {
                  // updates
                  vm.$el = vm.__patch__(prevVnode, vnode)
                }
                restoreActiveInstance() // update __vue__ reference
                if (prevEl) {
                  prevEl.__vue__ = null
                }
                if (vm.$el) {
                  vm.$el.__vue__ = vm
                } // if parent is an HOC, update its $el as well
                if (
                  vm.$vnode &&
                  vm.$parent &&
                  vm.$vnode === vm.$parent._vnode
                ) {
                  vm.$parent.$el = vm.$el
                } // updated hook is called by the scheduler to ensure that children are
                // updated in a parent's updated hook.
              }
              Vue.prototype.$forceUpdate = function() {
                var vm = this
                if (vm._watcher) {
                  vm._watcher.update()
                }
              }
              Vue.prototype.$destroy = function() {
                var vm = this
                if (vm._isBeingDestroyed) {
                  return
                }
                callHook(vm, 'beforeDestroy')
                vm._isBeingDestroyed = true // remove self from parent
                var parent = vm.$parent
                if (
                  parent &&
                  !parent._isBeingDestroyed &&
                  !vm.$options['abstract']
                ) {
                  remove(parent.$children, vm)
                } // teardown watchers
                if (vm._watcher) {
                  vm._watcher.teardown()
                }
                var i = vm._watchers.length
                while (i--) {
                  vm._watchers[i].teardown()
                } // remove reference from data ob
                // frozen object may not have observer.
                if (vm._data.__ob__) {
                  vm._data.__ob__.vmCount--
                } // call the last hook...
                vm._isDestroyed = true // invoke destroy hooks on current rendered tree
                vm.__patch__(vm._vnode, null) // fire destroyed hook
                callHook(vm, 'destroyed') // turn off all instance listeners.
                vm.$off() // remove __vue__ reference
                if (vm.$el) {
                  vm.$el.__vue__ = null
                } // release circular reference (#6759)
                if (vm.$vnode) {
                  vm.$vnode.parent = null
                }
              }
            }
            function mountComponent(vm, el, hydrating) {
              vm.$el = el
              if (!vm.$options.render) {
                vm.$options.render = createEmptyVNode
                {
                  /* istanbul ignore if */ if (
                    (vm.$options.template &&
                      vm.$options.template.charAt(0) !== '#') ||
                    vm.$options.el ||
                    el
                  ) {
                    warn(
                      'You are using the runtime-only build of Vue where the template ' +
                        'compiler is not available. Either pre-compile the templates into ' +
                        'render functions, or use the compiler-included build.',
                      vm
                    )
                  } else {
                    warn(
                      'Failed to mount component: template or render function not defined.',
                      vm
                    )
                  }
                }
              }
              callHook(vm, 'beforeMount')
              var updateComponent
              /* istanbul ignore if */ if (config.performance && mark) {
                updateComponent = function updateComponent() {
                  var name = vm._name
                  var id = vm._uid
                  var startTag = 'vue-perf-start:' + id
                  var endTag = 'vue-perf-end:' + id
                  mark(startTag)
                  var vnode = vm._render()
                  mark(endTag)
                  measure('vue ' + name + ' render', startTag, endTag)
                  mark(startTag)
                  vm._update(vnode, hydrating)
                  mark(endTag)
                  measure('vue ' + name + ' patch', startTag, endTag)
                }
              } else {
                updateComponent = function updateComponent() {
                  vm._update(vm._render(), hydrating)
                }
              } // we set this to vm._watcher inside the watcher's constructor
              // since the watcher's initial patch may call $forceUpdate (e.g. inside child
              // component's mounted hook), which relies on vm._watcher being already defined
              new Watcher(
                vm,
                updateComponent,
                noop,
                {
                  before: function before() {
                    if (vm._isMounted && !vm._isDestroyed) {
                      callHook(vm, 'beforeUpdate')
                    }
                  }
                },
                true /* isRenderWatcher */
              )
              hydrating = false // manually mounted instance, call mounted on self
              // mounted is called for render-created child components in its inserted hook
              if (vm.$vnode == null) {
                vm._isMounted = true
                callHook(vm, 'mounted')
              }
              return vm
            }
            function updateChildComponent(
              vm,
              propsData,
              listeners,
              parentVnode,
              renderChildren
            ) {
              {
                isUpdatingChildComponent = true
              } // determine whether component has slot children
              // we need to do this before overwriting $options._renderChildren.
              // check if there are dynamic scopedSlots (hand-written or compiled but with
              // dynamic slot names). Static scoped slots compiled from template has the
              // "$stable" marker.
              var newScopedSlots = parentVnode.data.scopedSlots
              var oldScopedSlots = vm.$scopedSlots
              var hasDynamicScopedSlot = !!(
                (newScopedSlots && !newScopedSlots.$stable) ||
                (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||
                (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)
              ) // Any static slot children from the parent may have changed during parent's
              // update. Dynamic scoped slots may also have changed. In such cases, a forced
              // update is necessary to ensure correctness.
              var needsForceUpdate = !!(
                renderChildren || // has new static slots
                vm.$options._renderChildren || // has old static slots
                hasDynamicScopedSlot
              )
              vm.$options._parentVnode = parentVnode
              vm.$vnode = parentVnode // update vm's placeholder node without re-render
              if (vm._vnode) {
                // update child tree's parent
                vm._vnode.parent = parentVnode
              }
              vm.$options._renderChildren = renderChildren // update $attrs and $listeners hash
              // these are also reactive so they may trigger child update if the child
              // used them during render
              vm.$attrs = parentVnode.data.attrs || emptyObject
              vm.$listeners = listeners || emptyObject // update props
              if (propsData && vm.$options.props) {
                toggleObserving(false)
                var props = vm._props
                var propKeys = vm.$options._propKeys || []
                for (var i = 0; i < propKeys.length; i++) {
                  var key = propKeys[i]
                  var propOptions = vm.$options.props // wtf flow?
                  props[key] = validateProp(key, propOptions, propsData, vm)
                }
                toggleObserving(true) // keep a copy of raw propsData
                vm.$options.propsData = propsData
              } // update listeners
              listeners = listeners || emptyObject
              var oldListeners = vm.$options._parentListeners
              vm.$options._parentListeners = listeners
              updateComponentListeners(vm, listeners, oldListeners) // resolve slots + force update if has children
              if (needsForceUpdate) {
                vm.$slots = resolveSlots(renderChildren, parentVnode.context)
                vm.$forceUpdate()
              }
              {
                isUpdatingChildComponent = false
              }
            }
            function isInInactiveTree(vm) {
              while (vm && (vm = vm.$parent)) {
                if (vm._inactive) {
                  return true
                }
              }
              return false
            }
            function activateChildComponent(vm, direct) {
              if (direct) {
                vm._directInactive = false
                if (isInInactiveTree(vm)) {
                  return
                }
              } else if (vm._directInactive) {
                return
              }
              if (vm._inactive || vm._inactive === null) {
                vm._inactive = false
                for (var i = 0; i < vm.$children.length; i++) {
                  activateChildComponent(vm.$children[i])
                }
                callHook(vm, 'activated')
              }
            }
            function deactivateChildComponent(vm, direct) {
              if (direct) {
                vm._directInactive = true
                if (isInInactiveTree(vm)) {
                  return
                }
              }
              if (!vm._inactive) {
                vm._inactive = true
                for (var i = 0; i < vm.$children.length; i++) {
                  deactivateChildComponent(vm.$children[i])
                }
                callHook(vm, 'deactivated')
              }
            }
            function callHook(vm, hook) {
              // #7573 disable dep collection when invoking lifecycle hooks
              pushTarget()
              var handlers = vm.$options[hook]
              var info = hook + ' hook'
              if (handlers) {
                for (var i = 0, j = handlers.length; i < j; i++) {
                  invokeWithErrorHandling(handlers[i], vm, null, vm, info)
                }
              }
              if (vm._hasHookEvent) {
                vm.$emit('hook:' + hook)
              }
              popTarget()
            }
            /*  */ var MAX_UPDATE_COUNT = 100
            var queue = []
            var activatedChildren = []
            var has = {}
            var circular = {}
            var waiting = false
            var flushing = false
            var index = 0
            /**
             * Reset the scheduler's state.
             */ function resetSchedulerState() {
              index = queue.length = activatedChildren.length = 0
              has = {}
              {
                circular = {}
              }
              waiting = flushing = false
            } // Async edge case #6566 requires saving the timestamp when event listeners are
            // attached. However, calling performance.now() has a perf overhead especially
            // if the page has thousands of event listeners. Instead, we take a timestamp
            // every time the scheduler flushes and use that for all event listeners
            // attached during that flush.
            var currentFlushTimestamp = 0 // Async edge case fix requires storing an event listener's attach timestamp.
            var getNow = Date.now // Determine what event timestamp the browser is using. Annoyingly, the
            // timestamp can either be hi-res (relative to page load) or low-res
            // (relative to UNIX epoch), so in order to compare time we have to use the
            // same timestamp type when saving the flush timestamp.
            // All IE versions use low-res event timestamps, and have problematic clock
            // implementations (#9632)
            if (inBrowser && !isIE) {
              var performance = window.performance
              if (
                performance &&
                typeof performance.now === 'function' &&
                getNow() > document.createEvent('Event').timeStamp
              ) {
                // if the event timestamp, although evaluated AFTER the Date.now(), is
                // smaller than it, it means the event is using a hi-res timestamp,
                // and we need to use the hi-res version for event listener timestamps as
                // well.
                getNow = function getNow() {
                  return performance.now()
                }
              }
            }
            /**
             * Flush both queues and run the watchers.
             */ function flushSchedulerQueue() {
              currentFlushTimestamp = getNow()
              flushing = true
              var watcher, id // Sort queue before flush.
              // This ensures that:
              // 1. Components are updated from parent to child. (because parent is always
              //    created before the child)
              // 2. A component's user watchers are run before its render watcher (because
              //    user watchers are created before the render watcher)
              // 3. If a component is destroyed during a parent component's watcher run,
              //    its watchers can be skipped.
              queue.sort(function(a, b) {
                return a.id - b.id
              }) // do not cache length because more watchers might be pushed
              // as we run existing watchers
              for (index = 0; index < queue.length; index++) {
                watcher = queue[index]
                if (watcher.before) {
                  watcher.before()
                }
                id = watcher.id
                has[id] = null
                watcher.run() // in dev build, check and stop circular updates.
                if (has[id] != null) {
                  circular[id] = (circular[id] || 0) + 1
                  if (circular[id] > MAX_UPDATE_COUNT) {
                    warn(
                      'You may have an infinite update loop ' +
                        (watcher.user
                          ? 'in watcher with expression "' +
                            watcher.expression +
                            '"'
                          : 'in a component render function.'),
                      watcher.vm
                    )
                    break
                  }
                }
              } // keep copies of post queues before resetting state
              var activatedQueue = activatedChildren.slice()
              var updatedQueue = queue.slice()
              resetSchedulerState() // call component updated and activated hooks
              callActivatedHooks(activatedQueue)
              callUpdatedHooks(updatedQueue) // devtool hook
              /* istanbul ignore if */ if (devtools && config.devtools) {
                devtools.emit('flush')
              }
            }
            function callUpdatedHooks(queue) {
              var i = queue.length
              while (i--) {
                var watcher = queue[i]
                var vm = watcher.vm
                if (
                  vm._watcher === watcher &&
                  vm._isMounted &&
                  !vm._isDestroyed
                ) {
                  callHook(vm, 'updated')
                }
              }
            }
            /**
             * Queue a kept-alive component that was activated during patch.
             * The queue will be processed after the entire tree has been patched.
             */ function queueActivatedComponent(vm) {
              // setting _inactive to false here so that a render function can
              // rely on checking whether it's in an inactive tree (e.g. router-view)
              vm._inactive = false
              activatedChildren.push(vm)
            }
            function callActivatedHooks(queue) {
              for (var i = 0; i < queue.length; i++) {
                queue[i]._inactive = true
                activateChildComponent(queue[i], true /* true */)
              }
            }
            /**
             * Push a watcher into the watcher queue.
             * Jobs with duplicate IDs will be skipped unless it's
             * pushed when the queue is being flushed.
             */ function queueWatcher(watcher) {
              var id = watcher.id
              if (has[id] == null) {
                has[id] = true
                if (!flushing) {
                  queue.push(watcher)
                } else {
                  // if already flushing, splice the watcher based on its id
                  // if already past its id, it will be run next immediately.
                  var i = queue.length - 1
                  while (i > index && queue[i].id > watcher.id) {
                    i--
                  }
                  queue.splice(i + 1, 0, watcher)
                } // queue the flush
                if (!waiting) {
                  waiting = true
                  if (!config.async) {
                    flushSchedulerQueue()
                    return
                  }
                  nextTick(flushSchedulerQueue)
                }
              }
            }
            /*  */ var uid$2 = 0
            /**
             * A watcher parses an expression, collects dependencies,
             * and fires callback when the expression value changes.
             * This is used for both the $watch() api and directives.
             */ var Watcher = function Watcher(
              vm,
              expOrFn,
              cb,
              options,
              isRenderWatcher
            ) {
              this.vm = vm
              if (isRenderWatcher) {
                vm._watcher = this
              }
              vm._watchers.push(this) // options
              if (options) {
                this.deep = !!options.deep
                this.user = !!options.user
                this.lazy = !!options.lazy
                this.sync = !!options.sync
                this.before = options.before
              } else {
                this.deep = this.user = this.lazy = this.sync = false
              }
              this.cb = cb
              this.id = ++uid$2 // uid for batching
              this.active = true
              this.dirty = this.lazy // for lazy watchers
              this.deps = []
              this.newDeps = []
              this.depIds = new _Set()
              this.newDepIds = new _Set()
              this.expression = expOrFn.toString() // parse expression for getter
              if (typeof expOrFn === 'function') {
                this.getter = expOrFn
              } else {
                this.getter = parsePath(expOrFn)
                if (!this.getter) {
                  this.getter = noop
                  warn(
                    'Failed watching path: "' +
                      expOrFn +
                      '" ' +
                      'Watcher only accepts simple dot-delimited paths. ' +
                      'For full control, use a function instead.',
                    vm
                  )
                }
              }
              this.value = this.lazy ? undefined : this.get()
            }
            /**
             * Evaluate the getter, and re-collect dependencies.
             */ Watcher.prototype.get = function get() {
              pushTarget(this)
              var value
              var vm = this.vm
              try {
                value = this.getter.call(vm, vm)
              } catch (e) {
                if (this.user) {
                  handleError(
                    e,
                    vm,
                    'getter for watcher "' + this.expression + '"'
                  )
                } else {
                  throw e
                }
              } finally {
                // "touch" every property so they are all tracked as
                // dependencies for deep watching
                if (this.deep) {
                  traverse(value)
                }
                popTarget()
                this.cleanupDeps()
              }
              return value
            }
            /**
             * Add a dependency to this directive.
             */ Watcher.prototype.addDep = function addDep(dep) {
              var id = dep.id
              if (!this.newDepIds.has(id)) {
                this.newDepIds.add(id)
                this.newDeps.push(dep)
                if (!this.depIds.has(id)) {
                  dep.addSub(this)
                }
              }
            }
            /**
             * Clean up for dependency collection.
             */ Watcher.prototype.cleanupDeps = function cleanupDeps() {
              var i = this.deps.length
              while (i--) {
                var dep = this.deps[i]
                if (!this.newDepIds.has(dep.id)) {
                  dep.removeSub(this)
                }
              }
              var tmp = this.depIds
              this.depIds = this.newDepIds
              this.newDepIds = tmp
              this.newDepIds.clear()
              tmp = this.deps
              this.deps = this.newDeps
              this.newDeps = tmp
              this.newDeps.length = 0
            }
            /**
             * Subscriber interface.
             * Will be called when a dependency changes.
             */ Watcher.prototype.update = function update() {
              /* istanbul ignore else */ if (this.lazy) {
                this.dirty = true
              } else if (this.sync) {
                this.run()
              } else {
                queueWatcher(this)
              }
            }
            /**
             * Scheduler job interface.
             * Will be called by the scheduler.
             */ Watcher.prototype.run = function run() {
              if (this.active) {
                var value = this.get()
                if (
                  value !== this.value || // Deep watchers and watchers on Object/Arrays should fire even
                  // when the value is the same, because the value may
                  // have mutated.
                  isObject(value) ||
                  this.deep
                ) {
                  // set new value
                  var oldValue = this.value
                  this.value = value
                  if (this.user) {
                    try {
                      this.cb.call(this.vm, value, oldValue)
                    } catch (e) {
                      handleError(
                        e,
                        this.vm,
                        'callback for watcher "' + this.expression + '"'
                      )
                    }
                  } else {
                    this.cb.call(this.vm, value, oldValue)
                  }
                }
              }
            }
            /**
             * Evaluate the value of the watcher.
             * This only gets called for lazy watchers.
             */ Watcher.prototype.evaluate = function evaluate() {
              this.value = this.get()
              this.dirty = false
            }
            /**
             * Depend on all deps collected by this watcher.
             */ Watcher.prototype.depend = function depend() {
              var i = this.deps.length
              while (i--) {
                this.deps[i].depend()
              }
            }
            /**
             * Remove self from all dependencies' subscriber list.
             */ Watcher.prototype.teardown = function teardown() {
              if (this.active) {
                // remove self from vm's watcher list
                // this is a somewhat expensive operation so we skip it
                // if the vm is being destroyed.
                if (!this.vm._isBeingDestroyed) {
                  remove(this.vm._watchers, this)
                }
                var i = this.deps.length
                while (i--) {
                  this.deps[i].removeSub(this)
                }
                this.active = false
              }
            }
            /*  */ var sharedPropertyDefinition = {
              enumerable: true,
              configurable: true,
              get: noop,
              set: noop
            }
            function proxy(target, sourceKey, key) {
              sharedPropertyDefinition.get = function proxyGetter() {
                return this[sourceKey][key]
              }
              sharedPropertyDefinition.set = function proxySetter(val) {
                this[sourceKey][key] = val
              }
              Object.defineProperty(target, key, sharedPropertyDefinition)
            }
            function initState(vm) {
              vm._watchers = []
              var opts = vm.$options
              if (opts.props) {
                initProps(vm, opts.props)
              }
              if (opts.methods) {
                initMethods(vm, opts.methods)
              }
              if (opts.data) {
                initData(vm)
              } else {
                observe((vm._data = {}), true /* asRootData */)
              }
              if (opts.computed) {
                initComputed(vm, opts.computed)
              }
              if (opts.watch && opts.watch !== nativeWatch) {
                initWatch(vm, opts.watch)
              }
            }
            function initProps(vm, propsOptions) {
              var propsData = vm.$options.propsData || {}
              var props = (vm._props = {}) // cache prop keys so that future props updates can iterate using Array
              // instead of dynamic object key enumeration.
              var keys = (vm.$options._propKeys = [])
              var isRoot = !vm.$parent // root instance props should be converted
              if (!isRoot) {
                toggleObserving(false)
              }
              var loop = function loop(key) {
                keys.push(key)
                var value = validateProp(key, propsOptions, propsData, vm)
                /* istanbul ignore else */ {
                  var hyphenatedKey = hyphenate(key)
                  if (
                    isReservedAttribute(hyphenatedKey) ||
                    config.isReservedAttr(hyphenatedKey)
                  ) {
                    warn(
                      '"' +
                        hyphenatedKey +
                        '" is a reserved attribute and cannot be used as component prop.',
                      vm
                    )
                  }
                  defineReactive$$1(props, key, value, function() {
                    if (!isRoot && !isUpdatingChildComponent) {
                      warn(
                        'Avoid mutating a prop directly since the value will be ' +
                          'overwritten whenever the parent component re-renders. ' +
                          "Instead, use a data or computed property based on the prop's " +
                          'value. Prop being mutated: "' +
                          key +
                          '"',
                        vm
                      )
                    }
                  })
                } // static props are already proxied on the component's prototype
                // during Vue.extend(). We only need to proxy props defined at
                // instantiation here.
                if (!(key in vm)) {
                  proxy(vm, '_props', key)
                }
              }
              for (var key in propsOptions) {
                loop(key)
              }
              toggleObserving(true)
            }
            function initData(vm) {
              var data = vm.$options.data
              data = vm._data =
                typeof data === 'function' ? getData(data, vm) : data || {}
              if (!isPlainObject(data)) {
                data = {}
                warn(
                  'data functions should return an object:\n' +
                    'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',
                  vm
                )
              } // proxy data on instance
              var keys = Object.keys(data)
              var props = vm.$options.props
              var methods = vm.$options.methods
              var i = keys.length
              while (i--) {
                var key = keys[i]
                {
                  if (methods && hasOwn(methods, key)) {
                    warn(
                      'Method "' +
                        key +
                        '" has already been defined as a data property.',
                      vm
                    )
                  }
                }
                if (props && hasOwn(props, key)) {
                  warn(
                    'The data property "' +
                      key +
                      '" is already declared as a prop. ' +
                      'Use prop default value instead.',
                    vm
                  )
                } else if (!isReserved(key)) {
                  proxy(vm, '_data', key)
                }
              } // observe data
              observe(data, true /* asRootData */)
            }
            function getData(data, vm) {
              // #7573 disable dep collection when invoking data getters
              pushTarget()
              try {
                return data.call(vm, vm)
              } catch (e) {
                handleError(e, vm, 'data()')
                return {}
              } finally {
                popTarget()
              }
            }
            var computedWatcherOptions = { lazy: true }
            function initComputed(vm, computed) {
              // $flow-disable-line
              var watchers = (vm._computedWatchers = Object.create(null)) // computed properties are just getters during SSR
              var isSSR = isServerRendering()
              for (var key in computed) {
                var userDef = computed[key]
                var getter =
                  typeof userDef === 'function' ? userDef : userDef.get
                if (getter == null) {
                  warn(
                    'Getter is missing for computed property "' + key + '".',
                    vm
                  )
                }
                if (!isSSR) {
                  // create internal watcher for the computed property.
                  watchers[key] = new Watcher(
                    vm,
                    getter || noop,
                    noop,
                    computedWatcherOptions
                  )
                } // component-defined computed properties are already defined on the
                // component prototype. We only need to define computed properties defined
                // at instantiation here.
                if (!(key in vm)) {
                  defineComputed(vm, key, userDef)
                } else {
                  if (key in vm.$data) {
                    warn(
                      'The computed property "' +
                        key +
                        '" is already defined in data.',
                      vm
                    )
                  } else if (vm.$options.props && key in vm.$options.props) {
                    warn(
                      'The computed property "' +
                        key +
                        '" is already defined as a prop.',
                      vm
                    )
                  }
                }
              }
            }
            function defineComputed(target, key, userDef) {
              var shouldCache = !isServerRendering()
              if (typeof userDef === 'function') {
                sharedPropertyDefinition.get = shouldCache
                  ? createComputedGetter(key)
                  : createGetterInvoker(userDef)
                sharedPropertyDefinition.set = noop
              } else {
                sharedPropertyDefinition.get = userDef.get
                  ? shouldCache && userDef.cache !== false
                    ? createComputedGetter(key)
                    : createGetterInvoker(userDef.get)
                  : noop
                sharedPropertyDefinition.set = userDef.set || noop
              }
              if (sharedPropertyDefinition.set === noop) {
                sharedPropertyDefinition.set = function() {
                  warn(
                    'Computed property "' +
                      key +
                      '" was assigned to but it has no setter.',
                    this
                  )
                }
              }
              Object.defineProperty(target, key, sharedPropertyDefinition)
            }
            function createComputedGetter(key) {
              return function computedGetter() {
                var watcher =
                  this._computedWatchers && this._computedWatchers[key]
                if (watcher) {
                  if (watcher.dirty) {
                    watcher.evaluate()
                  }
                  if (Dep.target) {
                    watcher.depend()
                  }
                  return watcher.value
                }
              }
            }
            function createGetterInvoker(fn) {
              return function computedGetter() {
                return fn.call(this, this)
              }
            }
            function initMethods(vm, methods) {
              var props = vm.$options.props
              for (var key in methods) {
                {
                  if (typeof methods[key] !== 'function') {
                    warn(
                      'Method "' +
                        key +
                        '" has type "' +
                        (0, _typeof3['default'])(methods[key]) +
                        '" in the component definition. ' +
                        'Did you reference the function correctly?',
                      vm
                    )
                  }
                  if (props && hasOwn(props, key)) {
                    warn(
                      'Method "' +
                        key +
                        '" has already been defined as a prop.',
                      vm
                    )
                  }
                  if (key in vm && isReserved(key)) {
                    warn(
                      'Method "' +
                        key +
                        '" conflicts with an existing Vue instance method. ' +
                        'Avoid defining component methods that start with _ or $.'
                    )
                  }
                }
                vm[key] =
                  typeof methods[key] !== 'function'
                    ? noop
                    : bind(methods[key], vm)
              }
            }
            function initWatch(vm, watch) {
              for (var key in watch) {
                var handler = watch[key]
                if (Array.isArray(handler)) {
                  for (var i = 0; i < handler.length; i++) {
                    createWatcher(vm, key, handler[i])
                  }
                } else {
                  createWatcher(vm, key, handler)
                }
              }
            }
            function createWatcher(vm, expOrFn, handler, options) {
              if (isPlainObject(handler)) {
                options = handler
                handler = handler.handler
              }
              if (typeof handler === 'string') {
                handler = vm[handler]
              }
              return vm.$watch(expOrFn, handler, options)
            }
            function stateMixin(Vue) {
              // flow somehow has problems with directly declared definition object
              // when using Object.defineProperty, so we have to procedurally build up
              // the object here.
              var dataDef = {}
              dataDef.get = function() {
                return this._data
              }
              var propsDef = {}
              propsDef.get = function() {
                return this._props
              }
              {
                dataDef.set = function() {
                  warn(
                    'Avoid replacing instance root $data. ' +
                      'Use nested data properties instead.',
                    this
                  )
                }
                propsDef.set = function() {
                  warn('$props is readonly.', this)
                }
              }
              Object.defineProperty(Vue.prototype, '$data', dataDef)
              Object.defineProperty(Vue.prototype, '$props', propsDef)
              Vue.prototype.$set = set
              Vue.prototype.$delete = del
              Vue.prototype.$watch = function(expOrFn, cb, options) {
                var vm = this
                if (isPlainObject(cb)) {
                  return createWatcher(vm, expOrFn, cb, options)
                }
                options = options || {}
                options.user = true
                var watcher = new Watcher(vm, expOrFn, cb, options)
                if (options.immediate) {
                  try {
                    cb.call(vm, watcher.value)
                  } catch (error) {
                    handleError(
                      error,
                      vm,
                      'callback for immediate watcher "' +
                        watcher.expression +
                        '"'
                    )
                  }
                }
                return function unwatchFn() {
                  watcher.teardown()
                }
              }
            }
            /*  */ var uid$3 = 0
            function initMixin(Vue) {
              Vue.prototype._init = function(options) {
                var vm = this // a uid
                vm._uid = uid$3++
                var startTag, endTag
                /* istanbul ignore if */ if (config.performance && mark) {
                  startTag = 'vue-perf-start:' + vm._uid
                  endTag = 'vue-perf-end:' + vm._uid
                  mark(startTag)
                } // a flag to avoid this being observed
                vm._isVue = true // merge options
                if (options && options._isComponent) {
                  // optimize internal component instantiation
                  // since dynamic options merging is pretty slow, and none of the
                  // internal component options needs special treatment.
                  initInternalComponent(vm, options)
                } else {
                  vm.$options = mergeOptions(
                    resolveConstructorOptions(vm.constructor),
                    options || {},
                    vm
                  )
                }
                /* istanbul ignore else */ {
                  initProxy(vm)
                } // expose real self
                vm._self = vm
                initLifecycle(vm)
                initEvents(vm)
                initRender(vm)
                callHook(vm, 'beforeCreate')
                initInjections(vm) // resolve injections before data/props
                initState(vm)
                initProvide(vm) // resolve provide after data/props
                callHook(vm, 'created')
                /* istanbul ignore if */ if (config.performance && mark) {
                  vm._name = formatComponentName(vm, false)
                  mark(endTag)
                  measure('vue ' + vm._name + ' init', startTag, endTag)
                }
                if (vm.$options.el) {
                  vm.$mount(vm.$options.el)
                }
              }
            }
            function initInternalComponent(vm, options) {
              var opts = (vm.$options = Object.create(vm.constructor.options)) // doing this because it's faster than dynamic enumeration.
              var parentVnode = options._parentVnode
              opts.parent = options.parent
              opts._parentVnode = parentVnode
              var vnodeComponentOptions = parentVnode.componentOptions
              opts.propsData = vnodeComponentOptions.propsData
              opts._parentListeners = vnodeComponentOptions.listeners
              opts._renderChildren = vnodeComponentOptions.children
              opts._componentTag = vnodeComponentOptions.tag
              if (options.render) {
                opts.render = options.render
                opts.staticRenderFns = options.staticRenderFns
              }
            }
            function resolveConstructorOptions(Ctor) {
              var options = Ctor.options
              if (Ctor['super']) {
                var superOptions = resolveConstructorOptions(Ctor['super'])
                var cachedSuperOptions = Ctor.superOptions
                if (superOptions !== cachedSuperOptions) {
                  // super option changed,
                  // need to resolve new options.
                  Ctor.superOptions = superOptions // check if there are any late-modified/attached options (#4976)
                  var modifiedOptions = resolveModifiedOptions(Ctor) // update base extend options
                  if (modifiedOptions) {
                    extend(Ctor.extendOptions, modifiedOptions)
                  }
                  options = Ctor.options = mergeOptions(
                    superOptions,
                    Ctor.extendOptions
                  )
                  if (options.name) {
                    options.components[options.name] = Ctor
                  }
                }
              }
              return options
            }
            function resolveModifiedOptions(Ctor) {
              var modified
              var latest = Ctor.options
              var sealed = Ctor.sealedOptions
              for (var key in latest) {
                if (latest[key] !== sealed[key]) {
                  if (!modified) {
                    modified = {}
                  }
                  modified[key] = latest[key]
                }
              }
              return modified
            }
            function Vue(options) {
              if (!(this instanceof Vue)) {
                warn(
                  'Vue is a constructor and should be called with the `new` keyword'
                )
              }
              this._init(options)
            }
            initMixin(Vue)
            stateMixin(Vue)
            eventsMixin(Vue)
            lifecycleMixin(Vue)
            renderMixin(Vue)
            /*  */ function initUse(Vue) {
              Vue.use = function(plugin) {
                var installedPlugins =
                  this._installedPlugins || (this._installedPlugins = [])
                if (installedPlugins.indexOf(plugin) > -1) {
                  return this
                } // additional parameters
                var args = toArray(arguments, 1)
                args.unshift(this)
                if (typeof plugin.install === 'function') {
                  plugin.install.apply(plugin, args)
                } else if (typeof plugin === 'function') {
                  plugin.apply(null, args)
                }
                installedPlugins.push(plugin)
                return this
              }
            }
            /*  */ function initMixin$1(Vue) {
              Vue.mixin = function(mixin) {
                this.options = mergeOptions(this.options, mixin)
                return this
              }
            }
            /*  */ function initExtend(Vue) {
              /**
               * Each instance constructor, including Vue, has a unique
               * cid. This enables us to create wrapped "child
               * constructors" for prototypal inheritance and cache them.
               */ Vue.cid = 0
              var cid = 1
              /**
               * Class inheritance
               */ Vue.extend = function(extendOptions) {
                extendOptions = extendOptions || {}
                var Super = this
                var SuperId = Super.cid
                var cachedCtors =
                  extendOptions._Ctor || (extendOptions._Ctor = {})
                if (cachedCtors[SuperId]) {
                  return cachedCtors[SuperId]
                }
                var name = extendOptions.name || Super.options.name
                if (name) {
                  validateComponentName(name)
                }
                var Sub = function VueComponent(options) {
                  this._init(options)
                }
                Sub.prototype = Object.create(Super.prototype)
                Sub.prototype.constructor = Sub
                Sub.cid = cid++
                Sub.options = mergeOptions(Super.options, extendOptions)
                Sub['super'] = Super // For props and computed properties, we define the proxy getters on
                // the Vue instances at extension time, on the extended prototype. This
                // avoids Object.defineProperty calls for each instance created.
                if (Sub.options.props) {
                  initProps$1(Sub)
                }
                if (Sub.options.computed) {
                  initComputed$1(Sub)
                } // allow further extension/mixin/plugin usage
                Sub.extend = Super.extend
                Sub.mixin = Super.mixin
                Sub.use = Super.use // create asset registers, so extended classes
                // can have their private assets too.
                ASSET_TYPES.forEach(function(type) {
                  Sub[type] = Super[type]
                }) // enable recursive self-lookup
                if (name) {
                  Sub.options.components[name] = Sub
                } // keep a reference to the super options at extension time.
                // later at instantiation we can check if Super's options have
                // been updated.
                Sub.superOptions = Super.options
                Sub.extendOptions = extendOptions
                Sub.sealedOptions = extend({}, Sub.options) // cache constructor
                cachedCtors[SuperId] = Sub
                return Sub
              }
            }
            function initProps$1(Comp) {
              var props = Comp.options.props
              for (var key in props) {
                proxy(Comp.prototype, '_props', key)
              }
            }
            function initComputed$1(Comp) {
              var computed = Comp.options.computed
              for (var key in computed) {
                defineComputed(Comp.prototype, key, computed[key])
              }
            }
            /*  */ function initAssetRegisters(Vue) {
              /**
               * Create asset registration methods.
               */ ASSET_TYPES.forEach(function(type) {
                Vue[type] = function(id, definition) {
                  if (!definition) {
                    return this.options[type + 's'][id]
                  } else {
                    /* istanbul ignore if */ if (type === 'component') {
                      validateComponentName(id)
                    }
                    if (type === 'component' && isPlainObject(definition)) {
                      definition.name = definition.name || id
                      definition = this.options._base.extend(definition)
                    }
                    if (
                      type === 'directive' &&
                      typeof definition === 'function'
                    ) {
                      definition = { bind: definition, update: definition }
                    }
                    this.options[type + 's'][id] = definition
                    return definition
                  }
                }
              })
            }
            /*  */ function getComponentName(opts) {
              return opts && (opts.Ctor.options.name || opts.tag)
            }
            function matches(pattern, name) {
              if (Array.isArray(pattern)) {
                return pattern.indexOf(name) > -1
              } else if (typeof pattern === 'string') {
                return pattern.split(',').indexOf(name) > -1
              } else if (isRegExp(pattern)) {
                return pattern.test(name)
              }
              /* istanbul ignore next */ return false
            }
            function pruneCache(keepAliveInstance, filter) {
              var cache = keepAliveInstance.cache
              var keys = keepAliveInstance.keys
              var _vnode = keepAliveInstance._vnode
              for (var key in cache) {
                var cachedNode = cache[key]
                if (cachedNode) {
                  var name = getComponentName(cachedNode.componentOptions)
                  if (name && !filter(name)) {
                    pruneCacheEntry(cache, key, keys, _vnode)
                  }
                }
              }
            }
            function pruneCacheEntry(cache, key, keys, current) {
              var cached$$1 = cache[key]
              if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {
                cached$$1.componentInstance.$destroy()
              }
              cache[key] = null
              remove(keys, key)
            }
            var patternTypes = [String, RegExp, Array]
            var KeepAlive = {
              name: 'keep-alive',
              abstract: true,
              props: {
                include: patternTypes,
                exclude: patternTypes,
                max: [String, Number]
              },
              created: function created() {
                this.cache = Object.create(null)
                this.keys = []
              },
              destroyed: function destroyed() {
                for (var key in this.cache) {
                  pruneCacheEntry(this.cache, key, this.keys)
                }
              },
              mounted: function mounted() {
                var this$1 = this
                this.$watch('include', function(val) {
                  pruneCache(this$1, function(name) {
                    return matches(val, name)
                  })
                })
                this.$watch('exclude', function(val) {
                  pruneCache(this$1, function(name) {
                    return !matches(val, name)
                  })
                })
              },
              render: function render() {
                var slot = this.$slots['default']
                var vnode = getFirstComponentChild(slot)
                var componentOptions = vnode && vnode.componentOptions
                if (componentOptions) {
                  // check pattern
                  var name = getComponentName(componentOptions)
                  var ref = this
                  var include = ref.include
                  var exclude = ref.exclude
                  if (
                    // not included
                    (include && (!name || !matches(include, name))) || // excluded
                    (exclude && name && matches(exclude, name))
                  ) {
                    return vnode
                  }
                  var ref$1 = this
                  var cache = ref$1.cache
                  var keys = ref$1.keys
                  var key =
                    vnode.key == null // same constructor may get registered as different local components
                      ? // so cid alone is not enough (#3269)
                        componentOptions.Ctor.cid +
                        (componentOptions.tag
                          ? '::' + componentOptions.tag
                          : '')
                      : vnode.key
                  if (cache[key]) {
                    vnode.componentInstance = cache[key].componentInstance // make current key freshest
                    remove(keys, key)
                    keys.push(key)
                  } else {
                    cache[key] = vnode
                    keys.push(key) // prune oldest entry
                    if (this.max && keys.length > parseInt(this.max)) {
                      pruneCacheEntry(cache, keys[0], keys, this._vnode)
                    }
                  }
                  vnode.data.keepAlive = true
                }
                return vnode || (slot && slot[0])
              }
            }
            var builtInComponents = { KeepAlive: KeepAlive }
            /*  */ function initGlobalAPI(Vue) {
              // config
              var configDef = {}
              configDef.get = function() {
                return config
              }
              {
                configDef.set = function() {
                  warn(
                    'Do not replace the Vue.config object, set individual fields instead.'
                  )
                }
              }
              Object.defineProperty(Vue, 'config', configDef) // exposed util methods.
              // NOTE: these are not considered part of the public API - avoid relying on
              // them unless you are aware of the risk.
              Vue.util = {
                warn: warn,
                extend: extend,
                mergeOptions: mergeOptions,
                defineReactive: defineReactive$$1
              }
              Vue.set = set
              Vue['delete'] = del
              Vue.nextTick = nextTick // 2.6 explicit observable API
              Vue.observable = function(obj) {
                observe(obj)
                return obj
              }
              Vue.options = Object.create(null)
              ASSET_TYPES.forEach(function(type) {
                Vue.options[type + 's'] = Object.create(null)
              }) // this is used to identify the "base" constructor to extend all plain-object
              // components with in Weex's multi-instance scenarios.
              Vue.options._base = Vue
              extend(Vue.options.components, builtInComponents)
              initUse(Vue)
              initMixin$1(Vue)
              initExtend(Vue)
              initAssetRegisters(Vue)
            }
            initGlobalAPI(Vue)
            Object.defineProperty(Vue.prototype, '$isServer', {
              get: isServerRendering
            })
            Object.defineProperty(Vue.prototype, '$ssrContext', {
              get: function get() {
                /* istanbul ignore next */ return (
                  this.$vnode && this.$vnode.ssrContext
                )
              }
            }) // expose FunctionalRenderContext for ssr runtime helper installation
            Object.defineProperty(Vue, 'FunctionalRenderContext', {
              value: FunctionalRenderContext
            })
            Vue.version = '2.6.11' /*  */ // these are reserved for web because they are directly compiled away
            // during template compilation
            var isReservedAttr = makeMap('style,class') // attributes that should be using props for binding
            var acceptValue = makeMap('input,textarea,option,select,progress')
            var mustUseProp = function mustUseProp(tag, type, attr) {
              return (
                (attr === 'value' && acceptValue(tag) && type !== 'button') ||
                (attr === 'selected' && tag === 'option') ||
                (attr === 'checked' && tag === 'input') ||
                (attr === 'muted' && tag === 'video')
              )
            }
            var isEnumeratedAttr = makeMap(
              'contenteditable,draggable,spellcheck'
            )
            var isValidContentEditableValue = makeMap(
              'events,caret,typing,plaintext-only'
            )
            var convertEnumeratedValue = function convertEnumeratedValue(
              key,
              value
            ) {
              return isFalsyAttrValue(value) || value === 'false'
                ? 'false' // allow arbitrary string value for contenteditable
                : key === 'contenteditable' &&
                  isValidContentEditableValue(value)
                ? value
                : 'true'
            }
            var isBooleanAttr = makeMap(
              'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +
                'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +
                'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +
                'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +
                'required,reversed,scoped,seamless,selected,sortable,translate,' +
                'truespeed,typemustmatch,visible'
            )
            var xlinkNS = 'http://www.w3.org/1999/xlink'
            var isXlink = function isXlink(name) {
              return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'
            }
            var getXlinkProp = function getXlinkProp(name) {
              return isXlink(name) ? name.slice(6, name.length) : ''
            }
            var isFalsyAttrValue = function isFalsyAttrValue(val) {
              return val == null || val === false
            }
            /*  */ function genClassForVnode(vnode) {
              var data = vnode.data
              var parentNode = vnode
              var childNode = vnode
              while (isDef(childNode.componentInstance)) {
                childNode = childNode.componentInstance._vnode
                if (childNode && childNode.data) {
                  data = mergeClassData(childNode.data, data)
                }
              }
              while (isDef((parentNode = parentNode.parent))) {
                if (parentNode && parentNode.data) {
                  data = mergeClassData(data, parentNode.data)
                }
              }
              return renderClass(data.staticClass, data['class'])
            }
            function mergeClassData(child, parent) {
              return {
                staticClass: concat(child.staticClass, parent.staticClass),
                class: isDef(child['class'])
                  ? [child['class'], parent['class']]
                  : parent['class']
              }
            }
            function renderClass(staticClass, dynamicClass) {
              if (isDef(staticClass) || isDef(dynamicClass)) {
                return concat(staticClass, stringifyClass(dynamicClass))
              }
              /* istanbul ignore next */ return ''
            }
            function concat(a, b) {
              return a ? (b ? a + ' ' + b : a) : b || ''
            }
            function stringifyClass(value) {
              if (Array.isArray(value)) {
                return stringifyArray(value)
              }
              if (isObject(value)) {
                return stringifyObject(value)
              }
              if (typeof value === 'string') {
                return value
              }
              /* istanbul ignore next */ return ''
            }
            function stringifyArray(value) {
              var res = ''
              var stringified
              for (var i = 0, l = value.length; i < l; i++) {
                if (
                  isDef((stringified = stringifyClass(value[i]))) &&
                  stringified !== ''
                ) {
                  if (res) {
                    res += ' '
                  }
                  res += stringified
                }
              }
              return res
            }
            function stringifyObject(value) {
              var res = ''
              for (var key in value) {
                if (value[key]) {
                  if (res) {
                    res += ' '
                  }
                  res += key
                }
              }
              return res
            }
            /*  */ var namespaceMap = {
              svg: 'http://www.w3.org/2000/svg',
              math: 'http://www.w3.org/1998/Math/MathML'
            }
            var isHTMLTag = makeMap(
              'html,body,base,head,link,meta,style,title,' +
                'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +
                'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +
                'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +
                's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +
                'embed,object,param,source,canvas,script,noscript,del,ins,' +
                'caption,col,colgroup,table,thead,tbody,td,th,tr,' +
                'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +
                'output,progress,select,textarea,' +
                'details,dialog,menu,menuitem,summary,' +
                'content,element,shadow,template,blockquote,iframe,tfoot'
            ) // this map is intentionally selective, only covering SVG elements that may
            // contain child elements.
            var isSVG = makeMap(
              'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +
                'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +
                'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',
              true
            )
            var isReservedTag = function isReservedTag(tag) {
              return isHTMLTag(tag) || isSVG(tag)
            }
            function getTagNamespace(tag) {
              if (isSVG(tag)) {
                return 'svg'
              } // basic support for MathML
              // note it doesn't support other MathML elements being component roots
              if (tag === 'math') {
                return 'math'
              }
            }
            var unknownElementCache = Object.create(null)
            function isUnknownElement(tag) {
              /* istanbul ignore if */ if (!inBrowser) {
                return true
              }
              if (isReservedTag(tag)) {
                return false
              }
              tag = tag.toLowerCase()
              /* istanbul ignore if */ if (unknownElementCache[tag] != null) {
                return unknownElementCache[tag]
              }
              var el = document.createElement(tag)
              if (tag.indexOf('-') > -1) {
                // http://stackoverflow.com/a/28210364/1070244
                return (unknownElementCache[tag] =
                  el.constructor === window.HTMLUnknownElement ||
                  el.constructor === window.HTMLElement)
              } else {
                return (unknownElementCache[tag] = /HTMLUnknownElement/.test(
                  el.toString()
                ))
              }
            }
            var isTextInputType = makeMap(
              'text,number,password,search,email,tel,url'
            )
            /*  */ /**
             * Query an element selector if it's not an element already.
             */ function query(el) {
              if (typeof el === 'string') {
                var selected = document.querySelector(el)
                if (!selected) {
                  warn('Cannot find element: ' + el)
                  return document.createElement('div')
                }
                return selected
              } else {
                return el
              }
            }
            /*  */ function createElement$1(tagName, vnode) {
              var elm = document.createElement(tagName)
              if (tagName !== 'select') {
                return elm
              } // false or null will remove the attribute but undefined will not
              if (
                vnode.data &&
                vnode.data.attrs &&
                vnode.data.attrs.multiple !== undefined
              ) {
                elm.setAttribute('multiple', 'multiple')
              }
              return elm
            }
            function createElementNS(namespace, tagName) {
              return document.createElementNS(namespaceMap[namespace], tagName)
            }
            function createTextNode(text) {
              return document.createTextNode(text)
            }
            function createComment(text) {
              return document.createComment(text)
            }
            function insertBefore(parentNode, newNode, referenceNode) {
              parentNode.insertBefore(newNode, referenceNode)
            }
            function removeChild(node, child) {
              node.removeChild(child)
            }
            function appendChild(node, child) {
              node.appendChild(child)
            }
            function parentNode(node) {
              return node.parentNode
            }
            function nextSibling(node) {
              return node.nextSibling
            }
            function tagName(node) {
              return node.tagName
            }
            function setTextContent(node, text) {
              node.textContent = text
            }
            function setStyleScope(node, scopeId) {
              node.setAttribute(scopeId, '')
            }
            var nodeOps = /*#__PURE__*/ Object.freeze({
              createElement: createElement$1,
              createElementNS: createElementNS,
              createTextNode: createTextNode,
              createComment: createComment,
              insertBefore: insertBefore,
              removeChild: removeChild,
              appendChild: appendChild,
              parentNode: parentNode,
              nextSibling: nextSibling,
              tagName: tagName,
              setTextContent: setTextContent,
              setStyleScope: setStyleScope
            })
            /*  */ var ref = {
              create: function create(_, vnode) {
                registerRef(vnode)
              },
              update: function update(oldVnode, vnode) {
                if (oldVnode.data.ref !== vnode.data.ref) {
                  registerRef(oldVnode, true)
                  registerRef(vnode)
                }
              },
              destroy: function destroy(vnode) {
                registerRef(vnode, true)
              }
            }
            function registerRef(vnode, isRemoval) {
              var key = vnode.data.ref
              if (!isDef(key)) {
                return
              }
              var vm = vnode.context
              var ref = vnode.componentInstance || vnode.elm
              var refs = vm.$refs
              if (isRemoval) {
                if (Array.isArray(refs[key])) {
                  remove(refs[key], ref)
                } else if (refs[key] === ref) {
                  refs[key] = undefined
                }
              } else {
                if (vnode.data.refInFor) {
                  if (!Array.isArray(refs[key])) {
                    refs[key] = [ref]
                  } else if (refs[key].indexOf(ref) < 0) {
                    // $flow-disable-line
                    refs[key].push(ref)
                  }
                } else {
                  refs[key] = ref
                }
              }
            }
            /**
             * Virtual DOM patching algorithm based on Snabbdom by
             * Simon Friis Vindum (@paldepind)
             * Licensed under the MIT License
             * https://github.com/paldepind/snabbdom/blob/master/LICENSE
             *
             * modified by Evan You (@yyx990803)
             *
             * Not type-checking this because this file is perf-critical and the cost
             * of making flow understand it is not worth it.
             */ var emptyNode = new VNode('', {}, [])
            var hooks = ['create', 'activate', 'update', 'remove', 'destroy']
            function sameVnode(a, b) {
              return (
                a.key === b.key &&
                ((a.tag === b.tag &&
                  a.isComment === b.isComment &&
                  isDef(a.data) === isDef(b.data) &&
                  sameInputType(a, b)) ||
                  (isTrue(a.isAsyncPlaceholder) &&
                    a.asyncFactory === b.asyncFactory &&
                    isUndef(b.asyncFactory.error)))
              )
            }
            function sameInputType(a, b) {
              if (a.tag !== 'input') {
                return true
              }
              var i
              var typeA = isDef((i = a.data)) && isDef((i = i.attrs)) && i.type
              var typeB = isDef((i = b.data)) && isDef((i = i.attrs)) && i.type
              return (
                typeA === typeB ||
                (isTextInputType(typeA) && isTextInputType(typeB))
              )
            }
            function createKeyToOldIdx(children, beginIdx, endIdx) {
              var i, key
              var map = {}
              for (i = beginIdx; i <= endIdx; ++i) {
                key = children[i].key
                if (isDef(key)) {
                  map[key] = i
                }
              }
              return map
            }
            function createPatchFunction(backend) {
              var i, j
              var cbs = {}
              var modules = backend.modules
              var nodeOps = backend.nodeOps
              for (i = 0; i < hooks.length; ++i) {
                cbs[hooks[i]] = []
                for (j = 0; j < modules.length; ++j) {
                  if (isDef(modules[j][hooks[i]])) {
                    cbs[hooks[i]].push(modules[j][hooks[i]])
                  }
                }
              }
              function emptyNodeAt(elm) {
                return new VNode(
                  nodeOps.tagName(elm).toLowerCase(),
                  {},
                  [],
                  undefined,
                  elm
                )
              }
              function createRmCb(childElm, listeners) {
                function remove$$1() {
                  if (--remove$$1.listeners === 0) {
                    removeNode(childElm)
                  }
                }
                remove$$1.listeners = listeners
                return remove$$1
              }
              function removeNode(el) {
                var parent = nodeOps.parentNode(el) // element may have already been removed due to v-html / v-text
                if (isDef(parent)) {
                  nodeOps.removeChild(parent, el)
                }
              }
              function isUnknownElement$$1(vnode, inVPre) {
                return (
                  !inVPre &&
                  !vnode.ns &&
                  !(
                    config.ignoredElements.length &&
                    config.ignoredElements.some(function(ignore) {
                      return isRegExp(ignore)
                        ? ignore.test(vnode.tag)
                        : ignore === vnode.tag
                    })
                  ) &&
                  config.isUnknownElement(vnode.tag)
                )
              }
              var creatingElmInVPre = 0
              function createElm(
                vnode,
                insertedVnodeQueue,
                parentElm,
                refElm,
                nested,
                ownerArray,
                index
              ) {
                if (isDef(vnode.elm) && isDef(ownerArray)) {
                  // This vnode was used in a previous render!
                  // now it's used as a new node, overwriting its elm would cause
                  // potential patch errors down the road when it's used as an insertion
                  // reference node. Instead, we clone the node on-demand before creating
                  // associated DOM element for it.
                  vnode = ownerArray[index] = cloneVNode(vnode)
                }
                vnode.isRootInsert = !nested // for transition enter check
                if (
                  createComponent(vnode, insertedVnodeQueue, parentElm, refElm)
                ) {
                  return
                }
                var data = vnode.data
                var children = vnode.children
                var tag = vnode.tag
                if (isDef(tag)) {
                  {
                    if (data && data.pre) {
                      creatingElmInVPre++
                    }
                    if (isUnknownElement$$1(vnode, creatingElmInVPre)) {
                      warn(
                        'Unknown custom element: <' +
                          tag +
                          '> - did you ' +
                          'register the component correctly? For recursive components, ' +
                          'make sure to provide the "name" option.',
                        vnode.context
                      )
                    }
                  }
                  vnode.elm = vnode.ns
                    ? nodeOps.createElementNS(vnode.ns, tag)
                    : nodeOps.createElement(tag, vnode)
                  setScope(vnode)
                  /* istanbul ignore if */ {
                    createChildren(vnode, children, insertedVnodeQueue)
                    if (isDef(data)) {
                      invokeCreateHooks(vnode, insertedVnodeQueue)
                    }
                    insert(parentElm, vnode.elm, refElm)
                  }
                  if (data && data.pre) {
                    creatingElmInVPre--
                  }
                } else if (isTrue(vnode.isComment)) {
                  vnode.elm = nodeOps.createComment(vnode.text)
                  insert(parentElm, vnode.elm, refElm)
                } else {
                  vnode.elm = nodeOps.createTextNode(vnode.text)
                  insert(parentElm, vnode.elm, refElm)
                }
              }
              function createComponent(
                vnode,
                insertedVnodeQueue,
                parentElm,
                refElm
              ) {
                var i = vnode.data
                if (isDef(i)) {
                  var isReactivated =
                    isDef(vnode.componentInstance) && i.keepAlive
                  if (isDef((i = i.hook)) && isDef((i = i.init))) {
                    i(vnode, false /* hydrating */)
                  } // after calling the init hook, if the vnode is a child component
                  // it should've created a child instance and mounted it. the child
                  // component also has set the placeholder vnode's elm.
                  // in that case we can just return the element and be done.
                  if (isDef(vnode.componentInstance)) {
                    initComponent(vnode, insertedVnodeQueue)
                    insert(parentElm, vnode.elm, refElm)
                    if (isTrue(isReactivated)) {
                      reactivateComponent(
                        vnode,
                        insertedVnodeQueue,
                        parentElm,
                        refElm
                      )
                    }
                    return true
                  }
                }
              }
              function initComponent(vnode, insertedVnodeQueue) {
                if (isDef(vnode.data.pendingInsert)) {
                  insertedVnodeQueue.push.apply(
                    insertedVnodeQueue,
                    vnode.data.pendingInsert
                  )
                  vnode.data.pendingInsert = null
                }
                vnode.elm = vnode.componentInstance.$el
                if (isPatchable(vnode)) {
                  invokeCreateHooks(vnode, insertedVnodeQueue)
                  setScope(vnode)
                } else {
                  // empty component root.
                  // skip all element-related modules except for ref (#3455)
                  registerRef(vnode) // make sure to invoke the insert hook
                  insertedVnodeQueue.push(vnode)
                }
              }
              function reactivateComponent(
                vnode,
                insertedVnodeQueue,
                parentElm,
                refElm
              ) {
                var i // hack for #4339: a reactivated component with inner transition
                // does not trigger because the inner node's created hooks are not called
                // again. It's not ideal to involve module-specific logic in here but
                // there doesn't seem to be a better way to do it.
                var innerNode = vnode
                while (innerNode.componentInstance) {
                  innerNode = innerNode.componentInstance._vnode
                  if (
                    isDef((i = innerNode.data)) &&
                    isDef((i = i.transition))
                  ) {
                    for (i = 0; i < cbs.activate.length; ++i) {
                      cbs.activate[i](emptyNode, innerNode)
                    }
                    insertedVnodeQueue.push(innerNode)
                    break
                  }
                } // unlike a newly created component,
                // a reactivated keep-alive component doesn't insert itself
                insert(parentElm, vnode.elm, refElm)
              }
              function insert(parent, elm, ref$$1) {
                if (isDef(parent)) {
                  if (isDef(ref$$1)) {
                    if (nodeOps.parentNode(ref$$1) === parent) {
                      nodeOps.insertBefore(parent, elm, ref$$1)
                    }
                  } else {
                    nodeOps.appendChild(parent, elm)
                  }
                }
              }
              function createChildren(vnode, children, insertedVnodeQueue) {
                if (Array.isArray(children)) {
                  {
                    checkDuplicateKeys(children)
                  }
                  for (var i = 0; i < children.length; ++i) {
                    createElm(
                      children[i],
                      insertedVnodeQueue,
                      vnode.elm,
                      null,
                      true,
                      children,
                      i
                    )
                  }
                } else if (isPrimitive(vnode.text)) {
                  nodeOps.appendChild(
                    vnode.elm,
                    nodeOps.createTextNode(String(vnode.text))
                  )
                }
              }
              function isPatchable(vnode) {
                while (vnode.componentInstance) {
                  vnode = vnode.componentInstance._vnode
                }
                return isDef(vnode.tag)
              }
              function invokeCreateHooks(vnode, insertedVnodeQueue) {
                for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
                  cbs.create[i$1](emptyNode, vnode)
                }
                i = vnode.data.hook // Reuse variable
                if (isDef(i)) {
                  if (isDef(i.create)) {
                    i.create(emptyNode, vnode)
                  }
                  if (isDef(i.insert)) {
                    insertedVnodeQueue.push(vnode)
                  }
                }
              } // set scope id attribute for scoped CSS.
              // this is implemented as a special case to avoid the overhead
              // of going through the normal attribute patching process.
              function setScope(vnode) {
                var i
                if (isDef((i = vnode.fnScopeId))) {
                  nodeOps.setStyleScope(vnode.elm, i)
                } else {
                  var ancestor = vnode
                  while (ancestor) {
                    if (
                      isDef((i = ancestor.context)) &&
                      isDef((i = i.$options._scopeId))
                    ) {
                      nodeOps.setStyleScope(vnode.elm, i)
                    }
                    ancestor = ancestor.parent
                  }
                } // for slot content they should also get the scopeId from the host instance.
                if (
                  isDef((i = activeInstance)) &&
                  i !== vnode.context &&
                  i !== vnode.fnContext &&
                  isDef((i = i.$options._scopeId))
                ) {
                  nodeOps.setStyleScope(vnode.elm, i)
                }
              }
              function addVnodes(
                parentElm,
                refElm,
                vnodes,
                startIdx,
                endIdx,
                insertedVnodeQueue
              ) {
                for (; startIdx <= endIdx; ++startIdx) {
                  createElm(
                    vnodes[startIdx],
                    insertedVnodeQueue,
                    parentElm,
                    refElm,
                    false,
                    vnodes,
                    startIdx
                  )
                }
              }
              function invokeDestroyHook(vnode) {
                var i, j
                var data = vnode.data
                if (isDef(data)) {
                  if (isDef((i = data.hook)) && isDef((i = i.destroy))) {
                    i(vnode)
                  }
                  for (i = 0; i < cbs.destroy.length; ++i) {
                    cbs.destroy[i](vnode)
                  }
                }
                if (isDef((i = vnode.children))) {
                  for (j = 0; j < vnode.children.length; ++j) {
                    invokeDestroyHook(vnode.children[j])
                  }
                }
              }
              function removeVnodes(vnodes, startIdx, endIdx) {
                for (; startIdx <= endIdx; ++startIdx) {
                  var ch = vnodes[startIdx]
                  if (isDef(ch)) {
                    if (isDef(ch.tag)) {
                      removeAndInvokeRemoveHook(ch)
                      invokeDestroyHook(ch)
                    } else {
                      // Text node
                      removeNode(ch.elm)
                    }
                  }
                }
              }
              function removeAndInvokeRemoveHook(vnode, rm) {
                if (isDef(rm) || isDef(vnode.data)) {
                  var i
                  var listeners = cbs.remove.length + 1
                  if (isDef(rm)) {
                    // we have a recursively passed down rm callback
                    // increase the listeners count
                    rm.listeners += listeners
                  } else {
                    // directly removing
                    rm = createRmCb(vnode.elm, listeners)
                  } // recursively invoke hooks on child component root node
                  if (
                    isDef((i = vnode.componentInstance)) &&
                    isDef((i = i._vnode)) &&
                    isDef(i.data)
                  ) {
                    removeAndInvokeRemoveHook(i, rm)
                  }
                  for (i = 0; i < cbs.remove.length; ++i) {
                    cbs.remove[i](vnode, rm)
                  }
                  if (isDef((i = vnode.data.hook)) && isDef((i = i.remove))) {
                    i(vnode, rm)
                  } else {
                    rm()
                  }
                } else {
                  removeNode(vnode.elm)
                }
              }
              function updateChildren(
                parentElm,
                oldCh,
                newCh,
                insertedVnodeQueue,
                removeOnly
              ) {
                var oldStartIdx = 0
                var newStartIdx = 0
                var oldEndIdx = oldCh.length - 1
                var oldStartVnode = oldCh[0]
                var oldEndVnode = oldCh[oldEndIdx]
                var newEndIdx = newCh.length - 1
                var newStartVnode = newCh[0]
                var newEndVnode = newCh[newEndIdx]
                var oldKeyToIdx, idxInOld, vnodeToMove, refElm // removeOnly is a special flag used only by <transition-group>
                // to ensure removed elements stay in correct relative positions
                // during leaving transitions
                var canMove = !removeOnly
                {
                  checkDuplicateKeys(newCh)
                }
                while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
                  if (isUndef(oldStartVnode)) {
                    oldStartVnode = oldCh[++oldStartIdx] // Vnode has been moved left
                  } else if (isUndef(oldEndVnode)) {
                    oldEndVnode = oldCh[--oldEndIdx]
                  } else if (sameVnode(oldStartVnode, newStartVnode)) {
                    patchVnode(
                      oldStartVnode,
                      newStartVnode,
                      insertedVnodeQueue,
                      newCh,
                      newStartIdx
                    )
                    oldStartVnode = oldCh[++oldStartIdx]
                    newStartVnode = newCh[++newStartIdx]
                  } else if (sameVnode(oldEndVnode, newEndVnode)) {
                    patchVnode(
                      oldEndVnode,
                      newEndVnode,
                      insertedVnodeQueue,
                      newCh,
                      newEndIdx
                    )
                    oldEndVnode = oldCh[--oldEndIdx]
                    newEndVnode = newCh[--newEndIdx]
                  } else if (sameVnode(oldStartVnode, newEndVnode)) {
                    // Vnode moved right
                    patchVnode(
                      oldStartVnode,
                      newEndVnode,
                      insertedVnodeQueue,
                      newCh,
                      newEndIdx
                    )
                    canMove &&
                      nodeOps.insertBefore(
                        parentElm,
                        oldStartVnode.elm,
                        nodeOps.nextSibling(oldEndVnode.elm)
                      )
                    oldStartVnode = oldCh[++oldStartIdx]
                    newEndVnode = newCh[--newEndIdx]
                  } else if (sameVnode(oldEndVnode, newStartVnode)) {
                    // Vnode moved left
                    patchVnode(
                      oldEndVnode,
                      newStartVnode,
                      insertedVnodeQueue,
                      newCh,
                      newStartIdx
                    )
                    canMove &&
                      nodeOps.insertBefore(
                        parentElm,
                        oldEndVnode.elm,
                        oldStartVnode.elm
                      )
                    oldEndVnode = oldCh[--oldEndIdx]
                    newStartVnode = newCh[++newStartIdx]
                  } else {
                    if (isUndef(oldKeyToIdx)) {
                      oldKeyToIdx = createKeyToOldIdx(
                        oldCh,
                        oldStartIdx,
                        oldEndIdx
                      )
                    }
                    idxInOld = isDef(newStartVnode.key)
                      ? oldKeyToIdx[newStartVnode.key]
                      : findIdxInOld(
                          newStartVnode,
                          oldCh,
                          oldStartIdx,
                          oldEndIdx
                        )
                    if (isUndef(idxInOld)) {
                      // New element
                      createElm(
                        newStartVnode,
                        insertedVnodeQueue,
                        parentElm,
                        oldStartVnode.elm,
                        false,
                        newCh,
                        newStartIdx
                      )
                    } else {
                      vnodeToMove = oldCh[idxInOld]
                      if (sameVnode(vnodeToMove, newStartVnode)) {
                        patchVnode(
                          vnodeToMove,
                          newStartVnode,
                          insertedVnodeQueue,
                          newCh,
                          newStartIdx
                        )
                        oldCh[idxInOld] = undefined
                        canMove &&
                          nodeOps.insertBefore(
                            parentElm,
                            vnodeToMove.elm,
                            oldStartVnode.elm
                          )
                      } else {
                        // same key but different element. treat as new element
                        createElm(
                          newStartVnode,
                          insertedVnodeQueue,
                          parentElm,
                          oldStartVnode.elm,
                          false,
                          newCh,
                          newStartIdx
                        )
                      }
                    }
                    newStartVnode = newCh[++newStartIdx]
                  }
                }
                if (oldStartIdx > oldEndIdx) {
                  refElm = isUndef(newCh[newEndIdx + 1])
                    ? null
                    : newCh[newEndIdx + 1].elm
                  addVnodes(
                    parentElm,
                    refElm,
                    newCh,
                    newStartIdx,
                    newEndIdx,
                    insertedVnodeQueue
                  )
                } else if (newStartIdx > newEndIdx) {
                  removeVnodes(oldCh, oldStartIdx, oldEndIdx)
                }
              }
              function checkDuplicateKeys(children) {
                var seenKeys = {}
                for (var i = 0; i < children.length; i++) {
                  var vnode = children[i]
                  var key = vnode.key
                  if (isDef(key)) {
                    if (seenKeys[key]) {
                      warn(
                        "Duplicate keys detected: '" +
                          key +
                          "'. This may cause an update error.",
                        vnode.context
                      )
                    } else {
                      seenKeys[key] = true
                    }
                  }
                }
              }
              function findIdxInOld(node, oldCh, start, end) {
                for (var i = start; i < end; i++) {
                  var c = oldCh[i]
                  if (isDef(c) && sameVnode(node, c)) {
                    return i
                  }
                }
              }
              function patchVnode(
                oldVnode,
                vnode,
                insertedVnodeQueue,
                ownerArray,
                index,
                removeOnly
              ) {
                if (oldVnode === vnode) {
                  return
                }
                if (isDef(vnode.elm) && isDef(ownerArray)) {
                  // clone reused vnode
                  vnode = ownerArray[index] = cloneVNode(vnode)
                }
                var elm = (vnode.elm = oldVnode.elm)
                if (isTrue(oldVnode.isAsyncPlaceholder)) {
                  if (isDef(vnode.asyncFactory.resolved)) {
                    hydrate(oldVnode.elm, vnode, insertedVnodeQueue)
                  } else {
                    vnode.isAsyncPlaceholder = true
                  }
                  return
                } // reuse element for static trees.
                // note we only do this if the vnode is cloned -
                // if the new node is not cloned it means the render functions have been
                // reset by the hot-reload-api and we need to do a proper re-render.
                if (
                  isTrue(vnode.isStatic) &&
                  isTrue(oldVnode.isStatic) &&
                  vnode.key === oldVnode.key &&
                  (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))
                ) {
                  vnode.componentInstance = oldVnode.componentInstance
                  return
                }
                var i
                var data = vnode.data
                if (
                  isDef(data) &&
                  isDef((i = data.hook)) &&
                  isDef((i = i.prepatch))
                ) {
                  i(oldVnode, vnode)
                }
                var oldCh = oldVnode.children
                var ch = vnode.children
                if (isDef(data) && isPatchable(vnode)) {
                  for (i = 0; i < cbs.update.length; ++i) {
                    cbs.update[i](oldVnode, vnode)
                  }
                  if (isDef((i = data.hook)) && isDef((i = i.update))) {
                    i(oldVnode, vnode)
                  }
                }
                if (isUndef(vnode.text)) {
                  if (isDef(oldCh) && isDef(ch)) {
                    if (oldCh !== ch) {
                      updateChildren(
                        elm,
                        oldCh,
                        ch,
                        insertedVnodeQueue,
                        removeOnly
                      )
                    }
                  } else if (isDef(ch)) {
                    {
                      checkDuplicateKeys(ch)
                    }
                    if (isDef(oldVnode.text)) {
                      nodeOps.setTextContent(elm, '')
                    }
                    addVnodes(
                      elm,
                      null,
                      ch,
                      0,
                      ch.length - 1,
                      insertedVnodeQueue
                    )
                  } else if (isDef(oldCh)) {
                    removeVnodes(oldCh, 0, oldCh.length - 1)
                  } else if (isDef(oldVnode.text)) {
                    nodeOps.setTextContent(elm, '')
                  }
                } else if (oldVnode.text !== vnode.text) {
                  nodeOps.setTextContent(elm, vnode.text)
                }
                if (isDef(data)) {
                  if (isDef((i = data.hook)) && isDef((i = i.postpatch))) {
                    i(oldVnode, vnode)
                  }
                }
              }
              function invokeInsertHook(vnode, queue, initial) {
                // delay insert hooks for component root nodes, invoke them after the
                // element is really inserted
                if (isTrue(initial) && isDef(vnode.parent)) {
                  vnode.parent.data.pendingInsert = queue
                } else {
                  for (var i = 0; i < queue.length; ++i) {
                    queue[i].data.hook.insert(queue[i])
                  }
                }
              }
              var hydrationBailed = false // list of modules that can skip create hook during hydration because they
              // are already rendered on the client or has no need for initialization
              // Note: style is excluded because it relies on initial clone for future
              // deep updates (#7063).
              var isRenderedModule = makeMap(
                'attrs,class,staticClass,staticStyle,key'
              ) // Note: this is a browser-only function so we can assume elms are DOM nodes.
              function hydrate(elm, vnode, insertedVnodeQueue, inVPre) {
                var i
                var tag = vnode.tag
                var data = vnode.data
                var children = vnode.children
                inVPre = inVPre || (data && data.pre)
                vnode.elm = elm
                if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {
                  vnode.isAsyncPlaceholder = true
                  return true
                } // assert node match
                {
                  if (!assertNodeMatch(elm, vnode, inVPre)) {
                    return false
                  }
                }
                if (isDef(data)) {
                  if (isDef((i = data.hook)) && isDef((i = i.init))) {
                    i(vnode, true /* hydrating */)
                  }
                  if (isDef((i = vnode.componentInstance))) {
                    // child component. it should have hydrated its own tree.
                    initComponent(vnode, insertedVnodeQueue)
                    return true
                  }
                }
                if (isDef(tag)) {
                  if (isDef(children)) {
                    // empty element, allow client to pick up and populate children
                    if (!elm.hasChildNodes()) {
                      createChildren(vnode, children, insertedVnodeQueue)
                    } else {
                      // v-html and domProps: innerHTML
                      if (
                        isDef((i = data)) &&
                        isDef((i = i.domProps)) &&
                        isDef((i = i.innerHTML))
                      ) {
                        if (i !== elm.innerHTML) {
                          /* istanbul ignore if */ if (
                            typeof console !== 'undefined' &&
                            !hydrationBailed
                          ) {
                            hydrationBailed = true
                            console.warn('Parent: ', elm)
                            console.warn('server innerHTML: ', i)
                            console.warn('client innerHTML: ', elm.innerHTML)
                          }
                          return false
                        }
                      } else {
                        // iterate and compare children lists
                        var childrenMatch = true
                        var childNode = elm.firstChild
                        for (var i$1 = 0; i$1 < children.length; i$1++) {
                          if (
                            !childNode ||
                            !hydrate(
                              childNode,
                              children[i$1],
                              insertedVnodeQueue,
                              inVPre
                            )
                          ) {
                            childrenMatch = false
                            break
                          }
                          childNode = childNode.nextSibling
                        } // if childNode is not null, it means the actual childNodes list is
                        // longer than the virtual children list.
                        if (!childrenMatch || childNode) {
                          /* istanbul ignore if */ if (
                            typeof console !== 'undefined' &&
                            !hydrationBailed
                          ) {
                            hydrationBailed = true
                            console.warn('Parent: ', elm)
                            console.warn(
                              'Mismatching childNodes vs. VNodes: ',
                              elm.childNodes,
                              children
                            )
                          }
                          return false
                        }
                      }
                    }
                  }
                  if (isDef(data)) {
                    var fullInvoke = false
                    for (var key in data) {
                      if (!isRenderedModule(key)) {
                        fullInvoke = true
                        invokeCreateHooks(vnode, insertedVnodeQueue)
                        break
                      }
                    }
                    if (!fullInvoke && data['class']) {
                      // ensure collecting deps for deep class bindings for future updates
                      traverse(data['class'])
                    }
                  }
                } else if (elm.data !== vnode.text) {
                  elm.data = vnode.text
                }
                return true
              }
              function assertNodeMatch(node, vnode, inVPre) {
                if (isDef(vnode.tag)) {
                  return (
                    vnode.tag.indexOf('vue-component') === 0 ||
                    (!isUnknownElement$$1(vnode, inVPre) &&
                      vnode.tag.toLowerCase() ===
                        (node.tagName && node.tagName.toLowerCase()))
                  )
                } else {
                  return node.nodeType === (vnode.isComment ? 8 : 3)
                }
              }
              return function patch(oldVnode, vnode, hydrating, removeOnly) {
                if (isUndef(vnode)) {
                  if (isDef(oldVnode)) {
                    invokeDestroyHook(oldVnode)
                  }
                  return
                }
                var isInitialPatch = false
                var insertedVnodeQueue = []
                if (isUndef(oldVnode)) {
                  // empty mount (likely as component), create new root element
                  isInitialPatch = true
                  createElm(vnode, insertedVnodeQueue)
                } else {
                  var isRealElement = isDef(oldVnode.nodeType)
                  if (!isRealElement && sameVnode(oldVnode, vnode)) {
                    // patch existing root node
                    patchVnode(
                      oldVnode,
                      vnode,
                      insertedVnodeQueue,
                      null,
                      null,
                      removeOnly
                    )
                  } else {
                    if (isRealElement) {
                      // mounting to a real element
                      // check if this is server-rendered content and if we can perform
                      // a successful hydration.
                      if (
                        oldVnode.nodeType === 1 &&
                        oldVnode.hasAttribute(SSR_ATTR)
                      ) {
                        oldVnode.removeAttribute(SSR_ATTR)
                        hydrating = true
                      }
                      if (isTrue(hydrating)) {
                        if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {
                          invokeInsertHook(vnode, insertedVnodeQueue, true)
                          return oldVnode
                        } else {
                          warn(
                            'The client-side rendered virtual DOM tree is not matching ' +
                              'server-rendered content. This is likely caused by incorrect ' +
                              'HTML markup, for example nesting block-level elements inside ' +
                              '<p>, or missing <tbody>. Bailing hydration and performing ' +
                              'full client-side render.'
                          )
                        }
                      } // either not server-rendered, or hydration failed.
                      // create an empty node and replace it
                      oldVnode = emptyNodeAt(oldVnode)
                    } // replacing existing element
                    var oldElm = oldVnode.elm
                    var parentElm = nodeOps.parentNode(oldElm) // create new node
                    createElm(
                      vnode,
                      insertedVnodeQueue, // extremely rare edge case: do not insert if old element is in a
                      // leaving transition. Only happens when combining transition +
                      // keep-alive + HOCs. (#4590)
                      oldElm._leaveCb ? null : parentElm,
                      nodeOps.nextSibling(oldElm)
                    ) // update parent placeholder node element, recursively
                    if (isDef(vnode.parent)) {
                      var ancestor = vnode.parent
                      var patchable = isPatchable(vnode)
                      while (ancestor) {
                        for (var i = 0; i < cbs.destroy.length; ++i) {
                          cbs.destroy[i](ancestor)
                        }
                        ancestor.elm = vnode.elm
                        if (patchable) {
                          for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
                            cbs.create[i$1](emptyNode, ancestor)
                          } // #6513
                          // invoke insert hooks that may have been merged by create hooks.
                          // e.g. for directives that uses the "inserted" hook.
                          var insert = ancestor.data.hook.insert
                          if (insert.merged) {
                            // start at index 1 to avoid re-invoking component mounted hook
                            for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {
                              insert.fns[i$2]()
                            }
                          }
                        } else {
                          registerRef(ancestor)
                        }
                        ancestor = ancestor.parent
                      }
                    } // destroy old node
                    if (isDef(parentElm)) {
                      removeVnodes([oldVnode], 0, 0)
                    } else if (isDef(oldVnode.tag)) {
                      invokeDestroyHook(oldVnode)
                    }
                  }
                }
                invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch)
                return vnode.elm
              }
            }
            /*  */ var directives = {
              create: updateDirectives,
              update: updateDirectives,
              destroy: function unbindDirectives(vnode) {
                updateDirectives(vnode, emptyNode)
              }
            }
            function updateDirectives(oldVnode, vnode) {
              if (oldVnode.data.directives || vnode.data.directives) {
                _update(oldVnode, vnode)
              }
            }
            function _update(oldVnode, vnode) {
              var isCreate = oldVnode === emptyNode
              var isDestroy = vnode === emptyNode
              var oldDirs = normalizeDirectives$1(
                oldVnode.data.directives,
                oldVnode.context
              )
              var newDirs = normalizeDirectives$1(
                vnode.data.directives,
                vnode.context
              )
              var dirsWithInsert = []
              var dirsWithPostpatch = []
              var key, oldDir, dir
              for (key in newDirs) {
                oldDir = oldDirs[key]
                dir = newDirs[key]
                if (!oldDir) {
                  // new directive, bind
                  callHook$1(dir, 'bind', vnode, oldVnode)
                  if (dir.def && dir.def.inserted) {
                    dirsWithInsert.push(dir)
                  }
                } else {
                  // existing directive, update
                  dir.oldValue = oldDir.value
                  dir.oldArg = oldDir.arg
                  callHook$1(dir, 'update', vnode, oldVnode)
                  if (dir.def && dir.def.componentUpdated) {
                    dirsWithPostpatch.push(dir)
                  }
                }
              }
              if (dirsWithInsert.length) {
                var callInsert = function callInsert() {
                  for (var i = 0; i < dirsWithInsert.length; i++) {
                    callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode)
                  }
                }
                if (isCreate) {
                  mergeVNodeHook(vnode, 'insert', callInsert)
                } else {
                  callInsert()
                }
              }
              if (dirsWithPostpatch.length) {
                mergeVNodeHook(vnode, 'postpatch', function() {
                  for (var i = 0; i < dirsWithPostpatch.length; i++) {
                    callHook$1(
                      dirsWithPostpatch[i],
                      'componentUpdated',
                      vnode,
                      oldVnode
                    )
                  }
                })
              }
              if (!isCreate) {
                for (key in oldDirs) {
                  if (!newDirs[key]) {
                    // no longer present, unbind
                    callHook$1(
                      oldDirs[key],
                      'unbind',
                      oldVnode,
                      oldVnode,
                      isDestroy
                    )
                  }
                }
              }
            }
            var emptyModifiers = Object.create(null)
            function normalizeDirectives$1(dirs, vm) {
              var res = Object.create(null)
              if (!dirs) {
                // $flow-disable-line
                return res
              }
              var i, dir
              for (i = 0; i < dirs.length; i++) {
                dir = dirs[i]
                if (!dir.modifiers) {
                  // $flow-disable-line
                  dir.modifiers = emptyModifiers
                }
                res[getRawDirName(dir)] = dir
                dir.def = resolveAsset(
                  vm.$options,
                  'directives',
                  dir.name,
                  true
                )
              } // $flow-disable-line
              return res
            }
            function getRawDirName(dir) {
              return (
                dir.rawName ||
                dir.name + '.' + Object.keys(dir.modifiers || {}).join('.')
              )
            }
            function callHook$1(dir, hook, vnode, oldVnode, isDestroy) {
              var fn = dir.def && dir.def[hook]
              if (fn) {
                try {
                  fn(vnode.elm, dir, vnode, oldVnode, isDestroy)
                } catch (e) {
                  handleError(
                    e,
                    vnode.context,
                    'directive ' + dir.name + ' ' + hook + ' hook'
                  )
                }
              }
            }
            var baseModules = [ref, directives]
            /*  */ function updateAttrs(oldVnode, vnode) {
              var opts = vnode.componentOptions
              if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {
                return
              }
              if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {
                return
              }
              var key, cur, old
              var elm = vnode.elm
              var oldAttrs = oldVnode.data.attrs || {}
              var attrs = vnode.data.attrs || {} // clone observed objects, as the user probably wants to mutate it
              if (isDef(attrs.__ob__)) {
                attrs = vnode.data.attrs = extend({}, attrs)
              }
              for (key in attrs) {
                cur = attrs[key]
                old = oldAttrs[key]
                if (old !== cur) {
                  setAttr(elm, key, cur)
                }
              } // #4391: in IE9, setting type can reset value for input[type=radio]
              // #6666: IE/Edge forces progress value down to 1 before setting a max
              /* istanbul ignore if */ if (
                (isIE || isEdge) &&
                attrs.value !== oldAttrs.value
              ) {
                setAttr(elm, 'value', attrs.value)
              }
              for (key in oldAttrs) {
                if (isUndef(attrs[key])) {
                  if (isXlink(key)) {
                    elm.removeAttributeNS(xlinkNS, getXlinkProp(key))
                  } else if (!isEnumeratedAttr(key)) {
                    elm.removeAttribute(key)
                  }
                }
              }
            }
            function setAttr(el, key, value) {
              if (el.tagName.indexOf('-') > -1) {
                baseSetAttr(el, key, value)
              } else if (isBooleanAttr(key)) {
                // set attribute for blank value
                // e.g. <option disabled>Select one</option>
                if (isFalsyAttrValue(value)) {
                  el.removeAttribute(key)
                } else {
                  // technically allowfullscreen is a boolean attribute for <iframe>,
                  // but Flash expects a value of "true" when used on <embed> tag
                  value =
                    key === 'allowfullscreen' && el.tagName === 'EMBED'
                      ? 'true'
                      : key
                  el.setAttribute(key, value)
                }
              } else if (isEnumeratedAttr(key)) {
                el.setAttribute(key, convertEnumeratedValue(key, value))
              } else if (isXlink(key)) {
                if (isFalsyAttrValue(value)) {
                  el.removeAttributeNS(xlinkNS, getXlinkProp(key))
                } else {
                  el.setAttributeNS(xlinkNS, key, value)
                }
              } else {
                baseSetAttr(el, key, value)
              }
            }
            function baseSetAttr(el, key, value) {
              if (isFalsyAttrValue(value)) {
                el.removeAttribute(key)
              } else {
                // #7138: IE10 & 11 fires input event when setting placeholder on
                // <textarea>... block the first input event and remove the blocker
                // immediately.
                /* istanbul ignore if */ if (
                  isIE &&
                  !isIE9 &&
                  el.tagName === 'TEXTAREA' &&
                  key === 'placeholder' &&
                  value !== '' &&
                  !el.__ieph
                ) {
                  var blocker = function blocker(e) {
                    e.stopImmediatePropagation()
                    el.removeEventListener('input', blocker)
                  }
                  el.addEventListener('input', blocker) // $flow-disable-line
                  el.__ieph = true /* IE placeholder patched */
                }
                el.setAttribute(key, value)
              }
            }
            var attrs = { create: updateAttrs, update: updateAttrs }
            /*  */ function updateClass(oldVnode, vnode) {
              var el = vnode.elm
              var data = vnode.data
              var oldData = oldVnode.data
              if (
                isUndef(data.staticClass) &&
                isUndef(data['class']) &&
                (isUndef(oldData) ||
                  (isUndef(oldData.staticClass) && isUndef(oldData['class'])))
              ) {
                return
              }
              var cls = genClassForVnode(vnode) // handle transition classes
              var transitionClass = el._transitionClasses
              if (isDef(transitionClass)) {
                cls = concat(cls, stringifyClass(transitionClass))
              } // set the class
              if (cls !== el._prevClass) {
                el.setAttribute('class', cls)
                el._prevClass = cls
              }
            }
            var klass = {
              create: updateClass,
              update: updateClass
            } /*  */ /*  */ /*  */ /*  */ // in some cases, the event used has to be determined at runtime
            // so we used some reserved tokens during compile.
            var RANGE_TOKEN = '__r'
            var CHECKBOX_RADIO_TOKEN = '__c' /*  */ // normalize v-model event tokens that can only be determined at runtime.
            // it's important to place the event as the first in the array because
            // the whole point is ensuring the v-model callback gets called before
            // user-attached handlers.
            function normalizeEvents(on) {
              /* istanbul ignore if */ if (isDef(on[RANGE_TOKEN])) {
                // IE input[type=range] only supports `change` event
                var event = isIE ? 'change' : 'input'
                on[event] = [].concat(on[RANGE_TOKEN], on[event] || [])
                delete on[RANGE_TOKEN]
              } // This was originally intended to fix #4521 but no longer necessary
              // after 2.5. Keeping it for backwards compat with generated code from < 2.4
              /* istanbul ignore if */ if (isDef(on[CHECKBOX_RADIO_TOKEN])) {
                on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || [])
                delete on[CHECKBOX_RADIO_TOKEN]
              }
            }
            var target$1
            function createOnceHandler$1(event, handler, capture) {
              var _target = target$1 // save current target element in closure
              return function onceHandler() {
                var res = handler.apply(null, arguments)
                if (res !== null) {
                  remove$2(event, onceHandler, capture, _target)
                }
              }
            } // #9446: Firefox <= 53 (in particular, ESR 52) has incorrect Event.timeStamp
            // implementation and does not fire microtasks in between event propagation, so
            // safe to exclude.
            var useMicrotaskFix =
              isUsingMicroTask && !(isFF && Number(isFF[1]) <= 53)
            function add$1(name, handler, capture, passive) {
              // async edge case #6566: inner click event triggers patch, event handler
              // attached to outer element during patch, and triggered again. This
              // happens because browsers fire microtask ticks between event propagation.
              // the solution is simple: we save the timestamp when a handler is attached,
              // and the handler would only fire if the event passed to it was fired
              // AFTER it was attached.
              if (useMicrotaskFix) {
                var attachedTimestamp = currentFlushTimestamp
                var original = handler
                handler = original._wrapper = function(e) {
                  if (
                    // no bubbling, should always fire.
                    // this is just a safety net in case event.timeStamp is unreliable in
                    // certain weird environments...
                    e.target === e.currentTarget || // event is fired after handler attachment
                    e.timeStamp >= attachedTimestamp || // bail for environments that have buggy event.timeStamp implementations
                    // #9462 iOS 9 bug: event.timeStamp is 0 after history.pushState
                    // #9681 QtWebEngine event.timeStamp is negative value
                    e.timeStamp <= 0 || // #9448 bail if event is fired in another document in a multi-page
                    // electron/nw.js app, since event.timeStamp will be using a different
                    // starting reference
                    e.target.ownerDocument !== document
                  ) {
                    return original.apply(this, arguments)
                  }
                }
              }
              target$1.addEventListener(
                name,
                handler,
                supportsPassive
                  ? { capture: capture, passive: passive }
                  : capture
              )
            }
            function remove$2(name, handler, capture, _target) {
              ;(_target || target$1).removeEventListener(
                name,
                handler._wrapper || handler,
                capture
              )
            }
            function updateDOMListeners(oldVnode, vnode) {
              if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {
                return
              }
              var on = vnode.data.on || {}
              var oldOn = oldVnode.data.on || {}
              target$1 = vnode.elm
              normalizeEvents(on)
              updateListeners(
                on,
                oldOn,
                add$1,
                remove$2,
                createOnceHandler$1,
                vnode.context
              )
              target$1 = undefined
            }
            var events = {
              create: updateDOMListeners,
              update: updateDOMListeners
            }
            /*  */ var svgContainer
            function updateDOMProps(oldVnode, vnode) {
              if (
                isUndef(oldVnode.data.domProps) &&
                isUndef(vnode.data.domProps)
              ) {
                return
              }
              var key, cur
              var elm = vnode.elm
              var oldProps = oldVnode.data.domProps || {}
              var props = vnode.data.domProps || {} // clone observed objects, as the user probably wants to mutate it
              if (isDef(props.__ob__)) {
                props = vnode.data.domProps = extend({}, props)
              }
              for (key in oldProps) {
                if (!(key in props)) {
                  elm[key] = ''
                }
              }
              for (key in props) {
                cur = props[key] // ignore children if the node has textContent or innerHTML,
                // as these will throw away existing DOM nodes and cause removal errors
                // on subsequent patches (#3360)
                if (key === 'textContent' || key === 'innerHTML') {
                  if (vnode.children) {
                    vnode.children.length = 0
                  }
                  if (cur === oldProps[key]) {
                    continue
                  } // #6601 work around Chrome version <= 55 bug where single textNode
                  // replaced by innerHTML/textContent retains its parentNode property
                  if (elm.childNodes.length === 1) {
                    elm.removeChild(elm.childNodes[0])
                  }
                }
                if (key === 'value' && elm.tagName !== 'PROGRESS') {
                  // store value as _value as well since
                  // non-string values will be stringified
                  elm._value = cur // avoid resetting cursor position when value is the same
                  var strCur = isUndef(cur) ? '' : String(cur)
                  if (shouldUpdateValue(elm, strCur)) {
                    elm.value = strCur
                  }
                } else if (
                  key === 'innerHTML' &&
                  isSVG(elm.tagName) &&
                  isUndef(elm.innerHTML)
                ) {
                  // IE doesn't support innerHTML for SVG elements
                  svgContainer = svgContainer || document.createElement('div')
                  svgContainer.innerHTML = '<svg>' + cur + '</svg>'
                  var svg = svgContainer.firstChild
                  while (elm.firstChild) {
                    elm.removeChild(elm.firstChild)
                  }
                  while (svg.firstChild) {
                    elm.appendChild(svg.firstChild)
                  }
                } else if (
                  // skip the update if old and new VDOM state is the same.
                  // `value` is handled separately because the DOM value may be temporarily
                  // out of sync with VDOM state due to focus, composition and modifiers.
                  // This  #4521 by skipping the unnecesarry `checked` update.
                  cur !== oldProps[key]
                ) {
                  // some property updates can throw
                  // e.g. `value` on <progress> w/ non-finite value
                  try {
                    elm[key] = cur
                  } catch (e) {}
                }
              }
            } // check platforms/web/util/attrs.js acceptValue
            function shouldUpdateValue(elm, checkVal) {
              return (
                !elm.composing &&
                (elm.tagName === 'OPTION' ||
                  isNotInFocusAndDirty(elm, checkVal) ||
                  isDirtyWithModifiers(elm, checkVal))
              )
            }
            function isNotInFocusAndDirty(elm, checkVal) {
              // return true when textbox (.number and .trim) loses focus and its value is
              // not equal to the updated value
              var notInFocus = true // #6157
              // work around IE bug when accessing document.activeElement in an iframe
              try {
                notInFocus = document.activeElement !== elm
              } catch (e) {}
              return notInFocus && elm.value !== checkVal
            }
            function isDirtyWithModifiers(elm, newVal) {
              var value = elm.value
              var modifiers = elm._vModifiers // injected by v-model runtime
              if (isDef(modifiers)) {
                if (modifiers.number) {
                  return toNumber(value) !== toNumber(newVal)
                }
                if (modifiers.trim) {
                  return value.trim() !== newVal.trim()
                }
              }
              return value !== newVal
            }
            var domProps = { create: updateDOMProps, update: updateDOMProps }
            /*  */ var parseStyleText = cached(function(cssText) {
              var res = {}
              var listDelimiter = /;(?![^(]*\))/g
              var propertyDelimiter = /:(.+)/
              cssText.split(listDelimiter).forEach(function(item) {
                if (item) {
                  var tmp = item.split(propertyDelimiter)
                  tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim())
                }
              })
              return res
            }) // merge static and dynamic style data on the same vnode
            function normalizeStyleData(data) {
              var style = normalizeStyleBinding(data.style) // static style is pre-processed into an object during compilation
              // and is always a fresh object, so it's safe to merge into it
              return data.staticStyle ? extend(data.staticStyle, style) : style
            } // normalize possible array / string values into Object
            function normalizeStyleBinding(bindingStyle) {
              if (Array.isArray(bindingStyle)) {
                return toObject(bindingStyle)
              }
              if (typeof bindingStyle === 'string') {
                return parseStyleText(bindingStyle)
              }
              return bindingStyle
            }
            /**
             * parent component style should be after child's
             * so that parent component's style could override it
             */ function getStyle(vnode, checkChild) {
              var res = {}
              var styleData
              if (checkChild) {
                var childNode = vnode
                while (childNode.componentInstance) {
                  childNode = childNode.componentInstance._vnode
                  if (
                    childNode &&
                    childNode.data &&
                    (styleData = normalizeStyleData(childNode.data))
                  ) {
                    extend(res, styleData)
                  }
                }
              }
              if ((styleData = normalizeStyleData(vnode.data))) {
                extend(res, styleData)
              }
              var parentNode = vnode
              while ((parentNode = parentNode.parent)) {
                if (
                  parentNode.data &&
                  (styleData = normalizeStyleData(parentNode.data))
                ) {
                  extend(res, styleData)
                }
              }
              return res
            }
            /*  */ var cssVarRE = /^--/
            var importantRE = /\s*!important$/
            var setProp = function setProp(el, name, val) {
              /* istanbul ignore if */ if (cssVarRE.test(name)) {
                el.style.setProperty(name, val)
              } else if (importantRE.test(val)) {
                el.style.setProperty(
                  hyphenate(name),
                  val.replace(importantRE, ''),
                  'important'
                )
              } else {
                var normalizedName = normalize(name)
                if (Array.isArray(val)) {
                  // Support values array created by autoprefixer, e.g.
                  // {display: ["-webkit-box", "-ms-flexbox", "flex"]}
                  // Set them one by one, and the browser will only set those it can recognize
                  for (var i = 0, len = val.length; i < len; i++) {
                    el.style[normalizedName] = val[i]
                  }
                } else {
                  el.style[normalizedName] = val
                }
              }
            }
            var vendorNames = ['Webkit', 'Moz', 'ms']
            var emptyStyle
            var normalize = cached(function(prop) {
              emptyStyle = emptyStyle || document.createElement('div').style
              prop = camelize(prop)
              if (prop !== 'filter' && prop in emptyStyle) {
                return prop
              }
              var capName = prop.charAt(0).toUpperCase() + prop.slice(1)
              for (var i = 0; i < vendorNames.length; i++) {
                var name = vendorNames[i] + capName
                if (name in emptyStyle) {
                  return name
                }
              }
            })
            function updateStyle(oldVnode, vnode) {
              var data = vnode.data
              var oldData = oldVnode.data
              if (
                isUndef(data.staticStyle) &&
                isUndef(data.style) &&
                isUndef(oldData.staticStyle) &&
                isUndef(oldData.style)
              ) {
                return
              }
              var cur, name
              var el = vnode.elm
              var oldStaticStyle = oldData.staticStyle
              var oldStyleBinding =
                oldData.normalizedStyle || oldData.style || {} // if static style exists, stylebinding already merged into it when doing normalizeStyleData
              var oldStyle = oldStaticStyle || oldStyleBinding
              var style = normalizeStyleBinding(vnode.data.style) || {} // store normalized style under a different key for next diff
              // make sure to clone it if it's reactive, since the user likely wants
              // to mutate it.
              vnode.data.normalizedStyle = isDef(style.__ob__)
                ? extend({}, style)
                : style
              var newStyle = getStyle(vnode, true)
              for (name in oldStyle) {
                if (isUndef(newStyle[name])) {
                  setProp(el, name, '')
                }
              }
              for (name in newStyle) {
                cur = newStyle[name]
                if (cur !== oldStyle[name]) {
                  // ie9 setting to null has no effect, must use empty string
                  setProp(el, name, cur == null ? '' : cur)
                }
              }
            }
            var style = { create: updateStyle, update: updateStyle }
            /*  */ var whitespaceRE = /\s+/
            /**
             * Add class with compatibility for SVG since classList is not supported on
             * SVG elements in IE
             */ function addClass(el, cls) {
              /* istanbul ignore if */ if (!cls || !(cls = cls.trim())) {
                return
              }
              /* istanbul ignore else */ if (el.classList) {
                if (cls.indexOf(' ') > -1) {
                  cls.split(whitespaceRE).forEach(function(c) {
                    return el.classList.add(c)
                  })
                } else {
                  el.classList.add(cls)
                }
              } else {
                var cur = ' ' + (el.getAttribute('class') || '') + ' '
                if (cur.indexOf(' ' + cls + ' ') < 0) {
                  el.setAttribute('class', (cur + cls).trim())
                }
              }
            }
            /**
             * Remove class with compatibility for SVG since classList is not supported on
             * SVG elements in IE
             */ function removeClass(el, cls) {
              /* istanbul ignore if */ if (!cls || !(cls = cls.trim())) {
                return
              }
              /* istanbul ignore else */ if (el.classList) {
                if (cls.indexOf(' ') > -1) {
                  cls.split(whitespaceRE).forEach(function(c) {
                    return el.classList.remove(c)
                  })
                } else {
                  el.classList.remove(cls)
                }
                if (!el.classList.length) {
                  el.removeAttribute('class')
                }
              } else {
                var cur = ' ' + (el.getAttribute('class') || '') + ' '
                var tar = ' ' + cls + ' '
                while (cur.indexOf(tar) >= 0) {
                  cur = cur.replace(tar, ' ')
                }
                cur = cur.trim()
                if (cur) {
                  el.setAttribute('class', cur)
                } else {
                  el.removeAttribute('class')
                }
              }
            }
            /*  */ function resolveTransition(def$$1) {
              if (!def$$1) {
                return
              }
              /* istanbul ignore else */ if (
                (0, _typeof3['default'])(def$$1) === 'object'
              ) {
                var res = {}
                if (def$$1.css !== false) {
                  extend(res, autoCssTransition(def$$1.name || 'v'))
                }
                extend(res, def$$1)
                return res
              } else if (typeof def$$1 === 'string') {
                return autoCssTransition(def$$1)
              }
            }
            var autoCssTransition = cached(function(name) {
              return {
                enterClass: name + '-enter',
                enterToClass: name + '-enter-to',
                enterActiveClass: name + '-enter-active',
                leaveClass: name + '-leave',
                leaveToClass: name + '-leave-to',
                leaveActiveClass: name + '-leave-active'
              }
            })
            var hasTransition = inBrowser && !isIE9
            var TRANSITION = 'transition'
            var ANIMATION = 'animation' // Transition property/event sniffing
            var transitionProp = 'transition'
            var transitionEndEvent = 'transitionend'
            var animationProp = 'animation'
            var animationEndEvent = 'animationend'
            if (hasTransition) {
              /* istanbul ignore if */ if (
                window.ontransitionend === undefined &&
                window.onwebkittransitionend !== undefined
              ) {
                transitionProp = 'WebkitTransition'
                transitionEndEvent = 'webkitTransitionEnd'
              }
              if (
                window.onanimationend === undefined &&
                window.onwebkitanimationend !== undefined
              ) {
                animationProp = 'WebkitAnimation'
                animationEndEvent = 'webkitAnimationEnd'
              }
            } // binding to window is necessary to make hot reload work in IE in strict mode
            var raf = inBrowser
              ? window.requestAnimationFrame
                ? window.requestAnimationFrame.bind(window)
                : setTimeout
              : /* istanbul ignore next */ function(fn) {
                  return fn()
                }
            function nextFrame(fn) {
              raf(function() {
                raf(fn)
              })
            }
            function addTransitionClass(el, cls) {
              var transitionClasses =
                el._transitionClasses || (el._transitionClasses = [])
              if (transitionClasses.indexOf(cls) < 0) {
                transitionClasses.push(cls)
                addClass(el, cls)
              }
            }
            function removeTransitionClass(el, cls) {
              if (el._transitionClasses) {
                remove(el._transitionClasses, cls)
              }
              removeClass(el, cls)
            }
            function whenTransitionEnds(el, expectedType, cb) {
              var ref = getTransitionInfo(el, expectedType)
              var type = ref.type
              var timeout = ref.timeout
              var propCount = ref.propCount
              if (!type) {
                return cb()
              }
              var event =
                type === TRANSITION ? transitionEndEvent : animationEndEvent
              var ended = 0
              var end = function end() {
                el.removeEventListener(event, onEnd)
                cb()
              }
              var onEnd = function onEnd(e) {
                if (e.target === el) {
                  if (++ended >= propCount) {
                    end()
                  }
                }
              }
              setTimeout(function() {
                if (ended < propCount) {
                  end()
                }
              }, timeout + 1)
              el.addEventListener(event, onEnd)
            }
            var transformRE = /\b(transform|all)(,|$)/
            function getTransitionInfo(el, expectedType) {
              var styles = window.getComputedStyle(el) // JSDOM may return undefined for transition properties
              var transitionDelays = (
                styles[transitionProp + 'Delay'] || ''
              ).split(', ')
              var transitionDurations = (
                styles[transitionProp + 'Duration'] || ''
              ).split(', ')
              var transitionTimeout = getTimeout(
                transitionDelays,
                transitionDurations
              )
              var animationDelays = (
                styles[animationProp + 'Delay'] || ''
              ).split(', ')
              var animationDurations = (
                styles[animationProp + 'Duration'] || ''
              ).split(', ')
              var animationTimeout = getTimeout(
                animationDelays,
                animationDurations
              )
              var type
              var timeout = 0
              var propCount = 0
              /* istanbul ignore if */ if (expectedType === TRANSITION) {
                if (transitionTimeout > 0) {
                  type = TRANSITION
                  timeout = transitionTimeout
                  propCount = transitionDurations.length
                }
              } else if (expectedType === ANIMATION) {
                if (animationTimeout > 0) {
                  type = ANIMATION
                  timeout = animationTimeout
                  propCount = animationDurations.length
                }
              } else {
                timeout = Math.max(transitionTimeout, animationTimeout)
                type =
                  timeout > 0
                    ? transitionTimeout > animationTimeout
                      ? TRANSITION
                      : ANIMATION
                    : null
                propCount = type
                  ? type === TRANSITION
                    ? transitionDurations.length
                    : animationDurations.length
                  : 0
              }
              var hasTransform =
                type === TRANSITION &&
                transformRE.test(styles[transitionProp + 'Property'])
              return {
                type: type,
                timeout: timeout,
                propCount: propCount,
                hasTransform: hasTransform
              }
            }
            function getTimeout(delays, durations) {
              /* istanbul ignore next */ while (
                delays.length < durations.length
              ) {
                delays = delays.concat(delays)
              }
              return Math.max.apply(
                null,
                durations.map(function(d, i) {
                  return toMs(d) + toMs(delays[i])
                })
              )
            } // Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers
            // in a locale-dependent way, using a comma instead of a dot.
            // If comma is not replaced with a dot, the input will be rounded down (i.e. acting
            // as a floor function) causing unexpected behaviors
            function toMs(s) {
              return Number(s.slice(0, -1).replace(',', '.')) * 1000
            }
            /*  */ function enter(vnode, toggleDisplay) {
              var el = vnode.elm // call leave callback now
              if (isDef(el._leaveCb)) {
                el._leaveCb.cancelled = true
                el._leaveCb()
              }
              var data = resolveTransition(vnode.data.transition)
              if (isUndef(data)) {
                return
              }
              /* istanbul ignore if */ if (
                isDef(el._enterCb) ||
                el.nodeType !== 1
              ) {
                return
              }
              var css = data.css
              var type = data.type
              var enterClass = data.enterClass
              var enterToClass = data.enterToClass
              var enterActiveClass = data.enterActiveClass
              var appearClass = data.appearClass
              var appearToClass = data.appearToClass
              var appearActiveClass = data.appearActiveClass
              var beforeEnter = data.beforeEnter
              var enter = data.enter
              var afterEnter = data.afterEnter
              var enterCancelled = data.enterCancelled
              var beforeAppear = data.beforeAppear
              var appear = data.appear
              var afterAppear = data.afterAppear
              var appearCancelled = data.appearCancelled
              var duration = data.duration // activeInstance will always be the <transition> component managing this
              // transition. One edge case to check is when the <transition> is placed
              // as the root node of a child component. In that case we need to check
              // <transition>'s parent for appear check.
              var context = activeInstance
              var transitionNode = activeInstance.$vnode
              while (transitionNode && transitionNode.parent) {
                context = transitionNode.context
                transitionNode = transitionNode.parent
              }
              var isAppear = !context._isMounted || !vnode.isRootInsert
              if (isAppear && !appear && appear !== '') {
                return
              }
              var startClass =
                isAppear && appearClass ? appearClass : enterClass
              var activeClass =
                isAppear && appearActiveClass
                  ? appearActiveClass
                  : enterActiveClass
              var toClass =
                isAppear && appearToClass ? appearToClass : enterToClass
              var beforeEnterHook = isAppear
                ? beforeAppear || beforeEnter
                : beforeEnter
              var enterHook = isAppear
                ? typeof appear === 'function'
                  ? appear
                  : enter
                : enter
              var afterEnterHook = isAppear
                ? afterAppear || afterEnter
                : afterEnter
              var enterCancelledHook = isAppear
                ? appearCancelled || enterCancelled
                : enterCancelled
              var explicitEnterDuration = toNumber(
                isObject(duration) ? duration.enter : duration
              )
              if (explicitEnterDuration != null) {
                checkDuration(explicitEnterDuration, 'enter', vnode)
              }
              var expectsCSS = css !== false && !isIE9
              var userWantsControl = getHookArgumentsLength(enterHook)
              var cb = (el._enterCb = once(function() {
                if (expectsCSS) {
                  removeTransitionClass(el, toClass)
                  removeTransitionClass(el, activeClass)
                }
                if (cb.cancelled) {
                  if (expectsCSS) {
                    removeTransitionClass(el, startClass)
                  }
                  enterCancelledHook && enterCancelledHook(el)
                } else {
                  afterEnterHook && afterEnterHook(el)
                }
                el._enterCb = null
              }))
              if (!vnode.data.show) {
                // remove pending leave element on enter by injecting an insert hook
                mergeVNodeHook(vnode, 'insert', function() {
                  var parent = el.parentNode
                  var pendingNode =
                    parent && parent._pending && parent._pending[vnode.key]
                  if (
                    pendingNode &&
                    pendingNode.tag === vnode.tag &&
                    pendingNode.elm._leaveCb
                  ) {
                    pendingNode.elm._leaveCb()
                  }
                  enterHook && enterHook(el, cb)
                })
              } // start enter transition
              beforeEnterHook && beforeEnterHook(el)
              if (expectsCSS) {
                addTransitionClass(el, startClass)
                addTransitionClass(el, activeClass)
                nextFrame(function() {
                  removeTransitionClass(el, startClass)
                  if (!cb.cancelled) {
                    addTransitionClass(el, toClass)
                    if (!userWantsControl) {
                      if (isValidDuration(explicitEnterDuration)) {
                        setTimeout(cb, explicitEnterDuration)
                      } else {
                        whenTransitionEnds(el, type, cb)
                      }
                    }
                  }
                })
              }
              if (vnode.data.show) {
                toggleDisplay && toggleDisplay()
                enterHook && enterHook(el, cb)
              }
              if (!expectsCSS && !userWantsControl) {
                cb()
              }
            }
            function leave(vnode, rm) {
              var el = vnode.elm // call enter callback now
              if (isDef(el._enterCb)) {
                el._enterCb.cancelled = true
                el._enterCb()
              }
              var data = resolveTransition(vnode.data.transition)
              if (isUndef(data) || el.nodeType !== 1) {
                return rm()
              }
              /* istanbul ignore if */ if (isDef(el._leaveCb)) {
                return
              }
              var css = data.css
              var type = data.type
              var leaveClass = data.leaveClass
              var leaveToClass = data.leaveToClass
              var leaveActiveClass = data.leaveActiveClass
              var beforeLeave = data.beforeLeave
              var leave = data.leave
              var afterLeave = data.afterLeave
              var leaveCancelled = data.leaveCancelled
              var delayLeave = data.delayLeave
              var duration = data.duration
              var expectsCSS = css !== false && !isIE9
              var userWantsControl = getHookArgumentsLength(leave)
              var explicitLeaveDuration = toNumber(
                isObject(duration) ? duration.leave : duration
              )
              if (isDef(explicitLeaveDuration)) {
                checkDuration(explicitLeaveDuration, 'leave', vnode)
              }
              var cb = (el._leaveCb = once(function() {
                if (el.parentNode && el.parentNode._pending) {
                  el.parentNode._pending[vnode.key] = null
                }
                if (expectsCSS) {
                  removeTransitionClass(el, leaveToClass)
                  removeTransitionClass(el, leaveActiveClass)
                }
                if (cb.cancelled) {
                  if (expectsCSS) {
                    removeTransitionClass(el, leaveClass)
                  }
                  leaveCancelled && leaveCancelled(el)
                } else {
                  rm()
                  afterLeave && afterLeave(el)
                }
                el._leaveCb = null
              }))
              if (delayLeave) {
                delayLeave(performLeave)
              } else {
                performLeave()
              }
              function performLeave() {
                // the delayed leave may have already been cancelled
                if (cb.cancelled) {
                  return
                } // record leaving element
                if (!vnode.data.show && el.parentNode) {
                  ;(el.parentNode._pending || (el.parentNode._pending = {}))[
                    vnode.key
                  ] = vnode
                }
                beforeLeave && beforeLeave(el)
                if (expectsCSS) {
                  addTransitionClass(el, leaveClass)
                  addTransitionClass(el, leaveActiveClass)
                  nextFrame(function() {
                    removeTransitionClass(el, leaveClass)
                    if (!cb.cancelled) {
                      addTransitionClass(el, leaveToClass)
                      if (!userWantsControl) {
                        if (isValidDuration(explicitLeaveDuration)) {
                          setTimeout(cb, explicitLeaveDuration)
                        } else {
                          whenTransitionEnds(el, type, cb)
                        }
                      }
                    }
                  })
                }
                leave && leave(el, cb)
                if (!expectsCSS && !userWantsControl) {
                  cb()
                }
              }
            } // only used in dev mode
            function checkDuration(val, name, vnode) {
              if (typeof val !== 'number') {
                warn(
                  '<transition> explicit ' +
                    name +
                    ' duration is not a valid number - ' +
                    'got ' +
                    JSON.stringify(val) +
                    '.',
                  vnode.context
                )
              } else if (isNaN(val)) {
                warn(
                  '<transition> explicit ' +
                    name +
                    ' duration is NaN - ' +
                    'the duration expression might be incorrect.',
                  vnode.context
                )
              }
            }
            function isValidDuration(val) {
              return typeof val === 'number' && !isNaN(val)
            }
            /**
             * Normalize a transition hook's argument length. The hook may be:
             * - a merged hook (invoker) with the original in .fns
             * - a wrapped component method (check ._length)
             * - a plain function (.length)
             */ function getHookArgumentsLength(fn) {
              if (isUndef(fn)) {
                return false
              }
              var invokerFns = fn.fns
              if (isDef(invokerFns)) {
                // invoker
                return getHookArgumentsLength(
                  Array.isArray(invokerFns) ? invokerFns[0] : invokerFns
                )
              } else {
                return (fn._length || fn.length) > 1
              }
            }
            function _enter(_, vnode) {
              if (vnode.data.show !== true) {
                enter(vnode)
              }
            }
            var transition = inBrowser
              ? {
                  create: _enter,
                  activate: _enter,
                  remove: function remove$$1(vnode, rm) {
                    /* istanbul ignore else */ if (vnode.data.show !== true) {
                      leave(vnode, rm)
                    } else {
                      rm()
                    }
                  }
                }
              : {}
            var platformModules = [
              attrs,
              klass,
              events,
              domProps,
              style,
              transition
            ] /*  */ // the directive module should be applied last, after all
            // built-in modules have been applied.
            var modules = platformModules.concat(baseModules)
            var patch = createPatchFunction({
              nodeOps: nodeOps,
              modules: modules
            })
            /**
             * Not type checking this file because flow doesn't like attaching
             * properties to Elements.
             */ /* istanbul ignore if */ if (isIE9) {
              // http://www.matts411.com/post/internet-explorer-9-oninput/
              document.addEventListener('selectionchange', function() {
                var el = document.activeElement
                if (el && el.vmodel) {
                  trigger(el, 'input')
                }
              })
            }
            var directive = {
              inserted: function inserted(el, binding, vnode, oldVnode) {
                if (vnode.tag === 'select') {
                  // #6903
                  if (oldVnode.elm && !oldVnode.elm._vOptions) {
                    mergeVNodeHook(vnode, 'postpatch', function() {
                      directive.componentUpdated(el, binding, vnode)
                    })
                  } else {
                    setSelected(el, binding, vnode.context)
                  }
                  el._vOptions = [].map.call(el.options, getValue)
                } else if (
                  vnode.tag === 'textarea' ||
                  isTextInputType(el.type)
                ) {
                  el._vModifiers = binding.modifiers
                  if (!binding.modifiers.lazy) {
                    el.addEventListener('compositionstart', onCompositionStart)
                    el.addEventListener('compositionend', onCompositionEnd) // Safari < 10.2 & UIWebView doesn't fire compositionend when
                    // switching focus before confirming composition choice
                    // this also fixes the issue where some browsers e.g. iOS Chrome
                    // fires "change" instead of "input" on autocomplete.
                    el.addEventListener('change', onCompositionEnd)
                    /* istanbul ignore if */ if (isIE9) {
                      el.vmodel = true
                    }
                  }
                }
              },
              componentUpdated: function componentUpdated(el, binding, vnode) {
                if (vnode.tag === 'select') {
                  setSelected(el, binding, vnode.context) // in case the options rendered by v-for have changed,
                  // it's possible that the value is out-of-sync with the rendered options.
                  // detect such cases and filter out values that no longer has a matching
                  // option in the DOM.
                  var prevOptions = el._vOptions
                  var curOptions = (el._vOptions = [].map.call(
                    el.options,
                    getValue
                  ))
                  if (
                    curOptions.some(function(o, i) {
                      return !looseEqual(o, prevOptions[i])
                    })
                  ) {
                    // trigger change event if
                    // no matching option found for at least one value
                    var needReset = el.multiple
                      ? binding.value.some(function(v) {
                          return hasNoMatchingOption(v, curOptions)
                        })
                      : binding.value !== binding.oldValue &&
                        hasNoMatchingOption(binding.value, curOptions)
                    if (needReset) {
                      trigger(el, 'change')
                    }
                  }
                }
              }
            }
            function setSelected(el, binding, vm) {
              actuallySetSelected(el, binding, vm)
              /* istanbul ignore if */ if (isIE || isEdge) {
                setTimeout(function() {
                  actuallySetSelected(el, binding, vm)
                }, 0)
              }
            }
            function actuallySetSelected(el, binding, vm) {
              var value = binding.value
              var isMultiple = el.multiple
              if (isMultiple && !Array.isArray(value)) {
                warn(
                  '<select multiple v-model="' +
                    binding.expression +
                    '"> ' +
                    'expects an Array value for its binding, but got ' +
                    Object.prototype.toString.call(value).slice(8, -1),
                  vm
                )
                return
              }
              var selected, option
              for (var i = 0, l = el.options.length; i < l; i++) {
                option = el.options[i]
                if (isMultiple) {
                  selected = looseIndexOf(value, getValue(option)) > -1
                  if (option.selected !== selected) {
                    option.selected = selected
                  }
                } else {
                  if (looseEqual(getValue(option), value)) {
                    if (el.selectedIndex !== i) {
                      el.selectedIndex = i
                    }
                    return
                  }
                }
              }
              if (!isMultiple) {
                el.selectedIndex = -1
              }
            }
            function hasNoMatchingOption(value, options) {
              return options.every(function(o) {
                return !looseEqual(o, value)
              })
            }
            function getValue(option) {
              return '_value' in option ? option._value : option.value
            }
            function onCompositionStart(e) {
              e.target.composing = true
            }
            function onCompositionEnd(e) {
              // prevent triggering an input event for no reason
              if (!e.target.composing) {
                return
              }
              e.target.composing = false
              trigger(e.target, 'input')
            }
            function trigger(el, type) {
              var e = document.createEvent('HTMLEvents')
              e.initEvent(type, true, true)
              el.dispatchEvent(e)
            } /*  */ // recursively search for possible transition defined inside the component root
            function locateNode(vnode) {
              return vnode.componentInstance &&
                (!vnode.data || !vnode.data.transition)
                ? locateNode(vnode.componentInstance._vnode)
                : vnode
            }
            var show = {
              bind: function bind(el, ref, vnode) {
                var value = ref.value
                vnode = locateNode(vnode)
                var transition$$1 = vnode.data && vnode.data.transition
                var originalDisplay = (el.__vOriginalDisplay =
                  el.style.display === 'none' ? '' : el.style.display)
                if (value && transition$$1) {
                  vnode.data.show = true
                  enter(vnode, function() {
                    el.style.display = originalDisplay
                  })
                } else {
                  el.style.display = value ? originalDisplay : 'none'
                }
              },
              update: function update(el, ref, vnode) {
                var value = ref.value
                var oldValue = ref.oldValue
                /* istanbul ignore if */ if (!value === !oldValue) {
                  return
                }
                vnode = locateNode(vnode)
                var transition$$1 = vnode.data && vnode.data.transition
                if (transition$$1) {
                  vnode.data.show = true
                  if (value) {
                    enter(vnode, function() {
                      el.style.display = el.__vOriginalDisplay
                    })
                  } else {
                    leave(vnode, function() {
                      el.style.display = 'none'
                    })
                  }
                } else {
                  el.style.display = value ? el.__vOriginalDisplay : 'none'
                }
              },
              unbind: function unbind(el, binding, vnode, oldVnode, isDestroy) {
                if (!isDestroy) {
                  el.style.display = el.__vOriginalDisplay
                }
              }
            }
            var platformDirectives = { model: directive, show: show }
            /*  */ var transitionProps = {
              name: String,
              appear: Boolean,
              css: Boolean,
              mode: String,
              type: String,
              enterClass: String,
              leaveClass: String,
              enterToClass: String,
              leaveToClass: String,
              enterActiveClass: String,
              leaveActiveClass: String,
              appearClass: String,
              appearActiveClass: String,
              appearToClass: String,
              duration: [Number, String, Object]
            } // in case the child is also an abstract component, e.g. <keep-alive>
            // we want to recursively retrieve the real component to be rendered
            function getRealChild(vnode) {
              var compOptions = vnode && vnode.componentOptions
              if (compOptions && compOptions.Ctor.options['abstract']) {
                return getRealChild(
                  getFirstComponentChild(compOptions.children)
                )
              } else {
                return vnode
              }
            }
            function extractTransitionData(comp) {
              var data = {}
              var options = comp.$options // props
              for (var key in options.propsData) {
                data[key] = comp[key]
              } // events.
              // extract listeners and pass them directly to the transition methods
              var listeners = options._parentListeners
              for (var key$1 in listeners) {
                data[camelize(key$1)] = listeners[key$1]
              }
              return data
            }
            function placeholder(h, rawChild) {
              if (/\d-keep-alive$/.test(rawChild.tag)) {
                return h('keep-alive', {
                  props: rawChild.componentOptions.propsData
                })
              }
            }
            function hasParentTransition(vnode) {
              while ((vnode = vnode.parent)) {
                if (vnode.data.transition) {
                  return true
                }
              }
            }
            function isSameChild(child, oldChild) {
              return oldChild.key === child.key && oldChild.tag === child.tag
            }
            var isNotTextNode = function isNotTextNode(c) {
              return c.tag || isAsyncPlaceholder(c)
            }
            var isVShowDirective = function isVShowDirective(d) {
              return d.name === 'show'
            }
            var Transition = {
              name: 'transition',
              props: transitionProps,
              abstract: true,
              render: function render(h) {
                var this$1 = this
                var children = this.$slots['default']
                if (!children) {
                  return
                } // filter out text nodes (possible whitespaces)
                children = children.filter(isNotTextNode)
                /* istanbul ignore if */ if (!children.length) {
                  return
                } // warn multiple elements
                if (children.length > 1) {
                  warn(
                    '<transition> can only be used on a single element. Use ' +
                      '<transition-group> for lists.',
                    this.$parent
                  )
                }
                var mode = this.mode // warn invalid mode
                if (mode && mode !== 'in-out' && mode !== 'out-in') {
                  warn('invalid <transition> mode: ' + mode, this.$parent)
                }
                var rawChild = children[0] // if this is a component root node and the component's
                // parent container node also has transition, skip.
                if (hasParentTransition(this.$vnode)) {
                  return rawChild
                } // apply transition data to child
                // use getRealChild() to ignore abstract components e.g. keep-alive
                var child = getRealChild(rawChild)
                /* istanbul ignore if */ if (!child) {
                  return rawChild
                }
                if (this._leaving) {
                  return placeholder(h, rawChild)
                } // ensure a key that is unique to the vnode type and to this transition
                // component instance. This key will be used to remove pending leaving nodes
                // during entering.
                var id = '__transition-' + this._uid + '-'
                child.key =
                  child.key == null
                    ? child.isComment
                      ? id + 'comment'
                      : id + child.tag
                    : isPrimitive(child.key)
                    ? String(child.key).indexOf(id) === 0
                      ? child.key
                      : id + child.key
                    : child.key
                var data = ((
                  child.data || (child.data = {})
                ).transition = extractTransitionData(this))
                var oldRawChild = this._vnode
                var oldChild = getRealChild(oldRawChild) // mark v-show
                // so that the transition module can hand over the control to the directive
                if (
                  child.data.directives &&
                  child.data.directives.some(isVShowDirective)
                ) {
                  child.data.show = true
                }
                if (
                  oldChild &&
                  oldChild.data &&
                  !isSameChild(child, oldChild) &&
                  !isAsyncPlaceholder(oldChild) && // #6687 component root is a comment node
                  !(
                    oldChild.componentInstance &&
                    oldChild.componentInstance._vnode.isComment
                  )
                ) {
                  // replace old child transition data with fresh one
                  // important for dynamic transitions!
                  var oldData = (oldChild.data.transition = extend({}, data)) // handle transition mode
                  if (mode === 'out-in') {
                    // return placeholder node and queue update when leave finishes
                    this._leaving = true
                    mergeVNodeHook(oldData, 'afterLeave', function() {
                      this$1._leaving = false
                      this$1.$forceUpdate()
                    })
                    return placeholder(h, rawChild)
                  } else if (mode === 'in-out') {
                    if (isAsyncPlaceholder(child)) {
                      return oldRawChild
                    }
                    var delayedLeave
                    var performLeave = function performLeave() {
                      delayedLeave()
                    }
                    mergeVNodeHook(data, 'afterEnter', performLeave)
                    mergeVNodeHook(data, 'enterCancelled', performLeave)
                    mergeVNodeHook(oldData, 'delayLeave', function(leave) {
                      delayedLeave = leave
                    })
                  }
                }
                return rawChild
              }
            }
            /*  */ var props = extend(
              { tag: String, moveClass: String },
              transitionProps
            )
            delete props.mode
            var TransitionGroup = {
              props: props,
              beforeMount: function beforeMount() {
                var this$1 = this
                var update = this._update
                this._update = function(vnode, hydrating) {
                  var restoreActiveInstance = setActiveInstance(this$1) // force removing pass
                  this$1.__patch__(
                    this$1._vnode,
                    this$1.kept,
                    false, // hydrating
                    true // removeOnly (!important, avoids unnecessary moves)
                  )
                  this$1._vnode = this$1.kept
                  restoreActiveInstance()
                  update.call(this$1, vnode, hydrating)
                }
              },
              render: function render(h) {
                var tag = this.tag || this.$vnode.data.tag || 'span'
                var map = Object.create(null)
                var prevChildren = (this.prevChildren = this.children)
                var rawChildren = this.$slots['default'] || []
                var children = (this.children = [])
                var transitionData = extractTransitionData(this)
                for (var i = 0; i < rawChildren.length; i++) {
                  var c = rawChildren[i]
                  if (c.tag) {
                    if (
                      c.key != null &&
                      String(c.key).indexOf('__vlist') !== 0
                    ) {
                      children.push(c)
                      map[c.key] = c
                      ;(c.data || (c.data = {})).transition = transitionData
                    } else {
                      var opts = c.componentOptions
                      var name = opts
                        ? opts.Ctor.options.name || opts.tag || ''
                        : c.tag
                      warn(
                        '<transition-group> children must be keyed: <' +
                          name +
                          '>'
                      )
                    }
                  }
                }
                if (prevChildren) {
                  var kept = []
                  var removed = []
                  for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {
                    var c$1 = prevChildren[i$1]
                    c$1.data.transition = transitionData
                    c$1.data.pos = c$1.elm.getBoundingClientRect()
                    if (map[c$1.key]) {
                      kept.push(c$1)
                    } else {
                      removed.push(c$1)
                    }
                  }
                  this.kept = h(tag, null, kept)
                  this.removed = removed
                }
                return h(tag, null, children)
              },
              updated: function updated() {
                var children = this.prevChildren
                var moveClass = this.moveClass || (this.name || 'v') + '-move'
                if (
                  !children.length ||
                  !this.hasMove(children[0].elm, moveClass)
                ) {
                  return
                } // we divide the work into three loops to avoid mixing DOM reads and writes
                // in each iteration - which helps prevent layout thrashing.
                children.forEach(callPendingCbs)
                children.forEach(recordPosition)
                children.forEach(applyTranslation) // force reflow to put everything in position
                // assign to this to avoid being removed in tree-shaking
                // $flow-disable-line
                this._reflow = document.body.offsetHeight
                children.forEach(function(c) {
                  if (c.data.moved) {
                    var el = c.elm
                    var s = el.style
                    addTransitionClass(el, moveClass)
                    s.transform = s.WebkitTransform = s.transitionDuration = ''
                    el.addEventListener(
                      transitionEndEvent,
                      (el._moveCb = function cb(e) {
                        if (e && e.target !== el) {
                          return
                        }
                        if (!e || /transform$/.test(e.propertyName)) {
                          el.removeEventListener(transitionEndEvent, cb)
                          el._moveCb = null
                          removeTransitionClass(el, moveClass)
                        }
                      })
                    )
                  }
                })
              },
              methods: {
                hasMove: function hasMove(el, moveClass) {
                  /* istanbul ignore if */ if (!hasTransition) {
                    return false
                  }
                  /* istanbul ignore if */ if (this._hasMove) {
                    return this._hasMove
                  } // Detect whether an element with the move class applied has
                  // CSS transitions. Since the element may be inside an entering
                  // transition at this very moment, we make a clone of it and remove
                  // all other transition classes applied to ensure only the move class
                  // is applied.
                  var clone = el.cloneNode()
                  if (el._transitionClasses) {
                    el._transitionClasses.forEach(function(cls) {
                      removeClass(clone, cls)
                    })
                  }
                  addClass(clone, moveClass)
                  clone.style.display = 'none'
                  this.$el.appendChild(clone)
                  var info = getTransitionInfo(clone)
                  this.$el.removeChild(clone)
                  return (this._hasMove = info.hasTransform)
                }
              }
            }
            function callPendingCbs(c) {
              /* istanbul ignore if */ if (c.elm._moveCb) {
                c.elm._moveCb()
              }
              /* istanbul ignore if */ if (c.elm._enterCb) {
                c.elm._enterCb()
              }
            }
            function recordPosition(c) {
              c.data.newPos = c.elm.getBoundingClientRect()
            }
            function applyTranslation(c) {
              var oldPos = c.data.pos
              var newPos = c.data.newPos
              var dx = oldPos.left - newPos.left
              var dy = oldPos.top - newPos.top
              if (dx || dy) {
                c.data.moved = true
                var s = c.elm.style
                s.transform = s.WebkitTransform =
                  'translate(' + dx + 'px,' + dy + 'px)'
                s.transitionDuration = '0s'
              }
            }
            var platformComponents = {
              Transition: Transition,
              TransitionGroup: TransitionGroup
            } /*  */ // install platform specific utils
            Vue.config.mustUseProp = mustUseProp
            Vue.config.isReservedTag = isReservedTag
            Vue.config.isReservedAttr = isReservedAttr
            Vue.config.getTagNamespace = getTagNamespace
            Vue.config.isUnknownElement = isUnknownElement // install platform runtime directives & components
            extend(Vue.options.directives, platformDirectives)
            extend(Vue.options.components, platformComponents) // install platform patch function
            Vue.prototype.__patch__ = inBrowser ? patch : noop // public mount method
            Vue.prototype.$mount = function(el, hydrating) {
              el = el && inBrowser ? query(el) : undefined
              return mountComponent(this, el, hydrating)
            } // devtools global hook
            /* istanbul ignore next */ if (inBrowser) {
              setTimeout(function() {
                if (config.devtools) {
                  if (devtools) {
                    devtools.emit('init', Vue)
                  } else {
                    console[console.info ? 'info' : 'log'](
                      'Download the Vue Devtools extension for a better development experience:\n' +
                        'https://github.com/vuejs/vue-devtools'
                    )
                  }
                }
                if (
                  config.productionTip !== false &&
                  typeof console !== 'undefined'
                ) {
                  console[console.info ? 'info' : 'log'](
                    'You are running Vue in development mode.\n' +
                      'Make sure to turn on production mode when deploying for production.\n' +
                      'See more tips at https://vuejs.org/guide/deployment.html'
                  )
                }
              }, 0)
            }
            /*  */ module.exports = Vue
          }.call(
            this,
            typeof global !== 'undefined'
              ? global
              : typeof self !== 'undefined'
              ? self
              : typeof window !== 'undefined'
              ? window
              : {},
            require('timers').setImmediate
          ))
        }.apply(this, arguments))
      },
      { timers: 226 }
    ],
    234: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/vue/dist/vue.runtime.common.js',
          module
        )
        ;(function() {
          ;(function(process) {
            if (process.env.NODE_ENV === 'production') {
              module.exports = require('./vue.runtime.common.prod.js')
            } else {
              module.exports = require('./vue.runtime.common.dev.js')
            }
          }.call(this, require('_process')))
        }.apply(this, arguments))
      },
      {
        './vue.runtime.common.dev.js': 233,
        './vue.runtime.common.prod.js': 235,
        _process: 210
      }
    ],
    235: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/vue/dist/vue.runtime.common.prod.js',
          module
        )
        ;(function() {
          ;(function(global, setImmediate) {
            /*!
             * Vue.js v2.6.11
             * (c) 2014-2019 Evan You
             * Released under the MIT License.
             */ 'use strict'
            var t = Object.freeze({})
            function e(t) {
              return null == t
            }
            function n(t) {
              return null != t
            }
            function r(t) {
              return !0 === t
            }
            function o(t) {
              return (
                'string' == typeof t ||
                'number' == typeof t ||
                'symbol' == (0, _typeof3['default'])(t) ||
                'boolean' == typeof t
              )
            }
            function i(t) {
              return null !== t && 'object' == (0, _typeof3['default'])(t)
            }
            var a = Object.prototype.toString
            function s(t) {
              return '[object Object]' === a.call(t)
            }
            function c(t) {
              var e = parseFloat(String(t))
              return e >= 0 && Math.floor(e) === e && isFinite(t)
            }
            function u(t) {
              return (
                n(t) &&
                'function' == typeof t.then &&
                'function' == typeof t['catch']
              )
            }
            function l(t) {
              return null == t
                ? ''
                : Array.isArray(t) || (s(t) && t.toString === a)
                ? JSON.stringify(t, null, 2)
                : String(t)
            }
            function f(t) {
              var e = parseFloat(t)
              return isNaN(e) ? t : e
            }
            function p(t, e) {
              for (
                var n = Object.create(null), r = t.split(','), o = 0;
                o < r.length;
                o++
              ) {
                n[r[o]] = !0
              }
              return e
                ? function(t) {
                    return n[t.toLowerCase()]
                  }
                : function(t) {
                    return n[t]
                  }
            }
            var d = p('key,ref,slot,slot-scope,is')
            function v(t, e) {
              if (t.length) {
                var n = t.indexOf(e)
                if (n > -1) return t.splice(n, 1)
              }
            }
            var h = Object.prototype.hasOwnProperty
            function m(t, e) {
              return h.call(t, e)
            }
            function y(t) {
              var e = Object.create(null)
              return function(n) {
                return e[n] || (e[n] = t(n))
              }
            }
            var g = /-(\w)/g,
              _ = y(function(t) {
                return t.replace(g, function(t, e) {
                  return e ? e.toUpperCase() : ''
                })
              }),
              b = y(function(t) {
                return t.charAt(0).toUpperCase() + t.slice(1)
              }),
              C = /\B([A-Z])/g,
              $ = y(function(t) {
                return t.replace(C, '-$1').toLowerCase()
              })
            var w = Function.prototype.bind
              ? function(t, e) {
                  return t.bind(e)
                }
              : function(t, e) {
                  function n(n) {
                    var r = arguments.length
                    return r
                      ? r > 1
                        ? t.apply(e, arguments)
                        : t.call(e, n)
                      : t.call(e)
                  }
                  return (n._length = t.length), n
                }
            function A(t, e) {
              e = e || 0
              for (var n = t.length - e, r = new Array(n); n--; ) {
                r[n] = t[n + e]
              }
              return r
            }
            function x(t, e) {
              for (var n in e) {
                t[n] = e[n]
              }
              return t
            }
            function O(t) {
              for (var e = {}, n = 0; n < t.length; n++) {
                t[n] && x(e, t[n])
              }
              return e
            }
            function k(t, e, n) {}
            var S = function S(t, e, n) {
                return !1
              },
              E = function E(t) {
                return t
              }
            function j(t, e) {
              if (t === e) return !0
              var n = i(t),
                r = i(e)
              if (!n || !r) return !n && !r && String(t) === String(e)
              try {
                var o = Array.isArray(t),
                  a = Array.isArray(e)
                if (o && a)
                  return (
                    t.length === e.length &&
                    t.every(function(t, n) {
                      return j(t, e[n])
                    })
                  )
                if (t instanceof Date && e instanceof Date)
                  return t.getTime() === e.getTime()
                if (o || a) return !1
                var s = Object.keys(t),
                  c = Object.keys(e)
                return (
                  s.length === c.length &&
                  s.every(function(n) {
                    return j(t[n], e[n])
                  })
                )
              } catch (t) {
                return !1
              }
            }
            function T(t, e) {
              for (var n = 0; n < t.length; n++) {
                if (j(t[n], e)) return n
              }
              return -1
            }
            function I(t) {
              var e = !1
              return function() {
                e || ((e = !0), t.apply(this, arguments))
              }
            }
            var D = 'data-server-rendered',
              N = ['component', 'directive', 'filter'],
              P = [
                'beforeCreate',
                'created',
                'beforeMount',
                'mounted',
                'beforeUpdate',
                'updated',
                'beforeDestroy',
                'destroyed',
                'activated',
                'deactivated',
                'errorCaptured',
                'serverPrefetch'
              ],
              L = {
                optionMergeStrategies: Object.create(null),
                silent: !1,
                productionTip: !1,
                devtools: !1,
                performance: !1,
                errorHandler: null,
                warnHandler: null,
                ignoredElements: [],
                keyCodes: Object.create(null),
                isReservedTag: S,
                isReservedAttr: S,
                isUnknownElement: S,
                getTagNamespace: k,
                parsePlatformTagName: E,
                mustUseProp: S,
                async: !0,
                _lifecycleHooks: P
              }
            function M(t, e, n, r) {
              Object.defineProperty(t, e, {
                value: n,
                enumerable: !!r,
                writable: !0,
                configurable: !0
              })
            }
            var F = new RegExp(
              '[^' +
                /a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/
                  .source +
                '.$_\\d]'
            )
            var R,
              U = '__proto__' in {},
              H = 'undefined' != typeof window,
              B =
                'undefined' != typeof WXEnvironment && !!WXEnvironment.platform,
              V = B && WXEnvironment.platform.toLowerCase(),
              z = H && window.navigator.userAgent.toLowerCase(),
              W = z && /msie|trident/.test(z),
              q = z && z.indexOf('msie 9.0') > 0,
              K = z && z.indexOf('edge/') > 0,
              X =
                (z && z.indexOf('android'),
                (z && /iphone|ipad|ipod|ios/.test(z)) || 'ios' === V),
              G =
                (z && /chrome\/\d+/.test(z),
                z && /phantomjs/.test(z),
                z && z.match(/firefox\/(\d+)/)),
              Z = {}.watch,
              J = !1
            if (H)
              try {
                var Q = {}
                Object.defineProperty(Q, 'passive', {
                  get: function get() {
                    J = !0
                  }
                }),
                  window.addEventListener('test-passive', null, Q)
              } catch (t) {}
            var Y = function Y() {
                return (
                  void 0 === R &&
                    (R =
                      !H &&
                      !B &&
                      'undefined' != typeof global &&
                      global.process &&
                      'server' === global.process.env.VUE_ENV),
                  R
                )
              },
              tt = H && window.__VUE_DEVTOOLS_GLOBAL_HOOK__
            function et(t) {
              return 'function' == typeof t && /native code/.test(t.toString())
            }
            var nt,
              rt =
                'undefined' != typeof Symbol &&
                et(Symbol) &&
                'undefined' != typeof Reflect &&
                et(Reflect.ownKeys)
            nt =
              'undefined' != typeof Set && et(Set)
                ? Set
                : (function() {
                    function t() {
                      this.set = Object.create(null)
                    }
                    return (
                      (t.prototype.has = function(t) {
                        return !0 === this.set[t]
                      }),
                      (t.prototype.add = function(t) {
                        this.set[t] = !0
                      }),
                      (t.prototype.clear = function() {
                        this.set = Object.create(null)
                      }),
                      t
                    )
                  })()
            var ot = k,
              it = 0,
              at = function at() {
                ;(this.id = it++), (this.subs = [])
              }
            ;(at.prototype.addSub = function(t) {
              this.subs.push(t)
            }),
              (at.prototype.removeSub = function(t) {
                v(this.subs, t)
              }),
              (at.prototype.depend = function() {
                at.target && at.target.addDep(this)
              }),
              (at.prototype.notify = function() {
                for (
                  var t = this.subs.slice(), e = 0, n = t.length;
                  e < n;
                  e++
                ) {
                  t[e].update()
                }
              }),
              (at.target = null)
            var st = []
            function ct(t) {
              st.push(t), (at.target = t)
            }
            function ut() {
              st.pop(), (at.target = st[st.length - 1])
            }
            var lt = function lt(t, e, n, r, o, i, a, s) {
                ;(this.tag = t),
                  (this.data = e),
                  (this.children = n),
                  (this.text = r),
                  (this.elm = o),
                  (this.ns = void 0),
                  (this.context = i),
                  (this.fnContext = void 0),
                  (this.fnOptions = void 0),
                  (this.fnScopeId = void 0),
                  (this.key = e && e.key),
                  (this.componentOptions = a),
                  (this.componentInstance = void 0),
                  (this.parent = void 0),
                  (this.raw = !1),
                  (this.isStatic = !1),
                  (this.isRootInsert = !0),
                  (this.isComment = !1),
                  (this.isCloned = !1),
                  (this.isOnce = !1),
                  (this.asyncFactory = s),
                  (this.asyncMeta = void 0),
                  (this.isAsyncPlaceholder = !1)
              },
              ft = { child: { configurable: !0 } }
            ;(ft.child.get = function() {
              return this.componentInstance
            }),
              Object.defineProperties(lt.prototype, ft)
            var pt = function pt(t) {
              void 0 === t && (t = '')
              var e = new lt()
              return (e.text = t), (e.isComment = !0), e
            }
            function dt(t) {
              return new lt(void 0, void 0, void 0, String(t))
            }
            function vt(t) {
              var e = new lt(
                t.tag,
                t.data,
                t.children && t.children.slice(),
                t.text,
                t.elm,
                t.context,
                t.componentOptions,
                t.asyncFactory
              )
              return (
                (e.ns = t.ns),
                (e.isStatic = t.isStatic),
                (e.key = t.key),
                (e.isComment = t.isComment),
                (e.fnContext = t.fnContext),
                (e.fnOptions = t.fnOptions),
                (e.fnScopeId = t.fnScopeId),
                (e.asyncMeta = t.asyncMeta),
                (e.isCloned = !0),
                e
              )
            }
            var ht = Array.prototype,
              mt = Object.create(ht)
            ;[
              'push',
              'pop',
              'shift',
              'unshift',
              'splice',
              'sort',
              'reverse'
            ].forEach(function(t) {
              var e = ht[t]
              M(mt, t, function() {
                for (var n = [], r = arguments.length; r--; ) {
                  n[r] = arguments[r]
                }
                var o,
                  i = e.apply(this, n),
                  a = this.__ob__
                switch (t) {
                  case 'push':
                  case 'unshift':
                    o = n
                    break
                  case 'splice':
                    o = n.slice(2)
                }
                return o && a.observeArray(o), a.dep.notify(), i
              })
            })
            var yt = Object.getOwnPropertyNames(mt),
              gt = !0
            function _t(t) {
              gt = t
            }
            var bt = function bt(t) {
              var e
              ;(this.value = t),
                (this.dep = new at()),
                (this.vmCount = 0),
                M(t, '__ob__', this),
                Array.isArray(t)
                  ? (U
                      ? ((e = mt), (t.__proto__ = e))
                      : (function(t, e, n) {
                          for (var r = 0, o = n.length; r < o; r++) {
                            var i = n[r]
                            M(t, i, e[i])
                          }
                        })(t, mt, yt),
                    this.observeArray(t))
                  : this.walk(t)
            }
            function Ct(t, e) {
              var n
              if (i(t) && !(t instanceof lt))
                return (
                  m(t, '__ob__') && t.__ob__ instanceof bt
                    ? (n = t.__ob__)
                    : gt &&
                      !Y() &&
                      (Array.isArray(t) || s(t)) &&
                      Object.isExtensible(t) &&
                      !t._isVue &&
                      (n = new bt(t)),
                  e && n && n.vmCount++,
                  n
                )
            }
            function $t(t, e, n, r, o) {
              var i = new at(),
                a = Object.getOwnPropertyDescriptor(t, e)
              if (!a || !1 !== a.configurable) {
                var s = a && a.get,
                  c = a && a.set
                ;(s && !c) || 2 !== arguments.length || (n = t[e])
                var u = !o && Ct(n)
                Object.defineProperty(t, e, {
                  enumerable: !0,
                  configurable: !0,
                  get: function get() {
                    var e = s ? s.call(t) : n
                    return (
                      at.target &&
                        (i.depend(),
                        u &&
                          (u.dep.depend(),
                          Array.isArray(e) &&
                            (function t(e) {
                              for (
                                var n = void 0, r = 0, o = e.length;
                                r < o;
                                r++
                              ) {
                                ;(n = e[r]) &&
                                  n.__ob__ &&
                                  n.__ob__.dep.depend(),
                                  Array.isArray(n) && t(n)
                              }
                            })(e))),
                      e
                    )
                  },
                  set: function set(e) {
                    var r = s ? s.call(t) : n
                    e === r ||
                      (e != e && r != r) ||
                      (s && !c) ||
                      (c ? c.call(t, e) : (n = e),
                      (u = !o && Ct(e)),
                      i.notify())
                  }
                })
              }
            }
            function wt(t, e, n) {
              if (Array.isArray(t) && c(e))
                return (t.length = Math.max(t.length, e)), t.splice(e, 1, n), n
              if (e in t && !(e in Object.prototype)) return (t[e] = n), n
              var r = t.__ob__
              return t._isVue || (r && r.vmCount)
                ? n
                : r
                ? ($t(r.value, e, n), r.dep.notify(), n)
                : ((t[e] = n), n)
            }
            function At(t, e) {
              if (Array.isArray(t) && c(e)) t.splice(e, 1)
              else {
                var n = t.__ob__
                t._isVue ||
                  (n && n.vmCount) ||
                  (m(t, e) && (delete t[e], n && n.dep.notify()))
              }
            }
            ;(bt.prototype.walk = function(t) {
              for (var e = Object.keys(t), n = 0; n < e.length; n++) {
                $t(t, e[n])
              }
            }),
              (bt.prototype.observeArray = function(t) {
                for (var e = 0, n = t.length; e < n; e++) {
                  Ct(t[e])
                }
              })
            var xt = L.optionMergeStrategies
            function Ot(t, e) {
              if (!e) return t
              for (
                var n,
                  r,
                  o,
                  i = rt ? Reflect.ownKeys(e) : Object.keys(e),
                  a = 0;
                a < i.length;
                a++
              ) {
                '__ob__' !== (n = i[a]) &&
                  ((r = t[n]),
                  (o = e[n]),
                  m(t, n) ? r !== o && s(r) && s(o) && Ot(r, o) : wt(t, n, o))
              }
              return t
            }
            function kt(t, e, n) {
              return n
                ? function() {
                    var r = 'function' == typeof e ? e.call(n, n) : e,
                      o = 'function' == typeof t ? t.call(n, n) : t
                    return r ? Ot(r, o) : o
                  }
                : e
                ? t
                  ? function() {
                      return Ot(
                        'function' == typeof e ? e.call(this, this) : e,
                        'function' == typeof t ? t.call(this, this) : t
                      )
                    }
                  : e
                : t
            }
            function St(t, e) {
              var n = e ? (t ? t.concat(e) : Array.isArray(e) ? e : [e]) : t
              return n
                ? (function(t) {
                    for (var e = [], n = 0; n < t.length; n++) {
                      ;-1 === e.indexOf(t[n]) && e.push(t[n])
                    }
                    return e
                  })(n)
                : n
            }
            function Et(t, e, n, r) {
              var o = Object.create(t || null)
              return e ? x(o, e) : o
            }
            ;(xt.data = function(t, e, n) {
              return n
                ? kt(t, e, n)
                : e && 'function' != typeof e
                ? t
                : kt(t, e)
            }),
              P.forEach(function(t) {
                xt[t] = St
              }),
              N.forEach(function(t) {
                xt[t + 's'] = Et
              }),
              (xt.watch = function(t, e, n, r) {
                if ((t === Z && (t = void 0), e === Z && (e = void 0), !e))
                  return Object.create(t || null)
                if (!t) return e
                var o = {}
                for (var i in (x(o, t), e)) {
                  var a = o[i],
                    s = e[i]
                  a && !Array.isArray(a) && (a = [a]),
                    (o[i] = a ? a.concat(s) : Array.isArray(s) ? s : [s])
                }
                return o
              }),
              (xt.props = xt.methods = xt.inject = xt.computed = function(
                t,
                e,
                n,
                r
              ) {
                if (!t) return e
                var o = Object.create(null)
                return x(o, t), e && x(o, e), o
              }),
              (xt.provide = kt)
            var jt = function jt(t, e) {
              return void 0 === e ? t : e
            }
            function Tt(t, e, n) {
              if (
                ('function' == typeof e && (e = e.options),
                (function(t, e) {
                  var n = t.props
                  if (n) {
                    var r,
                      o,
                      i = {}
                    if (Array.isArray(n))
                      for (r = n.length; r--; ) {
                        'string' == typeof (o = n[r]) &&
                          (i[_(o)] = { type: null })
                      }
                    else if (s(n))
                      for (var a in n) {
                        ;(o = n[a]), (i[_(a)] = s(o) ? o : { type: o })
                      }
                    t.props = i
                  }
                })(e),
                (function(t, e) {
                  var n = t.inject
                  if (n) {
                    var r = (t.inject = {})
                    if (Array.isArray(n))
                      for (var o = 0; o < n.length; o++) {
                        r[n[o]] = { from: n[o] }
                      }
                    else if (s(n))
                      for (var i in n) {
                        var a = n[i]
                        r[i] = s(a) ? x({ from: i }, a) : { from: a }
                      }
                  }
                })(e),
                (function(t) {
                  var e = t.directives
                  if (e)
                    for (var n in e) {
                      var r = e[n]
                      'function' == typeof r && (e[n] = { bind: r, update: r })
                    }
                })(e),
                !e._base &&
                  (e['extends'] && (t = Tt(t, e['extends'], n)), e.mixins))
              )
                for (var r = 0, o = e.mixins.length; r < o; r++) {
                  t = Tt(t, e.mixins[r], n)
                }
              var i,
                a = {}
              for (i in t) {
                c(i)
              }
              for (i in e) {
                m(t, i) || c(i)
              }
              function c(r) {
                var o = xt[r] || jt
                a[r] = o(t[r], e[r], n, r)
              }
              return a
            }
            function It(t, e, n, r) {
              if ('string' == typeof n) {
                var o = t[e]
                if (m(o, n)) return o[n]
                var i = _(n)
                if (m(o, i)) return o[i]
                var a = b(i)
                return m(o, a) ? o[a] : o[n] || o[i] || o[a]
              }
            }
            function Dt(t, e, n, r) {
              var o = e[t],
                i = !m(n, t),
                a = n[t],
                s = Lt(Boolean, o.type)
              if (s > -1)
                if (i && !m(o, 'default')) a = !1
                else if ('' === a || a === $(t)) {
                  var c = Lt(String, o.type)
                  ;(c < 0 || s < c) && (a = !0)
                }
              if (void 0 === a) {
                a = (function(t, e, n) {
                  if (!m(e, 'default')) return
                  var r = e['default']
                  if (
                    t &&
                    t.$options.propsData &&
                    void 0 === t.$options.propsData[n] &&
                    void 0 !== t._props[n]
                  )
                    return t._props[n]
                  return 'function' == typeof r && 'Function' !== Nt(e.type)
                    ? r.call(t)
                    : r
                })(r, o, t)
                var u = gt
                _t(!0), Ct(a), _t(u)
              }
              return a
            }
            function Nt(t) {
              var e = t && t.toString().match(/^\s*function (\w+)/)
              return e ? e[1] : ''
            }
            function Pt(t, e) {
              return Nt(t) === Nt(e)
            }
            function Lt(t, e) {
              if (!Array.isArray(e)) return Pt(e, t) ? 0 : -1
              for (var n = 0, r = e.length; n < r; n++) {
                if (Pt(e[n], t)) return n
              }
              return -1
            }
            function Mt(t, e, n) {
              ct()
              try {
                if (e)
                  for (var r = e; (r = r.$parent); ) {
                    var o = r.$options.errorCaptured
                    if (o)
                      for (var i = 0; i < o.length; i++) {
                        try {
                          if (!1 === o[i].call(r, t, e, n)) return
                        } catch (t) {
                          Rt(t, r, 'errorCaptured hook')
                        }
                      }
                  }
                Rt(t, e, n)
              } finally {
                ut()
              }
            }
            function Ft(t, e, n, r, o) {
              var i
              try {
                ;(i = n ? t.apply(e, n) : t.call(e)) &&
                  !i._isVue &&
                  u(i) &&
                  !i._handled &&
                  (i['catch'](function(t) {
                    return Mt(t, r, o + ' (Promise/async)')
                  }),
                  (i._handled = !0))
              } catch (t) {
                Mt(t, r, o)
              }
              return i
            }
            function Rt(t, e, n) {
              if (L.errorHandler)
                try {
                  return L.errorHandler.call(null, t, e, n)
                } catch (e) {
                  e !== t && Ut(e, null, 'config.errorHandler')
                }
              Ut(t, e, n)
            }
            function Ut(t, e, n) {
              if ((!H && !B) || 'undefined' == typeof console) throw t
              console.error(t)
            }
            var Ht,
              Bt = !1,
              Vt = [],
              zt = !1
            function Wt() {
              zt = !1
              var t = Vt.slice(0)
              Vt.length = 0
              for (var e = 0; e < t.length; e++) {
                t[e]()
              }
            }
            if ('undefined' != typeof Promise && et(Promise)) {
              var qt = Promise.resolve()
              ;(Ht = function Ht() {
                qt.then(Wt), X && setTimeout(k)
              }),
                (Bt = !0)
            } else if (
              W ||
              'undefined' == typeof MutationObserver ||
              (!et(MutationObserver) &&
                '[object MutationObserverConstructor]' !==
                  MutationObserver.toString())
            )
              Ht =
                'undefined' != typeof setImmediate && et(setImmediate)
                  ? function() {
                      setImmediate(Wt)
                    }
                  : function() {
                      setTimeout(Wt, 0)
                    }
            else {
              var Kt = 1,
                Xt = new MutationObserver(Wt),
                Gt = document.createTextNode(String(Kt))
              Xt.observe(Gt, { characterData: !0 }),
                (Ht = function Ht() {
                  ;(Kt = (Kt + 1) % 2), (Gt.data = String(Kt))
                }),
                (Bt = !0)
            }
            function Zt(t, e) {
              var n
              if (
                (Vt.push(function() {
                  if (t)
                    try {
                      t.call(e)
                    } catch (t) {
                      Mt(t, e, 'nextTick')
                    }
                  else n && n(e)
                }),
                zt || ((zt = !0), Ht()),
                !t && 'undefined' != typeof Promise)
              )
                return new Promise(function(t) {
                  n = t
                })
            }
            var Jt = new nt()
            function Qt(t) {
              !(function t(e, n) {
                var r, o
                var a = Array.isArray(e)
                if ((!a && !i(e)) || Object.isFrozen(e) || e instanceof lt)
                  return
                if (e.__ob__) {
                  var s = e.__ob__.dep.id
                  if (n.has(s)) return
                  n.add(s)
                }
                if (a)
                  for (r = e.length; r--; ) {
                    t(e[r], n)
                  }
                else
                  for (o = Object.keys(e), r = o.length; r--; ) {
                    t(e[o[r]], n)
                  }
              })(t, Jt),
                Jt.clear()
            }
            var Yt = y(function(t) {
              var e = '&' === t.charAt(0),
                n = '~' === (t = e ? t.slice(1) : t).charAt(0),
                r = '!' === (t = n ? t.slice(1) : t).charAt(0)
              return {
                name: (t = r ? t.slice(1) : t),
                once: n,
                capture: r,
                passive: e
              }
            })
            function te(t, e) {
              function n() {
                var t = arguments,
                  r = n.fns
                if (!Array.isArray(r))
                  return Ft(r, null, arguments, e, 'v-on handler')
                for (var o = r.slice(), i = 0; i < o.length; i++) {
                  Ft(o[i], null, t, e, 'v-on handler')
                }
              }
              return (n.fns = t), n
            }
            function ee(t, n, o, i, a, s) {
              var c, u, l, f
              for (c in t) {
                ;(u = t[c]),
                  (l = n[c]),
                  (f = Yt(c)),
                  e(u) ||
                    (e(l)
                      ? (e(u.fns) && (u = t[c] = te(u, s)),
                        r(f.once) && (u = t[c] = a(f.name, u, f.capture)),
                        o(f.name, u, f.capture, f.passive, f.params))
                      : u !== l && ((l.fns = u), (t[c] = l)))
              }
              for (c in n) {
                e(t[c]) && i((f = Yt(c)).name, n[c], f.capture)
              }
            }
            function ne(t, o, i) {
              var a
              t instanceof lt && (t = t.data.hook || (t.data.hook = {}))
              var s = t[o]
              function c() {
                i.apply(this, arguments), v(a.fns, c)
              }
              e(s)
                ? (a = te([c]))
                : n(s.fns) && r(s.merged)
                ? (a = s).fns.push(c)
                : (a = te([s, c])),
                (a.merged = !0),
                (t[o] = a)
            }
            function re(t, e, r, o, i) {
              if (n(e)) {
                if (m(e, r)) return (t[r] = e[r]), i || delete e[r], !0
                if (m(e, o)) return (t[r] = e[o]), i || delete e[o], !0
              }
              return !1
            }
            function oe(t) {
              return o(t)
                ? [dt(t)]
                : Array.isArray(t)
                ? (function t(i, a) {
                    var s = []
                    var c, u, l, f
                    for (c = 0; c < i.length; c++) {
                      e((u = i[c])) ||
                        'boolean' == typeof u ||
                        ((l = s.length - 1),
                        (f = s[l]),
                        Array.isArray(u)
                          ? u.length > 0 &&
                            (ie((u = t(u, (a || '') + '_' + c))[0]) &&
                              ie(f) &&
                              ((s[l] = dt(f.text + u[0].text)), u.shift()),
                            s.push.apply(s, u))
                          : o(u)
                          ? ie(f)
                            ? (s[l] = dt(f.text + u))
                            : '' !== u && s.push(dt(u))
                          : ie(u) && ie(f)
                          ? (s[l] = dt(f.text + u.text))
                          : (r(i._isVList) &&
                              n(u.tag) &&
                              e(u.key) &&
                              n(a) &&
                              (u.key = '__vlist' + a + '_' + c + '__'),
                            s.push(u)))
                    }
                    return s
                  })(t)
                : void 0
            }
            function ie(t) {
              return n(t) && n(t.text) && !1 === t.isComment
            }
            function ae(t, e) {
              if (t) {
                for (
                  var n = Object.create(null),
                    r = rt ? Reflect.ownKeys(t) : Object.keys(t),
                    o = 0;
                  o < r.length;
                  o++
                ) {
                  var i = r[o]
                  if ('__ob__' !== i) {
                    for (var a = t[i].from, s = e; s; ) {
                      if (s._provided && m(s._provided, a)) {
                        n[i] = s._provided[a]
                        break
                      }
                      s = s.$parent
                    }
                    if (!s && 'default' in t[i]) {
                      var c = t[i]['default']
                      n[i] = 'function' == typeof c ? c.call(e) : c
                    }
                  }
                }
                return n
              }
            }
            function se(t, e) {
              if (!t || !t.length) return {}
              for (var n = {}, r = 0, o = t.length; r < o; r++) {
                var i = t[r],
                  a = i.data
                if (
                  (a && a.attrs && a.attrs.slot && delete a.attrs.slot,
                  (i.context !== e && i.fnContext !== e) ||
                    !a ||
                    null == a.slot)
                )
                  (n['default'] || (n['default'] = [])).push(i)
                else {
                  var s = a.slot,
                    c = n[s] || (n[s] = [])
                  'template' === i.tag
                    ? c.push.apply(c, i.children || [])
                    : c.push(i)
                }
              }
              for (var u in n) {
                n[u].every(ce) && delete n[u]
              }
              return n
            }
            function ce(t) {
              return (t.isComment && !t.asyncFactory) || ' ' === t.text
            }
            function ue(e, n, r) {
              var o,
                i = Object.keys(n).length > 0,
                a = e ? !!e.$stable : !i,
                s = e && e.$key
              if (e) {
                if (e._normalized) return e._normalized
                if (a && r && r !== t && s === r.$key && !i && !r.$hasNormal)
                  return r
                for (var c in ((o = {}), e)) {
                  e[c] && '$' !== c[0] && (o[c] = le(n, c, e[c]))
                }
              } else o = {}
              for (var u in n) {
                u in o || (o[u] = fe(n, u))
              }
              return (
                e && Object.isExtensible(e) && (e._normalized = o),
                M(o, '$stable', a),
                M(o, '$key', s),
                M(o, '$hasNormal', i),
                o
              )
            }
            function le(t, e, n) {
              var r = function r() {
                var t = arguments.length ? n.apply(null, arguments) : n({})
                return (t =
                  t &&
                  'object' == (0, _typeof3['default'])(t) &&
                  !Array.isArray(t)
                    ? [t]
                    : oe(t)) &&
                  (0 === t.length || (1 === t.length && t[0].isComment))
                  ? void 0
                  : t
              }
              return (
                n.proxy &&
                  Object.defineProperty(t, e, {
                    get: r,
                    enumerable: !0,
                    configurable: !0
                  }),
                r
              )
            }
            function fe(t, e) {
              return function() {
                return t[e]
              }
            }
            function pe(t, e) {
              var r, o, a, s, c
              if (Array.isArray(t) || 'string' == typeof t)
                for (r = new Array(t.length), o = 0, a = t.length; o < a; o++) {
                  r[o] = e(t[o], o)
                }
              else if ('number' == typeof t)
                for (r = new Array(t), o = 0; o < t; o++) {
                  r[o] = e(o + 1, o)
                }
              else if (i(t))
                if (rt && t[Symbol.iterator]) {
                  r = []
                  for (var u = t[Symbol.iterator](), l = u.next(); !l.done; ) {
                    r.push(e(l.value, r.length)), (l = u.next())
                  }
                } else
                  for (
                    s = Object.keys(t),
                      r = new Array(s.length),
                      o = 0,
                      a = s.length;
                    o < a;
                    o++
                  ) {
                    ;(c = s[o]), (r[o] = e(t[c], c, o))
                  }
              return n(r) || (r = []), (r._isVList = !0), r
            }
            function de(t, e, n, r) {
              var o,
                i = this.$scopedSlots[t]
              i
                ? ((n = n || {}), r && (n = x(x({}, r), n)), (o = i(n) || e))
                : (o = this.$slots[t] || e)
              var a = n && n.slot
              return a ? this.$createElement('template', { slot: a }, o) : o
            }
            function ve(t) {
              return It(this.$options, 'filters', t) || E
            }
            function he(t, e) {
              return Array.isArray(t) ? -1 === t.indexOf(e) : t !== e
            }
            function me(t, e, n, r, o) {
              var i = L.keyCodes[e] || n
              return o && r && !L.keyCodes[e]
                ? he(o, r)
                : i
                ? he(i, t)
                : r
                ? $(r) !== e
                : void 0
            }
            function ye(t, e, n, r, o) {
              if (n)
                if (i(n)) {
                  var a
                  Array.isArray(n) && (n = O(n))
                  var s = function s(i) {
                    if ('class' === i || 'style' === i || d(i)) a = t
                    else {
                      var s = t.attrs && t.attrs.type
                      a =
                        r || L.mustUseProp(e, s, i)
                          ? t.domProps || (t.domProps = {})
                          : t.attrs || (t.attrs = {})
                    }
                    var c = _(i),
                      u = $(i)
                    c in a ||
                      u in a ||
                      ((a[i] = n[i]),
                      o &&
                        ((t.on || (t.on = {}))['update:' + i] = function(t) {
                          n[i] = t
                        }))
                  }
                  for (var c in n) {
                    s(c)
                  }
                } else;
              return t
            }
            function ge(t, e) {
              var n = this._staticTrees || (this._staticTrees = []),
                r = n[t]
              return r && !e
                ? r
                : (be(
                    (r = n[t] = this.$options.staticRenderFns[t].call(
                      this._renderProxy,
                      null,
                      this
                    )),
                    '__static__' + t,
                    !1
                  ),
                  r)
            }
            function _e(t, e, n) {
              return be(t, '__once__' + e + (n ? '_' + n : ''), !0), t
            }
            function be(t, e, n) {
              if (Array.isArray(t))
                for (var r = 0; r < t.length; r++) {
                  t[r] && 'string' != typeof t[r] && Ce(t[r], e + '_' + r, n)
                }
              else Ce(t, e, n)
            }
            function Ce(t, e, n) {
              ;(t.isStatic = !0), (t.key = e), (t.isOnce = n)
            }
            function $e(t, e) {
              if (e)
                if (s(e)) {
                  var n = (t.on = t.on ? x({}, t.on) : {})
                  for (var r in e) {
                    var o = n[r],
                      i = e[r]
                    n[r] = o ? [].concat(o, i) : i
                  }
                } else;
              return t
            }
            function we(t, e, n, r) {
              e = e || { $stable: !n }
              for (var o = 0; o < t.length; o++) {
                var i = t[o]
                Array.isArray(i)
                  ? we(i, e, n)
                  : i && (i.proxy && (i.fn.proxy = !0), (e[i.key] = i.fn))
              }
              return r && (e.$key = r), e
            }
            function Ae(t, e) {
              for (var n = 0; n < e.length; n += 2) {
                var r = e[n]
                'string' == typeof r && r && (t[e[n]] = e[n + 1])
              }
              return t
            }
            function xe(t, e) {
              return 'string' == typeof t ? e + t : t
            }
            function Oe(t) {
              ;(t._o = _e),
                (t._n = f),
                (t._s = l),
                (t._l = pe),
                (t._t = de),
                (t._q = j),
                (t._i = T),
                (t._m = ge),
                (t._f = ve),
                (t._k = me),
                (t._b = ye),
                (t._v = dt),
                (t._e = pt),
                (t._u = we),
                (t._g = $e),
                (t._d = Ae),
                (t._p = xe)
            }
            function ke(e, n, o, i, a) {
              var s,
                c = this,
                u = a.options
              m(i, '_uid')
                ? ((s = Object.create(i))._original = i)
                : ((s = i), (i = i._original))
              var l = r(u._compiled),
                f = !l
              ;(this.data = e),
                (this.props = n),
                (this.children = o),
                (this.parent = i),
                (this.listeners = e.on || t),
                (this.injections = ae(u.inject, i)),
                (this.slots = function() {
                  return (
                    c.$slots || ue(e.scopedSlots, (c.$slots = se(o, i))),
                    c.$slots
                  )
                }),
                Object.defineProperty(this, 'scopedSlots', {
                  enumerable: !0,
                  get: function get() {
                    return ue(e.scopedSlots, this.slots())
                  }
                }),
                l &&
                  ((this.$options = u),
                  (this.$slots = this.slots()),
                  (this.$scopedSlots = ue(e.scopedSlots, this.$slots))),
                u._scopeId
                  ? (this._c = function(t, e, n, r) {
                      var o = Le(s, t, e, n, r, f)
                      return (
                        o &&
                          !Array.isArray(o) &&
                          ((o.fnScopeId = u._scopeId), (o.fnContext = i)),
                        o
                      )
                    })
                  : (this._c = function(t, e, n, r) {
                      return Le(s, t, e, n, r, f)
                    })
            }
            function Se(t, e, n, r, o) {
              var i = vt(t)
              return (
                (i.fnContext = n),
                (i.fnOptions = r),
                e.slot && ((i.data || (i.data = {})).slot = e.slot),
                i
              )
            }
            function Ee(t, e) {
              for (var n in e) {
                t[_(n)] = e[n]
              }
            }
            Oe(ke.prototype)
            var je = {
                init: function init(t, e) {
                  if (
                    t.componentInstance &&
                    !t.componentInstance._isDestroyed &&
                    t.data.keepAlive
                  ) {
                    var r = t
                    je.prepatch(r, r)
                  } else {
                    ;(t.componentInstance = (function(t, e) {
                      var r = { _isComponent: !0, _parentVnode: t, parent: e },
                        o = t.data.inlineTemplate
                      n(o) &&
                        ((r.render = o.render),
                        (r.staticRenderFns = o.staticRenderFns))
                      return new t.componentOptions.Ctor(r)
                    })(t, qe)).$mount(e ? t.elm : void 0, e)
                  }
                },
                prepatch: function prepatch(e, n) {
                  var r = n.componentOptions
                  !(function(e, n, r, o, i) {
                    var a = o.data.scopedSlots,
                      s = e.$scopedSlots,
                      c = !!(
                        (a && !a.$stable) ||
                        (s !== t && !s.$stable) ||
                        (a && e.$scopedSlots.$key !== a.$key)
                      ),
                      u = !!(i || e.$options._renderChildren || c)
                    ;(e.$options._parentVnode = o),
                      (e.$vnode = o),
                      e._vnode && (e._vnode.parent = o)
                    if (
                      ((e.$options._renderChildren = i),
                      (e.$attrs = o.data.attrs || t),
                      (e.$listeners = r || t),
                      n && e.$options.props)
                    ) {
                      _t(!1)
                      for (
                        var l = e._props, f = e.$options._propKeys || [], p = 0;
                        p < f.length;
                        p++
                      ) {
                        var d = f[p],
                          v = e.$options.props
                        l[d] = Dt(d, v, n, e)
                      }
                      _t(!0), (e.$options.propsData = n)
                    }
                    r = r || t
                    var h = e.$options._parentListeners
                    ;(e.$options._parentListeners = r),
                      We(e, r, h),
                      u && ((e.$slots = se(i, o.context)), e.$forceUpdate())
                  })(
                    (n.componentInstance = e.componentInstance),
                    r.propsData,
                    r.listeners,
                    n,
                    r.children
                  )
                },
                insert: function insert(t) {
                  var e,
                    n = t.context,
                    r = t.componentInstance
                  r._isMounted || ((r._isMounted = !0), Ze(r, 'mounted')),
                    t.data.keepAlive &&
                      (n._isMounted
                        ? (((e = r)._inactive = !1), Qe.push(e))
                        : Ge(r, !0))
                },
                destroy: function destroy(t) {
                  var e = t.componentInstance
                  e._isDestroyed ||
                    (t.data.keepAlive
                      ? (function t(e, n) {
                          if (n && ((e._directInactive = !0), Xe(e))) return
                          if (!e._inactive) {
                            e._inactive = !0
                            for (var r = 0; r < e.$children.length; r++) {
                              t(e.$children[r])
                            }
                            Ze(e, 'deactivated')
                          }
                        })(e, !0)
                      : e.$destroy())
                }
              },
              Te = Object.keys(je)
            function Ie(o, a, s, c, l) {
              if (!e(o)) {
                var f = s.$options._base
                if ((i(o) && (o = f.extend(o)), 'function' == typeof o)) {
                  var p
                  if (
                    e(o.cid) &&
                    void 0 ===
                      (o = (function(t, o) {
                        if (r(t.error) && n(t.errorComp)) return t.errorComp
                        if (n(t.resolved)) return t.resolved
                        var a = Fe
                        a &&
                          n(t.owners) &&
                          -1 === t.owners.indexOf(a) &&
                          t.owners.push(a)
                        if (r(t.loading) && n(t.loadingComp))
                          return t.loadingComp
                        if (a && !n(t.owners)) {
                          var s = (t.owners = [a]),
                            c = !0,
                            l = null,
                            f = null
                          a.$on('hook:destroyed', function() {
                            return v(s, a)
                          })
                          var p = function p(t) {
                              for (var e = 0, n = s.length; e < n; e++) {
                                s[e].$forceUpdate()
                              }
                              t &&
                                ((s.length = 0),
                                null !== l && (clearTimeout(l), (l = null)),
                                null !== f && (clearTimeout(f), (f = null)))
                            },
                            d = I(function(e) {
                              ;(t.resolved = Re(e, o)),
                                c ? (s.length = 0) : p(!0)
                            }),
                            h = I(function(e) {
                              n(t.errorComp) && ((t.error = !0), p(!0))
                            }),
                            m = t(d, h)
                          return (
                            i(m) &&
                              (u(m)
                                ? e(t.resolved) && m.then(d, h)
                                : u(m.component) &&
                                  (m.component.then(d, h),
                                  n(m.error) && (t.errorComp = Re(m.error, o)),
                                  n(m.loading) &&
                                    ((t.loadingComp = Re(m.loading, o)),
                                    0 === m.delay
                                      ? (t.loading = !0)
                                      : (l = setTimeout(function() {
                                          ;(l = null),
                                            e(t.resolved) &&
                                              e(t.error) &&
                                              ((t.loading = !0), p(!1))
                                        }, m.delay || 200))),
                                  n(m.timeout) &&
                                    (f = setTimeout(function() {
                                      ;(f = null), e(t.resolved) && h(null)
                                    }, m.timeout)))),
                            (c = !1),
                            t.loading ? t.loadingComp : t.resolved
                          )
                        }
                      })((p = o), f))
                  )
                    return (function(t, e, n, r, o) {
                      var i = pt()
                      return (
                        (i.asyncFactory = t),
                        (i.asyncMeta = {
                          data: e,
                          context: n,
                          children: r,
                          tag: o
                        }),
                        i
                      )
                    })(p, a, s, c, l)
                  ;(a = a || {}),
                    _n(o),
                    n(a.model) &&
                      (function(t, e) {
                        var r = (t.model && t.model.prop) || 'value',
                          o = (t.model && t.model.event) || 'input'
                        ;(e.attrs || (e.attrs = {}))[r] = e.model.value
                        var i = e.on || (e.on = {}),
                          a = i[o],
                          s = e.model.callback
                        n(a)
                          ? (Array.isArray(a)
                              ? -1 === a.indexOf(s)
                              : a !== s) && (i[o] = [s].concat(a))
                          : (i[o] = s)
                      })(o.options, a)
                  var d = (function(t, r, o) {
                    var i = r.options.props
                    if (!e(i)) {
                      var a = {},
                        s = t.attrs,
                        c = t.props
                      if (n(s) || n(c))
                        for (var u in i) {
                          var l = $(u)
                          re(a, c, u, l, !0) || re(a, s, u, l, !1)
                        }
                      return a
                    }
                  })(a, o)
                  if (r(o.options.functional))
                    return (function(e, r, o, i, a) {
                      var s = e.options,
                        c = {},
                        u = s.props
                      if (n(u))
                        for (var l in u) {
                          c[l] = Dt(l, u, r || t)
                        }
                      else
                        n(o.attrs) && Ee(c, o.attrs),
                          n(o.props) && Ee(c, o.props)
                      var f = new ke(o, c, a, i, e),
                        p = s.render.call(null, f._c, f)
                      if (p instanceof lt) return Se(p, o, f.parent, s)
                      if (Array.isArray(p)) {
                        for (
                          var d = oe(p) || [], v = new Array(d.length), h = 0;
                          h < d.length;
                          h++
                        ) {
                          v[h] = Se(d[h], o, f.parent, s)
                        }
                        return v
                      }
                    })(o, d, a, s, c)
                  var h = a.on
                  if (((a.on = a.nativeOn), r(o.options['abstract']))) {
                    var m = a.slot
                    ;(a = {}), m && (a.slot = m)
                  }
                  !(function(t) {
                    for (
                      var e = t.hook || (t.hook = {}), n = 0;
                      n < Te.length;
                      n++
                    ) {
                      var r = Te[n],
                        o = e[r],
                        i = je[r]
                      o === i || (o && o._merged) || (e[r] = o ? De(i, o) : i)
                    }
                  })(a)
                  var y = o.options.name || l
                  return new lt(
                    'vue-component-' + o.cid + (y ? '-' + y : ''),
                    a,
                    void 0,
                    void 0,
                    void 0,
                    s,
                    {
                      Ctor: o,
                      propsData: d,
                      listeners: h,
                      tag: l,
                      children: c
                    },
                    p
                  )
                }
              }
            }
            function De(t, e) {
              var n = function n(_n3, r) {
                t(_n3, r), e(_n3, r)
              }
              return (n._merged = !0), n
            }
            var Ne = 1,
              Pe = 2
            function Le(t, a, s, c, u, l) {
              return (
                (Array.isArray(s) || o(s)) && ((u = c), (c = s), (s = void 0)),
                r(l) && (u = Pe),
                (function(t, o, a, s, c) {
                  if (n(a) && n(a.__ob__)) return pt()
                  n(a) && n(a.is) && (o = a.is)
                  if (!o) return pt()
                  Array.isArray(s) &&
                    'function' == typeof s[0] &&
                    (((a = a || {}).scopedSlots = { default: s[0] }),
                    (s.length = 0))
                  c === Pe
                    ? (s = oe(s))
                    : c === Ne &&
                      (s = (function(t) {
                        for (var e = 0; e < t.length; e++) {
                          if (Array.isArray(t[e]))
                            return Array.prototype.concat.apply([], t)
                        }
                        return t
                      })(s))
                  var u, l
                  if ('string' == typeof o) {
                    var f
                    ;(l = (t.$vnode && t.$vnode.ns) || L.getTagNamespace(o)),
                      (u = L.isReservedTag(o)
                        ? new lt(
                            L.parsePlatformTagName(o),
                            a,
                            s,
                            void 0,
                            void 0,
                            t
                          )
                        : (a && a.pre) ||
                          !n((f = It(t.$options, 'components', o)))
                        ? new lt(o, a, s, void 0, void 0, t)
                        : Ie(f, a, t, s, o))
                  } else u = Ie(o, a, t, s)
                  return Array.isArray(u)
                    ? u
                    : n(u)
                    ? (n(l) &&
                        (function t(o, i, a) {
                          o.ns = i
                          'foreignObject' === o.tag && ((i = void 0), (a = !0))
                          if (n(o.children))
                            for (var s = 0, c = o.children.length; s < c; s++) {
                              var u = o.children[s]
                              n(u.tag) &&
                                (e(u.ns) || (r(a) && 'svg' !== u.tag)) &&
                                t(u, i, a)
                            }
                        })(u, l),
                      n(a) &&
                        (function(t) {
                          i(t.style) && Qt(t.style)
                          i(t['class']) && Qt(t['class'])
                        })(a),
                      u)
                    : pt()
                })(t, a, s, c, u)
              )
            }
            var Me,
              Fe = null
            function Re(t, e) {
              return (
                (t.__esModule || (rt && 'Module' === t[Symbol.toStringTag])) &&
                  (t = t['default']),
                i(t) ? e.extend(t) : t
              )
            }
            function Ue(t) {
              return t.isComment && t.asyncFactory
            }
            function He(t) {
              if (Array.isArray(t))
                for (var e = 0; e < t.length; e++) {
                  var r = t[e]
                  if (n(r) && (n(r.componentOptions) || Ue(r))) return r
                }
            }
            function Be(t, e) {
              Me.$on(t, e)
            }
            function Ve(t, e) {
              Me.$off(t, e)
            }
            function ze(t, e) {
              var n = Me
              return function r() {
                null !== e.apply(null, arguments) && n.$off(t, r)
              }
            }
            function We(t, e, n) {
              ;(Me = t), ee(e, n || {}, Be, Ve, ze, t), (Me = void 0)
            }
            var qe = null
            function Ke(t) {
              var e = qe
              return (
                (qe = t),
                function() {
                  qe = e
                }
              )
            }
            function Xe(t) {
              for (; t && (t = t.$parent); ) {
                if (t._inactive) return !0
              }
              return !1
            }
            function Ge(t, e) {
              if (e) {
                if (((t._directInactive = !1), Xe(t))) return
              } else if (t._directInactive) return
              if (t._inactive || null === t._inactive) {
                t._inactive = !1
                for (var n = 0; n < t.$children.length; n++) {
                  Ge(t.$children[n])
                }
                Ze(t, 'activated')
              }
            }
            function Ze(t, e) {
              ct()
              var n = t.$options[e],
                r = e + ' hook'
              if (n)
                for (var o = 0, i = n.length; o < i; o++) {
                  Ft(n[o], t, null, t, r)
                }
              t._hasHookEvent && t.$emit('hook:' + e), ut()
            }
            var Je = [],
              Qe = [],
              Ye = {},
              tn = !1,
              en = !1,
              nn = 0
            var rn = 0,
              on = Date.now
            if (H && !W) {
              var an = window.performance
              an &&
                'function' == typeof an.now &&
                on() > document.createEvent('Event').timeStamp &&
                (on = function on() {
                  return an.now()
                })
            }
            function sn() {
              var t, e
              for (
                rn = on(),
                  en = !0,
                  Je.sort(function(t, e) {
                    return t.id - e.id
                  }),
                  nn = 0;
                nn < Je.length;
                nn++
              ) {
                ;(t = Je[nn]).before && t.before(),
                  (e = t.id),
                  (Ye[e] = null),
                  t.run()
              }
              var n = Qe.slice(),
                r = Je.slice()
              ;(nn = Je.length = Qe.length = 0),
                (Ye = {}),
                (tn = en = !1),
                (function(t) {
                  for (var e = 0; e < t.length; e++) {
                    ;(t[e]._inactive = !0), Ge(t[e], !0)
                  }
                })(n),
                (function(t) {
                  var e = t.length
                  for (; e--; ) {
                    var n = t[e],
                      r = n.vm
                    r._watcher === n &&
                      r._isMounted &&
                      !r._isDestroyed &&
                      Ze(r, 'updated')
                  }
                })(r),
                tt && L.devtools && tt.emit('flush')
            }
            var cn = 0,
              un = function un(t, e, n, r, o) {
                ;(this.vm = t),
                  o && (t._watcher = this),
                  t._watchers.push(this),
                  r
                    ? ((this.deep = !!r.deep),
                      (this.user = !!r.user),
                      (this.lazy = !!r.lazy),
                      (this.sync = !!r.sync),
                      (this.before = r.before))
                    : (this.deep = this.user = this.lazy = this.sync = !1),
                  (this.cb = n),
                  (this.id = ++cn),
                  (this.active = !0),
                  (this.dirty = this.lazy),
                  (this.deps = []),
                  (this.newDeps = []),
                  (this.depIds = new nt()),
                  (this.newDepIds = new nt()),
                  (this.expression = ''),
                  'function' == typeof e
                    ? (this.getter = e)
                    : ((this.getter = (function(t) {
                        if (!F.test(t)) {
                          var e = t.split('.')
                          return function(t) {
                            for (var n = 0; n < e.length; n++) {
                              if (!t) return
                              t = t[e[n]]
                            }
                            return t
                          }
                        }
                      })(e)),
                      this.getter || (this.getter = k)),
                  (this.value = this.lazy ? void 0 : this.get())
              }
            ;(un.prototype.get = function() {
              var t
              ct(this)
              var e = this.vm
              try {
                t = this.getter.call(e, e)
              } catch (t) {
                if (!this.user) throw t
                Mt(t, e, 'getter for watcher "' + this.expression + '"')
              } finally {
                this.deep && Qt(t), ut(), this.cleanupDeps()
              }
              return t
            }),
              (un.prototype.addDep = function(t) {
                var e = t.id
                this.newDepIds.has(e) ||
                  (this.newDepIds.add(e),
                  this.newDeps.push(t),
                  this.depIds.has(e) || t.addSub(this))
              }),
              (un.prototype.cleanupDeps = function() {
                for (var t = this.deps.length; t--; ) {
                  var e = this.deps[t]
                  this.newDepIds.has(e.id) || e.removeSub(this)
                }
                var n = this.depIds
                ;(this.depIds = this.newDepIds),
                  (this.newDepIds = n),
                  this.newDepIds.clear(),
                  (n = this.deps),
                  (this.deps = this.newDeps),
                  (this.newDeps = n),
                  (this.newDeps.length = 0)
              }),
              (un.prototype.update = function() {
                this.lazy
                  ? (this.dirty = !0)
                  : this.sync
                  ? this.run()
                  : (function(t) {
                      var e = t.id
                      if (null == Ye[e]) {
                        if (((Ye[e] = !0), en)) {
                          for (
                            var n = Je.length - 1;
                            n > nn && Je[n].id > t.id;

                          ) {
                            n--
                          }
                          Je.splice(n + 1, 0, t)
                        } else Je.push(t)
                        tn || ((tn = !0), Zt(sn))
                      }
                    })(this)
              }),
              (un.prototype.run = function() {
                if (this.active) {
                  var t = this.get()
                  if (t !== this.value || i(t) || this.deep) {
                    var e = this.value
                    if (((this.value = t), this.user))
                      try {
                        this.cb.call(this.vm, t, e)
                      } catch (t) {
                        Mt(
                          t,
                          this.vm,
                          'callback for watcher "' + this.expression + '"'
                        )
                      }
                    else this.cb.call(this.vm, t, e)
                  }
                }
              }),
              (un.prototype.evaluate = function() {
                ;(this.value = this.get()), (this.dirty = !1)
              }),
              (un.prototype.depend = function() {
                for (var t = this.deps.length; t--; ) {
                  this.deps[t].depend()
                }
              }),
              (un.prototype.teardown = function() {
                if (this.active) {
                  this.vm._isBeingDestroyed || v(this.vm._watchers, this)
                  for (var t = this.deps.length; t--; ) {
                    this.deps[t].removeSub(this)
                  }
                  this.active = !1
                }
              })
            var ln = { enumerable: !0, configurable: !0, get: k, set: k }
            function fn(t, e, n) {
              ;(ln.get = function() {
                return this[e][n]
              }),
                (ln.set = function(t) {
                  this[e][n] = t
                }),
                Object.defineProperty(t, n, ln)
            }
            function pn(t) {
              t._watchers = []
              var e = t.$options
              e.props &&
                (function(t, e) {
                  var n = t.$options.propsData || {},
                    r = (t._props = {}),
                    o = (t.$options._propKeys = [])
                  t.$parent && _t(!1)
                  var i = function i(_i2) {
                    o.push(_i2)
                    var a = Dt(_i2, e, n, t)
                    $t(r, _i2, a), _i2 in t || fn(t, '_props', _i2)
                  }
                  for (var a in e) {
                    i(a)
                  }
                  _t(!0)
                })(t, e.props),
                e.methods &&
                  (function(t, e) {
                    t.$options.props
                    for (var n in e) {
                      t[n] = 'function' != typeof e[n] ? k : w(e[n], t)
                    }
                  })(t, e.methods),
                e.data
                  ? (function(t) {
                      var e = t.$options.data
                      s(
                        (e = t._data =
                          'function' == typeof e
                            ? (function(t, e) {
                                ct()
                                try {
                                  return t.call(e, e)
                                } catch (t) {
                                  return Mt(t, e, 'data()'), {}
                                } finally {
                                  ut()
                                }
                              })(e, t)
                            : e || {})
                      ) || (e = {})
                      var n = Object.keys(e),
                        r = t.$options.props,
                        o = (t.$options.methods, n.length)
                      for (; o--; ) {
                        var i = n[o]
                        ;(r && m(r, i)) ||
                          ((a = void 0),
                          36 !== (a = (i + '').charCodeAt(0)) &&
                            95 !== a &&
                            fn(t, '_data', i))
                      }
                      var a
                      Ct(e, !0)
                    })(t)
                  : Ct((t._data = {}), !0),
                e.computed &&
                  (function(t, e) {
                    var n = (t._computedWatchers = Object.create(null)),
                      r = Y()
                    for (var o in e) {
                      var i = e[o],
                        a = 'function' == typeof i ? i : i.get
                      r || (n[o] = new un(t, a || k, k, dn)),
                        o in t || vn(t, o, i)
                    }
                  })(t, e.computed),
                e.watch &&
                  e.watch !== Z &&
                  (function(t, e) {
                    for (var n in e) {
                      var r = e[n]
                      if (Array.isArray(r))
                        for (var o = 0; o < r.length; o++) {
                          yn(t, n, r[o])
                        }
                      else yn(t, n, r)
                    }
                  })(t, e.watch)
            }
            var dn = { lazy: !0 }
            function vn(t, e, n) {
              var r = !Y()
              'function' == typeof n
                ? ((ln.get = r ? hn(e) : mn(n)), (ln.set = k))
                : ((ln.get = n.get
                    ? r && !1 !== n.cache
                      ? hn(e)
                      : mn(n.get)
                    : k),
                  (ln.set = n.set || k)),
                Object.defineProperty(t, e, ln)
            }
            function hn(t) {
              return function() {
                var e = this._computedWatchers && this._computedWatchers[t]
                if (e)
                  return (
                    e.dirty && e.evaluate(), at.target && e.depend(), e.value
                  )
              }
            }
            function mn(t) {
              return function() {
                return t.call(this, this)
              }
            }
            function yn(t, e, n, r) {
              return (
                s(n) && ((r = n), (n = n.handler)),
                'string' == typeof n && (n = t[n]),
                t.$watch(e, n, r)
              )
            }
            var gn = 0
            function _n(t) {
              var e = t.options
              if (t['super']) {
                var n = _n(t['super'])
                if (n !== t.superOptions) {
                  t.superOptions = n
                  var r = (function(t) {
                    var e,
                      n = t.options,
                      r = t.sealedOptions
                    for (var o in n) {
                      n[o] !== r[o] && (e || (e = {}), (e[o] = n[o]))
                    }
                    return e
                  })(t)
                  r && x(t.extendOptions, r),
                    (e = t.options = Tt(n, t.extendOptions)).name &&
                      (e.components[e.name] = t)
                }
              }
              return e
            }
            function bn(t) {
              this._init(t)
            }
            function Cn(t) {
              t.cid = 0
              var e = 1
              t.extend = function(t) {
                t = t || {}
                var n = this,
                  r = n.cid,
                  o = t._Ctor || (t._Ctor = {})
                if (o[r]) return o[r]
                var i = t.name || n.options.name,
                  a = function a(t) {
                    this._init(t)
                  }
                return (
                  ((a.prototype = Object.create(n.prototype)).constructor = a),
                  (a.cid = e++),
                  (a.options = Tt(n.options, t)),
                  (a['super'] = n),
                  a.options.props &&
                    (function(t) {
                      var e = t.options.props
                      for (var n in e) {
                        fn(t.prototype, '_props', n)
                      }
                    })(a),
                  a.options.computed &&
                    (function(t) {
                      var e = t.options.computed
                      for (var n in e) {
                        vn(t.prototype, n, e[n])
                      }
                    })(a),
                  (a.extend = n.extend),
                  (a.mixin = n.mixin),
                  (a.use = n.use),
                  N.forEach(function(t) {
                    a[t] = n[t]
                  }),
                  i && (a.options.components[i] = a),
                  (a.superOptions = n.options),
                  (a.extendOptions = t),
                  (a.sealedOptions = x({}, a.options)),
                  (o[r] = a),
                  a
                )
              }
            }
            function $n(t) {
              return t && (t.Ctor.options.name || t.tag)
            }
            function wn(t, e) {
              return Array.isArray(t)
                ? t.indexOf(e) > -1
                : 'string' == typeof t
                ? t.split(',').indexOf(e) > -1
                : ((n = t), '[object RegExp]' === a.call(n) && t.test(e))
              var n
            }
            function An(t, e) {
              var n = t.cache,
                r = t.keys,
                o = t._vnode
              for (var i in n) {
                var a = n[i]
                if (a) {
                  var s = $n(a.componentOptions)
                  s && !e(s) && xn(n, i, r, o)
                }
              }
            }
            function xn(t, e, n, r) {
              var o = t[e]
              !o || (r && o.tag === r.tag) || o.componentInstance.$destroy(),
                (t[e] = null),
                v(n, e)
            }
            !(function(e) {
              e.prototype._init = function(e) {
                var n = this
                ;(n._uid = gn++),
                  (n._isVue = !0),
                  e && e._isComponent
                    ? (function(t, e) {
                        var n = (t.$options = Object.create(
                            t.constructor.options
                          )),
                          r = e._parentVnode
                        ;(n.parent = e.parent), (n._parentVnode = r)
                        var o = r.componentOptions
                        ;(n.propsData = o.propsData),
                          (n._parentListeners = o.listeners),
                          (n._renderChildren = o.children),
                          (n._componentTag = o.tag),
                          e.render &&
                            ((n.render = e.render),
                            (n.staticRenderFns = e.staticRenderFns))
                      })(n, e)
                    : (n.$options = Tt(_n(n.constructor), e || {}, n)),
                  (n._renderProxy = n),
                  (n._self = n),
                  (function(t) {
                    var e = t.$options,
                      n = e.parent
                    if (n && !e['abstract']) {
                      for (; n.$options['abstract'] && n.$parent; ) {
                        n = n.$parent
                      }
                      n.$children.push(t)
                    }
                    ;(t.$parent = n),
                      (t.$root = n ? n.$root : t),
                      (t.$children = []),
                      (t.$refs = {}),
                      (t._watcher = null),
                      (t._inactive = null),
                      (t._directInactive = !1),
                      (t._isMounted = !1),
                      (t._isDestroyed = !1),
                      (t._isBeingDestroyed = !1)
                  })(n),
                  (function(t) {
                    ;(t._events = Object.create(null)), (t._hasHookEvent = !1)
                    var e = t.$options._parentListeners
                    e && We(t, e)
                  })(n),
                  (function(e) {
                    ;(e._vnode = null), (e._staticTrees = null)
                    var n = e.$options,
                      r = (e.$vnode = n._parentVnode),
                      o = r && r.context
                    ;(e.$slots = se(n._renderChildren, o)),
                      (e.$scopedSlots = t),
                      (e._c = function(t, n, r, o) {
                        return Le(e, t, n, r, o, !1)
                      }),
                      (e.$createElement = function(t, n, r, o) {
                        return Le(e, t, n, r, o, !0)
                      })
                    var i = r && r.data
                    $t(e, '$attrs', (i && i.attrs) || t, null, !0),
                      $t(e, '$listeners', n._parentListeners || t, null, !0)
                  })(n),
                  Ze(n, 'beforeCreate'),
                  (function(t) {
                    var e = ae(t.$options.inject, t)
                    e &&
                      (_t(!1),
                      Object.keys(e).forEach(function(n) {
                        $t(t, n, e[n])
                      }),
                      _t(!0))
                  })(n),
                  pn(n),
                  (function(t) {
                    var e = t.$options.provide
                    e && (t._provided = 'function' == typeof e ? e.call(t) : e)
                  })(n),
                  Ze(n, 'created'),
                  n.$options.el && n.$mount(n.$options.el)
              }
            })(bn),
              (function(t) {
                var e = {
                    get: function get() {
                      return this._data
                    }
                  },
                  n = {
                    get: function get() {
                      return this._props
                    }
                  }
                Object.defineProperty(t.prototype, '$data', e),
                  Object.defineProperty(t.prototype, '$props', n),
                  (t.prototype.$set = wt),
                  (t.prototype.$delete = At),
                  (t.prototype.$watch = function(t, e, n) {
                    if (s(e)) return yn(this, t, e, n)
                    ;(n = n || {}).user = !0
                    var r = new un(this, t, e, n)
                    if (n.immediate)
                      try {
                        e.call(this, r.value)
                      } catch (t) {
                        Mt(
                          t,
                          this,
                          'callback for immediate watcher "' +
                            r.expression +
                            '"'
                        )
                      }
                    return function() {
                      r.teardown()
                    }
                  })
              })(bn),
              (function(t) {
                var e = /^hook:/
                ;(t.prototype.$on = function(t, n) {
                  var r = this
                  if (Array.isArray(t))
                    for (var o = 0, i = t.length; o < i; o++) {
                      r.$on(t[o], n)
                    }
                  else
                    (r._events[t] || (r._events[t] = [])).push(n),
                      e.test(t) && (r._hasHookEvent = !0)
                  return r
                }),
                  (t.prototype.$once = function(t, e) {
                    var n = this
                    function r() {
                      n.$off(t, r), e.apply(n, arguments)
                    }
                    return (r.fn = e), n.$on(t, r), n
                  }),
                  (t.prototype.$off = function(t, e) {
                    var n = this
                    if (!arguments.length)
                      return (n._events = Object.create(null)), n
                    if (Array.isArray(t)) {
                      for (var r = 0, o = t.length; r < o; r++) {
                        n.$off(t[r], e)
                      }
                      return n
                    }
                    var i,
                      a = n._events[t]
                    if (!a) return n
                    if (!e) return (n._events[t] = null), n
                    for (var s = a.length; s--; ) {
                      if ((i = a[s]) === e || i.fn === e) {
                        a.splice(s, 1)
                        break
                      }
                    }
                    return n
                  }),
                  (t.prototype.$emit = function(t) {
                    var e = this._events[t]
                    if (e) {
                      e = e.length > 1 ? A(e) : e
                      for (
                        var n = A(arguments, 1),
                          r = 'event handler for "' + t + '"',
                          o = 0,
                          i = e.length;
                        o < i;
                        o++
                      ) {
                        Ft(e[o], this, n, this, r)
                      }
                    }
                    return this
                  })
              })(bn),
              (function(t) {
                ;(t.prototype._update = function(t, e) {
                  var n = this,
                    r = n.$el,
                    o = n._vnode,
                    i = Ke(n)
                  ;(n._vnode = t),
                    (n.$el = o
                      ? n.__patch__(o, t)
                      : n.__patch__(n.$el, t, e, !1)),
                    i(),
                    r && (r.__vue__ = null),
                    n.$el && (n.$el.__vue__ = n),
                    n.$vnode &&
                      n.$parent &&
                      n.$vnode === n.$parent._vnode &&
                      (n.$parent.$el = n.$el)
                }),
                  (t.prototype.$forceUpdate = function() {
                    this._watcher && this._watcher.update()
                  }),
                  (t.prototype.$destroy = function() {
                    var t = this
                    if (!t._isBeingDestroyed) {
                      Ze(t, 'beforeDestroy'), (t._isBeingDestroyed = !0)
                      var e = t.$parent
                      !e ||
                        e._isBeingDestroyed ||
                        t.$options['abstract'] ||
                        v(e.$children, t),
                        t._watcher && t._watcher.teardown()
                      for (var n = t._watchers.length; n--; ) {
                        t._watchers[n].teardown()
                      }
                      t._data.__ob__ && t._data.__ob__.vmCount--,
                        (t._isDestroyed = !0),
                        t.__patch__(t._vnode, null),
                        Ze(t, 'destroyed'),
                        t.$off(),
                        t.$el && (t.$el.__vue__ = null),
                        t.$vnode && (t.$vnode.parent = null)
                    }
                  })
              })(bn),
              (function(t) {
                Oe(t.prototype),
                  (t.prototype.$nextTick = function(t) {
                    return Zt(t, this)
                  }),
                  (t.prototype._render = function() {
                    var t,
                      e = this,
                      n = e.$options,
                      r = n.render,
                      o = n._parentVnode
                    o &&
                      (e.$scopedSlots = ue(
                        o.data.scopedSlots,
                        e.$slots,
                        e.$scopedSlots
                      )),
                      (e.$vnode = o)
                    try {
                      ;(Fe = e), (t = r.call(e._renderProxy, e.$createElement))
                    } catch (n) {
                      Mt(n, e, 'render'), (t = e._vnode)
                    } finally {
                      Fe = null
                    }
                    return (
                      Array.isArray(t) && 1 === t.length && (t = t[0]),
                      t instanceof lt || (t = pt()),
                      (t.parent = o),
                      t
                    )
                  })
              })(bn)
            var On = [String, RegExp, Array],
              kn = {
                KeepAlive: {
                  name: 'keep-alive',
                  abstract: !0,
                  props: { include: On, exclude: On, max: [String, Number] },
                  created: function created() {
                    ;(this.cache = Object.create(null)), (this.keys = [])
                  },
                  destroyed: function destroyed() {
                    for (var t in this.cache) {
                      xn(this.cache, t, this.keys)
                    }
                  },
                  mounted: function mounted() {
                    var t = this
                    this.$watch('include', function(e) {
                      An(t, function(t) {
                        return wn(e, t)
                      })
                    }),
                      this.$watch('exclude', function(e) {
                        An(t, function(t) {
                          return !wn(e, t)
                        })
                      })
                  },
                  render: function render() {
                    var t = this.$slots['default'],
                      e = He(t),
                      n = e && e.componentOptions
                    if (n) {
                      var r = $n(n),
                        o = this.include,
                        i = this.exclude
                      if ((o && (!r || !wn(o, r))) || (i && r && wn(i, r)))
                        return e
                      var a = this.cache,
                        s = this.keys,
                        c =
                          null == e.key
                            ? n.Ctor.cid + (n.tag ? '::' + n.tag : '')
                            : e.key
                      a[c]
                        ? ((e.componentInstance = a[c].componentInstance),
                          v(s, c),
                          s.push(c))
                        : ((a[c] = e),
                          s.push(c),
                          this.max &&
                            s.length > parseInt(this.max) &&
                            xn(a, s[0], s, this._vnode)),
                        (e.data.keepAlive = !0)
                    }
                    return e || (t && t[0])
                  }
                }
              }
            !(function(t) {
              var e = {
                get: function get() {
                  return L
                }
              }
              Object.defineProperty(t, 'config', e),
                (t.util = {
                  warn: ot,
                  extend: x,
                  mergeOptions: Tt,
                  defineReactive: $t
                }),
                (t.set = wt),
                (t['delete'] = At),
                (t.nextTick = Zt),
                (t.observable = function(t) {
                  return Ct(t), t
                }),
                (t.options = Object.create(null)),
                N.forEach(function(e) {
                  t.options[e + 's'] = Object.create(null)
                }),
                (t.options._base = t),
                x(t.options.components, kn),
                (function(t) {
                  t.use = function(t) {
                    var e =
                      this._installedPlugins || (this._installedPlugins = [])
                    if (e.indexOf(t) > -1) return this
                    var n = A(arguments, 1)
                    return (
                      n.unshift(this),
                      'function' == typeof t.install
                        ? t.install.apply(t, n)
                        : 'function' == typeof t && t.apply(null, n),
                      e.push(t),
                      this
                    )
                  }
                })(t),
                (function(t) {
                  t.mixin = function(t) {
                    return (this.options = Tt(this.options, t)), this
                  }
                })(t),
                Cn(t),
                (function(t) {
                  N.forEach(function(e) {
                    t[e] = function(t, n) {
                      return n
                        ? ('component' === e &&
                            s(n) &&
                            ((n.name = n.name || t),
                            (n = this.options._base.extend(n))),
                          'directive' === e &&
                            'function' == typeof n &&
                            (n = { bind: n, update: n }),
                          (this.options[e + 's'][t] = n),
                          n)
                        : this.options[e + 's'][t]
                    }
                  })
                })(t)
            })(bn),
              Object.defineProperty(bn.prototype, '$isServer', { get: Y }),
              Object.defineProperty(bn.prototype, '$ssrContext', {
                get: function get() {
                  return this.$vnode && this.$vnode.ssrContext
                }
              }),
              Object.defineProperty(bn, 'FunctionalRenderContext', {
                value: ke
              }),
              (bn.version = '2.6.11')
            var Sn = p('style,class'),
              En = p('input,textarea,option,select,progress'),
              jn = p('contenteditable,draggable,spellcheck'),
              Tn = p('events,caret,typing,plaintext-only'),
              In = function In(t, e) {
                return Mn(e) || 'false' === e
                  ? 'false'
                  : 'contenteditable' === t && Tn(e)
                  ? e
                  : 'true'
              },
              Dn = p(
                'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,translate,truespeed,typemustmatch,visible'
              ),
              Nn = 'http://www.w3.org/1999/xlink',
              Pn = function Pn(t) {
                return ':' === t.charAt(5) && 'xlink' === t.slice(0, 5)
              },
              Ln = function Ln(t) {
                return Pn(t) ? t.slice(6, t.length) : ''
              },
              Mn = function Mn(t) {
                return null == t || !1 === t
              }
            function Fn(t) {
              for (var e = t.data, r = t, o = t; n(o.componentInstance); ) {
                ;(o = o.componentInstance._vnode) &&
                  o.data &&
                  (e = Rn(o.data, e))
              }
              for (; n((r = r.parent)); ) {
                r && r.data && (e = Rn(e, r.data))
              }
              return (function(t, e) {
                if (n(t) || n(e)) return Un(t, Hn(e))
                return ''
              })(e.staticClass, e['class'])
            }
            function Rn(t, e) {
              return {
                staticClass: Un(t.staticClass, e.staticClass),
                class: n(t['class']) ? [t['class'], e['class']] : e['class']
              }
            }
            function Un(t, e) {
              return t ? (e ? t + ' ' + e : t) : e || ''
            }
            function Hn(t) {
              return Array.isArray(t)
                ? (function(t) {
                    for (var e, r = '', o = 0, i = t.length; o < i; o++) {
                      n((e = Hn(t[o]))) &&
                        '' !== e &&
                        (r && (r += ' '), (r += e))
                    }
                    return r
                  })(t)
                : i(t)
                ? (function(t) {
                    var e = ''
                    for (var n in t) {
                      t[n] && (e && (e += ' '), (e += n))
                    }
                    return e
                  })(t)
                : 'string' == typeof t
                ? t
                : ''
            }
            var Bn = {
                svg: 'http://www.w3.org/2000/svg',
                math: 'http://www.w3.org/1998/Math/MathML'
              },
              Vn = p(
                'html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot'
              ),
              zn = p(
                'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',
                !0
              ),
              Wn = function Wn(t) {
                return Vn(t) || zn(t)
              }
            var qn = Object.create(null)
            var Kn = p('text,number,password,search,email,tel,url')
            var Xn = Object.freeze({
                createElement: function createElement(t, e) {
                  var n = document.createElement(t)
                  return 'select' !== t
                    ? n
                    : (e.data &&
                        e.data.attrs &&
                        void 0 !== e.data.attrs.multiple &&
                        n.setAttribute('multiple', 'multiple'),
                      n)
                },
                createElementNS: function createElementNS(t, e) {
                  return document.createElementNS(Bn[t], e)
                },
                createTextNode: function createTextNode(t) {
                  return document.createTextNode(t)
                },
                createComment: function createComment(t) {
                  return document.createComment(t)
                },
                insertBefore: function insertBefore(t, e, n) {
                  t.insertBefore(e, n)
                },
                removeChild: function removeChild(t, e) {
                  t.removeChild(e)
                },
                appendChild: function appendChild(t, e) {
                  t.appendChild(e)
                },
                parentNode: function parentNode(t) {
                  return t.parentNode
                },
                nextSibling: function nextSibling(t) {
                  return t.nextSibling
                },
                tagName: function tagName(t) {
                  return t.tagName
                },
                setTextContent: function setTextContent(t, e) {
                  t.textContent = e
                },
                setStyleScope: function setStyleScope(t, e) {
                  t.setAttribute(e, '')
                }
              }),
              Gn = {
                create: function create(t, e) {
                  Zn(e)
                },
                update: function update(t, e) {
                  t.data.ref !== e.data.ref && (Zn(t, !0), Zn(e))
                },
                destroy: function destroy(t) {
                  Zn(t, !0)
                }
              }
            function Zn(t, e) {
              var r = t.data.ref
              if (n(r)) {
                var o = t.context,
                  i = t.componentInstance || t.elm,
                  a = o.$refs
                e
                  ? Array.isArray(a[r])
                    ? v(a[r], i)
                    : a[r] === i && (a[r] = void 0)
                  : t.data.refInFor
                  ? Array.isArray(a[r])
                    ? a[r].indexOf(i) < 0 && a[r].push(i)
                    : (a[r] = [i])
                  : (a[r] = i)
              }
            }
            var Jn = new lt('', {}, []),
              Qn = ['create', 'activate', 'update', 'remove', 'destroy']
            function Yn(t, o) {
              return (
                t.key === o.key &&
                ((t.tag === o.tag &&
                  t.isComment === o.isComment &&
                  n(t.data) === n(o.data) &&
                  (function(t, e) {
                    if ('input' !== t.tag) return !0
                    var r,
                      o = n((r = t.data)) && n((r = r.attrs)) && r.type,
                      i = n((r = e.data)) && n((r = r.attrs)) && r.type
                    return o === i || (Kn(o) && Kn(i))
                  })(t, o)) ||
                  (r(t.isAsyncPlaceholder) &&
                    t.asyncFactory === o.asyncFactory &&
                    e(o.asyncFactory.error)))
              )
            }
            function tr(t, e, r) {
              var o,
                i,
                a = {}
              for (o = e; o <= r; ++o) {
                n((i = t[o].key)) && (a[i] = o)
              }
              return a
            }
            var er = {
              create: nr,
              update: nr,
              destroy: function destroy(t) {
                nr(t, Jn)
              }
            }
            function nr(t, e) {
              ;(t.data.directives || e.data.directives) &&
                (function(t, e) {
                  var n,
                    r,
                    o,
                    i = t === Jn,
                    a = e === Jn,
                    s = or(t.data.directives, t.context),
                    c = or(e.data.directives, e.context),
                    u = [],
                    l = []
                  for (n in c) {
                    ;(r = s[n]),
                      (o = c[n]),
                      r
                        ? ((o.oldValue = r.value),
                          (o.oldArg = r.arg),
                          ar(o, 'update', e, t),
                          o.def && o.def.componentUpdated && l.push(o))
                        : (ar(o, 'bind', e, t),
                          o.def && o.def.inserted && u.push(o))
                  }
                  if (u.length) {
                    var f = function f() {
                      for (var n = 0; n < u.length; n++) {
                        ar(u[n], 'inserted', e, t)
                      }
                    }
                    i ? ne(e, 'insert', f) : f()
                  }
                  l.length &&
                    ne(e, 'postpatch', function() {
                      for (var n = 0; n < l.length; n++) {
                        ar(l[n], 'componentUpdated', e, t)
                      }
                    })
                  if (!i)
                    for (n in s) {
                      c[n] || ar(s[n], 'unbind', t, t, a)
                    }
                })(t, e)
            }
            var rr = Object.create(null)
            function or(t, e) {
              var n,
                r,
                o = Object.create(null)
              if (!t) return o
              for (n = 0; n < t.length; n++) {
                ;(r = t[n]).modifiers || (r.modifiers = rr),
                  (o[ir(r)] = r),
                  (r.def = It(e.$options, 'directives', r.name))
              }
              return o
            }
            function ir(t) {
              return (
                t.rawName ||
                t.name + '.' + Object.keys(t.modifiers || {}).join('.')
              )
            }
            function ar(t, e, n, r, o) {
              var i = t.def && t.def[e]
              if (i)
                try {
                  i(n.elm, t, n, r, o)
                } catch (r) {
                  Mt(r, n.context, 'directive ' + t.name + ' ' + e + ' hook')
                }
            }
            var sr = [Gn, er]
            function cr(t, r) {
              var o = r.componentOptions
              if (
                !(
                  (n(o) && !1 === o.Ctor.options.inheritAttrs) ||
                  (e(t.data.attrs) && e(r.data.attrs))
                )
              ) {
                var i,
                  a,
                  s = r.elm,
                  c = t.data.attrs || {},
                  u = r.data.attrs || {}
                for (i in (n(u.__ob__) && (u = r.data.attrs = x({}, u)), u)) {
                  ;(a = u[i]), c[i] !== a && ur(s, i, a)
                }
                for (i in ((W || K) &&
                  u.value !== c.value &&
                  ur(s, 'value', u.value),
                c)) {
                  e(u[i]) &&
                    (Pn(i)
                      ? s.removeAttributeNS(Nn, Ln(i))
                      : jn(i) || s.removeAttribute(i))
                }
              }
            }
            function ur(t, e, n) {
              t.tagName.indexOf('-') > -1
                ? lr(t, e, n)
                : Dn(e)
                ? Mn(n)
                  ? t.removeAttribute(e)
                  : ((n =
                      'allowfullscreen' === e && 'EMBED' === t.tagName
                        ? 'true'
                        : e),
                    t.setAttribute(e, n))
                : jn(e)
                ? t.setAttribute(e, In(e, n))
                : Pn(e)
                ? Mn(n)
                  ? t.removeAttributeNS(Nn, Ln(e))
                  : t.setAttributeNS(Nn, e, n)
                : lr(t, e, n)
            }
            function lr(t, e, n) {
              if (Mn(n)) t.removeAttribute(e)
              else {
                if (
                  W &&
                  !q &&
                  'TEXTAREA' === t.tagName &&
                  'placeholder' === e &&
                  '' !== n &&
                  !t.__ieph
                ) {
                  var r = function r(e) {
                    e.stopImmediatePropagation(),
                      t.removeEventListener('input', r)
                  }
                  t.addEventListener('input', r), (t.__ieph = !0)
                }
                t.setAttribute(e, n)
              }
            }
            var fr = { create: cr, update: cr }
            function pr(t, r) {
              var o = r.elm,
                i = r.data,
                a = t.data
              if (
                !(
                  e(i.staticClass) &&
                  e(i['class']) &&
                  (e(a) || (e(a.staticClass) && e(a['class'])))
                )
              ) {
                var s = Fn(r),
                  c = o._transitionClasses
                n(c) && (s = Un(s, Hn(c))),
                  s !== o._prevClass &&
                    (o.setAttribute('class', s), (o._prevClass = s))
              }
            }
            var dr,
              vr = { create: pr, update: pr },
              hr = '__r',
              mr = '__c'
            function yr(t, e, n) {
              var r = dr
              return function o() {
                null !== e.apply(null, arguments) && br(t, o, n, r)
              }
            }
            var gr = Bt && !(G && Number(G[1]) <= 53)
            function _r(t, e, n, r) {
              if (gr) {
                var o = rn,
                  i = e
                e = i._wrapper = function(t) {
                  if (
                    t.target === t.currentTarget ||
                    t.timeStamp >= o ||
                    t.timeStamp <= 0 ||
                    t.target.ownerDocument !== document
                  )
                    return i.apply(this, arguments)
                }
              }
              dr.addEventListener(t, e, J ? { capture: n, passive: r } : n)
            }
            function br(t, e, n, r) {
              ;(r || dr).removeEventListener(t, e._wrapper || e, n)
            }
            function Cr(t, r) {
              if (!e(t.data.on) || !e(r.data.on)) {
                var o = r.data.on || {},
                  i = t.data.on || {}
                ;(dr = r.elm),
                  (function(t) {
                    if (n(t[hr])) {
                      var e = W ? 'change' : 'input'
                      ;(t[e] = [].concat(t[hr], t[e] || [])), delete t[hr]
                    }
                    n(t[mr]) &&
                      ((t.change = [].concat(t[mr], t.change || [])),
                      delete t[mr])
                  })(o),
                  ee(o, i, _r, br, yr, r.context),
                  (dr = void 0)
              }
            }
            var $r,
              wr = { create: Cr, update: Cr }
            function Ar(t, r) {
              if (!e(t.data.domProps) || !e(r.data.domProps)) {
                var o,
                  i,
                  a = r.elm,
                  s = t.data.domProps || {},
                  c = r.data.domProps || {}
                for (o in (n(c.__ob__) && (c = r.data.domProps = x({}, c)),
                s)) {
                  o in c || (a[o] = '')
                }
                for (o in c) {
                  if (((i = c[o]), 'textContent' === o || 'innerHTML' === o)) {
                    if ((r.children && (r.children.length = 0), i === s[o]))
                      continue
                    1 === a.childNodes.length && a.removeChild(a.childNodes[0])
                  }
                  if ('value' === o && 'PROGRESS' !== a.tagName) {
                    a._value = i
                    var u = e(i) ? '' : String(i)
                    xr(a, u) && (a.value = u)
                  } else if (
                    'innerHTML' === o &&
                    zn(a.tagName) &&
                    e(a.innerHTML)
                  ) {
                    ;($r = $r || document.createElement('div')).innerHTML =
                      '<svg>' + i + '</svg>'
                    for (var l = $r.firstChild; a.firstChild; ) {
                      a.removeChild(a.firstChild)
                    }
                    for (; l.firstChild; ) {
                      a.appendChild(l.firstChild)
                    }
                  } else if (i !== s[o])
                    try {
                      a[o] = i
                    } catch (t) {}
                }
              }
            }
            function xr(t, e) {
              return (
                !t.composing &&
                ('OPTION' === t.tagName ||
                  (function(t, e) {
                    var n = !0
                    try {
                      n = document.activeElement !== t
                    } catch (t) {}
                    return n && t.value !== e
                  })(t, e) ||
                  (function(t, e) {
                    var r = t.value,
                      o = t._vModifiers
                    if (n(o)) {
                      if (o.number) return f(r) !== f(e)
                      if (o.trim) return r.trim() !== e.trim()
                    }
                    return r !== e
                  })(t, e))
              )
            }
            var Or = { create: Ar, update: Ar },
              kr = y(function(t) {
                var e = {},
                  n = /:(.+)/
                return (
                  t.split(/;(?![^(]*\))/g).forEach(function(t) {
                    if (t) {
                      var r = t.split(n)
                      r.length > 1 && (e[r[0].trim()] = r[1].trim())
                    }
                  }),
                  e
                )
              })
            function Sr(t) {
              var e = Er(t.style)
              return t.staticStyle ? x(t.staticStyle, e) : e
            }
            function Er(t) {
              return Array.isArray(t) ? O(t) : 'string' == typeof t ? kr(t) : t
            }
            var jr,
              Tr = /^--/,
              Ir = /\s*!important$/,
              Dr = function Dr(t, e, n) {
                if (Tr.test(e)) t.style.setProperty(e, n)
                else if (Ir.test(n))
                  t.style.setProperty($(e), n.replace(Ir, ''), 'important')
                else {
                  var r = Pr(e)
                  if (Array.isArray(n))
                    for (var o = 0, i = n.length; o < i; o++) {
                      t.style[r] = n[o]
                    }
                  else t.style[r] = n
                }
              },
              Nr = ['Webkit', 'Moz', 'ms'],
              Pr = y(function(t) {
                if (
                  ((jr = jr || document.createElement('div').style),
                  'filter' !== (t = _(t)) && t in jr)
                )
                  return t
                for (
                  var e = t.charAt(0).toUpperCase() + t.slice(1), n = 0;
                  n < Nr.length;
                  n++
                ) {
                  var r = Nr[n] + e
                  if (r in jr) return r
                }
              })
            function Lr(t, r) {
              var o = r.data,
                i = t.data
              if (
                !(
                  e(o.staticStyle) &&
                  e(o.style) &&
                  e(i.staticStyle) &&
                  e(i.style)
                )
              ) {
                var a,
                  s,
                  c = r.elm,
                  u = i.staticStyle,
                  l = i.normalizedStyle || i.style || {},
                  f = u || l,
                  p = Er(r.data.style) || {}
                r.data.normalizedStyle = n(p.__ob__) ? x({}, p) : p
                var d = (function(t, e) {
                  var n,
                    r = {}
                  if (e)
                    for (var o = t; o.componentInstance; ) {
                      ;(o = o.componentInstance._vnode) &&
                        o.data &&
                        (n = Sr(o.data)) &&
                        x(r, n)
                    }
                  ;(n = Sr(t.data)) && x(r, n)
                  for (var i = t; (i = i.parent); ) {
                    i.data && (n = Sr(i.data)) && x(r, n)
                  }
                  return r
                })(r, !0)
                for (s in f) {
                  e(d[s]) && Dr(c, s, '')
                }
                for (s in d) {
                  ;(a = d[s]) !== f[s] && Dr(c, s, null == a ? '' : a)
                }
              }
            }
            var Mr = { create: Lr, update: Lr },
              Fr = /\s+/
            function Rr(t, e) {
              if (e && (e = e.trim()))
                if (t.classList)
                  e.indexOf(' ') > -1
                    ? e.split(Fr).forEach(function(e) {
                        return t.classList.add(e)
                      })
                    : t.classList.add(e)
                else {
                  var n = ' ' + (t.getAttribute('class') || '') + ' '
                  n.indexOf(' ' + e + ' ') < 0 &&
                    t.setAttribute('class', (n + e).trim())
                }
            }
            function Ur(t, e) {
              if (e && (e = e.trim()))
                if (t.classList)
                  e.indexOf(' ') > -1
                    ? e.split(Fr).forEach(function(e) {
                        return t.classList.remove(e)
                      })
                    : t.classList.remove(e),
                    t.classList.length || t.removeAttribute('class')
                else {
                  for (
                    var n = ' ' + (t.getAttribute('class') || '') + ' ',
                      r = ' ' + e + ' ';
                    n.indexOf(r) >= 0;

                  ) {
                    n = n.replace(r, ' ')
                  }
                  ;(n = n.trim())
                    ? t.setAttribute('class', n)
                    : t.removeAttribute('class')
                }
            }
            function Hr(t) {
              if (t) {
                if ('object' == (0, _typeof3['default'])(t)) {
                  var e = {}
                  return !1 !== t.css && x(e, Br(t.name || 'v')), x(e, t), e
                }
                return 'string' == typeof t ? Br(t) : void 0
              }
            }
            var Br = y(function(t) {
                return {
                  enterClass: t + '-enter',
                  enterToClass: t + '-enter-to',
                  enterActiveClass: t + '-enter-active',
                  leaveClass: t + '-leave',
                  leaveToClass: t + '-leave-to',
                  leaveActiveClass: t + '-leave-active'
                }
              }),
              Vr = H && !q,
              zr = 'transition',
              Wr = 'animation',
              qr = 'transition',
              Kr = 'transitionend',
              Xr = 'animation',
              Gr = 'animationend'
            Vr &&
              (void 0 === window.ontransitionend &&
                void 0 !== window.onwebkittransitionend &&
                ((qr = 'WebkitTransition'), (Kr = 'webkitTransitionEnd')),
              void 0 === window.onanimationend &&
                void 0 !== window.onwebkitanimationend &&
                ((Xr = 'WebkitAnimation'), (Gr = 'webkitAnimationEnd')))
            var Zr = H
              ? window.requestAnimationFrame
                ? window.requestAnimationFrame.bind(window)
                : setTimeout
              : function(t) {
                  return t()
                }
            function Jr(t) {
              Zr(function() {
                Zr(t)
              })
            }
            function Qr(t, e) {
              var n = t._transitionClasses || (t._transitionClasses = [])
              n.indexOf(e) < 0 && (n.push(e), Rr(t, e))
            }
            function Yr(t, e) {
              t._transitionClasses && v(t._transitionClasses, e), Ur(t, e)
            }
            function to(t, e, n) {
              var r = no(t, e),
                o = r.type,
                i = r.timeout,
                a = r.propCount
              if (!o) return n()
              var s = o === zr ? Kr : Gr,
                c = 0,
                u = function u() {
                  t.removeEventListener(s, l), n()
                },
                l = function l(e) {
                  e.target === t && ++c >= a && u()
                }
              setTimeout(function() {
                c < a && u()
              }, i + 1),
                t.addEventListener(s, l)
            }
            var eo = /\b(transform|all)(,|$)/
            function no(t, e) {
              var n,
                r = window.getComputedStyle(t),
                o = (r[qr + 'Delay'] || '').split(', '),
                i = (r[qr + 'Duration'] || '').split(', '),
                a = ro(o, i),
                s = (r[Xr + 'Delay'] || '').split(', '),
                c = (r[Xr + 'Duration'] || '').split(', '),
                u = ro(s, c),
                l = 0,
                f = 0
              return (
                e === zr
                  ? a > 0 && ((n = zr), (l = a), (f = i.length))
                  : e === Wr
                  ? u > 0 && ((n = Wr), (l = u), (f = c.length))
                  : (f = (n =
                      (l = Math.max(a, u)) > 0 ? (a > u ? zr : Wr) : null)
                      ? n === zr
                        ? i.length
                        : c.length
                      : 0),
                {
                  type: n,
                  timeout: l,
                  propCount: f,
                  hasTransform: n === zr && eo.test(r[qr + 'Property'])
                }
              )
            }
            function ro(t, e) {
              for (; t.length < e.length; ) {
                t = t.concat(t)
              }
              return Math.max.apply(
                null,
                e.map(function(e, n) {
                  return oo(e) + oo(t[n])
                })
              )
            }
            function oo(t) {
              return 1e3 * Number(t.slice(0, -1).replace(',', '.'))
            }
            function io(t, r) {
              var o = t.elm
              n(o._leaveCb) && ((o._leaveCb.cancelled = !0), o._leaveCb())
              var a = Hr(t.data.transition)
              if (!e(a) && !n(o._enterCb) && 1 === o.nodeType) {
                for (
                  var s = a.css,
                    c = a.type,
                    u = a.enterClass,
                    l = a.enterToClass,
                    p = a.enterActiveClass,
                    d = a.appearClass,
                    v = a.appearToClass,
                    h = a.appearActiveClass,
                    m = a.beforeEnter,
                    y = a.enter,
                    g = a.afterEnter,
                    _ = a.enterCancelled,
                    b = a.beforeAppear,
                    C = a.appear,
                    $ = a.afterAppear,
                    w = a.appearCancelled,
                    A = a.duration,
                    x = qe,
                    O = qe.$vnode;
                  O && O.parent;

                ) {
                  ;(x = O.context), (O = O.parent)
                }
                var k = !x._isMounted || !t.isRootInsert
                if (!k || C || '' === C) {
                  var S = k && d ? d : u,
                    E = k && h ? h : p,
                    j = k && v ? v : l,
                    T = (k && b) || m,
                    D = k && 'function' == typeof C ? C : y,
                    N = (k && $) || g,
                    P = (k && w) || _,
                    L = f(i(A) ? A.enter : A),
                    M = !1 !== s && !q,
                    F = co(D),
                    R = (o._enterCb = I(function() {
                      M && (Yr(o, j), Yr(o, E)),
                        R.cancelled ? (M && Yr(o, S), P && P(o)) : N && N(o),
                        (o._enterCb = null)
                    }))
                  t.data.show ||
                    ne(t, 'insert', function() {
                      var e = o.parentNode,
                        n = e && e._pending && e._pending[t.key]
                      n &&
                        n.tag === t.tag &&
                        n.elm._leaveCb &&
                        n.elm._leaveCb(),
                        D && D(o, R)
                    }),
                    T && T(o),
                    M &&
                      (Qr(o, S),
                      Qr(o, E),
                      Jr(function() {
                        Yr(o, S),
                          R.cancelled ||
                            (Qr(o, j),
                            F || (so(L) ? setTimeout(R, L) : to(o, c, R)))
                      })),
                    t.data.show && (r && r(), D && D(o, R)),
                    M || F || R()
                }
              }
            }
            function ao(t, r) {
              var o = t.elm
              n(o._enterCb) && ((o._enterCb.cancelled = !0), o._enterCb())
              var a = Hr(t.data.transition)
              if (e(a) || 1 !== o.nodeType) return r()
              if (!n(o._leaveCb)) {
                var s = a.css,
                  c = a.type,
                  u = a.leaveClass,
                  l = a.leaveToClass,
                  p = a.leaveActiveClass,
                  d = a.beforeLeave,
                  v = a.leave,
                  h = a.afterLeave,
                  m = a.leaveCancelled,
                  y = a.delayLeave,
                  g = a.duration,
                  _ = !1 !== s && !q,
                  b = co(v),
                  C = f(i(g) ? g.leave : g),
                  $ = (o._leaveCb = I(function() {
                    o.parentNode &&
                      o.parentNode._pending &&
                      (o.parentNode._pending[t.key] = null),
                      _ && (Yr(o, l), Yr(o, p)),
                      $.cancelled
                        ? (_ && Yr(o, u), m && m(o))
                        : (r(), h && h(o)),
                      (o._leaveCb = null)
                  }))
                y ? y(w) : w()
              }
              function w() {
                $.cancelled ||
                  (!t.data.show &&
                    o.parentNode &&
                    ((o.parentNode._pending || (o.parentNode._pending = {}))[
                      t.key
                    ] = t),
                  d && d(o),
                  _ &&
                    (Qr(o, u),
                    Qr(o, p),
                    Jr(function() {
                      Yr(o, u),
                        $.cancelled ||
                          (Qr(o, l),
                          b || (so(C) ? setTimeout($, C) : to(o, c, $)))
                    })),
                  v && v(o, $),
                  _ || b || $())
              }
            }
            function so(t) {
              return 'number' == typeof t && !isNaN(t)
            }
            function co(t) {
              if (e(t)) return !1
              var r = t.fns
              return n(r)
                ? co(Array.isArray(r) ? r[0] : r)
                : (t._length || t.length) > 1
            }
            function uo(t, e) {
              !0 !== e.data.show && io(e)
            }
            var lo = (function(t) {
              var i,
                a,
                s = {},
                c = t.modules,
                u = t.nodeOps
              for (i = 0; i < Qn.length; ++i) {
                for (s[Qn[i]] = [], a = 0; a < c.length; ++a) {
                  n(c[a][Qn[i]]) && s[Qn[i]].push(c[a][Qn[i]])
                }
              }
              function l(t) {
                var e = u.parentNode(t)
                n(e) && u.removeChild(e, t)
              }
              function f(t, e, o, i, a, c, l) {
                if (
                  (n(t.elm) && n(c) && (t = c[l] = vt(t)),
                  (t.isRootInsert = !a),
                  !(function(t, e, o, i) {
                    var a = t.data
                    if (n(a)) {
                      var c = n(t.componentInstance) && a.keepAlive
                      if (
                        (n((a = a.hook)) && n((a = a.init)) && a(t, !1),
                        n(t.componentInstance))
                      )
                        return (
                          d(t, e),
                          v(o, t.elm, i),
                          r(c) &&
                            (function(t, e, r, o) {
                              for (var i, a = t; a.componentInstance; ) {
                                if (
                                  ((a = a.componentInstance._vnode),
                                  n((i = a.data)) && n((i = i.transition)))
                                ) {
                                  for (i = 0; i < s.activate.length; ++i) {
                                    s.activate[i](Jn, a)
                                  }
                                  e.push(a)
                                  break
                                }
                              }
                              v(r, t.elm, o)
                            })(t, e, o, i),
                          !0
                        )
                    }
                  })(t, e, o, i))
                ) {
                  var f = t.data,
                    p = t.children,
                    m = t.tag
                  n(m)
                    ? ((t.elm = t.ns
                        ? u.createElementNS(t.ns, m)
                        : u.createElement(m, t)),
                      g(t),
                      h(t, p, e),
                      n(f) && y(t, e),
                      v(o, t.elm, i))
                    : r(t.isComment)
                    ? ((t.elm = u.createComment(t.text)), v(o, t.elm, i))
                    : ((t.elm = u.createTextNode(t.text)), v(o, t.elm, i))
                }
              }
              function d(t, e) {
                n(t.data.pendingInsert) &&
                  (e.push.apply(e, t.data.pendingInsert),
                  (t.data.pendingInsert = null)),
                  (t.elm = t.componentInstance.$el),
                  m(t) ? (y(t, e), g(t)) : (Zn(t), e.push(t))
              }
              function v(t, e, r) {
                n(t) &&
                  (n(r)
                    ? u.parentNode(r) === t && u.insertBefore(t, e, r)
                    : u.appendChild(t, e))
              }
              function h(t, e, n) {
                if (Array.isArray(e))
                  for (var r = 0; r < e.length; ++r) {
                    f(e[r], n, t.elm, null, !0, e, r)
                  }
                else
                  o(t.text) &&
                    u.appendChild(t.elm, u.createTextNode(String(t.text)))
              }
              function m(t) {
                for (; t.componentInstance; ) {
                  t = t.componentInstance._vnode
                }
                return n(t.tag)
              }
              function y(t, e) {
                for (var r = 0; r < s.create.length; ++r) {
                  s.create[r](Jn, t)
                }
                n((i = t.data.hook)) &&
                  (n(i.create) && i.create(Jn, t), n(i.insert) && e.push(t))
              }
              function g(t) {
                var e
                if (n((e = t.fnScopeId))) u.setStyleScope(t.elm, e)
                else
                  for (var r = t; r; ) {
                    n((e = r.context)) &&
                      n((e = e.$options._scopeId)) &&
                      u.setStyleScope(t.elm, e),
                      (r = r.parent)
                  }
                n((e = qe)) &&
                  e !== t.context &&
                  e !== t.fnContext &&
                  n((e = e.$options._scopeId)) &&
                  u.setStyleScope(t.elm, e)
              }
              function _(t, e, n, r, o, i) {
                for (; r <= o; ++r) {
                  f(n[r], i, t, e, !1, n, r)
                }
              }
              function b(t) {
                var e,
                  r,
                  o = t.data
                if (n(o))
                  for (
                    n((e = o.hook)) && n((e = e.destroy)) && e(t), e = 0;
                    e < s.destroy.length;
                    ++e
                  ) {
                    s.destroy[e](t)
                  }
                if (n((e = t.children)))
                  for (r = 0; r < t.children.length; ++r) {
                    b(t.children[r])
                  }
              }
              function C(t, e, r) {
                for (; e <= r; ++e) {
                  var o = t[e]
                  n(o) && (n(o.tag) ? ($(o), b(o)) : l(o.elm))
                }
              }
              function $(t, e) {
                if (n(e) || n(t.data)) {
                  var r,
                    o = s.remove.length + 1
                  for (
                    n(e)
                      ? (e.listeners += o)
                      : (e = (function(t, e) {
                          function n() {
                            0 == --n.listeners && l(t)
                          }
                          return (n.listeners = e), n
                        })(t.elm, o)),
                      n((r = t.componentInstance)) &&
                        n((r = r._vnode)) &&
                        n(r.data) &&
                        $(r, e),
                      r = 0;
                    r < s.remove.length;
                    ++r
                  ) {
                    s.remove[r](t, e)
                  }
                  n((r = t.data.hook)) && n((r = r.remove)) ? r(t, e) : e()
                } else l(t.elm)
              }
              function w(t, e, r, o) {
                for (var i = r; i < o; i++) {
                  var a = e[i]
                  if (n(a) && Yn(t, a)) return i
                }
              }
              function A(t, o, i, a, c, l) {
                if (t !== o) {
                  n(o.elm) && n(a) && (o = a[c] = vt(o))
                  var p = (o.elm = t.elm)
                  if (r(t.isAsyncPlaceholder))
                    n(o.asyncFactory.resolved)
                      ? k(t.elm, o, i)
                      : (o.isAsyncPlaceholder = !0)
                  else if (
                    r(o.isStatic) &&
                    r(t.isStatic) &&
                    o.key === t.key &&
                    (r(o.isCloned) || r(o.isOnce))
                  )
                    o.componentInstance = t.componentInstance
                  else {
                    var d,
                      v = o.data
                    n(v) && n((d = v.hook)) && n((d = d.prepatch)) && d(t, o)
                    var h = t.children,
                      y = o.children
                    if (n(v) && m(o)) {
                      for (d = 0; d < s.update.length; ++d) {
                        s.update[d](t, o)
                      }
                      n((d = v.hook)) && n((d = d.update)) && d(t, o)
                    }
                    e(o.text)
                      ? n(h) && n(y)
                        ? h !== y &&
                          (function(t, r, o, i, a) {
                            for (
                              var s,
                                c,
                                l,
                                p = 0,
                                d = 0,
                                v = r.length - 1,
                                h = r[0],
                                m = r[v],
                                y = o.length - 1,
                                g = o[0],
                                b = o[y],
                                $ = !a;
                              p <= v && d <= y;

                            ) {
                              e(h)
                                ? (h = r[++p])
                                : e(m)
                                ? (m = r[--v])
                                : Yn(h, g)
                                ? (A(h, g, i, o, d), (h = r[++p]), (g = o[++d]))
                                : Yn(m, b)
                                ? (A(m, b, i, o, y), (m = r[--v]), (b = o[--y]))
                                : Yn(h, b)
                                ? (A(h, b, i, o, y),
                                  $ &&
                                    u.insertBefore(
                                      t,
                                      h.elm,
                                      u.nextSibling(m.elm)
                                    ),
                                  (h = r[++p]),
                                  (b = o[--y]))
                                : Yn(m, g)
                                ? (A(m, g, i, o, d),
                                  $ && u.insertBefore(t, m.elm, h.elm),
                                  (m = r[--v]),
                                  (g = o[++d]))
                                : (e(s) && (s = tr(r, p, v)),
                                  e((c = n(g.key) ? s[g.key] : w(g, r, p, v)))
                                    ? f(g, i, t, h.elm, !1, o, d)
                                    : Yn((l = r[c]), g)
                                    ? (A(l, g, i, o, d),
                                      (r[c] = void 0),
                                      $ && u.insertBefore(t, l.elm, h.elm))
                                    : f(g, i, t, h.elm, !1, o, d),
                                  (g = o[++d]))
                            }
                            p > v
                              ? _(
                                  t,
                                  e(o[y + 1]) ? null : o[y + 1].elm,
                                  o,
                                  d,
                                  y,
                                  i
                                )
                              : d > y && C(r, p, v)
                          })(p, h, y, i, l)
                        : n(y)
                        ? (n(t.text) && u.setTextContent(p, ''),
                          _(p, null, y, 0, y.length - 1, i))
                        : n(h)
                        ? C(h, 0, h.length - 1)
                        : n(t.text) && u.setTextContent(p, '')
                      : t.text !== o.text && u.setTextContent(p, o.text),
                      n(v) && n((d = v.hook)) && n((d = d.postpatch)) && d(t, o)
                  }
                }
              }
              function x(t, e, o) {
                if (r(o) && n(t.parent)) t.parent.data.pendingInsert = e
                else
                  for (var i = 0; i < e.length; ++i) {
                    e[i].data.hook.insert(e[i])
                  }
              }
              var O = p('attrs,class,staticClass,staticStyle,key')
              function k(t, e, o, i) {
                var a,
                  s = e.tag,
                  c = e.data,
                  u = e.children
                if (
                  ((i = i || (c && c.pre)),
                  (e.elm = t),
                  r(e.isComment) && n(e.asyncFactory))
                )
                  return (e.isAsyncPlaceholder = !0), !0
                if (
                  n(c) &&
                  (n((a = c.hook)) && n((a = a.init)) && a(e, !0),
                  n((a = e.componentInstance)))
                )
                  return d(e, o), !0
                if (n(s)) {
                  if (n(u))
                    if (t.hasChildNodes()) {
                      if (
                        n((a = c)) &&
                        n((a = a.domProps)) &&
                        n((a = a.innerHTML))
                      ) {
                        if (a !== t.innerHTML) return !1
                      } else {
                        for (
                          var l = !0, f = t.firstChild, p = 0;
                          p < u.length;
                          p++
                        ) {
                          if (!f || !k(f, u[p], o, i)) {
                            l = !1
                            break
                          }
                          f = f.nextSibling
                        }
                        if (!l || f) return !1
                      }
                    } else h(e, u, o)
                  if (n(c)) {
                    var v = !1
                    for (var m in c) {
                      if (!O(m)) {
                        ;(v = !0), y(e, o)
                        break
                      }
                    }
                    !v && c['class'] && Qt(c['class'])
                  }
                } else t.data !== e.text && (t.data = e.text)
                return !0
              }
              return function(t, o, i, a) {
                if (!e(o)) {
                  var c,
                    l = !1,
                    p = []
                  if (e(t)) (l = !0), f(o, p)
                  else {
                    var d = n(t.nodeType)
                    if (!d && Yn(t, o)) A(t, o, p, null, null, a)
                    else {
                      if (d) {
                        if (
                          (1 === t.nodeType &&
                            t.hasAttribute(D) &&
                            (t.removeAttribute(D), (i = !0)),
                          r(i) && k(t, o, p))
                        )
                          return x(o, p, !0), t
                        ;(c = t),
                          (t = new lt(
                            u.tagName(c).toLowerCase(),
                            {},
                            [],
                            void 0,
                            c
                          ))
                      }
                      var v = t.elm,
                        h = u.parentNode(v)
                      if (
                        (f(o, p, v._leaveCb ? null : h, u.nextSibling(v)),
                        n(o.parent))
                      )
                        for (var y = o.parent, g = m(o); y; ) {
                          for (var _ = 0; _ < s.destroy.length; ++_) {
                            s.destroy[_](y)
                          }
                          if (((y.elm = o.elm), g)) {
                            for (var $ = 0; $ < s.create.length; ++$) {
                              s.create[$](Jn, y)
                            }
                            var w = y.data.hook.insert
                            if (w.merged)
                              for (var O = 1; O < w.fns.length; O++) {
                                w.fns[O]()
                              }
                          } else Zn(y)
                          y = y.parent
                        }
                      n(h) ? C([t], 0, 0) : n(t.tag) && b(t)
                    }
                  }
                  return x(o, p, l), o.elm
                }
                n(t) && b(t)
              }
            })({
              nodeOps: Xn,
              modules: [
                fr,
                vr,
                wr,
                Or,
                Mr,
                H
                  ? {
                      create: uo,
                      activate: uo,
                      remove: function remove(t, e) {
                        !0 !== t.data.show ? ao(t, e) : e()
                      }
                    }
                  : {}
              ].concat(sr)
            })
            q &&
              document.addEventListener('selectionchange', function() {
                var t = document.activeElement
                t && t.vmodel && _o(t, 'input')
              })
            var fo = {
              inserted: function inserted(t, e, n, r) {
                'select' === n.tag
                  ? (r.elm && !r.elm._vOptions
                      ? ne(n, 'postpatch', function() {
                          fo.componentUpdated(t, e, n)
                        })
                      : po(t, e, n.context),
                    (t._vOptions = [].map.call(t.options, mo)))
                  : ('textarea' === n.tag || Kn(t.type)) &&
                    ((t._vModifiers = e.modifiers),
                    e.modifiers.lazy ||
                      (t.addEventListener('compositionstart', yo),
                      t.addEventListener('compositionend', go),
                      t.addEventListener('change', go),
                      q && (t.vmodel = !0)))
              },
              componentUpdated: function componentUpdated(t, e, n) {
                if ('select' === n.tag) {
                  po(t, e, n.context)
                  var r = t._vOptions,
                    o = (t._vOptions = [].map.call(t.options, mo))
                  if (
                    o.some(function(t, e) {
                      return !j(t, r[e])
                    })
                  )
                    (t.multiple
                      ? e.value.some(function(t) {
                          return ho(t, o)
                        })
                      : e.value !== e.oldValue && ho(e.value, o)) &&
                      _o(t, 'change')
                }
              }
            }
            function po(t, e, n) {
              vo(t, e, n),
                (W || K) &&
                  setTimeout(function() {
                    vo(t, e, n)
                  }, 0)
            }
            function vo(t, e, n) {
              var r = e.value,
                o = t.multiple
              if (!o || Array.isArray(r)) {
                for (var i, a, s = 0, c = t.options.length; s < c; s++) {
                  if (((a = t.options[s]), o))
                    (i = T(r, mo(a)) > -1), a.selected !== i && (a.selected = i)
                  else if (j(mo(a), r))
                    return void (t.selectedIndex !== s && (t.selectedIndex = s))
                }
                o || (t.selectedIndex = -1)
              }
            }
            function ho(t, e) {
              return e.every(function(e) {
                return !j(e, t)
              })
            }
            function mo(t) {
              return '_value' in t ? t._value : t.value
            }
            function yo(t) {
              t.target.composing = !0
            }
            function go(t) {
              t.target.composing &&
                ((t.target.composing = !1), _o(t.target, 'input'))
            }
            function _o(t, e) {
              var n = document.createEvent('HTMLEvents')
              n.initEvent(e, !0, !0), t.dispatchEvent(n)
            }
            function bo(t) {
              return !t.componentInstance || (t.data && t.data.transition)
                ? t
                : bo(t.componentInstance._vnode)
            }
            var Co = {
                model: fo,
                show: {
                  bind: function bind(t, e, n) {
                    var r = e.value,
                      o = (n = bo(n)).data && n.data.transition,
                      i = (t.__vOriginalDisplay =
                        'none' === t.style.display ? '' : t.style.display)
                    r && o
                      ? ((n.data.show = !0),
                        io(n, function() {
                          t.style.display = i
                        }))
                      : (t.style.display = r ? i : 'none')
                  },
                  update: function update(t, e, n) {
                    var r = e.value
                    !r != !e.oldValue &&
                      ((n = bo(n)).data && n.data.transition
                        ? ((n.data.show = !0),
                          r
                            ? io(n, function() {
                                t.style.display = t.__vOriginalDisplay
                              })
                            : ao(n, function() {
                                t.style.display = 'none'
                              }))
                        : (t.style.display = r ? t.__vOriginalDisplay : 'none'))
                  },
                  unbind: function unbind(t, e, n, r, o) {
                    o || (t.style.display = t.__vOriginalDisplay)
                  }
                }
              },
              $o = {
                name: String,
                appear: Boolean,
                css: Boolean,
                mode: String,
                type: String,
                enterClass: String,
                leaveClass: String,
                enterToClass: String,
                leaveToClass: String,
                enterActiveClass: String,
                leaveActiveClass: String,
                appearClass: String,
                appearActiveClass: String,
                appearToClass: String,
                duration: [Number, String, Object]
              }
            function wo(t) {
              var e = t && t.componentOptions
              return e && e.Ctor.options['abstract'] ? wo(He(e.children)) : t
            }
            function Ao(t) {
              var e = {},
                n = t.$options
              for (var r in n.propsData) {
                e[r] = t[r]
              }
              var o = n._parentListeners
              for (var i in o) {
                e[_(i)] = o[i]
              }
              return e
            }
            function xo(t, e) {
              if (/\d-keep-alive$/.test(e.tag))
                return t('keep-alive', { props: e.componentOptions.propsData })
            }
            var Oo = function Oo(t) {
                return t.tag || Ue(t)
              },
              ko = function ko(t) {
                return 'show' === t.name
              },
              So = {
                name: 'transition',
                props: $o,
                abstract: !0,
                render: function render(t) {
                  var e = this,
                    n = this.$slots['default']
                  if (n && (n = n.filter(Oo)).length) {
                    var r = this.mode,
                      i = n[0]
                    if (
                      (function(t) {
                        for (; (t = t.parent); ) {
                          if (t.data.transition) return !0
                        }
                      })(this.$vnode)
                    )
                      return i
                    var a = wo(i)
                    if (!a) return i
                    if (this._leaving) return xo(t, i)
                    var s = '__transition-' + this._uid + '-'
                    a.key =
                      null == a.key
                        ? a.isComment
                          ? s + 'comment'
                          : s + a.tag
                        : o(a.key)
                        ? 0 === String(a.key).indexOf(s)
                          ? a.key
                          : s + a.key
                        : a.key
                    var c = ((a.data || (a.data = {})).transition = Ao(this)),
                      u = this._vnode,
                      l = wo(u)
                    if (
                      (a.data.directives &&
                        a.data.directives.some(ko) &&
                        (a.data.show = !0),
                      l &&
                        l.data &&
                        !(function(t, e) {
                          return e.key === t.key && e.tag === t.tag
                        })(a, l) &&
                        !Ue(l) &&
                        (!l.componentInstance ||
                          !l.componentInstance._vnode.isComment))
                    ) {
                      var f = (l.data.transition = x({}, c))
                      if ('out-in' === r)
                        return (
                          (this._leaving = !0),
                          ne(f, 'afterLeave', function() {
                            ;(e._leaving = !1), e.$forceUpdate()
                          }),
                          xo(t, i)
                        )
                      if ('in-out' === r) {
                        if (Ue(a)) return u
                        var p,
                          d = function d() {
                            p()
                          }
                        ne(c, 'afterEnter', d),
                          ne(c, 'enterCancelled', d),
                          ne(f, 'delayLeave', function(t) {
                            p = t
                          })
                      }
                    }
                    return i
                  }
                }
              },
              Eo = x({ tag: String, moveClass: String }, $o)
            function jo(t) {
              t.elm._moveCb && t.elm._moveCb(),
                t.elm._enterCb && t.elm._enterCb()
            }
            function To(t) {
              t.data.newPos = t.elm.getBoundingClientRect()
            }
            function Io(t) {
              var e = t.data.pos,
                n = t.data.newPos,
                r = e.left - n.left,
                o = e.top - n.top
              if (r || o) {
                t.data.moved = !0
                var i = t.elm.style
                ;(i.transform = i.WebkitTransform =
                  'translate(' + r + 'px,' + o + 'px)'),
                  (i.transitionDuration = '0s')
              }
            }
            delete Eo.mode
            var Do = {
              Transition: So,
              TransitionGroup: {
                props: Eo,
                beforeMount: function beforeMount() {
                  var t = this,
                    e = this._update
                  this._update = function(n, r) {
                    var o = Ke(t)
                    t.__patch__(t._vnode, t.kept, !1, !0),
                      (t._vnode = t.kept),
                      o(),
                      e.call(t, n, r)
                  }
                },
                render: function render(t) {
                  for (
                    var e = this.tag || this.$vnode.data.tag || 'span',
                      n = Object.create(null),
                      r = (this.prevChildren = this.children),
                      o = this.$slots['default'] || [],
                      i = (this.children = []),
                      a = Ao(this),
                      s = 0;
                    s < o.length;
                    s++
                  ) {
                    var c = o[s]
                    c.tag &&
                      null != c.key &&
                      0 !== String(c.key).indexOf('__vlist') &&
                      (i.push(c),
                      (n[c.key] = c),
                      ((c.data || (c.data = {})).transition = a))
                  }
                  if (r) {
                    for (var u = [], l = [], f = 0; f < r.length; f++) {
                      var p = r[f]
                      ;(p.data.transition = a),
                        (p.data.pos = p.elm.getBoundingClientRect()),
                        n[p.key] ? u.push(p) : l.push(p)
                    }
                    ;(this.kept = t(e, null, u)), (this.removed = l)
                  }
                  return t(e, null, i)
                },
                updated: function updated() {
                  var t = this.prevChildren,
                    e = this.moveClass || (this.name || 'v') + '-move'
                  t.length &&
                    this.hasMove(t[0].elm, e) &&
                    (t.forEach(jo),
                    t.forEach(To),
                    t.forEach(Io),
                    (this._reflow = document.body.offsetHeight),
                    t.forEach(function(t) {
                      if (t.data.moved) {
                        var n = t.elm,
                          r = n.style
                        Qr(n, e),
                          (r.transform = r.WebkitTransform = r.transitionDuration =
                            ''),
                          n.addEventListener(
                            Kr,
                            (n._moveCb = function t(r) {
                              ;(r && r.target !== n) ||
                                (r && !/transform$/.test(r.propertyName)) ||
                                (n.removeEventListener(Kr, t),
                                (n._moveCb = null),
                                Yr(n, e))
                            })
                          )
                      }
                    }))
                },
                methods: {
                  hasMove: function hasMove(t, e) {
                    if (!Vr) return !1
                    if (this._hasMove) return this._hasMove
                    var n = t.cloneNode()
                    t._transitionClasses &&
                      t._transitionClasses.forEach(function(t) {
                        Ur(n, t)
                      }),
                      Rr(n, e),
                      (n.style.display = 'none'),
                      this.$el.appendChild(n)
                    var r = no(n)
                    return (
                      this.$el.removeChild(n), (this._hasMove = r.hasTransform)
                    )
                  }
                }
              }
            }
            ;(bn.config.mustUseProp = function(t, e, n) {
              return (
                ('value' === n && En(t) && 'button' !== e) ||
                ('selected' === n && 'option' === t) ||
                ('checked' === n && 'input' === t) ||
                ('muted' === n && 'video' === t)
              )
            }),
              (bn.config.isReservedTag = Wn),
              (bn.config.isReservedAttr = Sn),
              (bn.config.getTagNamespace = function(t) {
                return zn(t) ? 'svg' : 'math' === t ? 'math' : void 0
              }),
              (bn.config.isUnknownElement = function(t) {
                if (!H) return !0
                if (Wn(t)) return !1
                if (((t = t.toLowerCase()), null != qn[t])) return qn[t]
                var e = document.createElement(t)
                return t.indexOf('-') > -1
                  ? (qn[t] =
                      e.constructor === window.HTMLUnknownElement ||
                      e.constructor === window.HTMLElement)
                  : (qn[t] = /HTMLUnknownElement/.test(e.toString()))
              }),
              x(bn.options.directives, Co),
              x(bn.options.components, Do),
              (bn.prototype.__patch__ = H ? lo : k),
              (bn.prototype.$mount = function(t, e) {
                return (function(t, e, n) {
                  var r
                  return (
                    (t.$el = e),
                    t.$options.render || (t.$options.render = pt),
                    Ze(t, 'beforeMount'),
                    (r = function r() {
                      t._update(t._render(), n)
                    }),
                    new un(
                      t,
                      r,
                      k,
                      {
                        before: function before() {
                          t._isMounted &&
                            !t._isDestroyed &&
                            Ze(t, 'beforeUpdate')
                        }
                      },
                      !0
                    ),
                    (n = !1),
                    null == t.$vnode && ((t._isMounted = !0), Ze(t, 'mounted')),
                    t
                  )
                })(
                  this,
                  (t =
                    t && H
                      ? (function(t) {
                          if ('string' == typeof t) {
                            var e = document.querySelector(t)
                            return e || document.createElement('div')
                          }
                          return t
                        })(t)
                      : void 0),
                  e
                )
              }),
              H &&
                setTimeout(function() {
                  L.devtools && tt && tt.emit('init', bn)
                }, 0),
              (module.exports = bn)
          }.call(
            this,
            typeof global !== 'undefined'
              ? global
              : typeof self !== 'undefined'
              ? self
              : typeof window !== 'undefined'
              ? window
              : {},
            require('timers').setImmediate
          ))
        }.apply(this, arguments))
      },
      { timers: 226 }
    ],
    236: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/vueify/lib/insert-css.js',
          module
        )
        ;(function() {
          var inserted = (exports.cache = {})
          function noop() {}
          exports.insert = function(css) {
            if (inserted[css]) return noop
            inserted[css] = true
            var elem = document.createElement('style')
            elem.setAttribute('type', 'text/css')
            if ('textContent' in elem) {
              elem.textContent = css
            } else {
              elem.styleSheet.cssText = css
            }
            document.getElementsByTagName('head')[0].appendChild(elem)
            return function() {
              document.getElementsByTagName('head')[0].removeChild(elem)
              inserted[css] = false
            }
          }
        }.apply(this, arguments))
      },
      {}
    ],
    237: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'node_modules/vuex/dist/vuex.common.js',
          module
        )
        ;(function() {
          ;(function(process, global) {
            /**
             * vuex v3.1.2
             * (c) 2019 Evan You
             * @license MIT
             */ 'use strict'
            function applyMixin(Vue) {
              var version = Number(Vue.version.split('.')[0])
              if (version >= 2) {
                Vue.mixin({ beforeCreate: vuexInit })
              } else {
                // override init and inject vuex init procedure
                // for 1.x backwards compatibility.
                var _init = Vue.prototype._init
                Vue.prototype._init = function(options) {
                  if (options === void 0) options = {}
                  options.init = options.init
                    ? [vuexInit].concat(options.init)
                    : vuexInit
                  _init.call(this, options)
                }
              }
              /**
               * Vuex init hook, injected into each instances init hooks list.
               */ function vuexInit() {
                var options = this.$options // store injection
                if (options.store) {
                  this.$store =
                    typeof options.store === 'function'
                      ? options.store()
                      : options.store
                } else if (options.parent && options.parent.$store) {
                  this.$store = options.parent.$store
                }
              }
            }
            var target =
              typeof window !== 'undefined'
                ? window
                : typeof global !== 'undefined'
                ? global
                : {}
            var devtoolHook = target.__VUE_DEVTOOLS_GLOBAL_HOOK__
            function devtoolPlugin(store) {
              if (!devtoolHook) {
                return
              }
              store._devtoolHook = devtoolHook
              devtoolHook.emit('vuex:init', store)
              devtoolHook.on('vuex:travel-to-state', function(targetState) {
                store.replaceState(targetState)
              })
              store.subscribe(function(mutation, state) {
                devtoolHook.emit('vuex:mutation', mutation, state)
              })
            }
            /**
             * Get the first item that pass the test
             * by second argument function
             *
             * @param {Array} list
             * @param {Function} f
             * @return {*}
             */ /**
             * forEach for object
             */ function forEachValue(obj, fn) {
              Object.keys(obj).forEach(function(key) {
                return fn(obj[key], key)
              })
            }
            function isObject(obj) {
              return obj !== null && (0, _typeof3['default'])(obj) === 'object'
            }
            function isPromise(val) {
              return val && typeof val.then === 'function'
            }
            function assert(condition, msg) {
              if (!condition) {
                throw new Error('[vuex] ' + msg)
              }
            }
            function partial(fn, arg) {
              return function() {
                return fn(arg)
              }
            } // Base data struct for store's module, package with some attribute and method
            var Module = function Module(rawModule, runtime) {
              this.runtime = runtime // Store some children item
              this._children = Object.create(null) // Store the origin module object which passed by programmer
              this._rawModule = rawModule
              var rawState = rawModule.state // Store the origin module's state
              this.state =
                (typeof rawState === 'function' ? rawState() : rawState) || {}
            }
            var prototypeAccessors = { namespaced: { configurable: true } }
            prototypeAccessors.namespaced.get = function() {
              return !!this._rawModule.namespaced
            }
            Module.prototype.addChild = function addChild(key, module) {
              this._children[key] = module
            }
            Module.prototype.removeChild = function removeChild(key) {
              delete this._children[key]
            }
            Module.prototype.getChild = function getChild(key) {
              return this._children[key]
            }
            Module.prototype.update = function update(rawModule) {
              this._rawModule.namespaced = rawModule.namespaced
              if (rawModule.actions) {
                this._rawModule.actions = rawModule.actions
              }
              if (rawModule.mutations) {
                this._rawModule.mutations = rawModule.mutations
              }
              if (rawModule.getters) {
                this._rawModule.getters = rawModule.getters
              }
            }
            Module.prototype.forEachChild = function forEachChild(fn) {
              forEachValue(this._children, fn)
            }
            Module.prototype.forEachGetter = function forEachGetter(fn) {
              if (this._rawModule.getters) {
                forEachValue(this._rawModule.getters, fn)
              }
            }
            Module.prototype.forEachAction = function forEachAction(fn) {
              if (this._rawModule.actions) {
                forEachValue(this._rawModule.actions, fn)
              }
            }
            Module.prototype.forEachMutation = function forEachMutation(fn) {
              if (this._rawModule.mutations) {
                forEachValue(this._rawModule.mutations, fn)
              }
            }
            Object.defineProperties(Module.prototype, prototypeAccessors)
            var ModuleCollection = function ModuleCollection(rawRootModule) {
              // register root module (Vuex.Store options)
              this.register([], rawRootModule, false)
            }
            ModuleCollection.prototype.get = function get(path) {
              return path.reduce(function(module, key) {
                return module.getChild(key)
              }, this.root)
            }
            ModuleCollection.prototype.getNamespace = function getNamespace(
              path
            ) {
              var module = this.root
              return path.reduce(function(namespace, key) {
                module = module.getChild(key)
                return namespace + (module.namespaced ? key + '/' : '')
              }, '')
            }
            ModuleCollection.prototype.update = function update$1(
              rawRootModule
            ) {
              update([], this.root, rawRootModule)
            }
            ModuleCollection.prototype.register = function register(
              path,
              rawModule,
              runtime
            ) {
              var this$1 = this
              if (runtime === void 0) runtime = true
              if (process.env.NODE_ENV !== 'production') {
                assertRawModule(path, rawModule)
              }
              var newModule = new Module(rawModule, runtime)
              if (path.length === 0) {
                this.root = newModule
              } else {
                var parent = this.get(path.slice(0, -1))
                parent.addChild(path[path.length - 1], newModule)
              } // register nested modules
              if (rawModule.modules) {
                forEachValue(rawModule.modules, function(rawChildModule, key) {
                  this$1.register(path.concat(key), rawChildModule, runtime)
                })
              }
            }
            ModuleCollection.prototype.unregister = function unregister(path) {
              var parent = this.get(path.slice(0, -1))
              var key = path[path.length - 1]
              if (!parent.getChild(key).runtime) {
                return
              }
              parent.removeChild(key)
            }
            function update(path, targetModule, newModule) {
              if (process.env.NODE_ENV !== 'production') {
                assertRawModule(path, newModule)
              } // update target module
              targetModule.update(newModule) // update nested modules
              if (newModule.modules) {
                for (var key in newModule.modules) {
                  if (!targetModule.getChild(key)) {
                    if (process.env.NODE_ENV !== 'production') {
                      console.warn(
                        "[vuex] trying to add a new module '" +
                          key +
                          "' on hot reloading, " +
                          'manual reload is needed'
                      )
                    }
                    return
                  }
                  update(
                    path.concat(key),
                    targetModule.getChild(key),
                    newModule.modules[key]
                  )
                }
              }
            }
            var functionAssert = {
              assert: function assert(value) {
                return typeof value === 'function'
              },
              expected: 'function'
            }
            var objectAssert = {
              assert: function assert(value) {
                return (
                  typeof value === 'function' ||
                  ((0, _typeof3['default'])(value) === 'object' &&
                    typeof value.handler === 'function')
                )
              },
              expected: 'function or object with "handler" function'
            }
            var assertTypes = {
              getters: functionAssert,
              mutations: functionAssert,
              actions: objectAssert
            }
            function assertRawModule(path, rawModule) {
              Object.keys(assertTypes).forEach(function(key) {
                if (!rawModule[key]) {
                  return
                }
                var assertOptions = assertTypes[key]
                forEachValue(rawModule[key], function(value, type) {
                  assert(
                    assertOptions.assert(value),
                    makeAssertionMessage(
                      path,
                      key,
                      type,
                      value,
                      assertOptions.expected
                    )
                  )
                })
              })
            }
            function makeAssertionMessage(path, key, type, value, expected) {
              var buf =
                key +
                ' should be ' +
                expected +
                ' but "' +
                key +
                '.' +
                type +
                '"'
              if (path.length > 0) {
                buf += ' in module "' + path.join('.') + '"'
              }
              buf += ' is ' + JSON.stringify(value) + '.'
              return buf
            }
            var Vue // bind on install
            var Store = function Store(options) {
              var this$1 = this
              if (options === void 0) options = {} // Auto install if it is not done yet and `window` has `Vue`.
              // To allow users to avoid auto-installation in some cases,
              // this code should be placed here. See #731
              if (!Vue && typeof window !== 'undefined' && window.Vue) {
                install(window.Vue)
              }
              if (process.env.NODE_ENV !== 'production') {
                assert(
                  Vue,
                  'must call Vue.use(Vuex) before creating a store instance.'
                )
                assert(
                  typeof Promise !== 'undefined',
                  'vuex requires a Promise polyfill in this browser.'
                )
                assert(
                  this instanceof Store,
                  'store must be called with the new operator.'
                )
              }
              var plugins = options.plugins
              if (plugins === void 0) plugins = []
              var strict = options.strict
              if (strict === void 0) strict = false // store internal state
              this._committing = false
              this._actions = Object.create(null)
              this._actionSubscribers = []
              this._mutations = Object.create(null)
              this._wrappedGetters = Object.create(null)
              this._modules = new ModuleCollection(options)
              this._modulesNamespaceMap = Object.create(null)
              this._subscribers = []
              this._watcherVM = new Vue()
              this._makeLocalGettersCache = Object.create(null) // bind commit and dispatch to self
              var store = this
              var ref = this
              var dispatch = ref.dispatch
              var commit = ref.commit
              this.dispatch = function boundDispatch(type, payload) {
                return dispatch.call(store, type, payload)
              }
              this.commit = function boundCommit(type, payload, options) {
                return commit.call(store, type, payload, options)
              } // strict mode
              this.strict = strict
              var state = this._modules.root.state // init root module.
              // this also recursively registers all sub-modules
              // and collects all module getters inside this._wrappedGetters
              installModule(this, state, [], this._modules.root) // initialize the store vm, which is responsible for the reactivity
              // (also registers _wrappedGetters as computed properties)
              resetStoreVM(this, state) // apply plugins
              plugins.forEach(function(plugin) {
                return plugin(this$1)
              })
              var useDevtools =
                options.devtools !== undefined
                  ? options.devtools
                  : Vue.config.devtools
              if (useDevtools) {
                devtoolPlugin(this)
              }
            }
            var prototypeAccessors$1 = { state: { configurable: true } }
            prototypeAccessors$1.state.get = function() {
              return this._vm._data.$$state
            }
            prototypeAccessors$1.state.set = function(v) {
              if (process.env.NODE_ENV !== 'production') {
                assert(
                  false,
                  'use store.replaceState() to explicit replace store state.'
                )
              }
            }
            Store.prototype.commit = function commit(
              _type,
              _payload,
              _options
            ) {
              var this$1 = this // check object-style commit
              var ref = unifyObjectStyle(_type, _payload, _options)
              var type = ref.type
              var payload = ref.payload
              var options = ref.options
              var mutation = { type: type, payload: payload }
              var entry = this._mutations[type]
              if (!entry) {
                if (process.env.NODE_ENV !== 'production') {
                  console.error('[vuex] unknown mutation type: ' + type)
                }
                return
              }
              this._withCommit(function() {
                entry.forEach(function commitIterator(handler) {
                  handler(payload)
                })
              })
              this._subscribers.forEach(function(sub) {
                return sub(mutation, this$1.state)
              })
              if (
                process.env.NODE_ENV !== 'production' &&
                options &&
                options.silent
              ) {
                console.warn(
                  '[vuex] mutation type: ' +
                    type +
                    '. Silent option has been removed. ' +
                    'Use the filter functionality in the vue-devtools'
                )
              }
            }
            Store.prototype.dispatch = function dispatch(_type, _payload) {
              var this$1 = this // check object-style dispatch
              var ref = unifyObjectStyle(_type, _payload)
              var type = ref.type
              var payload = ref.payload
              var action = { type: type, payload: payload }
              var entry = this._actions[type]
              if (!entry) {
                if (process.env.NODE_ENV !== 'production') {
                  console.error('[vuex] unknown action type: ' + type)
                }
                return
              }
              try {
                this._actionSubscribers
                  .filter(function(sub) {
                    return sub.before
                  })
                  .forEach(function(sub) {
                    return sub.before(action, this$1.state)
                  })
              } catch (e) {
                if (process.env.NODE_ENV !== 'production') {
                  console.warn('[vuex] error in before action subscribers: ')
                  console.error(e)
                }
              }
              var result =
                entry.length > 1
                  ? Promise.all(
                      entry.map(function(handler) {
                        return handler(payload)
                      })
                    )
                  : entry[0](payload)
              return result.then(function(res) {
                try {
                  this$1._actionSubscribers
                    .filter(function(sub) {
                      return sub.after
                    })
                    .forEach(function(sub) {
                      return sub.after(action, this$1.state)
                    })
                } catch (e) {
                  if (process.env.NODE_ENV !== 'production') {
                    console.warn('[vuex] error in after action subscribers: ')
                    console.error(e)
                  }
                }
                return res
              })
            }
            Store.prototype.subscribe = function subscribe(fn) {
              return genericSubscribe(fn, this._subscribers)
            }
            Store.prototype.subscribeAction = function subscribeAction(fn) {
              var subs = typeof fn === 'function' ? { before: fn } : fn
              return genericSubscribe(subs, this._actionSubscribers)
            }
            Store.prototype.watch = function watch(getter, cb, options) {
              var this$1 = this
              if (process.env.NODE_ENV !== 'production') {
                assert(
                  typeof getter === 'function',
                  'store.watch only accepts a function.'
                )
              }
              return this._watcherVM.$watch(
                function() {
                  return getter(this$1.state, this$1.getters)
                },
                cb,
                options
              )
            }
            Store.prototype.replaceState = function replaceState(state) {
              var this$1 = this
              this._withCommit(function() {
                this$1._vm._data.$$state = state
              })
            }
            Store.prototype.registerModule = function registerModule(
              path,
              rawModule,
              options
            ) {
              if (options === void 0) options = {}
              if (typeof path === 'string') {
                path = [path]
              }
              if (process.env.NODE_ENV !== 'production') {
                assert(
                  Array.isArray(path),
                  'module path must be a string or an Array.'
                )
                assert(
                  path.length > 0,
                  'cannot register the root module by using registerModule.'
                )
              }
              this._modules.register(path, rawModule)
              installModule(
                this,
                this.state,
                path,
                this._modules.get(path),
                options.preserveState
              ) // reset store to update getters...
              resetStoreVM(this, this.state)
            }
            Store.prototype.unregisterModule = function unregisterModule(path) {
              var this$1 = this
              if (typeof path === 'string') {
                path = [path]
              }
              if (process.env.NODE_ENV !== 'production') {
                assert(
                  Array.isArray(path),
                  'module path must be a string or an Array.'
                )
              }
              this._modules.unregister(path)
              this._withCommit(function() {
                var parentState = getNestedState(
                  this$1.state,
                  path.slice(0, -1)
                )
                Vue['delete'](parentState, path[path.length - 1])
              })
              resetStore(this)
            }
            Store.prototype.hotUpdate = function hotUpdate(newOptions) {
              this._modules.update(newOptions)
              resetStore(this, true)
            }
            Store.prototype._withCommit = function _withCommit(fn) {
              var committing = this._committing
              this._committing = true
              fn()
              this._committing = committing
            }
            Object.defineProperties(Store.prototype, prototypeAccessors$1)
            function genericSubscribe(fn, subs) {
              if (subs.indexOf(fn) < 0) {
                subs.push(fn)
              }
              return function() {
                var i = subs.indexOf(fn)
                if (i > -1) {
                  subs.splice(i, 1)
                }
              }
            }
            function resetStore(store, hot) {
              store._actions = Object.create(null)
              store._mutations = Object.create(null)
              store._wrappedGetters = Object.create(null)
              store._modulesNamespaceMap = Object.create(null)
              var state = store.state // init all modules
              installModule(store, state, [], store._modules.root, true) // reset vm
              resetStoreVM(store, state, hot)
            }
            function resetStoreVM(store, state, hot) {
              var oldVm = store._vm // bind store public getters
              store.getters = {} // reset local getters cache
              store._makeLocalGettersCache = Object.create(null)
              var wrappedGetters = store._wrappedGetters
              var computed = {}
              forEachValue(wrappedGetters, function(fn, key) {
                // use computed to leverage its lazy-caching mechanism
                // direct inline function use will lead to closure preserving oldVm.
                // using partial to return function with only arguments preserved in closure environment.
                computed[key] = partial(fn, store)
                Object.defineProperty(store.getters, key, {
                  get: function get() {
                    return store._vm[key]
                  },
                  enumerable: true // for local getters
                })
              }) // use a Vue instance to store the state tree
              // suppress warnings just in case the user has added
              // some funky global mixins
              var silent = Vue.config.silent
              Vue.config.silent = true
              store._vm = new Vue({
                data: { $$state: state },
                computed: computed
              })
              Vue.config.silent = silent // enable strict mode for new vm
              if (store.strict) {
                enableStrictMode(store)
              }
              if (oldVm) {
                if (hot) {
                  // dispatch changes in all subscribed watchers
                  // to force getter re-evaluation for hot reloading.
                  store._withCommit(function() {
                    oldVm._data.$$state = null
                  })
                }
                Vue.nextTick(function() {
                  return oldVm.$destroy()
                })
              }
            }
            function installModule(store, rootState, path, module, hot) {
              var isRoot = !path.length
              var namespace = store._modules.getNamespace(path) // register in namespace map
              if (module.namespaced) {
                if (
                  store._modulesNamespaceMap[namespace] &&
                  process.env.NODE_ENV !== 'production'
                ) {
                  console.error(
                    '[vuex] duplicate namespace ' +
                      namespace +
                      ' for the namespaced module ' +
                      path.join('/')
                  )
                }
                store._modulesNamespaceMap[namespace] = module
              } // set state
              if (!isRoot && !hot) {
                var parentState = getNestedState(rootState, path.slice(0, -1))
                var moduleName = path[path.length - 1]
                store._withCommit(function() {
                  if (process.env.NODE_ENV !== 'production') {
                    if (moduleName in parentState) {
                      console.warn(
                        '[vuex] state field "' +
                          moduleName +
                          '" was overridden by a module with the same name at "' +
                          path.join('.') +
                          '"'
                      )
                    }
                  }
                  Vue.set(parentState, moduleName, module.state)
                })
              }
              var local = (module.context = makeLocalContext(
                store,
                namespace,
                path
              ))
              module.forEachMutation(function(mutation, key) {
                var namespacedType = namespace + key
                registerMutation(store, namespacedType, mutation, local)
              })
              module.forEachAction(function(action, key) {
                var type = action.root ? key : namespace + key
                var handler = action.handler || action
                registerAction(store, type, handler, local)
              })
              module.forEachGetter(function(getter, key) {
                var namespacedType = namespace + key
                registerGetter(store, namespacedType, getter, local)
              })
              module.forEachChild(function(child, key) {
                installModule(store, rootState, path.concat(key), child, hot)
              })
            }
            /**
             * make localized dispatch, commit, getters and state
             * if there is no namespace, just use root ones
             */ function makeLocalContext(store, namespace, path) {
              var noNamespace = namespace === ''
              var local = {
                dispatch: noNamespace
                  ? store.dispatch
                  : function(_type, _payload, _options) {
                      var args = unifyObjectStyle(_type, _payload, _options)
                      var payload = args.payload
                      var options = args.options
                      var type = args.type
                      if (!options || !options.root) {
                        type = namespace + type
                        if (
                          process.env.NODE_ENV !== 'production' &&
                          !store._actions[type]
                        ) {
                          console.error(
                            '[vuex] unknown local action type: ' +
                              args.type +
                              ', global type: ' +
                              type
                          )
                          return
                        }
                      }
                      return store.dispatch(type, payload)
                    },
                commit: noNamespace
                  ? store.commit
                  : function(_type, _payload, _options) {
                      var args = unifyObjectStyle(_type, _payload, _options)
                      var payload = args.payload
                      var options = args.options
                      var type = args.type
                      if (!options || !options.root) {
                        type = namespace + type
                        if (
                          process.env.NODE_ENV !== 'production' &&
                          !store._mutations[type]
                        ) {
                          console.error(
                            '[vuex] unknown local mutation type: ' +
                              args.type +
                              ', global type: ' +
                              type
                          )
                          return
                        }
                      }
                      store.commit(type, payload, options)
                    }
              } // getters and state object must be gotten lazily
              // because they will be changed by vm update
              Object.defineProperties(local, {
                getters: {
                  get: noNamespace
                    ? function() {
                        return store.getters
                      }
                    : function() {
                        return makeLocalGetters(store, namespace)
                      }
                },
                state: {
                  get: function get() {
                    return getNestedState(store.state, path)
                  }
                }
              })
              return local
            }
            function makeLocalGetters(store, namespace) {
              if (!store._makeLocalGettersCache[namespace]) {
                var gettersProxy = {}
                var splitPos = namespace.length
                Object.keys(store.getters).forEach(function(type) {
                  // skip if the target getter is not match this namespace
                  if (type.slice(0, splitPos) !== namespace) {
                    return
                  } // extract local getter type
                  var localType = type.slice(splitPos) // Add a port to the getters proxy.
                  // Define as getter property because
                  // we do not want to evaluate the getters in this time.
                  Object.defineProperty(gettersProxy, localType, {
                    get: function get() {
                      return store.getters[type]
                    },
                    enumerable: true
                  })
                })
                store._makeLocalGettersCache[namespace] = gettersProxy
              }
              return store._makeLocalGettersCache[namespace]
            }
            function registerMutation(store, type, handler, local) {
              var entry =
                store._mutations[type] || (store._mutations[type] = [])
              entry.push(function wrappedMutationHandler(payload) {
                handler.call(store, local.state, payload)
              })
            }
            function registerAction(store, type, handler, local) {
              var entry = store._actions[type] || (store._actions[type] = [])
              entry.push(function wrappedActionHandler(payload) {
                var res = handler.call(
                  store,
                  {
                    dispatch: local.dispatch,
                    commit: local.commit,
                    getters: local.getters,
                    state: local.state,
                    rootGetters: store.getters,
                    rootState: store.state
                  },
                  payload
                )
                if (!isPromise(res)) {
                  res = Promise.resolve(res)
                }
                if (store._devtoolHook) {
                  return res['catch'](function(err) {
                    store._devtoolHook.emit('vuex:error', err)
                    throw err
                  })
                } else {
                  return res
                }
              })
            }
            function registerGetter(store, type, rawGetter, local) {
              if (store._wrappedGetters[type]) {
                if (process.env.NODE_ENV !== 'production') {
                  console.error('[vuex] duplicate getter key: ' + type)
                }
                return
              }
              store._wrappedGetters[type] = function wrappedGetter(store) {
                return rawGetter(
                  local.state, // local state
                  local.getters, // local getters
                  store.state, // root state
                  store.getters // root getters
                )
              }
            }
            function enableStrictMode(store) {
              store._vm.$watch(
                function() {
                  return this._data.$$state
                },
                function() {
                  if (process.env.NODE_ENV !== 'production') {
                    assert(
                      store._committing,
                      'do not mutate vuex store state outside mutation handlers.'
                    )
                  }
                },
                { deep: true, sync: true }
              )
            }
            function getNestedState(state, path) {
              return path.length
                ? path.reduce(function(state, key) {
                    return state[key]
                  }, state)
                : state
            }
            function unifyObjectStyle(type, payload, options) {
              if (isObject(type) && type.type) {
                options = payload
                payload = type
                type = type.type
              }
              if (process.env.NODE_ENV !== 'production') {
                assert(
                  typeof type === 'string',
                  'expects string as the type, but found ' +
                    (0, _typeof3['default'])(type) +
                    '.'
                )
              }
              return { type: type, payload: payload, options: options }
            }
            function install(_Vue) {
              if (Vue && _Vue === Vue) {
                if (process.env.NODE_ENV !== 'production') {
                  console.error(
                    '[vuex] already installed. Vue.use(Vuex) should be called only once.'
                  )
                }
                return
              }
              Vue = _Vue
              applyMixin(Vue)
            }
            /**
             * Reduce the code which written in Vue.js for getting the state.
             * @param {String} [namespace] - Module's namespace
             * @param {Object|Array} states # Object's item can be a function which accept state and getters for param, you can do something for state and getters in it.
             * @param {Object}
             */ var mapState = normalizeNamespace(function(namespace, states) {
              var res = {}
              if (
                process.env.NODE_ENV !== 'production' &&
                !isValidMap(states)
              ) {
                console.error(
                  '[vuex] mapState: mapper parameter must be either an Array or an Object'
                )
              }
              normalizeMap(states).forEach(function(ref) {
                var key = ref.key
                var val = ref.val
                res[key] = function mappedState() {
                  var state = this.$store.state
                  var getters = this.$store.getters
                  if (namespace) {
                    var module = getModuleByNamespace(
                      this.$store,
                      'mapState',
                      namespace
                    )
                    if (!module) {
                      return
                    }
                    state = module.context.state
                    getters = module.context.getters
                  }
                  return typeof val === 'function'
                    ? val.call(this, state, getters)
                    : state[val]
                } // mark vuex getter for devtools
                res[key].vuex = true
              })
              return res
            })
            /**
             * Reduce the code which written in Vue.js for committing the mutation
             * @param {String} [namespace] - Module's namespace
             * @param {Object|Array} mutations # Object's item can be a function which accept `commit` function as the first param, it can accept anthor params. You can commit mutation and do any other things in this function. specially, You need to pass anthor params from the mapped function.
             * @return {Object}
             */ var mapMutations = normalizeNamespace(function(
              namespace,
              mutations
            ) {
              var res = {}
              if (
                process.env.NODE_ENV !== 'production' &&
                !isValidMap(mutations)
              ) {
                console.error(
                  '[vuex] mapMutations: mapper parameter must be either an Array or an Object'
                )
              }
              normalizeMap(mutations).forEach(function(ref) {
                var key = ref.key
                var val = ref.val
                res[key] = function mappedMutation() {
                  var args = [],
                    len = arguments.length
                  while (len--) {
                    args[len] = arguments[len]
                  } // Get the commit method from store
                  var commit = this.$store.commit
                  if (namespace) {
                    var module = getModuleByNamespace(
                      this.$store,
                      'mapMutations',
                      namespace
                    )
                    if (!module) {
                      return
                    }
                    commit = module.context.commit
                  }
                  return typeof val === 'function'
                    ? val.apply(this, [commit].concat(args))
                    : commit.apply(this.$store, [val].concat(args))
                }
              })
              return res
            })
            /**
             * Reduce the code which written in Vue.js for getting the getters
             * @param {String} [namespace] - Module's namespace
             * @param {Object|Array} getters
             * @return {Object}
             */ var mapGetters = normalizeNamespace(function(
              namespace,
              getters
            ) {
              var res = {}
              if (
                process.env.NODE_ENV !== 'production' &&
                !isValidMap(getters)
              ) {
                console.error(
                  '[vuex] mapGetters: mapper parameter must be either an Array or an Object'
                )
              }
              normalizeMap(getters).forEach(function(ref) {
                var key = ref.key
                var val = ref.val // The namespace has been mutated by normalizeNamespace
                val = namespace + val
                res[key] = function mappedGetter() {
                  if (
                    namespace &&
                    !getModuleByNamespace(this.$store, 'mapGetters', namespace)
                  ) {
                    return
                  }
                  if (
                    process.env.NODE_ENV !== 'production' &&
                    !(val in this.$store.getters)
                  ) {
                    console.error('[vuex] unknown getter: ' + val)
                    return
                  }
                  return this.$store.getters[val]
                } // mark vuex getter for devtools
                res[key].vuex = true
              })
              return res
            })
            /**
             * Reduce the code which written in Vue.js for dispatch the action
             * @param {String} [namespace] - Module's namespace
             * @param {Object|Array} actions # Object's item can be a function which accept `dispatch` function as the first param, it can accept anthor params. You can dispatch action and do any other things in this function. specially, You need to pass anthor params from the mapped function.
             * @return {Object}
             */ var mapActions = normalizeNamespace(function(
              namespace,
              actions
            ) {
              var res = {}
              if (
                process.env.NODE_ENV !== 'production' &&
                !isValidMap(actions)
              ) {
                console.error(
                  '[vuex] mapActions: mapper parameter must be either an Array or an Object'
                )
              }
              normalizeMap(actions).forEach(function(ref) {
                var key = ref.key
                var val = ref.val
                res[key] = function mappedAction() {
                  var args = [],
                    len = arguments.length
                  while (len--) {
                    args[len] = arguments[len]
                  } // get dispatch function from store
                  var dispatch = this.$store.dispatch
                  if (namespace) {
                    var module = getModuleByNamespace(
                      this.$store,
                      'mapActions',
                      namespace
                    )
                    if (!module) {
                      return
                    }
                    dispatch = module.context.dispatch
                  }
                  return typeof val === 'function'
                    ? val.apply(this, [dispatch].concat(args))
                    : dispatch.apply(this.$store, [val].concat(args))
                }
              })
              return res
            })
            /**
             * Rebinding namespace param for mapXXX function in special scoped, and return them by simple object
             * @param {String} namespace
             * @return {Object}
             */ var createNamespacedHelpers = function createNamespacedHelpers(
              namespace
            ) {
              return {
                mapState: mapState.bind(null, namespace),
                mapGetters: mapGetters.bind(null, namespace),
                mapMutations: mapMutations.bind(null, namespace),
                mapActions: mapActions.bind(null, namespace)
              }
            }
            /**
             * Normalize the map
             * normalizeMap([1, 2, 3]) => [ { key: 1, val: 1 }, { key: 2, val: 2 }, { key: 3, val: 3 } ]
             * normalizeMap({a: 1, b: 2, c: 3}) => [ { key: 'a', val: 1 }, { key: 'b', val: 2 }, { key: 'c', val: 3 } ]
             * @param {Array|Object} map
             * @return {Object}
             */ function normalizeMap(map) {
              if (!isValidMap(map)) {
                return []
              }
              return Array.isArray(map)
                ? map.map(function(key) {
                    return { key: key, val: key }
                  })
                : Object.keys(map).map(function(key) {
                    return { key: key, val: map[key] }
                  })
            }
            /**
             * Validate whether given map is valid or not
             * @param {*} map
             * @return {Boolean}
             */ function isValidMap(map) {
              return Array.isArray(map) || isObject(map)
            }
            /**
             * Return a function expect two param contains namespace and map. it will normalize the namespace and then the param's function will handle the new namespace and the map.
             * @param {Function} fn
             * @return {Function}
             */ function normalizeNamespace(fn) {
              return function(namespace, map) {
                if (typeof namespace !== 'string') {
                  map = namespace
                  namespace = ''
                } else if (namespace.charAt(namespace.length - 1) !== '/') {
                  namespace += '/'
                }
                return fn(namespace, map)
              }
            }
            /**
             * Search a special module from store by namespace. if module not exist, print error message.
             * @param {Object} store
             * @param {String} helper
             * @param {String} namespace
             * @return {Object}
             */ function getModuleByNamespace(store, helper, namespace) {
              var module = store._modulesNamespaceMap[namespace]
              if (process.env.NODE_ENV !== 'production' && !module) {
                console.error(
                  '[vuex] module namespace not found in ' +
                    helper +
                    '(): ' +
                    namespace
                )
              }
              return module
            }
            var index = {
              Store: Store,
              install: install,
              version: '3.1.2',
              mapState: mapState,
              mapMutations: mapMutations,
              mapGetters: mapGetters,
              mapActions: mapActions,
              createNamespacedHelpers: createNamespacedHelpers
            }
            module.exports = index
          }.call(
            this,
            require('_process'),
            typeof global !== 'undefined'
              ? global
              : typeof self !== 'undefined'
              ? self
              : typeof window !== 'undefined'
              ? window
              : {}
          ))
        }.apply(this, arguments))
      },
      { _process: 210 }
    ],
    238: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule('node_modules/yeast/index.js', module)
        ;(function() {
          'use strict'
          var alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(
              ''
            ),
            length = 64,
            map = {},
            seed = 0,
            i = 0,
            prev
          /**
           * Return a string representing the specified number.
           *
           * @param {Number} num The number to convert.
           * @returns {String} The string representation of the number.
           * @api public
           */ function encode(num) {
            var encoded = ''
            do {
              encoded = alphabet[num % length] + encoded
              num = Math.floor(num / length)
            } while (num > 0)
            return encoded
          }
          /**
           * Return the integer value specified by the given string.
           *
           * @param {String} str The string to convert.
           * @returns {Number} The integer value represented by the string.
           * @api public
           */ function decode(str) {
            var decoded = 0
            for (i = 0; i < str.length; i++) {
              decoded = decoded * length + map[str.charAt(i)]
            }
            return decoded
          }
          /**
           * Yeast: A tiny growing id generator.
           *
           * @returns {String} A unique id.
           * @api public
           */ function yeast() {
            var now = encode(+new Date())
            if (now !== prev) return (seed = 0), (prev = now)
            return now + '.' + encode(seed++)
          } //
          // Map each character to its index.
          //
          for (; i < length; i++) {
            map[alphabet[i]] = i
          } //
          // Expose the `yeast`, `encode` and `decode` functions.
          //
          yeast.encode = encode
          yeast.decode = decode
          module.exports = yeast
        }.apply(this, arguments))
      },
      {}
    ],
    239: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'src/frontend/public/js/components/carousel.vue',
          module
        )
        ;(function() {
          ;(function() {
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            var carousel = require('vue-owl-carousel') // import slide1 from '../../img/banners/slider1.png'
            // import slide3 from '../../img/banners/slider2.png'
            module.exports = {
              methods: {
                addAnimation: function addAnimation(event) {
                  // select the current active element
                  var item = event.item.index - 2
                  $('h1').removeClass('animated fadeInLeft')
                  $('p').removeClass('animated fadeInUp')
                  $('.owl-item')
                    .not('cloned')
                    .eq(item)
                    .find('h1')
                    .addClass('animated fadeInLeft')
                  $('.owl-item')
                    .not('cloned')
                    .eq(item)
                    .find('p')
                    .addClass('animated fadeInUp')
                }
              },
              components: { 'u-carousel': carousel }
            }
          })()
          if (module.exports.__esModule)
            module.exports = module.exports['default']
          var __vue__options__ =
            typeof module.exports === 'function'
              ? module.exports.options
              : module.exports
          if (__vue__options__.functional) {
            console.error(
              '[vueify] functional components are not supported and should be defined in plain js files using render functions.'
            )
          }
          __vue__options__.render = function render() {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _c(
              'div',
              { staticClass: 'custom-carousel' },
              [
                _c(
                  'u-carousel',
                  {
                    attrs: { autoplay: true, nav: false, items: '1' },
                    on: { changed: _vm.addAnimation }
                  },
                  [
                    _c('div', [
                      _c('div', { staticClass: 'item-carousel-caption' }, [
                        _c('h1', { staticClass: 'animated fadeInLeft' }, [
                          _vm._v('\n          Easy To Create, '),
                          _c('br'),
                          _vm._v('Easy To Edit\n        ')
                        ]),
                        _vm._v(' '),
                        _c('p', { staticClass: 'animated fadeInUp' }, [
                          _vm._v(
                            '\n          Is there any way I can share myprogramme line-up with my\n          participants? Yes!\n        '
                          )
                        ])
                      ]),
                      _vm._v(' '),
                      _c('img', {
                        attrs: { src: '../../img/banners/slider1.png' }
                      })
                    ]),
                    _vm._v(' '),
                    _c('div', [
                      _c('div', { staticClass: 'item-carousel-caption' }, [
                        _c('h1', { staticClass: 'animated fadeInLeft' }, [
                          _vm._v('\n          Easy To Create, '),
                          _c('br'),
                          _vm._v('Easy To Edit\n        ')
                        ]),
                        _vm._v(' '),
                        _c('p', { staticClass: 'animated fadeInUp' }, [
                          _vm._v(
                            '\n          Easily create a programme line-up for your event, edit and update as\n          the event goes on and participants receive live updates.\n        '
                          )
                        ])
                      ]),
                      _vm._v(' '),
                      _c('img', {
                        attrs: { src: '../../img/banners/slider3.png' }
                      })
                    ])
                  ]
                )
              ],
              1
            )
          }
          __vue__options__.staticRenderFns = []
          __vue__options__._scopeId = 'data-v-7d05cb08'
          if (module.hot) {
            ;(function() {
              var hotAPI = require('vue-hot-reload-api')
              hotAPI.install(require('vue'), true)
              if (!hotAPI.compatible) return
              module.hot.accept()
              if (!module.hot.data) {
                hotAPI.createRecord('data-v-7d05cb08', __vue__options__)
              } else {
                hotAPI.reload('data-v-7d05cb08', __vue__options__)
              }
            })()
          }
        }.apply(this, arguments))
      },
      { vue: 234, 'vue-hot-reload-api': 230, 'vue-owl-carousel': 231 }
    ],
    240: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'src/frontend/public/js/components/createLineupButton.vue',
          module
        )
        ;(function() {
          ;(function() {
            //
            //
            //
            //
            //
            //
            //
            var registerButton = require('./ui/button.vue')
            module.exports = {
              methods: {
                callRegister: function callRegister() {
                  location.href = '/register'
                }
              },
              components: { 'u-button': registerButton }
            }
          })()
          if (module.exports.__esModule)
            module.exports = module.exports['default']
          var __vue__options__ =
            typeof module.exports === 'function'
              ? module.exports.options
              : module.exports
          if (__vue__options__.functional) {
            console.error(
              '[vueify] functional components are not supported and should be defined in plain js files using render functions.'
            )
          }
          __vue__options__.render = function render() {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _c(
              'div',
              [
                _c(
                  'u-button',
                  {
                    staticClass: 'round-button',
                    attrs: { onClick: _vm.callRegister }
                  },
                  [_c('h4', [_vm._v('Create '), _c('br'), _vm._v('Line-up')])]
                )
              ],
              1
            )
          }
          __vue__options__.staticRenderFns = []
          if (module.hot) {
            ;(function() {
              var hotAPI = require('vue-hot-reload-api')
              hotAPI.install(require('vue'), true)
              if (!hotAPI.compatible) return
              module.hot.accept()
              if (!module.hot.data) {
                hotAPI.createRecord('data-v-45cfc659', __vue__options__)
              } else {
                hotAPI.reload('data-v-45cfc659', __vue__options__)
              }
            })()
          }
        }.apply(this, arguments))
      },
      { './ui/button.vue': 259, vue: 234, 'vue-hot-reload-api': 230 }
    ],
    241: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'src/frontend/public/js/components/dashboard/createEvent.vue',
          module
        )
        ;(function() {
          var __vueify_style_dispose__ = require('vueify/lib/insert-css').insert(
            '.image-upload-container[data-v-28372117] {\n  height: 250px;\n  background: red;\n}\n\n.create-event-details[data-v-28372117] {\n  height: 400px;\n  background: var(--upnext-light-ash);\n}'
          )
          ;(function() {
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            var lineupNav = require('./subComponents/lineupNav.vue')
            var sideNav = require('./subComponents/sideNav.vue')
            module.exports = {
              components: { 'lineup-nav': lineupNav, 'side-nav': sideNav }
            }
          })()
          if (module.exports.__esModule)
            module.exports = module.exports['default']
          var __vue__options__ =
            typeof module.exports === 'function'
              ? module.exports.options
              : module.exports
          if (__vue__options__.functional) {
            console.error(
              '[vueify] functional components are not supported and should be defined in plain js files using render functions.'
            )
          }
          __vue__options__.render = function render() {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _c('div', [
              _c(
                'div',
                { staticClass: 'col-md-3' },
                [_c('side-nav', { attrs: { title: 'Create Lineup' } })],
                1
              ),
              _vm._v(' '),
              _c(
                'div',
                { staticClass: 'col-md-9' },
                [_c('lineup-nav'), _vm._v(' '), _vm._m(0)],
                1
              )
            ])
          }
          __vue__options__.staticRenderFns = [
            function render() {
              var _vm = this
              var _h = _vm.$createElement
              var _c = _vm._self._c || _h
              return _c('div', { staticClass: 'col-md-12 create-event' }, [
                _c('div', { staticClass: 'image-upload-container' }),
                _vm._v(' '),
                _c('div', { staticClass: 'create-event-details' })
              ])
            }
          ]
          __vue__options__._scopeId = 'data-v-28372117'
          if (module.hot) {
            ;(function() {
              var hotAPI = require('vue-hot-reload-api')
              hotAPI.install(require('vue'), true)
              if (!hotAPI.compatible) return
              module.hot.accept()
              module.hot.dispose(__vueify_style_dispose__)
              if (!module.hot.data) {
                hotAPI.createRecord('data-v-28372117', __vue__options__)
              } else {
                hotAPI.reload('data-v-28372117', __vue__options__)
              }
            })()
          }
        }.apply(this, arguments))
      },
      {
        './subComponents/lineupNav.vue': 251,
        './subComponents/sideNav.vue': 253,
        vue: 234,
        'vue-hot-reload-api': 230,
        'vueify/lib/insert-css': 236
      }
    ],
    242: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'src/frontend/public/js/components/dashboard/dashboard.vue',
          module
        )
        ;(function() {
          ;(function() {
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            var lineupNav = require('./subComponents/lineupNav.vue')
            var sideNav = require('./subComponents/sideNav.vue')
            var events = require('./subComponents/events.vue')
            module.exports = {
              components: {
                'lineup-nav': lineupNav,
                'side-nav': sideNav,
                events: events
              }
            }
          })()
          if (module.exports.__esModule)
            module.exports = module.exports['default']
          var __vue__options__ =
            typeof module.exports === 'function'
              ? module.exports.options
              : module.exports
          if (__vue__options__.functional) {
            console.error(
              '[vueify] functional components are not supported and should be defined in plain js files using render functions.'
            )
          }
          __vue__options__.render = function render() {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _c('div', [
              _c(
                'div',
                { staticClass: 'col-md-3' },
                [_c('side-nav', { attrs: { title: 'Dashboard' } })],
                1
              ),
              _vm._v(' '),
              _c('div', { staticClass: 'col-md-9' }, [
                _c('div', { staticClass: 'col-md-12' }, [_c('events')], 1)
              ])
            ])
          }
          __vue__options__.staticRenderFns = []
          __vue__options__._scopeId = 'data-v-1f024426'
          if (module.hot) {
            ;(function() {
              var hotAPI = require('vue-hot-reload-api')
              hotAPI.install(require('vue'), true)
              if (!hotAPI.compatible) return
              module.hot.accept()
              if (!module.hot.data) {
                hotAPI.createRecord('data-v-1f024426', __vue__options__)
              } else {
                hotAPI.reload('data-v-1f024426', __vue__options__)
              }
            })()
          }
        }.apply(this, arguments))
      },
      {
        './subComponents/events.vue': 249,
        './subComponents/lineupNav.vue': 251,
        './subComponents/sideNav.vue': 253,
        vue: 234,
        'vue-hot-reload-api': 230
      }
    ],
    243: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'src/frontend/public/js/components/dashboard/editLineup.vue',
          module
        )
        ;(function() {
          ;(function() {
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            var lineupNav = require('./subComponents/lineupNav.vue')
            var sideNav = require('./subComponents/sideNav.vue')
            module.exports = {
              components: { 'lineup-nav': lineupNav, 'side-nav': sideNav }
            }
          })()
          if (module.exports.__esModule)
            module.exports = module.exports['default']
          var __vue__options__ =
            typeof module.exports === 'function'
              ? module.exports.options
              : module.exports
          if (__vue__options__.functional) {
            console.error(
              '[vueify] functional components are not supported and should be defined in plain js files using render functions.'
            )
          }
          __vue__options__.render = function render() {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _c('div', [
              _c(
                'div',
                { staticClass: 'col-md-3' },
                [_c('side-nav', { attrs: { title: 'Edit Lineup' } })],
                1
              ),
              _vm._v(' '),
              _c('div', { staticClass: 'col-md-9' }, [_c('lineup-nav')], 1)
            ])
          }
          __vue__options__.staticRenderFns = []
          __vue__options__._scopeId = 'data-v-8c3950a0'
          if (module.hot) {
            ;(function() {
              var hotAPI = require('vue-hot-reload-api')
              hotAPI.install(require('vue'), true)
              if (!hotAPI.compatible) return
              module.hot.accept()
              if (!module.hot.data) {
                hotAPI.createRecord('data-v-8c3950a0', __vue__options__)
              } else {
                hotAPI.reload('data-v-8c3950a0', __vue__options__)
              }
            })()
          }
        }.apply(this, arguments))
      },
      {
        './subComponents/lineupNav.vue': 251,
        './subComponents/sideNav.vue': 253,
        vue: 234,
        'vue-hot-reload-api': 230
      }
    ],
    244: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'src/frontend/public/js/components/dashboard/feedback.vue',
          module
        )
        ;(function() {
          ;(function() {
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            var lineupNav = require('./subComponents/lineupNav.vue')
            var sideNav = require('./subComponents/sideNav.vue')
            var feedbackCard = require('./subComponents/feedbackCard.vue')
            module.exports = {
              data: function data() {
                return {
                  feedback: [
                    { id: 1, feedback: 'test event', view: 123, visible: true },
                    { id: 2, feedback: 'test event', view: 123, visible: true },
                    { id: 3, feedback: 'test event', view: 123, visible: true },
                    { id: 4, feedback: 'test event', view: 123, visible: true }
                  ]
                }
              },
              components: {
                'lineup-nav': lineupNav,
                'side-nav': sideNav,
                'feedback-card': feedbackCard
              }
            }
          })()
          if (module.exports.__esModule)
            module.exports = module.exports['default']
          var __vue__options__ =
            typeof module.exports === 'function'
              ? module.exports.options
              : module.exports
          if (__vue__options__.functional) {
            console.error(
              '[vueify] functional components are not supported and should be defined in plain js files using render functions.'
            )
          }
          __vue__options__.render = function render() {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _c('div', [
              _c(
                'div',
                { staticClass: 'col-md-3' },
                [_c('side-nav', { attrs: { title: 'Feedback' } })],
                1
              ),
              _vm._v(' '),
              _c(
                'div',
                { staticClass: 'col-md-9' },
                [
                  _c('lineup-nav'),
                  _vm._v(' '),
                  _c(
                    'div',
                    { staticClass: 'col-md-12' },
                    [
                      _c('feedback-card', {
                        attrs: { feedbacks: _vm.feedback }
                      })
                    ],
                    1
                  )
                ],
                1
              )
            ])
          }
          __vue__options__.staticRenderFns = []
          __vue__options__._scopeId = 'data-v-fdb86688'
          if (module.hot) {
            ;(function() {
              var hotAPI = require('vue-hot-reload-api')
              hotAPI.install(require('vue'), true)
              if (!hotAPI.compatible) return
              module.hot.accept()
              if (!module.hot.data) {
                hotAPI.createRecord('data-v-fdb86688', __vue__options__)
              } else {
                hotAPI.reload('data-v-fdb86688', __vue__options__)
              }
            })()
          }
        }.apply(this, arguments))
      },
      {
        './subComponents/feedbackCard.vue': 250,
        './subComponents/lineupNav.vue': 251,
        './subComponents/sideNav.vue': 253,
        vue: 234,
        'vue-hot-reload-api': 230
      }
    ],
    245: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'src/frontend/public/js/components/dashboard/lineup.vue',
          module
        )
        ;(function() {
          ;(function() {
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            var lineupNav = require('./subComponents/lineupNav.vue')
            var sideNav = require('./subComponents/sideNav.vue')
            module.exports = {
              components: { 'lineup-nav': lineupNav, 'side-nav': sideNav }
            }
          })()
          if (module.exports.__esModule)
            module.exports = module.exports['default']
          var __vue__options__ =
            typeof module.exports === 'function'
              ? module.exports.options
              : module.exports
          if (__vue__options__.functional) {
            console.error(
              '[vueify] functional components are not supported and should be defined in plain js files using render functions.'
            )
          }
          __vue__options__.render = function render() {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _c('div', [
              _c(
                'div',
                { staticClass: 'col-md-3' },
                [_c('side-nav', { attrs: { title: 'Event Lineup' } })],
                1
              ),
              _vm._v(' '),
              _c('div', { staticClass: 'col-md-9' }, [_c('lineup-nav')], 1)
            ])
          }
          __vue__options__.staticRenderFns = []
          __vue__options__._scopeId = 'data-v-78d81986'
          if (module.hot) {
            ;(function() {
              var hotAPI = require('vue-hot-reload-api')
              hotAPI.install(require('vue'), true)
              if (!hotAPI.compatible) return
              module.hot.accept()
              if (!module.hot.data) {
                hotAPI.createRecord('data-v-78d81986', __vue__options__)
              } else {
                hotAPI.reload('data-v-78d81986', __vue__options__)
              }
            })()
          }
        }.apply(this, arguments))
      },
      {
        './subComponents/lineupNav.vue': 251,
        './subComponents/sideNav.vue': 253,
        vue: 234,
        'vue-hot-reload-api': 230
      }
    ],
    246: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'src/frontend/public/js/components/dashboard/profile.vue',
          module
        )
        ;(function() {
          ;(function() {
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            var lineupNav = require('./subComponents/lineupNav.vue')
            var sideNav = require('./subComponents/sideNav.vue')
            module.exports = {
              components: { 'lineup-nav': lineupNav, 'side-nav': sideNav }
            }
          })()
          if (module.exports.__esModule)
            module.exports = module.exports['default']
          var __vue__options__ =
            typeof module.exports === 'function'
              ? module.exports.options
              : module.exports
          if (__vue__options__.functional) {
            console.error(
              '[vueify] functional components are not supported and should be defined in plain js files using render functions.'
            )
          }
          __vue__options__.render = function render() {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _c('div', [
              _c(
                'div',
                { staticClass: 'col-md-3' },
                [_c('side-nav', { attrs: { title: 'Profile' } })],
                1
              ),
              _vm._v(' '),
              _c('div', { staticClass: 'col-md-9' }, [_c('lineup-nav')], 1)
            ])
          }
          __vue__options__.staticRenderFns = []
          __vue__options__._scopeId = 'data-v-09c0a6c2'
          if (module.hot) {
            ;(function() {
              var hotAPI = require('vue-hot-reload-api')
              hotAPI.install(require('vue'), true)
              if (!hotAPI.compatible) return
              module.hot.accept()
              if (!module.hot.data) {
                hotAPI.createRecord('data-v-09c0a6c2', __vue__options__)
              } else {
                hotAPI.reload('data-v-09c0a6c2', __vue__options__)
              }
            })()
          }
        }.apply(this, arguments))
      },
      {
        './subComponents/lineupNav.vue': 251,
        './subComponents/sideNav.vue': 253,
        vue: 234,
        'vue-hot-reload-api': 230
      }
    ],
    247: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'src/frontend/public/js/components/dashboard/questions.vue',
          module
        )
        ;(function() {
          ;(function() {
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            var lineupNav = require('./subComponents/lineupNav.vue')
            var sideNav = require('./subComponents/sideNav.vue')
            var questionCard = require('./subComponents/questionCard.vue')
            module.exports = {
              data: function data() {
                return {
                  questions: [
                    { id: 1, question: 'test event', view: 123, visible: true },
                    { id: 2, question: 'test event', view: 123, visible: true },
                    { id: 3, question: 'test event', view: 123, visible: true },
                    { id: 4, question: 'test event', view: 123, visible: true }
                  ]
                }
              },
              components: {
                'lineup-nav': lineupNav,
                'side-nav': sideNav,
                'question-card': questionCard
              }
            }
          })()
          if (module.exports.__esModule)
            module.exports = module.exports['default']
          var __vue__options__ =
            typeof module.exports === 'function'
              ? module.exports.options
              : module.exports
          if (__vue__options__.functional) {
            console.error(
              '[vueify] functional components are not supported and should be defined in plain js files using render functions.'
            )
          }
          __vue__options__.render = function render() {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _c('div', [
              _c(
                'div',
                { staticClass: 'col-md-3' },
                [_c('side-nav', { attrs: { title: 'Questions' } })],
                1
              ),
              _vm._v(' '),
              _c(
                'div',
                { staticClass: 'col-md-9' },
                [
                  _c('lineup-nav'),
                  _vm._v(' '),
                  _c(
                    'div',
                    { staticClass: 'col-md-12' },
                    [
                      _c('question-card', {
                        attrs: { questions: _vm.questions }
                      })
                    ],
                    1
                  )
                ],
                1
              )
            ])
          }
          __vue__options__.staticRenderFns = []
          __vue__options__._scopeId = 'data-v-44659fb4'
          if (module.hot) {
            ;(function() {
              var hotAPI = require('vue-hot-reload-api')
              hotAPI.install(require('vue'), true)
              if (!hotAPI.compatible) return
              module.hot.accept()
              if (!module.hot.data) {
                hotAPI.createRecord('data-v-44659fb4', __vue__options__)
              } else {
                hotAPI.reload('data-v-44659fb4', __vue__options__)
              }
            })()
          }
        }.apply(this, arguments))
      },
      {
        './subComponents/lineupNav.vue': 251,
        './subComponents/questionCard.vue': 252,
        './subComponents/sideNav.vue': 253,
        vue: 234,
        'vue-hot-reload-api': 230
      }
    ],
    248: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'src/frontend/public/js/components/dashboard/subComponents/eventCard.vue',
          module
        )
        ;(function() {
          var __vueify_style_dispose__ = require('vueify/lib/insert-css').insert(
            '.single-event[data-v-a39edaec] {\n  background-color: white;\n  height: 200px;\n  margin: 15px;\n  border: 1px solid var(--upnext-ash);\n  border-radius: 6px;\n  padding: 0 !important;\n}\n\n.event-image-container[data-v-a39edaec] {\n  background-color: rgb(199, 195, 195);\n  height: 100px;\n  padding: 0 !important;\n}'
          )
          ;(function() {
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            module.exports = { props: { events: Array } }
          })()
          if (module.exports.__esModule)
            module.exports = module.exports['default']
          var __vue__options__ =
            typeof module.exports === 'function'
              ? module.exports.options
              : module.exports
          if (__vue__options__.functional) {
            console.error(
              '[vueify] functional components are not supported and should be defined in plain js files using render functions.'
            )
          }
          __vue__options__.render = function render() {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _c(
              'div',
              _vm._l(_vm.events, function(event) {
                return _c('div', { key: event.id, staticClass: 'col-md-6' }, [
                  _vm._m(0, true)
                ])
              }),
              0
            )
          }
          __vue__options__.staticRenderFns = [
            function render() {
              var _vm = this
              var _h = _vm.$createElement
              var _c = _vm._self._c || _h
              return _c('div', { staticClass: 'col-md-12 single-event' }, [
                _c('div', { staticClass: 'event-image-container' }),
                _vm._v(' '),
                _c('div', { staticClass: 'event-caption-container' })
              ])
            }
          ]
          __vue__options__._scopeId = 'data-v-a39edaec'
          if (module.hot) {
            ;(function() {
              var hotAPI = require('vue-hot-reload-api')
              hotAPI.install(require('vue'), true)
              if (!hotAPI.compatible) return
              module.hot.accept()
              module.hot.dispose(__vueify_style_dispose__)
              if (!module.hot.data) {
                hotAPI.createRecord('data-v-a39edaec', __vue__options__)
              } else {
                hotAPI.reload('data-v-a39edaec', __vue__options__)
              }
            })()
          }
        }.apply(this, arguments))
      },
      { vue: 234, 'vue-hot-reload-api': 230, 'vueify/lib/insert-css': 236 }
    ],
    249: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'src/frontend/public/js/components/dashboard/subComponents/events.vue',
          module
        )
        ;(function() {
          ;(function() {
            //
            //
            //
            //
            //
            var eventCard = require('./eventCard.vue')
            module.exports = {
              data: function data() {
                return {
                  events: [
                    {
                      id: 1,
                      event_name: 'test event',
                      view: 123,
                      visible: true
                    },
                    {
                      id: 2,
                      event_name: 'test event',
                      view: 123,
                      visible: true
                    },
                    {
                      id: 3,
                      event_name: 'test event',
                      view: 123,
                      visible: true
                    },
                    {
                      id: 4,
                      event_name: 'test event',
                      view: 123,
                      visible: true
                    }
                  ]
                }
              },
              components: { 'event-card': eventCard }
            }
          })()
          if (module.exports.__esModule)
            module.exports = module.exports['default']
          var __vue__options__ =
            typeof module.exports === 'function'
              ? module.exports.options
              : module.exports
          if (__vue__options__.functional) {
            console.error(
              '[vueify] functional components are not supported and should be defined in plain js files using render functions.'
            )
          }
          __vue__options__.render = function render() {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _c(
              'div',
              [_c('event-card', { attrs: { events: _vm.events } })],
              1
            )
          }
          __vue__options__.staticRenderFns = []
          __vue__options__._scopeId = 'data-v-d1b27fee'
          if (module.hot) {
            ;(function() {
              var hotAPI = require('vue-hot-reload-api')
              hotAPI.install(require('vue'), true)
              if (!hotAPI.compatible) return
              module.hot.accept()
              if (!module.hot.data) {
                hotAPI.createRecord('data-v-d1b27fee', __vue__options__)
              } else {
                hotAPI.reload('data-v-d1b27fee', __vue__options__)
              }
            })()
          }
        }.apply(this, arguments))
      },
      { './eventCard.vue': 248, vue: 234, 'vue-hot-reload-api': 230 }
    ],
    250: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'src/frontend/public/js/components/dashboard/subComponents/feedbackCard.vue',
          module
        )
        ;(function() {
          var __vueify_style_dispose__ = require('vueify/lib/insert-css').insert(
            '.feedback-list[data-v-204e7f25] {\n  list-style: none;\n}\n\n.feedback-list li[data-v-204e7f25] {\n  padding: 15px;\n  border-bottom: 1px solid var(--upnext-light-ash);\n}'
          )
          ;(function() {
            //
            //
            //
            //
            //
            //
            //
            //
            //
            module.exports = { props: { feedbacks: Array } }
          })()
          if (module.exports.__esModule)
            module.exports = module.exports['default']
          var __vue__options__ =
            typeof module.exports === 'function'
              ? module.exports.options
              : module.exports
          if (__vue__options__.functional) {
            console.error(
              '[vueify] functional components are not supported and should be defined in plain js files using render functions.'
            )
          }
          __vue__options__.render = function render() {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _c('div', [
              _c(
                'ul',
                { staticClass: 'feedback-list' },
                _vm._l(_vm.feedbacks, function(feedback) {
                  return _c('li', { key: feedback.id }, [
                    _vm._v('\n      ' + _vm._s(feedback.feedback) + '\n    ')
                  ])
                }),
                0
              )
            ])
          }
          __vue__options__.staticRenderFns = []
          __vue__options__._scopeId = 'data-v-204e7f25'
          if (module.hot) {
            ;(function() {
              var hotAPI = require('vue-hot-reload-api')
              hotAPI.install(require('vue'), true)
              if (!hotAPI.compatible) return
              module.hot.accept()
              module.hot.dispose(__vueify_style_dispose__)
              if (!module.hot.data) {
                hotAPI.createRecord('data-v-204e7f25', __vue__options__)
              } else {
                hotAPI.reload('data-v-204e7f25', __vue__options__)
              }
            })()
          }
        }.apply(this, arguments))
      },
      { vue: 234, 'vue-hot-reload-api': 230, 'vueify/lib/insert-css': 236 }
    ],
    251: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'src/frontend/public/js/components/dashboard/subComponents/lineupNav.vue',
          module
        )
        ;(function() {
          var __vueify_style_dispose__ = require('vueify/lib/insert-css').insert(
            '.lineup-nav[data-v-42f3d9d4]{\n  padding: 1px 0 10px 0;\n  float: right;\n}\n.lineup-nav ul[data-v-42f3d9d4]{\n  list-style: none;\n  padding: 0;\n  text-align: center;\n}\n.lineup-nav ul li[data-v-42f3d9d4]{\n  display: inline-block;\n  padding: 5px;\n}\n.lineup-nav ul li a[data-v-42f3d9d4]{\n  color: var(--upnext-input-addon);\n  font-size: 1em;\n  text-decoration: none;\n  transition: .3s;\n}\n.lineup-nav ul li a[data-v-42f3d9d4]:hover{\n  color: var(--upnext-blue)\n}\n\n.lineup-nav ul li .active[data-v-42f3d9d4]{\n  color: var(--upnext-blue)\n}'
          )
          var __vue__options__ =
            typeof module.exports === 'function'
              ? module.exports.options
              : module.exports
          if (__vue__options__.functional) {
            console.error(
              '[vueify] functional components are not supported and should be defined in plain js files using render functions.'
            )
          }
          __vue__options__.render = function render() {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _vm._m(0)
          }
          __vue__options__.staticRenderFns = [
            function render() {
              var _vm = this
              var _h = _vm.$createElement
              var _c = _vm._self._c || _h
              return _c('div', { staticClass: 'lineup-nav' }, [
                _c('ul', [
                  _c('li', [
                    _c('a', { attrs: { href: '/dashboard/lineup' } }, [
                      _c('span', { staticClass: 'fa fa-eye' }),
                      _vm._v(' Line-up')
                    ])
                  ]),
                  _vm._v(' '),
                  _c('li', [
                    _c('a', { attrs: { href: '/dashboard/questions' } }, [
                      _c('span', { staticClass: 'fa fa-comment' }),
                      _vm._v(' Questions')
                    ])
                  ]),
                  _vm._v(' '),
                  _c('li', [
                    _c('a', { attrs: { href: '/dashboard/feedback' } }, [
                      _c('span', { staticClass: 'fa fa-question-circle' }),
                      _vm._v(' Feedback')
                    ])
                  ])
                ])
              ])
            }
          ]
          __vue__options__._scopeId = 'data-v-42f3d9d4'
          if (module.hot) {
            ;(function() {
              var hotAPI = require('vue-hot-reload-api')
              hotAPI.install(require('vue'), true)
              if (!hotAPI.compatible) return
              module.hot.accept()
              module.hot.dispose(__vueify_style_dispose__)
              if (!module.hot.data) {
                hotAPI.createRecord('data-v-42f3d9d4', __vue__options__)
              } else {
                hotAPI.reload('data-v-42f3d9d4', __vue__options__)
              }
            })()
          }
        }.apply(this, arguments))
      },
      { vue: 234, 'vue-hot-reload-api': 230, 'vueify/lib/insert-css': 236 }
    ],
    252: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'src/frontend/public/js/components/dashboard/subComponents/questionCard.vue',
          module
        )
        ;(function() {
          var __vueify_style_dispose__ = require('vueify/lib/insert-css').insert(
            '.question-list[data-v-6a4e42f4] {\n  list-style: none;\n}\n\n.question-list li[data-v-6a4e42f4] {\n  padding: 15px;\n  border-bottom: 1px solid var(--upnext-light-ash);\n}'
          )
          ;(function() {
            //
            //
            //
            //
            //
            //
            //
            //
            //
            module.exports = { props: { questions: Array } }
          })()
          if (module.exports.__esModule)
            module.exports = module.exports['default']
          var __vue__options__ =
            typeof module.exports === 'function'
              ? module.exports.options
              : module.exports
          if (__vue__options__.functional) {
            console.error(
              '[vueify] functional components are not supported and should be defined in plain js files using render functions.'
            )
          }
          __vue__options__.render = function render() {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _c('div', [
              _c(
                'ul',
                { staticClass: 'question-list' },
                _vm._l(_vm.questions, function(question) {
                  return _c('li', { key: question.id }, [
                    _vm._v('\n      ' + _vm._s(question.question) + '\n    ')
                  ])
                }),
                0
              )
            ])
          }
          __vue__options__.staticRenderFns = []
          __vue__options__._scopeId = 'data-v-6a4e42f4'
          if (module.hot) {
            ;(function() {
              var hotAPI = require('vue-hot-reload-api')
              hotAPI.install(require('vue'), true)
              if (!hotAPI.compatible) return
              module.hot.accept()
              module.hot.dispose(__vueify_style_dispose__)
              if (!module.hot.data) {
                hotAPI.createRecord('data-v-6a4e42f4', __vue__options__)
              } else {
                hotAPI.reload('data-v-6a4e42f4', __vue__options__)
              }
            })()
          }
        }.apply(this, arguments))
      },
      { vue: 234, 'vue-hot-reload-api': 230, 'vueify/lib/insert-css': 236 }
    ],
    253: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'src/frontend/public/js/components/dashboard/subComponents/sideNav.vue',
          module
        )
        ;(function() {
          var __vueify_style_dispose__ = require('vueify/lib/insert-css').insert(
            '.my-event-nav[data-v-4b89b1e8] {\n  width: 80%;\n  margin: 0 auto;\n  padding: 12px 13px 0 0;\n}\n.my-event-nav ul[data-v-4b89b1e8] {\n  list-style: none;\n  padding: 0;\n  text-align: center;\n}\n.my-event-nav ul li[data-v-4b89b1e8] {\n  display: block;\n  margin-left: 10px;\n  border-top: 1px solid var(--upnext-light-ash);\n  padding: 10px;\n}\n.my-event-nav ul li a[data-v-4b89b1e8] {\n  color: var(--upnext-input-addon);\n  font-size: 1em;\n  text-decoration: none;\n}\n.my-event-nav ul li span[data-v-4b89b1e8] {\n  padding-right: 10px;\n}\n.my-event-nav .active[data-v-4b89b1e8] {\n  color: var(--upnext-yellow);\n}\n.side-bar-container[data-v-4b89b1e8] {\n  border-right: 1px solid var(--upnext-light-ash);\n  height: 500px;\n}\n.side-bar-container h4[data-v-4b89b1e8] {\n  color: var(--upnext-blue);\n}'
          )
          ;(function() {
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            module.exports = { props: { title: String } }
          })()
          if (module.exports.__esModule)
            module.exports = module.exports['default']
          var __vue__options__ =
            typeof module.exports === 'function'
              ? module.exports.options
              : module.exports
          if (__vue__options__.functional) {
            console.error(
              '[vueify] functional components are not supported and should be defined in plain js files using render functions.'
            )
          }
          __vue__options__.render = function render() {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _c('div', { staticClass: 'side-bar-container' }, [
              _c('h4', { staticStyle: { 'text-align': 'center' } }, [
                _vm._v(_vm._s(_vm.title))
              ]),
              _vm._v(' '),
              _vm._m(0),
              _vm._v(' '),
              _vm._m(1)
            ])
          }
          __vue__options__.staticRenderFns = [
            function render() {
              var _vm = this
              var _h = _vm.$createElement
              var _c = _vm._self._c || _h
              return _c(
                'div',
                {
                  staticClass: 'user-info',
                  staticStyle: { 'text-align': 'center' }
                },
                [
                  _c('div', { staticClass: 'profile-image profile-pic' }),
                  _vm._v(' '),
                  _c('div', { staticClass: 'user-detail' }, [
                    _c('h5', [_vm._v('Hi, Nicholas')])
                  ])
                ]
              )
            },
            function render() {
              var _vm = this
              var _h = _vm.$createElement
              var _c = _vm._self._c || _h
              return _c('div', { staticClass: 'my-event-nav' }, [
                _c('ul', [
                  _c('li', [
                    _c('a', { staticClass: 'active', attrs: { href: '#' } }, [
                      _c('span', { staticClass: 'fa fa-calendar' }),
                      _vm._v(' My Events')
                    ])
                  ]),
                  _vm._v(' '),
                  _c('li', [
                    _c('a', { attrs: { href: '/dashboard/profile' } }, [
                      _c('span', { staticClass: 'fa fa-user' }),
                      _vm._v(' Edit Profile')
                    ])
                  ])
                ])
              ])
            }
          ]
          __vue__options__._scopeId = 'data-v-4b89b1e8'
          if (module.hot) {
            ;(function() {
              var hotAPI = require('vue-hot-reload-api')
              hotAPI.install(require('vue'), true)
              if (!hotAPI.compatible) return
              module.hot.accept()
              module.hot.dispose(__vueify_style_dispose__)
              if (!module.hot.data) {
                hotAPI.createRecord('data-v-4b89b1e8', __vue__options__)
              } else {
                hotAPI.reload('data-v-4b89b1e8', __vue__options__)
              }
            })()
          }
        }.apply(this, arguments))
      },
      { vue: 234, 'vue-hot-reload-api': 230, 'vueify/lib/insert-css': 236 }
    ],
    254: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'src/frontend/public/js/components/register.vue',
          module
        )
        ;(function() {
          ;(function() {
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            var inputField = require('./ui/input.vue')
            var registerButton = require('./ui/button.vue')
            var facebookLoginButton = require('./ui/facebook-login-button.vue')
            var googleLoginButton = require('./ui/google-login-button.vue')
            var errorBox = require('./ui/errorBox.vue')
            var _require = require('vuex'),
              mapState = _require.mapState
            module.exports = {
              computed: _objectSpread(
                {},
                mapState({
                  userState: function userState(state) {
                    return state.users
                  }
                })
              ),
              methods: {
                registerUser: function registerUser(scope) {
                  var _this = this
                  this.$validator.validateAll(scope).then(function(validate) {
                    if (validate) {
                      _this.$store.dispatch('registerUser')
                    }
                  })
                }
              },
              components: {
                'u-input': inputField,
                'u-button': registerButton,
                'facebook-login-button': facebookLoginButton,
                'google-login-button': googleLoginButton,
                'error-box': errorBox
              }
            }
          })()
          if (module.exports.__esModule)
            module.exports = module.exports['default']
          var __vue__options__ =
            typeof module.exports === 'function'
              ? module.exports.options
              : module.exports
          if (__vue__options__.functional) {
            console.error(
              '[vueify] functional components are not supported and should be defined in plain js files using render functions.'
            )
          }
          __vue__options__.render = function render() {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _c(
              'div',
              { staticClass: 'register-form' },
              [
                _c(
                  'div',
                  { staticClass: 'col-md-12' },
                  [
                    _vm.userState.createuser.messagebox
                      ? _c('error-box', {
                          attrs: {
                            messagedata: _vm.userState.createuser.messagebox
                          }
                        })
                      : _vm._e()
                  ],
                  1
                ),
                _vm._v(' '),
                _c('facebook-login-button'),
                _vm._v(' '),
                _c('google-login-button'),
                _vm._v(' '),
                _c('br'),
                _vm._v(' '),
                _c(
                  'form',
                  {
                    attrs: { 'data-vv-scope': 'user_register' },
                    on: {
                      submit: function submit($event) {
                        $event.preventDefault()
                        return _vm.registerUser('user_register')
                      }
                    }
                  },
                  [
                    _c('div', { staticClass: 'col-md-12 no-padding' }, [
                      _c(
                        'div',
                        { staticClass: 'col-md-12 input-container no-padding' },
                        [
                          _c('div', { staticClass: 'col-md-6' }, [
                            _vm._m(0),
                            _vm._v(' '),
                            _c(
                              'div',
                              {},
                              [
                                _c('u-input', {
                                  directives: [
                                    {
                                      name: 'validate',
                                      rawName: 'v-validate',
                                      value: 'required',
                                      expression: "'required'"
                                    }
                                  ],
                                  attrs: {
                                    type: 'text',
                                    name: 'first name',
                                    className: 'form-control custom-input'
                                  },
                                  model: {
                                    value: _vm.userState.createuser.firstname,
                                    callback: function callback($$v) {
                                      _vm.$set(
                                        _vm.userState.createuser,
                                        'firstname',
                                        $$v
                                      )
                                    },
                                    expression: 'userState.createuser.firstname'
                                  }
                                })
                              ],
                              1
                            ),
                            _vm._v(' '),
                            _c(
                              'small',
                              { staticClass: 'form-error animated fadeInUp2' },
                              [
                                _vm._v(
                                  _vm._s(
                                    _vm.errors.first('user_register.first name')
                                  )
                                )
                              ]
                            )
                          ]),
                          _vm._v(' '),
                          _c('div', { staticClass: 'col-md-6 ' }, [
                            _vm._m(1),
                            _vm._v(' '),
                            _c(
                              'div',
                              {},
                              [
                                _c('u-input', {
                                  directives: [
                                    {
                                      name: 'validate',
                                      rawName: 'v-validate',
                                      value: 'required',
                                      expression: "'required'"
                                    }
                                  ],
                                  attrs: {
                                    type: 'text',
                                    name: 'last name',
                                    className: 'form-control custom-input'
                                  },
                                  model: {
                                    value: _vm.userState.createuser.lastname,
                                    callback: function callback($$v) {
                                      _vm.$set(
                                        _vm.userState.createuser,
                                        'lastname',
                                        $$v
                                      )
                                    },
                                    expression: 'userState.createuser.lastname'
                                  }
                                })
                              ],
                              1
                            ),
                            _vm._v(' '),
                            _c(
                              'small',
                              { staticClass: 'form-error animated fadeInUp2' },
                              [
                                _vm._v(
                                  _vm._s(
                                    _vm.errors.first('user_register.last name')
                                  )
                                )
                              ]
                            )
                          ])
                        ]
                      ),
                      _vm._v(' '),
                      _c(
                        'div',
                        { staticClass: 'col-md-12 input-container no-padding' },
                        [
                          _c('div', { staticClass: 'col-md-6' }, [
                            _vm._m(2),
                            _vm._v(' '),
                            _c(
                              'div',
                              {},
                              [
                                _c('u-input', {
                                  directives: [
                                    {
                                      name: 'validate',
                                      rawName: 'v-validate',
                                      value: 'required|email',
                                      expression: "'required|email'"
                                    }
                                  ],
                                  attrs: {
                                    type: 'email',
                                    name: 'email',
                                    className: 'form-control custom-input'
                                  },
                                  model: {
                                    value: _vm.userState.createuser.email,
                                    callback: function callback($$v) {
                                      _vm.$set(
                                        _vm.userState.createuser,
                                        'email',
                                        $$v
                                      )
                                    },
                                    expression: 'userState.createuser.email'
                                  }
                                })
                              ],
                              1
                            ),
                            _vm._v(' '),
                            _c(
                              'small',
                              { staticClass: 'form-error animated fadeInUp2' },
                              [
                                _vm._v(
                                  _vm._s(
                                    _vm.errors.first('user_register.email')
                                  )
                                )
                              ]
                            )
                          ]),
                          _vm._v(' '),
                          _c('div', { staticClass: 'col-md-6 ' }, [
                            _c('label', { attrs: { for: 'firstname' } }, [
                              _vm._v('Organization')
                            ]),
                            _vm._v(' '),
                            _c(
                              'div',
                              {},
                              [
                                _c('u-input', {
                                  attrs: {
                                    type: 'text',
                                    name: 'password',
                                    className: 'form-control custom-input'
                                  },
                                  model: {
                                    value:
                                      _vm.userState.createuser.organization,
                                    callback: function callback($$v) {
                                      _vm.$set(
                                        _vm.userState.createuser,
                                        'organization',
                                        $$v
                                      )
                                    },
                                    expression:
                                      'userState.createuser.organization'
                                  }
                                })
                              ],
                              1
                            )
                          ])
                        ]
                      ),
                      _vm._v(' '),
                      _c(
                        'div',
                        { staticClass: 'col-md-12 input-container no-padding' },
                        [
                          _c('div', { staticClass: 'col-md-6' }, [
                            _vm._m(3),
                            _vm._v(' '),
                            _c(
                              'div',
                              {},
                              [
                                _c('u-input', {
                                  directives: [
                                    {
                                      name: 'validate',
                                      rawName: 'v-validate',
                                      value: 'required',
                                      expression: "'required'"
                                    }
                                  ],
                                  attrs: {
                                    type: 'password',
                                    name: 'password',
                                    className: 'form-control custom-input'
                                  },
                                  model: {
                                    value: _vm.userState.createuser.password,
                                    callback: function callback($$v) {
                                      _vm.$set(
                                        _vm.userState.createuser,
                                        'password',
                                        $$v
                                      )
                                    },
                                    expression: 'userState.createuser.password'
                                  }
                                })
                              ],
                              1
                            ),
                            _vm._v(' '),
                            _c(
                              'small',
                              { staticClass: 'form-error animated fadeInUp2' },
                              [
                                _vm._v(
                                  _vm._s(
                                    _vm.errors.first('user_register.password')
                                  )
                                )
                              ]
                            )
                          ])
                        ]
                      ),
                      _vm._v(' '),
                      _c('br'),
                      _vm._v(' '),
                      _c(
                        'div',
                        { staticClass: 'col-md-12 input-container no-padding' },
                        [
                          _c('div', { staticClass: 'col-md-6' }, [
                            _c(
                              'div',
                              { staticClass: 'input-group' },
                              [
                                _c(
                                  'u-button',
                                  {
                                    staticClass: 'default-button',
                                    attrs: {
                                      disabled: _vm.userState.createuser.loader,
                                      type: 'submit'
                                    }
                                  },
                                  [
                                    _vm._v(
                                      '\n              Sign Up\n              '
                                    ),
                                    _vm.userState.createuser.loader
                                      ? _c('span', {
                                          staticClass:
                                            'fa fa-loader fa-spinner fa-spin'
                                        })
                                      : _vm._e()
                                  ]
                                )
                              ],
                              1
                            )
                          ])
                        ]
                      )
                    ])
                  ]
                )
              ],
              1
            )
          }
          __vue__options__.staticRenderFns = [
            function render() {
              var _vm = this
              var _h = _vm.$createElement
              var _c = _vm._self._c || _h
              return _c('label', { attrs: { for: 'firstname' } }, [
                _vm._v('First Name '),
                _c('span', [_vm._v('*')])
              ])
            },
            function render() {
              var _vm = this
              var _h = _vm.$createElement
              var _c = _vm._self._c || _h
              return _c('label', { attrs: { for: 'firstname' } }, [
                _vm._v('Last Name '),
                _c('span', [_vm._v('*')])
              ])
            },
            function render() {
              var _vm = this
              var _h = _vm.$createElement
              var _c = _vm._self._c || _h
              return _c('label', { attrs: { for: 'firstname' } }, [
                _vm._v('Email '),
                _c('span', [_vm._v('*')])
              ])
            },
            function render() {
              var _vm = this
              var _h = _vm.$createElement
              var _c = _vm._self._c || _h
              return _c('label', { attrs: { for: 'firstname' } }, [
                _vm._v('Password '),
                _c('span', [_vm._v('*')])
              ])
            }
          ]
          __vue__options__._scopeId = 'data-v-15a2e382'
          if (module.hot) {
            ;(function() {
              var hotAPI = require('vue-hot-reload-api')
              hotAPI.install(require('vue'), true)
              if (!hotAPI.compatible) return
              module.hot.accept()
              if (!module.hot.data) {
                hotAPI.createRecord('data-v-15a2e382', __vue__options__)
              } else {
                hotAPI.reload('data-v-15a2e382', __vue__options__)
              }
            })()
          }
        }.apply(this, arguments))
      },
      {
        './ui/button.vue': 259,
        './ui/errorBox.vue': 260,
        './ui/facebook-login-button.vue': 261,
        './ui/google-login-button.vue': 262,
        './ui/input.vue': 263,
        vue: 234,
        'vue-hot-reload-api': 230,
        vuex: 237
      }
    ],
    255: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'src/frontend/public/js/components/registerHeader.vue',
          module
        )
        ;(function() {
          var __vueify_style_dispose__ = require('vueify/lib/insert-css').insert(
            '.register-header ul[data-v-2950b5a8] {\n  list-style: none;\n  padding: 0 !important;\n  float: right;\n}\n.register-header ul li[data-v-2950b5a8] {\n  display: inline-block;\n}\n\n.register-header ul li[data-v-2950b5a8]:last-child {\n  margin-left: 10px;\n}\n\n.register-header ul li:last-child:hover .login-container[data-v-2950b5a8] {\n  display: block;\n}\n\n.login-container[data-v-2950b5a8] {\n  position: absolute;\n  width: 300px;\n  border-radius: 5px;\n  background: #ffffff;\n  top: 78%;\n  padding: 15px 8px 25px 8px;\n  right: 10px;\n  display: none;\n  z-index: 10;\n  -moz-box-shadow: 0 1px 5px rgba(0, 0, 0, 0.46);\n  -webkit-box-shadow: 0 1px 5px rgba(0, 0, 0, 0.46);\n  box-shadow: 0 1px 5px rgba(0, 0, 0, 0.46);\n}\n.show-angle-up[data-v-2950b5a8] {\n  position: absolute;\n  top: -15px;\n  color: white;\n  right: 10px;\n}\n.show-angle-up span[data-v-2950b5a8] {\n  width: 30px;\n  height: 50px;\n}\n.main-form h4[data-v-2950b5a8] {\n  color: var(--upnext-blue);\n  font-weight: bold;\n  margin-left: 15px;\n}\n\n.recover-text[data-v-2950b5a8] {\n  margin-top: 10px;\n}\n.recover-text a[data-v-2950b5a8] {\n  color: #2e2e2e !important;\n  cursor: pointer;\n  font-size: 0.8em !important;\n}'
          )
          ;(function() {
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            var registerButton = require('./ui/button.vue')
            var inputField = require('./ui/input.vue')
            var userService = require('./../services/user')
            var facebookLoginButton = require('./ui/facebook-login-button.vue')
            var googleLoginButton = require('./ui/google-login-button.vue')
            var errorBox = require('./ui/errorBox.vue')
            var _require2 = require('vuex'),
              mapState = _require2.mapState
            module.exports = {
              computed: _objectSpread(
                {},
                mapState({
                  loginState: function loginState(state) {
                    return state.users
                  }
                })
              ),
              methods: {
                loginUser: function loginUser(scope) {
                  var _this2 = this
                  this.$validator.validateAll(scope).then(function(validate) {
                    if (validate) {
                      _this2.$store.dispatch('loginUser')
                    }
                  })
                },
                callRegister: function callRegister() {
                  location.href = '/register'
                }
              },
              components: {
                'u-button': registerButton,
                'u-input': inputField,
                'facebook-login-button': facebookLoginButton,
                'google-login-button': googleLoginButton,
                'error-box': errorBox
              }
            }
          })()
          if (module.exports.__esModule)
            module.exports = module.exports['default']
          var __vue__options__ =
            typeof module.exports === 'function'
              ? module.exports.options
              : module.exports
          if (__vue__options__.functional) {
            console.error(
              '[vueify] functional components are not supported and should be defined in plain js files using render functions.'
            )
          }
          __vue__options__.render = function render() {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _c('div', { staticClass: 'register-header' }, [
              _c('ul', [
                _c(
                  'li',
                  [
                    _c(
                      'u-button',
                      {
                        staticClass: 'default-button',
                        attrs: { onClick: _vm.callRegister }
                      },
                      [_vm._v('\n        Create Account\n      ')]
                    )
                  ],
                  1
                ),
                _vm._v(' '),
                _c(
                  'li',
                  [
                    _c(
                      'u-button',
                      {
                        staticClass: 'transparent-button',
                        attrs: { onClick: _vm.testButton }
                      },
                      [_vm._v('\n        Login\n      ')]
                    ),
                    _vm._v(' '),
                    _c(
                      'div',
                      { staticClass: 'login-container animated fadeInUp2' },
                      [
                        _vm._m(0),
                        _vm._v(' '),
                        _c(
                          'div',
                          { staticClass: 'main-form' },
                          [
                            _c('h4', [_vm._v('Login')]),
                            _vm._v(' '),
                            _c(
                              'div',
                              { staticClass: 'col-md-12' },
                              [
                                _vm.loginState.login.messagebox
                                  ? _c('error-box', {
                                      attrs: {
                                        messagedata:
                                          _vm.loginState.login.messagebox
                                      }
                                    })
                                  : _vm._e()
                              ],
                              1
                            ),
                            _vm._v(' '),
                            _c('facebook-login-button'),
                            _vm._v(' '),
                            _c('google-login-button'),
                            _vm._v(' '),
                            _c(
                              'form',
                              {
                                attrs: {
                                  'auto-complete': 'off',
                                  'data-vv-scope': 'user_login',
                                  autocomplete: 'off'
                                },
                                on: {
                                  submit: function submit($event) {
                                    $event.preventDefault()
                                    return _vm.loginUser('user_login')
                                  }
                                }
                              },
                              [
                                _c(
                                  'div',
                                  { staticClass: 'col-md-12 input-container' },
                                  [
                                    _c('label', { attrs: { for: 'Email' } }, [
                                      _vm._v('Email')
                                    ]),
                                    _vm._v(' '),
                                    _c(
                                      'div',
                                      {},
                                      [
                                        _c('u-input', {
                                          directives: [
                                            {
                                              name: 'validate',
                                              rawName: 'v-validate',
                                              value: 'required|email',
                                              expression: "'required|email'"
                                            }
                                          ],
                                          attrs: {
                                            type: 'email',
                                            name: 'email',
                                            className:
                                              'form-control custom-input',
                                            placeholder: 'kofi@example.com'
                                          },
                                          model: {
                                            value: _vm.loginState.login.email,
                                            callback: function callback($$v) {
                                              _vm.$set(
                                                _vm.loginState.login,
                                                'email',
                                                $$v
                                              )
                                            },
                                            expression: 'loginState.login.email'
                                          }
                                        })
                                      ],
                                      1
                                    ),
                                    _vm._v(' '),
                                    _c(
                                      'small',
                                      {
                                        staticClass:
                                          'form-error animated fadeInUp2'
                                      },
                                      [
                                        _vm._v(
                                          _vm._s(
                                            _vm.errors.first('user_login.email')
                                          )
                                        )
                                      ]
                                    )
                                  ]
                                ),
                                _vm._v(' '),
                                _c(
                                  'div',
                                  { staticClass: 'col-md-12 input-container' },
                                  [
                                    _c('label', { attrs: { for: 'Email' } }, [
                                      _vm._v('Password')
                                    ]),
                                    _vm._v(' '),
                                    _c(
                                      'div',
                                      {},
                                      [
                                        _c('u-input', {
                                          directives: [
                                            {
                                              name: 'validate',
                                              rawName: 'v-validate',
                                              value: 'required',
                                              expression: "'required'"
                                            }
                                          ],
                                          attrs: {
                                            name: 'password',
                                            className:
                                              'form-control custom-input',
                                            type: 'password',
                                            placeholder: '•••••••'
                                          },
                                          model: {
                                            value:
                                              _vm.loginState.login.password,
                                            callback: function callback($$v) {
                                              _vm.$set(
                                                _vm.loginState.login,
                                                'password',
                                                $$v
                                              )
                                            },
                                            expression:
                                              'loginState.login.password'
                                          }
                                        })
                                      ],
                                      1
                                    ),
                                    _vm._v(' '),
                                    _c(
                                      'small',
                                      {
                                        staticClass:
                                          'form-error animated fadeInUp2'
                                      },
                                      [
                                        _vm._v(
                                          _vm._s(
                                            _vm.errors.first(
                                              'user_login.password'
                                            )
                                          )
                                        )
                                      ]
                                    )
                                  ]
                                ),
                                _vm._v(' '),
                                _c(
                                  'div',
                                  { staticClass: 'col-md-12 input-container' },
                                  [
                                    _c(
                                      'div',
                                      { staticClass: 'input-group' },
                                      [
                                        _c(
                                          'u-button',
                                          {
                                            staticClass: 'default-button',
                                            attrs: {
                                              type: 'submit',
                                              disabled:
                                                _vm.loginState.login.loader
                                            }
                                          },
                                          [
                                            _vm._v(
                                              '\n                  Sign in\n                  '
                                            ),
                                            _vm.loginState.login.loader
                                              ? _c('span', {
                                                  staticClass:
                                                    'fa fa-loader fa-spinner fa-spin'
                                                })
                                              : _vm._e()
                                          ]
                                        )
                                      ],
                                      1
                                    )
                                  ]
                                )
                              ]
                            ),
                            _vm._v(' '),
                            _vm._m(1)
                          ],
                          1
                        )
                      ]
                    )
                  ],
                  1
                )
              ])
            ])
          }
          __vue__options__.staticRenderFns = [
            function render() {
              var _vm = this
              var _h = _vm.$createElement
              var _c = _vm._self._c || _h
              return _c('div', { staticClass: 'show-angle-up' }, [
                _c('span', { staticClass: 'fa fa-caret-up fa-2x' })
              ])
            },
            function render() {
              var _vm = this
              var _h = _vm.$createElement
              var _c = _vm._self._c || _h
              return _c('div', { staticClass: 'col-md-12 recover-text' }, [
                _c('a', { attrs: { href: '/resetpassword' } }, [
                  _vm._v('Lost your password?')
                ])
              ])
            }
          ]
          __vue__options__._scopeId = 'data-v-2950b5a8'
          if (module.hot) {
            ;(function() {
              var hotAPI = require('vue-hot-reload-api')
              hotAPI.install(require('vue'), true)
              if (!hotAPI.compatible) return
              module.hot.accept()
              module.hot.dispose(__vueify_style_dispose__)
              if (!module.hot.data) {
                hotAPI.createRecord('data-v-2950b5a8', __vue__options__)
              } else {
                hotAPI.reload('data-v-2950b5a8', __vue__options__)
              }
            })()
          }
        }.apply(this, arguments))
      },
      {
        './../services/user': 265,
        './ui/button.vue': 259,
        './ui/errorBox.vue': 260,
        './ui/facebook-login-button.vue': 261,
        './ui/google-login-button.vue': 262,
        './ui/input.vue': 263,
        vue: 234,
        'vue-hot-reload-api': 230,
        'vueify/lib/insert-css': 236,
        vuex: 237
      }
    ],
    256: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'src/frontend/public/js/components/resetPassword.vue',
          module
        )
        ;(function() {
          ;(function() {
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            var inputField = require('./ui/input.vue')
            var registerButton = require('./ui/button.vue')
            var _require3 = require('vuex'),
              mapState = _require3.mapState
            module.exports = {
              data: function data() {
                return { reset: { email: '' } }
              },
              computed: _objectSpread(
                {},
                mapState({
                  resetPasswordState: function resetPasswordState(state) {
                    return state.users
                  }
                })
              ),
              methods: {
                resetPass: function resetPass(scope) {
                  var _this3 = this
                  this.$validator.validateAll(scope).then(function(validate) {
                    if (validate) {
                      _this3.$store.dispatch('sendResetPasswordLink')
                    }
                  })
                }
              },
              components: { 'u-input': inputField, 'u-button': registerButton }
            }
          })()
          if (module.exports.__esModule)
            module.exports = module.exports['default']
          var __vue__options__ =
            typeof module.exports === 'function'
              ? module.exports.options
              : module.exports
          if (__vue__options__.functional) {
            console.error(
              '[vueify] functional components are not supported and should be defined in plain js files using render functions.'
            )
          }
          __vue__options__.render = function render() {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _c('div', { staticClass: 'register-form' }, [
              _c('div', { staticClass: 'col-md-12 no-padding' }, [
                _c(
                  'form',
                  {
                    attrs: {
                      autocomplete: 'off',
                      'data-vv-scope': 'reset_pass'
                    },
                    on: {
                      submit: function submit($event) {
                        $event.preventDefault()
                        return _vm.resetPass('reset_pass')
                      }
                    }
                  },
                  [
                    _c(
                      'div',
                      { staticClass: 'col-md-12 input-container no-padding' },
                      [
                        _c('label', { attrs: { for: 'firstname' } }, [
                          _vm._v('Email')
                        ]),
                        _vm._v(' '),
                        _c(
                          'div',
                          {},
                          [
                            _c('u-input', {
                              directives: [
                                {
                                  name: 'validate',
                                  rawName: 'v-validate',
                                  value: 'required|email',
                                  expression: "'required|email'"
                                }
                              ],
                              attrs: {
                                type: 'email',
                                name: 'email',
                                className: 'form-control custom-input',
                                placeholder: 'Enter your email address'
                              },
                              model: {
                                value:
                                  _vm.resetPasswordState.resetpassword.email,
                                callback: function callback($$v) {
                                  _vm.$set(
                                    _vm.resetPasswordState.resetpassword,
                                    'email',
                                    $$v
                                  )
                                },
                                expression:
                                  'resetPasswordState.resetpassword.email'
                              }
                            })
                          ],
                          1
                        ),
                        _vm._v(' '),
                        _c(
                          'small',
                          {
                            directives: [
                              {
                                name: 'show',
                                rawName: 'v-show',
                                value: _vm.errors.has('reset_pass.email'),
                                expression: "errors.has('reset_pass.email')"
                              }
                            ],
                            staticClass: 'form-error animated fadeInUp2'
                          },
                          [_vm._v(_vm._s(_vm.errors.first('reset_pass.email')))]
                        )
                      ]
                    ),
                    _vm._v(' '),
                    _c('br'),
                    _vm._v(' '),
                    _c(
                      'div',
                      { staticClass: 'col-md-12 input-container no-padding' },
                      [
                        _c('div', { staticClass: 'col-md-6 no-padding' }, [
                          _c(
                            'div',
                            { staticClass: 'input-group' },
                            [
                              _c(
                                'u-button',
                                {
                                  staticClass: 'default-button',
                                  attrs: {
                                    type: 'submit',
                                    disabled:
                                      _vm.resetPasswordState.resetpassword
                                        .loader
                                  }
                                },
                                [
                                  _vm._v('Send Emails\n              '),
                                  _vm.resetPasswordState.resetpassword.loader
                                    ? _c('span', {
                                        staticClass:
                                          'fa fa-loader fa-spinner fa-spin'
                                      })
                                    : _vm._e()
                                ]
                              )
                            ],
                            1
                          )
                        ])
                      ]
                    )
                  ]
                )
              ])
            ])
          }
          __vue__options__.staticRenderFns = []
          if (module.hot) {
            ;(function() {
              var hotAPI = require('vue-hot-reload-api')
              hotAPI.install(require('vue'), true)
              if (!hotAPI.compatible) return
              module.hot.accept()
              if (!module.hot.data) {
                hotAPI.createRecord('data-v-3900569e', __vue__options__)
              } else {
                hotAPI.reload('data-v-3900569e', __vue__options__)
              }
            })()
          }
        }.apply(this, arguments))
      },
      {
        './ui/button.vue': 259,
        './ui/input.vue': 263,
        vue: 234,
        'vue-hot-reload-api': 230,
        vuex: 237
      }
    ],
    257: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'src/frontend/public/js/components/search.vue',
          module
        )
        ;(function() {
          var __vueify_style_dispose__ = require('vueify/lib/insert-css').insert(
            '.displaySearchBox[data-v-0de38bc4]{\n   padding:  0 !important;\n   list-style-type: none;\n   border-bottom-left-radius: 20px;\n   border-bottom-right-radius: 20px;\n   /* border-top-left-radius: 10px;\n   border-top-right-radius: 10px; */\n   background: white;\n   position: absolute;\n   width: 300px;\n   z-index: -1;\n   /* padding-top: 50px; */\n   margin-top: -18px;\n   /* margin-top: 5px; */\n   background:white;\n   -webkit-box-shadow: -1px 3px 11px -5px rgba(0,0,0,0.61);\n   -moz-box-shadow: -1px 3px 11px -5px rgba(0,0,0,0.61);\n   box-shadow: -1px 3px 11px -5px rgba(0,0,0,0.61);\n }\n \n.displaySearchBox div[data-v-0de38bc4]{\n  margin-top:20px;\n}\n.displaySearchBox li a[data-v-0de38bc4]{\n  display: block;\n  list-style: none;\n  padding: 10px;\n  width: 100%;\n  opacity: .2s;\n  text-decoration: none;\n  color: rgb(85, 85, 85);\n}\n.displaySearchBox li a img[data-v-0de38bc4]{\n  width: 30px;\n  height: 30px;\n  margin-right: 10px;\n  margin-left: 10px;\n}\n\n.displaySearchBox li a[data-v-0de38bc4]:hover{\n  background: rgb(230, 230, 230);\n  /* border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px; */\n  }\n.displaySearchBox li:last-child a[data-v-0de38bc4]:hover{\n  background: rgb(230, 230, 230);\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  }\n.displaySearchBox li:last-child a[data-v-0de38bc4]{\n  border-bottom: none;\n}\n.search-bar[data-v-0de38bc4]{\n  padding-left: 35px;\n}\n.search-bar input[data-v-0de38bc4]{\n  background: white;\n  width: 300px;\n  border: 2px solid #ffffff;\n  outline: none;\n  border-radius: 20px;\n  /* padding: 10px 8px 8px 17px; */\n  padding: 6px 15px 3px 12px;\n\n}\n.search-bar button[data-v-0de38bc4]{\n  background: transparent;\n  margin-left: -40px;\n  border: none;\n  outline: none;\n  color:rgb(130, 130, 130);\n}'
          )
          ;(function() {
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            module.exports = {
              data: function data() {
                return { searchData: [], successSearch: false, search: '' }
              }
            }
          })()
          if (module.exports.__esModule)
            module.exports = module.exports['default']
          var __vue__options__ =
            typeof module.exports === 'function'
              ? module.exports.options
              : module.exports
          if (__vue__options__.functional) {
            console.error(
              '[vueify] functional components are not supported and should be defined in plain js files using render functions.'
            )
          }
          __vue__options__.render = function render() {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _vm._m(0)
          }
          __vue__options__.staticRenderFns = [
            function render() {
              var _vm = this
              var _h = _vm.$createElement
              var _c = _vm._self._c || _h
              return _c('div', [
                _c('div', { staticClass: 'search-bar' }, [
                  _c('input', {
                    attrs: { type: 'text', placeholder: 'Search events' }
                  }),
                  _vm._v(' '),
                  _c('button', [_c('span', { staticClass: 'fa fa-search' })])
                ])
              ])
            }
          ]
          __vue__options__._scopeId = 'data-v-0de38bc4'
          if (module.hot) {
            ;(function() {
              var hotAPI = require('vue-hot-reload-api')
              hotAPI.install(require('vue'), true)
              if (!hotAPI.compatible) return
              module.hot.accept()
              module.hot.dispose(__vueify_style_dispose__)
              if (!module.hot.data) {
                hotAPI.createRecord('data-v-0de38bc4', __vue__options__)
              } else {
                hotAPI.reload('data-v-0de38bc4', __vue__options__)
              }
            })()
          }
        }.apply(this, arguments))
      },
      { vue: 234, 'vue-hot-reload-api': 230, 'vueify/lib/insert-css': 236 }
    ],
    258: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'src/frontend/public/js/components/test.vue',
          module
        )
        ;(function() {
          ;(function() {
            //
            //
            //
            module.exports = {
              data: function data() {
                return {
                  message:
                    'This is a test messagess hello hello am here after you'
                }
              }
            }
          })()
          if (module.exports.__esModule)
            module.exports = module.exports['default']
          var __vue__options__ =
            typeof module.exports === 'function'
              ? module.exports.options
              : module.exports
          if (__vue__options__.functional) {
            console.error(
              '[vueify] functional components are not supported and should be defined in plain js files using render functions.'
            )
          }
          __vue__options__.render = function render() {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _c('h1', [_vm._v(_vm._s(_vm.message))])
          }
          __vue__options__.staticRenderFns = []
          if (module.hot) {
            ;(function() {
              var hotAPI = require('vue-hot-reload-api')
              hotAPI.install(require('vue'), true)
              if (!hotAPI.compatible) return
              module.hot.accept()
              if (!module.hot.data) {
                hotAPI.createRecord('data-v-41e5f6ae', __vue__options__)
              } else {
                hotAPI.reload('data-v-41e5f6ae', __vue__options__)
              }
            })()
          }
        }.apply(this, arguments))
      },
      { vue: 234, 'vue-hot-reload-api': 230 }
    ],
    259: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'src/frontend/public/js/components/ui/button.vue',
          module
        )
        ;(function() {
          var __vueify_style_dispose__ = require('vueify/lib/insert-css').insert(
            'button[data-v-c992adbe] {\n  outline: none;\n  border: none;\n  background: transparent;\n  transition: 0.3s;\n}\nbutton[disabled][data-v-c992adbe] {\n  background: var(--upnext-disabled-button);\n  border: 1px solid var(--upnext-disabled-button);\n}\n.default-button[data-v-c992adbe] {\n  background: var(--upnext-yellow);\n  color: white;\n  padding: 6px 15px 3px 12px;\n  border-radius: 15px;\n  font-size: 1em;\n  border: 1px solid var(--upnext-yellow);\n  outline: none;\n}\n.transparent-button[data-v-c992adbe] {\n  background: transparent !important;\n  color: white;\n  padding: 6px 15px 3px 12px;\n  border-radius: 15px;\n  font-size: 1em;\n  outline: none;\n}\n.round-button[data-v-c992adbe] {\n  position: fixed;\n  background: var(--upnext-yellow);\n  padding: 22px;\n  width: 100px;\n  height: 100px;\n  -moz-border-radius: 50px;\n  -webkit-border-radius: 50px;\n  border-radius: 50px;\n  top: 70%;\n  left: 5%;\n  z-index: 9999;\n  color: white;\n  -moz-box-shadow: 0 1px 5px rgba(0, 0, 0, 0.46);\n  -webkit-box-shadow: 0 1px 5px rgba(0, 0, 0, 0.46);\n  box-shadow: 0 1px 5px rgba(0, 0, 0, 0.46);\n  font-family: GillSansRegular;\n}'
          )
          ;(function() {
            //
            //
            //
            //
            //
            module.exports = {
              props: {
                onClick: { required: false, default: '' },
                type: { required: false },
                disabled: { required: false }
              }
            }
          })()
          if (module.exports.__esModule)
            module.exports = module.exports['default']
          var __vue__options__ =
            typeof module.exports === 'function'
              ? module.exports.options
              : module.exports
          if (__vue__options__.functional) {
            console.error(
              '[vueify] functional components are not supported and should be defined in plain js files using render functions.'
            )
          }
          __vue__options__.render = function render() {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _c(
              'button',
              {
                attrs: { type: _vm.type, disabled: _vm.disabled },
                on: { click: _vm.onClick }
              },
              [_vm._t('default', [_vm._v('Button')])],
              2
            )
          }
          __vue__options__.staticRenderFns = []
          __vue__options__._scopeId = 'data-v-c992adbe'
          if (module.hot) {
            ;(function() {
              var hotAPI = require('vue-hot-reload-api')
              hotAPI.install(require('vue'), true)
              if (!hotAPI.compatible) return
              module.hot.accept()
              module.hot.dispose(__vueify_style_dispose__)
              if (!module.hot.data) {
                hotAPI.createRecord('data-v-c992adbe', __vue__options__)
              } else {
                hotAPI.reload('data-v-c992adbe', __vue__options__)
              }
            })()
          }
        }.apply(this, arguments))
      },
      { vue: 234, 'vue-hot-reload-api': 230, 'vueify/lib/insert-css': 236 }
    ],
    260: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'src/frontend/public/js/components/ui/errorBox.vue',
          module
        )
        ;(function() {
          var __vueify_style_dispose__ = require('vueify/lib/insert-css').insert(
            '.custom-error[data-v-7cb1835c] {\n  margin-top: 10px;\n  transition: 0.3s;\n  font-size: 0.9em;\n}'
          )
          ;(function() {
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            module.exports = {
              props: { messagedata: { required: true, default: '' } }
            }
          })()
          if (module.exports.__esModule)
            module.exports = module.exports['default']
          var __vue__options__ =
            typeof module.exports === 'function'
              ? module.exports.options
              : module.exports
          if (__vue__options__.functional) {
            console.error(
              '[vueify] functional components are not supported and should be defined in plain js files using render functions.'
            )
          }
          __vue__options__.render = function render() {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _c('div', [
              _vm.messagedata.type == 'error'
                ? _c(
                    'div',
                    {
                      staticClass: 'alert alert-danger custom-error',
                      attrs: { role: 'alert' }
                    },
                    [
                      _c('ul', [
                        Array.isArray(_vm.messagedata.message)
                          ? _c(
                              'span',
                              _vm._l(_vm.messagedata.message, function(
                                msg,
                                index
                              ) {
                                return _c('li', { key: index }, [
                                  _vm._v(
                                    '\n          ' +
                                      _vm._s(msg.msg) +
                                      '\n        '
                                  )
                                ])
                              }),
                              0
                            )
                          : _c('span', [
                              _c('li', [
                                _vm._v(_vm._s(_vm.messagedata.message.msg))
                              ])
                            ])
                      ])
                    ]
                  )
                : _vm._e(),
              _vm._v(' '),
              _vm.messagedata.type == 'success'
                ? _c(
                    'div',
                    {
                      staticClass: 'alert alert-success custom-error',
                      attrs: { role: 'alert' }
                    },
                    [
                      _c('ul', [
                        _c('span', [
                          _c('li', [
                            _vm._v(_vm._s(_vm.messagedata.message.msg))
                          ])
                        ])
                      ])
                    ]
                  )
                : _vm._e()
            ])
          }
          __vue__options__.staticRenderFns = []
          __vue__options__._scopeId = 'data-v-7cb1835c'
          if (module.hot) {
            ;(function() {
              var hotAPI = require('vue-hot-reload-api')
              hotAPI.install(require('vue'), true)
              if (!hotAPI.compatible) return
              module.hot.accept()
              module.hot.dispose(__vueify_style_dispose__)
              if (!module.hot.data) {
                hotAPI.createRecord('data-v-7cb1835c', __vue__options__)
              } else {
                hotAPI.reload('data-v-7cb1835c', __vue__options__)
              }
            })()
          }
        }.apply(this, arguments))
      },
      { vue: 234, 'vue-hot-reload-api': 230, 'vueify/lib/insert-css': 236 }
    ],
    261: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'src/frontend/public/js/components/ui/facebook-login-button.vue',
          module
        )
        ;(function() {
          var __vueify_style_dispose__ = require('vueify/lib/insert-css').insert(
            '.facebook-google[data-v-fc53bec4] {\n  padding: 0 important;\n  text-align: left;\n}\n.login-facebook a[data-v-fc53bec4] {\n  background: #4267b2;\n  color: white;\n  display: block;\n  padding: 8px;\n  text-align: center;\n  text-decoration: none;\n  border-radius: 4px;\n  transition: 0.3s;\n  font-size: 0.8em;\n}\n\n.login-facebook a[data-v-fc53bec4]:hover {\n  background: rgb(53, 83, 143);\n}'
          )
          ;(function() {
            //
            //
            //
            //
            //
            //
            //
          })()
          if (module.exports.__esModule)
            module.exports = module.exports['default']
          var __vue__options__ =
            typeof module.exports === 'function'
              ? module.exports.options
              : module.exports
          if (__vue__options__.functional) {
            console.error(
              '[vueify] functional components are not supported and should be defined in plain js files using render functions.'
            )
          }
          __vue__options__.render = function render() {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _vm._m(0)
          }
          __vue__options__.staticRenderFns = [
            function render() {
              var _vm = this
              var _h = _vm.$createElement
              var _c = _vm._self._c || _h
              return _c('div', [
                _c('div', { staticClass: 'col-md-6 login-facebook' }, [
                  _c('a', { attrs: { href: '/auth/facebook' } }, [
                    _vm._v('Login with facebook')
                  ])
                ])
              ])
            }
          ]
          __vue__options__._scopeId = 'data-v-fc53bec4'
          if (module.hot) {
            ;(function() {
              var hotAPI = require('vue-hot-reload-api')
              hotAPI.install(require('vue'), true)
              if (!hotAPI.compatible) return
              module.hot.accept()
              module.hot.dispose(__vueify_style_dispose__)
              if (!module.hot.data) {
                hotAPI.createRecord('data-v-fc53bec4', __vue__options__)
              } else {
                hotAPI.reload('data-v-fc53bec4', __vue__options__)
              }
            })()
          }
        }.apply(this, arguments))
      },
      { vue: 234, 'vue-hot-reload-api': 230, 'vueify/lib/insert-css': 236 }
    ],
    262: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'src/frontend/public/js/components/ui/google-login-button.vue',
          module
        )
        ;(function() {
          var __vueify_style_dispose__ = require('vueify/lib/insert-css').insert(
            '.login-google[data-v-378a6fcb] {\n  padding: 0 important;\n  text-align: left;\n}\n\n.login-google a[data-v-378a6fcb] {\n  background: #db4437;\n  color: white;\n  display: block;\n  padding: 8px;\n  text-align: center;\n  text-decoration: none;\n  border-radius: 4px;\n  transition: 0.3s;\n  font-size: 0.8em;\n}\n\n.login-google a[data-v-378a6fcb]:hover {\n  background: rgb(185, 54, 42);\n}'
          )
          ;(function() {
            //
            //
            //
            //
            //
            //
            //
          })()
          if (module.exports.__esModule)
            module.exports = module.exports['default']
          var __vue__options__ =
            typeof module.exports === 'function'
              ? module.exports.options
              : module.exports
          if (__vue__options__.functional) {
            console.error(
              '[vueify] functional components are not supported and should be defined in plain js files using render functions.'
            )
          }
          __vue__options__.render = function render() {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _vm._m(0)
          }
          __vue__options__.staticRenderFns = [
            function render() {
              var _vm = this
              var _h = _vm.$createElement
              var _c = _vm._self._c || _h
              return _c('div', [
                _c('div', { staticClass: 'col-md-6 login-google' }, [
                  _c('a', { attrs: { href: '/auth/google' } }, [
                    _vm._v('Login with google')
                  ])
                ])
              ])
            }
          ]
          __vue__options__._scopeId = 'data-v-378a6fcb'
          if (module.hot) {
            ;(function() {
              var hotAPI = require('vue-hot-reload-api')
              hotAPI.install(require('vue'), true)
              if (!hotAPI.compatible) return
              module.hot.accept()
              module.hot.dispose(__vueify_style_dispose__)
              if (!module.hot.data) {
                hotAPI.createRecord('data-v-378a6fcb', __vue__options__)
              } else {
                hotAPI.reload('data-v-378a6fcb', __vue__options__)
              }
            })()
          }
        }.apply(this, arguments))
      },
      { vue: 234, 'vue-hot-reload-api': 230, 'vueify/lib/insert-css': 236 }
    ],
    263: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'src/frontend/public/js/components/ui/input.vue',
          module
        )
        ;(function() {
          var __vueify_style_dispose__ = require('vueify/lib/insert-css').insert(
            '.form-control[data-v-3030762b]:focus {\n  box-shadow: none !important;\n  -webkit-box-shadow: none !important;\n}\n.form-control[data-v-3030762b] {\n  box-shadow: none !important;\n  -webkit-box-shadow: none !important;\n  border-radius: 20px !important;\n}\ninput[data-v-3030762b] {\n  display: block;\n  /* border-radius: 6px !important; */\n  border: 1px solid var(--upnext-input-border);\n  width: 100%;\n  outline: none;\n}'
          )
          ;(function() {
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            //
            module.exports = {
              $_veeValidate: {
                name: function name() {
                  return this.name
                },
                value: function value() {
                  return this.value
                }
              },
              props: {
                value: String,
                className: String,
                placeholder: String,
                name: String,
                error: { type: String, required: false },
                type: {
                  type: String,
                  default: 'text',
                  validator: function validator(val) {
                    return (
                      ['url', 'text', 'password', 'email', 'search'].indexOf(
                        val
                      ) !== -1
                    )
                  }
                }
              },
              methods: {
                updateInput: function updateInput(e) {
                  this.$emit('input', e.target.value)
                }
              },
              mounted: function mounted() {
                this.$el.value = this.value
              }
            }
          })()
          if (module.exports.__esModule)
            module.exports = module.exports['default']
          var __vue__options__ =
            typeof module.exports === 'function'
              ? module.exports.options
              : module.exports
          if (__vue__options__.functional) {
            console.error(
              '[vueify] functional components are not supported and should be defined in plain js files using render functions.'
            )
          }
          __vue__options__.render = function render() {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _c('div', [
              _c('input', {
                class: _vm.className,
                attrs: {
                  type: _vm.type,
                  name: _vm.name,
                  placeholder: _vm.placeholder
                },
                domProps: { value: _vm.value },
                on: {
                  blur: function blur($event) {
                    return _vm.$emit('blur')
                  },
                  focus: function focus($event) {
                    return _vm.$emit('focus')
                  },
                  change: _vm.updateInput,
                  input: _vm.updateInput
                }
              }),
              _vm._v(' '),
              _vm.error
                ? _c(
                    'small',
                    { staticClass: 'form-error animated fadeInUp2' },
                    [_vm._v(_vm._s(_vm.error))]
                  )
                : _vm._e()
            ])
          }
          __vue__options__.staticRenderFns = []
          __vue__options__._scopeId = 'data-v-3030762b'
          if (module.hot) {
            ;(function() {
              var hotAPI = require('vue-hot-reload-api')
              hotAPI.install(require('vue'), true)
              if (!hotAPI.compatible) return
              module.hot.accept()
              module.hot.dispose(__vueify_style_dispose__)
              if (!module.hot.data) {
                hotAPI.createRecord('data-v-3030762b', __vue__options__)
              } else {
                hotAPI.reload('data-v-3030762b', __vue__options__)
              }
            })()
          }
        }.apply(this, arguments))
      },
      { vue: 234, 'vue-hot-reload-api': 230, 'vueify/lib/insert-css': 236 }
    ],
    264: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'src/frontend/public/js/main.js',
          module
        )
        ;(function() {
          var Vue = require('vue/dist/vue.js')
          var Veevalidate = require('vee-validate')
          var VueCookies = require('vue-cookies')
          var store = require('./store/index.js')
          Vue.use(Veevalidate)
          Vue.use(store)
          Vue.use(VueCookies)
          Vue.component('testComponent', require('./components/test.vue'))
          Vue.component('searchComponent', require('./components/search.vue'))
          Vue.component(
            'registerHeaderComponent',
            require('./components/registerHeader.vue')
          )
          Vue.component(
            'createLineupComponent',
            require('./components/createLineupButton.vue')
          )
          Vue.component(
            'registerComponent',
            require('./components/register.vue')
          )
          Vue.component(
            'carouselComponent',
            require('./components/carousel.vue')
          )
          Vue.component(
            'resetPasswordComponent',
            require('./components/resetPassword.vue')
          )
          /* Dashboard components */ Vue.component(
            'createEventComponent',
            require('./components/dashboard/createEvent.vue')
          )
          Vue.component(
            'dashboardComponent',
            require('./components/dashboard/dashboard.vue')
          )
          Vue.component(
            'lineupComponent',
            require('./components/dashboard/lineup.vue')
          )
          Vue.component(
            'editLineupComponent',
            require('./components/dashboard/editLineup.vue')
          )
          Vue.component(
            'feedbackComponent',
            require('./components/dashboard/feedback.vue')
          )
          Vue.component(
            'questionsComponent',
            require('./components/dashboard/questions.vue')
          )
          Vue.component(
            'profileComponent',
            require('./components/dashboard/profile.vue')
          )
          var app = new Vue({ el: '#app', store: store })
        }.apply(this, arguments))
      },
      {
        './components/carousel.vue': 239,
        './components/createLineupButton.vue': 240,
        './components/dashboard/createEvent.vue': 241,
        './components/dashboard/dashboard.vue': 242,
        './components/dashboard/editLineup.vue': 243,
        './components/dashboard/feedback.vue': 244,
        './components/dashboard/lineup.vue': 245,
        './components/dashboard/profile.vue': 246,
        './components/dashboard/questions.vue': 247,
        './components/register.vue': 254,
        './components/registerHeader.vue': 255,
        './components/resetPassword.vue': 256,
        './components/search.vue': 257,
        './components/test.vue': 258,
        './store/index.js': 266,
        'vee-validate': 228,
        'vue-cookies': 229,
        'vue/dist/vue.js': 232
      }
    ],
    265: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'src/frontend/public/js/services/user.js',
          module
        )
        ;(function() {
          var axios = require('axios')
          var baseurl = 'http://127.0.0.1:8080/api/v1/users'
          module.exports = {
            loginUser: function loginUser(data) {
              return axios.post(''.concat(baseurl, '/login'), data)
            },
            createUser: function createUser(data) {
              return axios.post(''.concat(baseurl, '/register'), data)
            },
            editUser: function editUser() {},
            deleteUser: function deleteUser() {}
          }
        }.apply(this, arguments))
      },
      { axios: 4 }
    ],
    266: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'src/frontend/public/js/store/index.js',
          module
        )
        ;(function() {
          var Vue = require('vue/dist/vue.js')
          var Vuex = require('vuex')
          var events = require('./modules/event')
          var users = require('./modules/user')
          Vue.use(Vuex)
          var store = new Vuex.Store({
            modules: { events: events, users: users }
          })
          module.exports = store
        }.apply(this, arguments))
      },
      {
        './modules/event': 267,
        './modules/user': 268,
        'vue/dist/vue.js': 232,
        vuex: 237
      }
    ],
    267: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'src/frontend/public/js/store/modules/event.js',
          module
        )
        ;(function() {
          var state = { events: [] }
          var mutations = {}
          var actions = {}
          module.exports = {
            state: state,
            mutations: mutations,
            actions: actions
          }
        }.apply(this, arguments))
      },
      {}
    ],
    268: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'src/frontend/public/js/store/modules/user.js',
          module
        )
        ;(function() {
          var userservice = require('./../../services/user')
          var utils = require('./../../utils/index')
          var state = {
            users: [],
            createuser: {
              firstname: 'Nicholas',
              lastname: 'Mamiya',
              email: 'nicholaschunryne@gmail.com',
              organization: 'i5',
              password: 'cripx...',
              loader: false,
              messagebox: { type: '', message: '' }
            },
            login: {
              email: 'nicholaschunryne@gmail.com',
              password: 'cripx...',
              loader: false,
              messagebox: { type: '', message: '' }
            },
            resetpassword: {
              email: 'nicholaschunryne@gmail.com',
              loader: false,
              messagebox: { type: '', message: '' }
            }
          }
          var mutations = {
            toggleLoader: function toggleLoader(state, object) {
              state[object]['loader']
                ? (state[object]['loader'] = false)
                : (state[object]['loader'] = true)
            },
            setMessages: function setMessages(state, data) {
              state[data.state]['messagebox'].message = data.message
              state[data.state]['messagebox'].type = data.type
            },
            resetForm: function resetForm(state, object) {
              Object.keys(state[object]).forEach(function(key) {
                state[object][key] = null
              })
            }
          }
          var actions = {
            registerUser: function registerUser(_ref) {
              var commit = _ref.commit,
                state = _ref.state
              return (0, _asyncToGenerator2['default'])(
                /*#__PURE__*/ _regenerator['default'].mark(function _callee() {
                  var result, errors
                  return _regenerator['default'].wrap(
                    function _callee$(_context) {
                      while (1) {
                        switch ((_context.prev = _context.next)) {
                          case 0:
                            commit('toggleLoader', 'createuser')
                            _context.prev = 1
                            _context.next = 4
                            return userservice.createUser(state.createuser)
                          case 4:
                            result = _context.sent
                            commit('toggleLoader', 'createuser')
                            commit('setMessages', {
                              state: 'createuser',
                              type: 'success',
                              message: result.data
                            }) // commit('resetForm', 'createuser')
                            _context.next = 14
                            break
                          case 9:
                            _context.prev = 9
                            _context.t0 = _context['catch'](1)
                            commit('toggleLoader', 'createuser')
                            errors = utils.generateMessage(_context.t0)
                            commit('setMessages', {
                              state: 'createuser',
                              type: 'error',
                              message: errors
                            })
                          case 14:
                          case 'end':
                            return _context.stop()
                        }
                      }
                    },
                    _callee,
                    null,
                    [[1, 9]]
                  )
                })
              )()
            },
            loginUser: function loginUser(_ref2) {
              var commit = _ref2.commit,
                state = _ref2.state
              return (0, _asyncToGenerator2['default'])(
                /*#__PURE__*/ _regenerator['default'].mark(function _callee2() {
                  var result, errors
                  return _regenerator['default'].wrap(
                    function _callee2$(_context2) {
                      while (1) {
                        switch ((_context2.prev = _context2.next)) {
                          case 0:
                            commit('toggleLoader', 'login')
                            _context2.prev = 1
                            _context2.next = 4
                            return userservice.loginUser(state.login)
                          case 4:
                            result = _context2.sent
                            console.log(result)
                            window.location = '/dashboard'
                            commit('toggleLoader', 'login')
                            _context2.next = 16
                            break
                          case 10:
                            _context2.prev = 10
                            _context2.t0 = _context2['catch'](1)
                            console.log(_context2.t0)
                            commit('toggleLoader', 'login')
                            errors = utils.generateMessage(_context2.t0)
                            commit('setMessages', {
                              state: 'login',
                              type: 'error',
                              message: errors
                            })
                          case 16:
                          case 'end':
                            return _context2.stop()
                        }
                      }
                    },
                    _callee2,
                    null,
                    [[1, 10]]
                  )
                })
              )()
            },
            sendResetPasswordLink: function sendResetPasswordLink(_ref3) {
              var commit = _ref3.commit
              return (0, _asyncToGenerator2['default'])(
                /*#__PURE__*/ _regenerator['default'].mark(function _callee3() {
                  return _regenerator['default'].wrap(function _callee3$(
                    _context3
                  ) {
                    while (1) {
                      switch ((_context3.prev = _context3.next)) {
                        case 0:
                          commit('toggleLoader', 'resetpassword')
                        case 1:
                        case 'end':
                          return _context3.stop()
                      }
                    }
                  },
                  _callee3)
                })
              )()
            }
          }
          module.exports = {
            state: state,
            mutations: mutations,
            actions: actions
          }
        }.apply(this, arguments))
      },
      { './../../services/user': 265, './../../utils/index': 269 }
    ],
    269: [
      function(require, module, exports) {
        _hmr['websocket:null'].initModule(
          'src/frontend/public/js/utils/index.js',
          module
        )
        ;(function() {
          module.exports = {
            generateMessage: function generateMessage(message) {
              var errors = Array.isArray(message.response.data.errors)
                ? message.response.data.errors
                : message.response.data
              return errors
            }
          }
        }.apply(this, arguments))
      },
      {}
    ],
    1: [
      function(require, module, exports) {
        ;(function(global, _main, moduleDefs, cachedModules, _entries) {
          'use strict'
          var moduleMeta = {
            'node_modules/browserify-hmr/lib/has.js': {
              index: 36,
              hash: 'Hky4QYVrU1+kFHIEuxPy',
              parents: [
                'node_modules/browserify-hmr/lib/str-set.js',
                'node_modules/browserify-hmr/inc/index.js'
              ]
            },
            'node_modules/browserify-hmr/lib/str-set.js': {
              index: 37,
              hash: 'lcrDmQK4uaqOqN+FV4/9',
              parents: ['node_modules/browserify-hmr/inc/index.js']
            },
            'node_modules/socket.io-client/lib/on.js': {
              index: 213,
              hash: 'tjRZyGGz5Q0MA2qS81HN',
              parents: [
                'node_modules/socket.io-client/lib/socket.js',
                'node_modules/socket.io-client/lib/manager.js'
              ]
            },
            'node_modules/process/browser.js': {
              index: 210,
              hash: 'oZn5/djw+Uvkv+VAfElp',
              parents: [
                'node_modules/socket.io-client/node_modules/debug/src/browser.js',
                'node_modules/socket.io-client/node_modules/socket.io-parser/node_modules/debug/src/browser.js',
                'node_modules/vuex/dist/vuex.common.js',
                'node_modules/vue/dist/vue.runtime.common.js',
                'node_modules/engine.io-client/node_modules/debug/src/browser.js',
                'node_modules/timers-browserify/main.js',
                'node_modules/axios/lib/defaults.js'
              ]
            },
            'node_modules/component-emitter/index.js': {
              index: 40,
              hash: 'oN00wp8CctwYNQv6ryzF',
              parents: [
                'node_modules/socket.io-client/lib/socket.js',
                'node_modules/socket.io-client/node_modules/socket.io-parser/index.js',
                'node_modules/engine.io-client/lib/transport.js',
                'node_modules/engine.io-client/lib/transports/polling-xhr.js',
                'node_modules/engine.io-client/lib/socket.js',
                'node_modules/socket.io-client/lib/manager.js'
              ]
            },
            'node_modules/parseuri/index.js': {
              index: 209,
              hash: 'EzACpgP8IC8rgl7aVyRs',
              parents: [
                'node_modules/socket.io-client/lib/url.js',
                'node_modules/engine.io-client/lib/socket.js'
              ]
            },
            'node_modules/socket.io-client/lib/url.js': {
              index: 215,
              hash: 'n0UOO3VaMzFsfPFiJFxC',
              parents: ['node_modules/socket.io-client/lib/index.js']
            },
            'node_modules/socket.io-client/node_modules/debug/src/browser.js': {
              index: 216,
              hash: 'dnxCviFhnOSF5ZEd3rel',
              parents: [
                'node_modules/socket.io-client/lib/url.js',
                'node_modules/socket.io-client/lib/socket.js',
                'node_modules/socket.io-client/lib/manager.js',
                'node_modules/socket.io-client/lib/index.js'
              ]
            },
            'node_modules/component-bind/index.js': {
              index: 39,
              hash: '4yIcVw+afwUsnTQyI0a3',
              parents: [
                'node_modules/socket.io-client/lib/socket.js',
                'node_modules/socket.io-client/lib/manager.js'
              ]
            },
            'node_modules/parseqs/index.js': {
              index: 208,
              hash: 'bFhhlHvfi+om+FJQz11d',
              parents: [
                'node_modules/socket.io-client/lib/socket.js',
                'node_modules/engine.io-client/lib/transports/websocket.js',
                'node_modules/engine.io-client/lib/transports/polling.js',
                'node_modules/engine.io-client/lib/socket.js'
              ]
            },
            'node_modules/to-array/index.js': {
              index: 227,
              hash: '2EoggafxX+GLXkXiaGjm',
              parents: ['node_modules/socket.io-client/lib/socket.js']
            },
            'node_modules/backo2/index.js': {
              index: 30,
              hash: 'L5ry3mfVEw1wgmx9Sa+q',
              parents: ['node_modules/socket.io-client/lib/manager.js']
            },
            'node_modules/indexof/index.js': {
              index: 61,
              hash: '8zMGV0j0ID5bUIeT7r+M',
              parents: [
                'node_modules/engine.io-client/lib/socket.js',
                'node_modules/socket.io-client/lib/manager.js'
              ]
            },
            'node_modules/lodash/forOwn.js': {
              index: 184,
              hash: 'Phxs3xQLZ6eXpzVwNsD+',
              parents: ['node_modules/browserify-hmr/inc/index.js']
            },
            'node_modules/lodash/_baseForOwn.js': {
              index: 87,
              hash: 'wsDmgTH4vz3dPZ0ucogL',
              parents: [
                'node_modules/lodash/forOwn.js',
                'node_modules/lodash/_baseEach.js',
                'node_modules/lodash/mapValues.js'
              ]
            },
            'node_modules/lodash/_castFunction.js': {
              index: 113,
              hash: '17Fkqb/JTOTfTCbTGPvs',
              parents: [
                'node_modules/lodash/forOwn.js',
                'node_modules/lodash/forEach.js'
              ]
            },
            'node_modules/lodash/isArray.js': {
              index: 189,
              hash: 'aaUaNDXWFSVZ5STriBpj',
              parents: [
                'node_modules/lodash/map.js',
                'node_modules/lodash/filter.js',
                'node_modules/lodash/forEach.js',
                'node_modules/lodash/_isKey.js',
                'node_modules/lodash/_arrayLikeKeys.js',
                'node_modules/lodash/_baseToString.js',
                'node_modules/lodash/_baseGetAllKeys.js',
                'node_modules/lodash/_baseIsEqualDeep.js',
                'node_modules/lodash/_castPath.js',
                'node_modules/lodash/_hasPath.js',
                'node_modules/lodash/_baseIteratee.js',
                'node_modules/lodash/some.js'
              ]
            },
            'node_modules/lodash/_arraySome.js': {
              index: 80,
              hash: '6MxplN9nt/AmANH1hnTa',
              parents: [
                'node_modules/lodash/_equalArrays.js',
                'node_modules/lodash/some.js'
              ]
            },
            'node_modules/lodash/_arrayEach.js': {
              index: 75,
              hash: 'b9UG7X0uCjshbsKWnzke',
              parents: ['node_modules/lodash/forEach.js']
            },
            'node_modules/lodash/_arrayMap.js': {
              index: 78,
              hash: 'WRdHK1dyumbtZQGeNdoR',
              parents: [
                'node_modules/lodash/map.js',
                'node_modules/lodash/_baseToString.js'
              ]
            },
            'node_modules/lodash/_arrayFilter.js': {
              index: 76,
              hash: 'Ev1suXdgsby5ZCXCkRms',
              parents: [
                'node_modules/lodash/filter.js',
                'node_modules/lodash/_getSymbols.js'
              ]
            },
            'node_modules/lodash/_baseZipObject.js': {
              index: 111,
              hash: 'YXMcZ83l88xZmDNehDaW',
              parents: ['node_modules/lodash/zipObject.js']
            },
            'node_modules/lodash/_isPrototype.js': {
              index: 144,
              hash: 'z7lefPE53MX7955LE/f6',
              parents: [
                'node_modules/lodash/_baseKeys.js',
                'node_modules/lodash/assign.js'
              ]
            },
            'node_modules/socket.io-client/node_modules/isarray/index.js': {
              index: 218,
              hash: 'm4xpE3KALaeIycX04cov',
              parents: [
                'node_modules/socket.io-client/node_modules/socket.io-parser/binary.js',
                'node_modules/socket.io-client/node_modules/socket.io-parser/index.js'
              ]
            },
            'node_modules/vue-cookies/vue-cookies.js': {
              index: 229,
              hash: 'mrHYnGI3Q2V4nzF0kEmE',
              parents: ['src/frontend/public/js/main.js']
            },
            'node_modules/lodash/_baseSome.js': {
              index: 107,
              hash: '/fx+wXc48GKu9ngo/G7R',
              parents: ['node_modules/lodash/some.js']
            },
            'node_modules/lodash/_baseEach.js': {
              index: 84,
              hash: '1eAUgjpN0REUkkfZ9ZIc',
              parents: [
                'node_modules/lodash/_baseSome.js',
                'node_modules/lodash/_baseMap.js',
                'node_modules/lodash/_baseFilter.js',
                'node_modules/lodash/forEach.js'
              ]
            },
            'node_modules/lodash/identity.js': {
              index: 187,
              hash: 's1ZnXuz2CFxX2MXJyb7F',
              parents: [
                'node_modules/lodash/_castFunction.js',
                'node_modules/lodash/_baseSetToString.js',
                'node_modules/lodash/_baseRest.js',
                'node_modules/lodash/_baseIteratee.js'
              ]
            },
            'node_modules/lodash/_assignValue.js': {
              index: 81,
              hash: 'hmWN1NJKVbGe2ThBbBed',
              parents: [
                'node_modules/lodash/zipObject.js',
                'node_modules/lodash/_copyObject.js',
                'node_modules/lodash/assign.js'
              ]
            },
            'node_modules/lodash/eq.js': {
              index: 181,
              hash: 'Be3fJIGKRC2SLwj96dmp',
              parents: [
                'node_modules/lodash/_assignValue.js',
                'node_modules/lodash/_isIterateeCall.js',
                'node_modules/lodash/_equalByTag.js',
                'node_modules/lodash/_assocIndexOf.js'
              ]
            },
            'node_modules/lodash/_baseAssignValue.js': {
              index: 83,
              hash: 'UUmMep65Dt8mJru5Df0R',
              parents: [
                'node_modules/lodash/_assignValue.js',
                'node_modules/lodash/_copyObject.js',
                'node_modules/lodash/mapValues.js'
              ]
            },
            'node_modules/lodash/zipObject.js': {
              index: 207,
              hash: 'iztwVZmqQ7Y1i6QmGzx9',
              parents: ['node_modules/browserify-hmr/inc/index.js']
            },
            'node_modules/lodash/_baseMap.js': {
              index: 100,
              hash: 'd4dyLnzZcVXFzz5tCc58',
              parents: ['node_modules/lodash/map.js']
            },
            'node_modules/lodash/isArrayLike.js': {
              index: 190,
              hash: '/OCFIiBOK84sMLW6Tiiz',
              parents: [
                'node_modules/lodash/_baseMap.js',
                'node_modules/lodash/_isIterateeCall.js',
                'node_modules/lodash/_createBaseEach.js',
                'node_modules/lodash/keys.js',
                'node_modules/lodash/assign.js'
              ]
            },
            'node_modules/lodash/map.js': {
              index: 199,
              hash: 'Gq/1p28f40AzWuWuaNZr',
              parents: ['node_modules/browserify-hmr/inc/index.js']
            },
            'node_modules/lodash/_baseIteratee.js': {
              index: 98,
              hash: 'lFdaZihzm4HNQp2V6Bpv',
              parents: [
                'node_modules/lodash/map.js',
                'node_modules/lodash/filter.js',
                'node_modules/lodash/mapValues.js',
                'node_modules/lodash/some.js'
              ]
            },
            'node_modules/lodash/_baseFilter.js': {
              index: 85,
              hash: 'zIF8T84UwJp2X27nHnkJ',
              parents: ['node_modules/lodash/filter.js']
            },
            'node_modules/lodash/filter.js': {
              index: 182,
              hash: 'xHkJOO00v5Ew3tJEbs2H',
              parents: ['node_modules/browserify-hmr/inc/index.js']
            },
            'node_modules/lodash/_copyObject.js': {
              index: 115,
              hash: 'VAzIjaU/1tssj67rWjf/',
              parents: ['node_modules/lodash/assign.js']
            },
            'node_modules/lodash/_isIndex.js': {
              index: 139,
              hash: 'K696JB36F0WOcnTVaGJc',
              parents: [
                'node_modules/lodash/_isIterateeCall.js',
                'node_modules/lodash/_arrayLikeKeys.js',
                'node_modules/lodash/_hasPath.js'
              ]
            },
            'node_modules/lodash/isObject.js': {
              index: 194,
              hash: 'H0M3JlacAn8wi5b/SH6J',
              parents: [
                'node_modules/lodash/_isIterateeCall.js',
                'node_modules/lodash/_isStrictComparable.js',
                'node_modules/lodash/isFunction.js',
                'node_modules/lodash/_baseIsNative.js'
              ]
            },
            'node_modules/lodash/_isIterateeCall.js': {
              index: 140,
              hash: 'Q6Y/4ZLjPN2hD0x360UE',
              parents: [
                'node_modules/lodash/_createAssigner.js',
                'node_modules/lodash/some.js'
              ]
            },
            'node_modules/lodash/isLength.js': {
              index: 193,
              hash: 'bwSRxcpcTX/CbMowl+qa',
              parents: [
                'node_modules/lodash/isArrayLike.js',
                'node_modules/lodash/_baseIsTypedArray.js',
                'node_modules/lodash/_hasPath.js'
              ]
            },
            'node_modules/socket.io-client/node_modules/socket.io-parser/binary.js': {
              index: 220,
              hash: 'IRwIakVon3VSPoCR1Xtc',
              parents: [
                'node_modules/socket.io-client/node_modules/socket.io-parser/index.js'
              ]
            },
            'node_modules/socket.io-client/node_modules/socket.io-parser/is-buffer.js': {
              index: 222,
              hash: '1vOrCizH0KmKfWqMvaQr',
              parents: [
                'node_modules/socket.io-client/node_modules/socket.io-parser/binary.js',
                'node_modules/socket.io-client/node_modules/socket.io-parser/index.js'
              ]
            },
            'node_modules/has-binary2/node_modules/isarray/index.js': {
              index: 58,
              hash: 'm4xpE3KALaeIycX04cov',
              parents: ['node_modules/has-binary2/index.js']
            },
            'node_modules/has-binary2/index.js': {
              index: 57,
              hash: 'suQ48utREXEFDHiT/ig1',
              parents: [
                'node_modules/socket.io-client/lib/socket.js',
                'node_modules/engine.io-parser/lib/browser.js'
              ]
            },
            'node_modules/buffer/index.js': {
              index: 38,
              hash: 'hGJxhrL7Ow8RgIpHt0cK',
              parents: [
                'node_modules/has-binary2/index.js',
                'node_modules/buffer/index.js',
                'node_modules/socket.io-client/node_modules/socket.io-parser/is-buffer.js',
                'node_modules/engine.io-client/lib/transports/websocket.js'
              ]
            },
            'node_modules/socket.io-client/lib/socket.js': {
              index: 214,
              hash: 'rdFfPxx+D30PPULBB/zc',
              parents: [
                'node_modules/socket.io-client/lib/manager.js',
                'node_modules/socket.io-client/lib/index.js'
              ]
            },
            'node_modules/socket.io-client/node_modules/socket.io-parser/index.js': {
              index: 221,
              hash: '+PwtEidJKbGPZuiwUQ8i',
              parents: [
                'node_modules/socket.io-client/lib/socket.js',
                'node_modules/socket.io-client/lib/manager.js',
                'node_modules/socket.io-client/lib/index.js'
              ]
            },
            'node_modules/vee-validate/dist/vee-validate.js': {
              index: 228,
              hash: 'wUrFBI1SfYyu6XPPXb3A',
              parents: ['src/frontend/public/js/main.js']
            },
            'src/frontend/public/js/store/modules/event.js': {
              index: 267,
              hash: 'hosILh5sR+HqArVhXvWu',
              parents: ['src/frontend/public/js/store/index.js']
            },
            'node_modules/lodash/_createBaseEach.js': {
              index: 118,
              hash: 'j95laCMPOgHsNDIKPdsp',
              parents: ['node_modules/lodash/_baseEach.js']
            },
            'node_modules/lodash/forEach.js': {
              index: 183,
              hash: 'jIBP8hzrl/TALmTGIzfp',
              parents: ['node_modules/browserify-hmr/inc/index.js']
            },
            'node_modules/lodash/_matchesStrictComparable.js': {
              index: 157,
              hash: '+OqsD2+K9liTMiGDT3Y4',
              parents: [
                'node_modules/lodash/_baseMatchesProperty.js',
                'node_modules/lodash/_baseMatches.js'
              ]
            },
            'node_modules/lodash/_baseTimes.js': {
              index: 108,
              hash: 'vQVHAQOeEJCBfl2Pb7SH',
              parents: ['node_modules/lodash/_arrayLikeKeys.js']
            },
            'node_modules/lodash/_createBaseFor.js': {
              index: 119,
              hash: 'OeCELp37VytZuCN6Xtr+',
              parents: ['node_modules/lodash/_baseFor.js']
            },
            'node_modules/lodash/_baseFor.js': {
              index: 86,
              hash: 'aDRpv9Ysd3A0P68kJrwN',
              parents: ['node_modules/lodash/_baseForOwn.js']
            },
            'node_modules/lodash/keys.js': {
              index: 198,
              hash: 'AzwEiE+T6QrvlRtU3Z5w',
              parents: [
                'node_modules/lodash/_baseForOwn.js',
                'node_modules/lodash/_getMatchData.js',
                'node_modules/lodash/assign.js',
                'node_modules/lodash/_getAllKeys.js'
              ]
            },
            'node_modules/lodash/_baseProperty.js': {
              index: 103,
              hash: 'kWjeI0xVLXmi/QD9uMSa',
              parents: ['node_modules/lodash/property.js']
            },
            'node_modules/socket.io-client/node_modules/ms/index.js': {
              index: 219,
              hash: 'VZhpcvXzyURvh2xXbhzT',
              parents: [
                'node_modules/socket.io-client/node_modules/debug/src/common.js'
              ]
            },
            'node_modules/socket.io-client/node_modules/debug/src/common.js': {
              index: 217,
              hash: '7srtgs+0UG8MssFA6lAN',
              parents: [
                'node_modules/socket.io-client/node_modules/debug/src/browser.js'
              ]
            },
            'node_modules/base64-js/index.js': {
              index: 32,
              hash: '6dpUkfRUt5+YcmTlzhzr',
              parents: ['node_modules/buffer/index.js']
            },
            'node_modules/ieee754/index.js': {
              index: 60,
              hash: 'lpinvuoc6+kFDWfLEBYD',
              parents: ['node_modules/buffer/index.js']
            },
            'node_modules/lodash/_getMatchData.js': {
              index: 127,
              hash: 'QzO7KFepX9S2dqnbKqgt',
              parents: ['node_modules/lodash/_baseMatches.js']
            },
            'node_modules/lodash/_isStrictComparable.js': {
              index: 145,
              hash: 'rbCwfHyEpUrj4Z98kqqR',
              parents: [
                'node_modules/lodash/_getMatchData.js',
                'node_modules/lodash/_baseMatchesProperty.js'
              ]
            },
            'node_modules/lodash/_toKey.js': {
              index: 177,
              hash: 'Fva7n1CrZYGNyjdfKbt3',
              parents: [
                'node_modules/lodash/property.js',
                'node_modules/lodash/_baseGet.js',
                'node_modules/lodash/_hasPath.js',
                'node_modules/lodash/_baseMatchesProperty.js'
              ]
            },
            'node_modules/lodash/isSymbol.js': {
              index: 196,
              hash: 'uIIRbxfQUXadoioCe5+N',
              parents: [
                'node_modules/lodash/_toKey.js',
                'node_modules/lodash/_isKey.js',
                'node_modules/lodash/_baseToString.js'
              ]
            },
            'node_modules/lodash/_basePropertyDeep.js': {
              index: 104,
              hash: 'Zfrh9AQz1Ry2yPu2pByv',
              parents: ['node_modules/lodash/property.js']
            },
            'node_modules/lodash/_baseGet.js': {
              index: 88,
              hash: 'EQWKE8NGYTKR53FHpqW6',
              parents: [
                'node_modules/lodash/_basePropertyDeep.js',
                'node_modules/lodash/get.js'
              ]
            },
            'node_modules/lodash/property.js': {
              index: 202,
              hash: '2hJfadtQXM/U3NbWpzGR',
              parents: ['node_modules/lodash/_baseIteratee.js']
            },
            'node_modules/lodash/_isKey.js': {
              index: 141,
              hash: 'D13Ok63JqktDADwmaeBu',
              parents: [
                'node_modules/lodash/property.js',
                'node_modules/lodash/_castPath.js',
                'node_modules/lodash/_baseMatchesProperty.js'
              ]
            },
            'node_modules/lodash/isObjectLike.js': {
              index: 195,
              hash: 'qRO1rf+QsMbu/mjKbljZ',
              parents: [
                'node_modules/lodash/isSymbol.js',
                'node_modules/lodash/_baseIsArguments.js',
                'node_modules/lodash/isArguments.js',
                'node_modules/lodash/_baseIsTypedArray.js',
                'node_modules/lodash/_baseIsEqual.js'
              ]
            },
            'node_modules/lodash/_objectToString.js': {
              index: 162,
              hash: 'gcC0LTB2iC1gNln4H3WI',
              parents: ['node_modules/lodash/_baseGetTag.js']
            },
            'node_modules/lodash/_getValue.js': {
              index: 132,
              hash: 'ECu3UgrdoHGLOVPWr5mD',
              parents: ['node_modules/lodash/_getNative.js']
            },
            'node_modules/lodash/_shortOut.js': {
              index: 170,
              hash: 'IoUeHrEOcxqBK99ieVfK',
              parents: ['node_modules/lodash/_setToString.js']
            },
            'node_modules/lodash/_apply.js': {
              index: 74,
              hash: 'XKkzZTghrlK6WTNW2Mdh',
              parents: ['node_modules/lodash/_overRest.js']
            },
            'node_modules/lodash/_overRest.js': {
              index: 164,
              hash: 'iDNTQ1nLZv3jwCD1fhKA',
              parents: ['node_modules/lodash/_baseRest.js']
            },
            'node_modules/lodash/_baseHasIn.js': {
              index: 91,
              hash: '+7Ad7hoG+3kwDHiM0tNn',
              parents: ['node_modules/lodash/hasIn.js']
            },
            'node_modules/lodash/_overArg.js': {
              index: 163,
              hash: 'DrVoGwBMK8ywtUgJJMWJ',
              parents: ['node_modules/lodash/_nativeKeys.js']
            },
            'node_modules/lodash/_nativeKeys.js': {
              index: 160,
              hash: 'Ksoa4f854F0/NggsS0Yh',
              parents: ['node_modules/lodash/_baseKeys.js']
            },
            'node_modules/lodash/_baseKeys.js': {
              index: 99,
              hash: 'kmg69OeKnhCzjV1WMGzu',
              parents: ['node_modules/lodash/keys.js']
            },
            'node_modules/lodash/stubFalse.js': {
              index: 205,
              hash: 'bsNH9caMXr7Pdt8ruFJt',
              parents: ['node_modules/lodash/isBuffer.js']
            },
            'node_modules/lodash/_baseUnary.js': {
              index: 110,
              hash: 'cMYMf5ZcCBeLWbK9TQmI',
              parents: ['node_modules/lodash/isTypedArray.js']
            },
            'node_modules/engine.io-parser/lib/keys.js': {
              index: 55,
              hash: 'oFyKNTA0twlyQVhVzp9n',
              parents: ['node_modules/engine.io-parser/lib/browser.js']
            },
            'node_modules/engine.io-parser/lib/utf8.js': {
              index: 56,
              hash: '++espnKbJKFbA3w6+Gd+',
              parents: ['node_modules/engine.io-parser/lib/browser.js']
            },
            'src/frontend/public/js/components/register.vue': {
              index: 254,
              hash: 'Ww3zwMgVb2cSc2oSAICJ',
              parents: ['src/frontend/public/js/main.js']
            },
            'src/frontend/public/js/components/ui/button.vue': {
              index: 259,
              hash: '9SMORMKsItPqI/as5kfr',
              parents: [
                'src/frontend/public/js/components/register.vue',
                'src/frontend/public/js/components/createLineupButton.vue',
                'src/frontend/public/js/components/resetPassword.vue',
                'src/frontend/public/js/components/registerHeader.vue'
              ]
            },
            'src/frontend/public/js/components/ui/facebook-login-button.vue': {
              index: 261,
              hash: 'veketBSi7U5bS4uEmfnZ',
              parents: [
                'src/frontend/public/js/components/register.vue',
                'src/frontend/public/js/components/registerHeader.vue'
              ]
            },
            'src/frontend/public/js/components/ui/input.vue': {
              index: 263,
              hash: 'xqENJnh9tU8zHAhwgEZz',
              parents: [
                'src/frontend/public/js/components/register.vue',
                'src/frontend/public/js/components/resetPassword.vue',
                'src/frontend/public/js/components/registerHeader.vue'
              ]
            },
            'src/frontend/public/js/components/ui/google-login-button.vue': {
              index: 262,
              hash: 'u514WKKUx3mQ9p8u1e9v',
              parents: [
                'src/frontend/public/js/components/register.vue',
                'src/frontend/public/js/components/registerHeader.vue'
              ]
            },
            'src/frontend/public/js/components/ui/errorBox.vue': {
              index: 260,
              hash: '32kRkp7+AsG1hXHYDC0I',
              parents: [
                'src/frontend/public/js/components/register.vue',
                'src/frontend/public/js/components/registerHeader.vue'
              ]
            },
            'node_modules/vuex/dist/vuex.common.js': {
              index: 237,
              hash: 'LWG9/9BAgVCemGs6ADOp',
              parents: [
                'src/frontend/public/js/components/register.vue',
                'src/frontend/public/js/components/resetPassword.vue',
                'src/frontend/public/js/store/index.js',
                'src/frontend/public/js/components/registerHeader.vue'
              ]
            },
            'node_modules/vue-hot-reload-api/dist/index.js': {
              index: 230,
              hash: 'BnmVomLE3JKioFJdZND8',
              parents: [
                'src/frontend/public/js/components/register.vue',
                'src/frontend/public/js/components/createLineupButton.vue',
                'src/frontend/public/js/components/resetPassword.vue',
                'src/frontend/public/js/components/carousel.vue',
                'src/frontend/public/js/components/dashboard/lineup.vue',
                'src/frontend/public/js/components/dashboard/editLineup.vue',
                'src/frontend/public/js/components/dashboard/profile.vue',
                'src/frontend/public/js/components/test.vue',
                'src/frontend/public/js/components/search.vue',
                'src/frontend/public/js/components/dashboard/createEvent.vue',
                'src/frontend/public/js/components/ui/input.vue',
                'src/frontend/public/js/components/ui/errorBox.vue',
                'src/frontend/public/js/components/ui/button.vue',
                'src/frontend/public/js/components/ui/facebook-login-button.vue',
                'src/frontend/public/js/components/ui/google-login-button.vue',
                'src/frontend/public/js/components/registerHeader.vue',
                'src/frontend/public/js/components/dashboard/subComponents/questionCard.vue',
                'src/frontend/public/js/components/dashboard/questions.vue',
                'src/frontend/public/js/components/dashboard/subComponents/lineupNav.vue',
                'src/frontend/public/js/components/dashboard/subComponents/feedbackCard.vue',
                'src/frontend/public/js/components/dashboard/feedback.vue',
                'src/frontend/public/js/components/dashboard/subComponents/sideNav.vue',
                'src/frontend/public/js/components/dashboard/subComponents/eventCard.vue',
                'src/frontend/public/js/components/dashboard/subComponents/events.vue',
                'src/frontend/public/js/components/dashboard/dashboard.vue'
              ]
            },
            'node_modules/vue/dist/vue.runtime.common.js': {
              index: 234,
              hash: '799PTSOMIOGq3tZyX7LA',
              parents: [
                'src/frontend/public/js/components/register.vue',
                'src/frontend/public/js/components/createLineupButton.vue',
                'src/frontend/public/js/components/resetPassword.vue',
                'src/frontend/public/js/components/carousel.vue',
                'src/frontend/public/js/components/dashboard/lineup.vue',
                'src/frontend/public/js/components/dashboard/editLineup.vue',
                'src/frontend/public/js/components/dashboard/profile.vue',
                'src/frontend/public/js/components/test.vue',
                'src/frontend/public/js/components/search.vue',
                'src/frontend/public/js/components/dashboard/createEvent.vue',
                'src/frontend/public/js/components/ui/input.vue',
                'src/frontend/public/js/components/ui/errorBox.vue',
                'src/frontend/public/js/components/ui/button.vue',
                'src/frontend/public/js/components/ui/facebook-login-button.vue',
                'src/frontend/public/js/components/ui/google-login-button.vue',
                'src/frontend/public/js/components/registerHeader.vue',
                'src/frontend/public/js/components/dashboard/subComponents/questionCard.vue',
                'src/frontend/public/js/components/dashboard/questions.vue',
                'src/frontend/public/js/components/dashboard/subComponents/lineupNav.vue',
                'src/frontend/public/js/components/dashboard/subComponents/feedbackCard.vue',
                'src/frontend/public/js/components/dashboard/feedback.vue',
                'src/frontend/public/js/components/dashboard/subComponents/sideNav.vue',
                'src/frontend/public/js/components/dashboard/subComponents/eventCard.vue',
                'src/frontend/public/js/components/dashboard/subComponents/events.vue',
                'src/frontend/public/js/components/dashboard/dashboard.vue'
              ]
            },
            'src/frontend/public/js/components/createLineupButton.vue': {
              index: 240,
              hash: 'ccADlR1AkT0jzC5dPzAC',
              parents: ['src/frontend/public/js/main.js']
            },
            'src/frontend/public/js/components/resetPassword.vue': {
              index: 256,
              hash: 'Sh/KQOcMBG8Cu3QFPO+Z',
              parents: ['src/frontend/public/js/main.js']
            },
            'node_modules/lodash/_baseGetTag.js': {
              index: 90,
              hash: 'ydPbt27q/TAHvOyjdq/H',
              parents: [
                'node_modules/lodash/isSymbol.js',
                'node_modules/lodash/isFunction.js',
                'node_modules/lodash/_baseIsArguments.js',
                'node_modules/lodash/_baseIsTypedArray.js',
                'node_modules/lodash/_getTag.js'
              ]
            },
            'node_modules/lodash/_Symbol.js': {
              index: 71,
              hash: 'I77NsH5p3PRVWpJOtN3+',
              parents: [
                'node_modules/lodash/_getRawTag.js',
                'node_modules/lodash/_baseGetTag.js',
                'node_modules/lodash/_equalByTag.js',
                'node_modules/lodash/_baseToString.js'
              ]
            },
            'node_modules/lodash/_root.js': {
              index: 165,
              hash: 'MupxTyUFdnn90wmcJpPL',
              parents: [
                'node_modules/lodash/_Symbol.js',
                'node_modules/lodash/isBuffer.js',
                'node_modules/lodash/_Map.js',
                'node_modules/lodash/_coreJsData.js',
                'node_modules/lodash/_DataView.js',
                'node_modules/lodash/_Promise.js',
                'node_modules/lodash/_Set.js',
                'node_modules/lodash/_WeakMap.js',
                'node_modules/lodash/_Uint8Array.js'
              ]
            },
            'node_modules/lodash/_getRawTag.js': {
              index: 129,
              hash: 'MUL9l/iYFvZaG1vReTH3',
              parents: ['node_modules/lodash/_baseGetTag.js']
            },
            'node_modules/lodash/isFunction.js': {
              index: 192,
              hash: '0gysC+rTcZlhPWD04ANh',
              parents: [
                'node_modules/lodash/isArrayLike.js',
                'node_modules/lodash/_baseIsNative.js'
              ]
            },
            'node_modules/lodash/_baseIsArguments.js': {
              index: 92,
              hash: 'caWdwJw13ty+5+1x9erg',
              parents: ['node_modules/lodash/isArguments.js']
            },
            'node_modules/lodash/isArguments.js': {
              index: 188,
              hash: 'iJIbQ7nb4q+C1riPMj/b',
              parents: [
                'node_modules/lodash/_arrayLikeKeys.js',
                'node_modules/lodash/_hasPath.js'
              ]
            },
            'node_modules/lodash/_castPath.js': {
              index: 114,
              hash: 'GgKBkmr1sBRSb1yd72qJ',
              parents: [
                'node_modules/lodash/_baseGet.js',
                'node_modules/lodash/_hasPath.js'
              ]
            },
            'node_modules/lodash/get.js': {
              index: 185,
              hash: 'l8Xm0+dbrUDVfD0OVsKH',
              parents: ['node_modules/lodash/_baseMatchesProperty.js']
            },
            'node_modules/lodash/_baseIsTypedArray.js': {
              index: 97,
              hash: 'cPl0GH9tkUCpceUV6gAk',
              parents: ['node_modules/lodash/isTypedArray.js']
            },
            'node_modules/lodash/_nodeUtil.js': {
              index: 161,
              hash: 'U3tuQqeqEgCvn7UHnwWx',
              parents: ['node_modules/lodash/isTypedArray.js']
            },
            'node_modules/lodash/_freeGlobal.js': {
              index: 124,
              hash: 'XnLH3zOElVb8vOWnDO5f',
              parents: [
                'node_modules/lodash/_nodeUtil.js',
                'node_modules/lodash/_root.js'
              ]
            },
            'node_modules/lodash/isTypedArray.js': {
              index: 197,
              hash: 'pNInOnl/2pKh0f1gDzOT',
              parents: [
                'node_modules/lodash/_arrayLikeKeys.js',
                'node_modules/lodash/_baseIsEqualDeep.js'
              ]
            },
            'node_modules/lodash/_stackDelete.js': {
              index: 172,
              hash: 'LXafI5DDGP0wDwfpw8/U',
              parents: ['node_modules/lodash/_Stack.js']
            },
            'node_modules/lodash/_stackGet.js': {
              index: 173,
              hash: 'BoHW4uFMtND7Gi+JPdJf',
              parents: ['node_modules/lodash/_Stack.js']
            },
            'node_modules/lodash/_stackHas.js': {
              index: 174,
              hash: 'thY5y8jBCnJMfegnSD/V',
              parents: ['node_modules/lodash/_Stack.js']
            },
            'node_modules/lodash/_toSource.js': {
              index: 178,
              hash: 'qhQsP8sNq2kil796yxWO',
              parents: [
                'node_modules/lodash/_baseIsNative.js',
                'node_modules/lodash/_getTag.js'
              ]
            },
            'node_modules/lodash/constant.js': {
              index: 180,
              hash: 'E/D07UC1hh81w2R6/inn',
              parents: ['node_modules/lodash/_baseSetToString.js']
            },
            'node_modules/lodash/_baseSetToString.js': {
              index: 106,
              hash: 'iLxL219sz9iCOrPJz82a',
              parents: ['node_modules/lodash/_setToString.js']
            },
            'node_modules/lodash/_defineProperty.js': {
              index: 120,
              hash: '0CbMU6r+0Uq1gikE9oNA',
              parents: [
                'node_modules/lodash/_baseSetToString.js',
                'node_modules/lodash/_baseAssignValue.js'
              ]
            },
            'node_modules/lodash/_setToString.js': {
              index: 169,
              hash: 'hu7pnSotmEJV3Wx9OsJa',
              parents: ['node_modules/lodash/_baseRest.js']
            },
            'node_modules/lodash/_baseRest.js': {
              index: 105,
              hash: 'SUX2Uj3EprmvmkcHcoY/',
              parents: ['node_modules/lodash/_createAssigner.js']
            },
            'node_modules/lodash/_createAssigner.js': {
              index: 117,
              hash: 'JEqSu7xxpSyH40Y4GJ+V',
              parents: ['node_modules/lodash/assign.js']
            },
            'node_modules/lodash/isBuffer.js': {
              index: 191,
              hash: 'Uzhm1jNtW1f55Gsz24+8',
              parents: [
                'node_modules/lodash/_arrayLikeKeys.js',
                'node_modules/lodash/_baseIsEqualDeep.js'
              ]
            },
            'node_modules/lodash/_arrayLikeKeys.js': {
              index: 77,
              hash: 'RWu/FT9WAfaDXPoucuiD',
              parents: ['node_modules/lodash/keys.js']
            },
            'node_modules/lodash/assign.js': {
              index: 179,
              hash: '6X7UP3eqxcj6o2ias2ID',
              parents: ['node_modules/browserify-hmr/inc/index.js']
            },
            'node_modules/vue-owl-carousel/dist/vue-owl-carousel.js': {
              index: 231,
              hash: 'bZY0G4qrXkCmnvJTce8k',
              parents: ['src/frontend/public/js/components/carousel.vue']
            },
            'src/frontend/public/js/components/carousel.vue': {
              index: 239,
              hash: 'cZU9M6RQeo9SZbiLiF/I',
              parents: ['src/frontend/public/js/main.js']
            },
            'node_modules/socket.io-client/node_modules/socket.io-parser/node_modules/ms/index.js': {
              index: 225,
              hash: 'S9kiCcudrPPjdz5yWst6',
              parents: [
                'node_modules/socket.io-client/node_modules/socket.io-parser/node_modules/debug/src/debug.js'
              ]
            },
            'node_modules/socket.io-client/node_modules/socket.io-parser/node_modules/debug/src/debug.js': {
              index: 224,
              hash: 'wt9TGc+HaNG7ZPmfdOfc',
              parents: [
                'node_modules/socket.io-client/node_modules/socket.io-parser/node_modules/debug/src/browser.js'
              ]
            },
            'node_modules/socket.io-client/node_modules/socket.io-parser/node_modules/debug/src/browser.js': {
              index: 223,
              hash: '8qFrBHw0YkjkJpodEIea',
              parents: [
                'node_modules/socket.io-client/node_modules/socket.io-parser/index.js'
              ]
            },
            'node_modules/browser-resolve/empty.js': {
              index: 34,
              hash: '47DEQpj8HBSa+/TImW+5',
              parents: [
                'node_modules/engine.io-client/lib/transports/websocket.js'
              ]
            },
            'node_modules/engine.io-client/lib/transport.js': {
              index: 44,
              hash: 'B8fxSJmXkg6whs3FrBf+',
              parents: [
                'node_modules/engine.io-client/lib/transports/websocket.js',
                'node_modules/engine.io-client/lib/transports/polling.js',
                'node_modules/engine.io-client/lib/socket.js'
              ]
            },
            'node_modules/engine.io-parser/lib/browser.js': {
              index: 54,
              hash: 'qhAEZPFuezpipOtph94H',
              parents: [
                'node_modules/engine.io-client/lib/transport.js',
                'node_modules/engine.io-client/lib/transports/websocket.js',
                'node_modules/engine.io-client/lib/transports/polling.js',
                'node_modules/engine.io-client/lib/socket.js',
                'node_modules/engine.io-client/lib/index.js'
              ]
            },
            'src/frontend/public/js/utils/index.js': {
              index: 269,
              hash: 'PGd5vV98RlzS798ypZ8o',
              parents: ['src/frontend/public/js/store/modules/user.js']
            },
            'src/frontend/public/js/store/modules/user.js': {
              index: 268,
              hash: 'OVgBV+QQFb/IXOSyE3cK',
              parents: ['src/frontend/public/js/store/index.js']
            },
            'src/frontend/public/js/services/user.js': {
              index: 265,
              hash: 'NonGfLbSexRC8Kd0DlCl',
              parents: [
                'src/frontend/public/js/store/modules/user.js',
                'src/frontend/public/js/components/registerHeader.vue'
              ]
            },
            'src/frontend/public/js/components/dashboard/lineup.vue': {
              index: 245,
              hash: '4LHl0oMXpOSBfMAij0uj',
              parents: ['src/frontend/public/js/main.js']
            },
            'src/frontend/public/js/components/dashboard/subComponents/lineupNav.vue': {
              index: 251,
              hash: 'dCtTh+vf9hu6maZlNrLk',
              parents: [
                'src/frontend/public/js/components/dashboard/lineup.vue',
                'src/frontend/public/js/components/dashboard/editLineup.vue',
                'src/frontend/public/js/components/dashboard/profile.vue',
                'src/frontend/public/js/components/dashboard/createEvent.vue',
                'src/frontend/public/js/components/dashboard/questions.vue',
                'src/frontend/public/js/components/dashboard/feedback.vue',
                'src/frontend/public/js/components/dashboard/dashboard.vue'
              ]
            },
            'src/frontend/public/js/components/dashboard/subComponents/sideNav.vue': {
              index: 253,
              hash: 'lm5L/oE3M++ugvn+wCvB',
              parents: [
                'src/frontend/public/js/components/dashboard/lineup.vue',
                'src/frontend/public/js/components/dashboard/editLineup.vue',
                'src/frontend/public/js/components/dashboard/profile.vue',
                'src/frontend/public/js/components/dashboard/createEvent.vue',
                'src/frontend/public/js/components/dashboard/questions.vue',
                'src/frontend/public/js/components/dashboard/feedback.vue',
                'src/frontend/public/js/components/dashboard/dashboard.vue'
              ]
            },
            'src/frontend/public/js/components/dashboard/editLineup.vue': {
              index: 243,
              hash: 'xjz6609wKSvY0UkmD1MB',
              parents: ['src/frontend/public/js/main.js']
            },
            'src/frontend/public/js/components/dashboard/profile.vue': {
              index: 246,
              hash: 'upvNX+lVjG3fdf0drFNy',
              parents: ['src/frontend/public/js/main.js']
            },
            'node_modules/lodash/_stackClear.js': {
              index: 171,
              hash: 'ibWAz8K0fFq6Bb0SS4B7',
              parents: ['node_modules/lodash/_Stack.js']
            },
            'node_modules/lodash/_ListCache.js': {
              index: 64,
              hash: 'KxC/aKLlcuOS+PWx1HyP',
              parents: [
                'node_modules/lodash/_stackClear.js',
                'node_modules/lodash/_mapCacheClear.js',
                'node_modules/lodash/_stackSet.js',
                'node_modules/lodash/_Stack.js'
              ]
            },
            'node_modules/lodash/_listCacheClear.js': {
              index: 146,
              hash: 'CHLB/DjalyhgxdfpsCnW',
              parents: ['node_modules/lodash/_ListCache.js']
            },
            'node_modules/lodash/_cacheHas.js': {
              index: 112,
              hash: 'zwJaX7fkgHAdYeTtYO2G',
              parents: ['node_modules/lodash/_equalArrays.js']
            },
            'node_modules/lodash/_setToArray.js': {
              index: 168,
              hash: 'gUyAUZoZS3v/gnhOBsLW',
              parents: ['node_modules/lodash/_equalByTag.js']
            },
            'node_modules/lodash/_mapToArray.js': {
              index: 156,
              hash: 'XUQTl0anVZnXaUOrmxD7',
              parents: ['node_modules/lodash/_equalByTag.js']
            },
            'node_modules/blob/index.js': {
              index: 33,
              hash: 'eV8fDvd1SnVAi1uugDM/',
              parents: ['node_modules/engine.io-parser/lib/browser.js']
            },
            'node_modules/after/index.js': {
              index: 2,
              hash: 'NzPfXWECmM8rW/6fdkcj',
              parents: ['node_modules/engine.io-parser/lib/browser.js']
            },
            'node_modules/arraybuffer.slice/index.js': {
              index: 3,
              hash: 'RSb5Zx9CgX3adjzbvf/k',
              parents: ['node_modules/engine.io-parser/lib/browser.js']
            },
            'node_modules/base64-arraybuffer/lib/base64-arraybuffer.js': {
              index: 31,
              hash: '8XSfHUrJJCZLdLVRE4Xb',
              parents: ['node_modules/engine.io-parser/lib/browser.js']
            },
            'node_modules/has-cors/index.js': {
              index: 59,
              hash: 'HwTb4UF/S089ZYA8hrRl',
              parents: ['node_modules/engine.io-client/lib/xmlhttprequest.js']
            },
            'node_modules/engine.io-client/lib/xmlhttprequest.js': {
              index: 50,
              hash: 'cTYQRMHLATiENPcOfA4t',
              parents: [
                'node_modules/engine.io-client/lib/transports/polling.js',
                'node_modules/engine.io-client/lib/transports/polling-xhr.js',
                'node_modules/engine.io-client/lib/transports/index.js'
              ]
            },
            'node_modules/lodash/_listCacheGet.js': {
              index: 148,
              hash: 'SZAC3U/+BLssJw9WKbhb',
              parents: ['node_modules/lodash/_ListCache.js']
            },
            'node_modules/lodash/_assocIndexOf.js': {
              index: 82,
              hash: '+YtyXqBKKXnwrSmv/2eU',
              parents: [
                'node_modules/lodash/_listCacheGet.js',
                'node_modules/lodash/_listCacheDelete.js',
                'node_modules/lodash/_listCacheSet.js',
                'node_modules/lodash/_listCacheHas.js'
              ]
            },
            'node_modules/lodash/_listCacheDelete.js': {
              index: 147,
              hash: 'o3YDg6klGWlCS2PgzZy+',
              parents: ['node_modules/lodash/_ListCache.js']
            },
            'node_modules/lodash/_listCacheSet.js': {
              index: 150,
              hash: 'dVcwdgHP8vQHHPnX+pql',
              parents: ['node_modules/lodash/_ListCache.js']
            },
            'node_modules/lodash/_Map.js': {
              index: 65,
              hash: 'aezyd9/dXR4WmT/cJk4B',
              parents: [
                'node_modules/lodash/_getTag.js',
                'node_modules/lodash/_mapCacheClear.js',
                'node_modules/lodash/_stackSet.js'
              ]
            },
            'node_modules/lodash/_getNative.js': {
              index: 128,
              hash: 'c5Ljj0yzzW4dPj+JomYZ',
              parents: [
                'node_modules/lodash/_Map.js',
                'node_modules/lodash/_defineProperty.js',
                'node_modules/lodash/_DataView.js',
                'node_modules/lodash/_Promise.js',
                'node_modules/lodash/_Set.js',
                'node_modules/lodash/_WeakMap.js',
                'node_modules/lodash/_nativeCreate.js'
              ]
            },
            'node_modules/lodash/_coreJsData.js': {
              index: 116,
              hash: 'mWDHPw3O0bwyURVR4xz+',
              parents: ['node_modules/lodash/_isMasked.js']
            },
            'node_modules/lodash/_isMasked.js': {
              index: 143,
              hash: 'vCLMgg9t+moWMD2eCyQw',
              parents: ['node_modules/lodash/_baseIsNative.js']
            },
            'node_modules/lodash/_baseIsNative.js': {
              index: 96,
              hash: 'HplAaZjQs9R/bNG2XV0a',
              parents: ['node_modules/lodash/_getNative.js']
            },
            'node_modules/lodash/mapValues.js': {
              index: 200,
              hash: 'wGzYh7rOmnr5NbNf31Xh',
              parents: ['node_modules/browserify-hmr/inc/index.js']
            },
            'node_modules/lodash/_DataView.js': {
              index: 62,
              hash: 'N7jUbJyl5TusFXojFUuz',
              parents: ['node_modules/lodash/_getTag.js']
            },
            'node_modules/lodash/_Promise.js': {
              index: 67,
              hash: 'T4OR1RtxAOTYyC9xrI13',
              parents: ['node_modules/lodash/_getTag.js']
            },
            'node_modules/lodash/_Set.js': {
              index: 68,
              hash: 'BRcgMZjGEVgVhv4GaR6q',
              parents: ['node_modules/lodash/_getTag.js']
            },
            'node_modules/lodash/_WeakMap.js': {
              index: 73,
              hash: 'iuNSA30LsHH/h10pNsQ6',
              parents: ['node_modules/lodash/_getTag.js']
            },
            'node_modules/lodash/_getTag.js': {
              index: 131,
              hash: 'rZSqomckxeMx8IEK6dQG',
              parents: ['node_modules/lodash/_baseIsEqualDeep.js']
            },
            'node_modules/lodash/_Uint8Array.js': {
              index: 72,
              hash: 'Zc6+hCmhnXc0Y6Asmckn',
              parents: ['node_modules/lodash/_equalByTag.js']
            },
            'node_modules/lodash/_equalByTag.js': {
              index: 122,
              hash: '5sdsIGyCGshbuSoIxoXa',
              parents: ['node_modules/lodash/_baseIsEqualDeep.js']
            },
            'node_modules/lodash/_equalArrays.js': {
              index: 121,
              hash: 'FLnT7PvdDDobU/p0ty8u',
              parents: [
                'node_modules/lodash/_equalByTag.js',
                'node_modules/lodash/_baseIsEqualDeep.js'
              ]
            },
            'node_modules/vue/dist/vue.runtime.common.prod.js': {
              index: 235,
              hash: 'K0BB29GES5agyJVwTU1N',
              parents: ['node_modules/vue/dist/vue.runtime.common.js']
            },
            'node_modules/timers-browserify/main.js': {
              index: 226,
              hash: 'c5BeXolKrszfyGtifZVr',
              parents: [
                'node_modules/vue/dist/vue.runtime.common.prod.js',
                'node_modules/vue/dist/vue.runtime.common.dev.js',
                'node_modules/timers-browserify/main.js',
                'node_modules/vue/dist/vue.js'
              ]
            },
            'node_modules/vue/dist/vue.runtime.common.dev.js': {
              index: 233,
              hash: 'DV7mMInCe62kFg1dyTPa',
              parents: ['node_modules/vue/dist/vue.runtime.common.js']
            },
            'src/frontend/public/js/components/test.vue': {
              index: 258,
              hash: 'zhPYvMeHlgN2vrWFnXLx',
              parents: ['src/frontend/public/js/main.js']
            },
            'node_modules/lodash/_setCacheAdd.js': {
              index: 166,
              hash: 'yUbHLrOe8uWgSDa2EOmH',
              parents: ['node_modules/lodash/_SetCache.js']
            },
            'node_modules/lodash/_setCacheHas.js': {
              index: 167,
              hash: 'aSivpixRq6mV4rYXkVzt',
              parents: ['node_modules/lodash/_SetCache.js']
            },
            'node_modules/lodash/_SetCache.js': {
              index: 69,
              hash: 'DKcn0VM+nqBtuxUGd3JS',
              parents: ['node_modules/lodash/_equalArrays.js']
            },
            'node_modules/lodash/_MapCache.js': {
              index: 66,
              hash: 'XbhLy8omrsa87tk7GrBc',
              parents: [
                'node_modules/lodash/_SetCache.js',
                'node_modules/lodash/memoize.js',
                'node_modules/lodash/_stackSet.js'
              ]
            },
            'node_modules/yeast/index.js': {
              index: 238,
              hash: 'ZM3+5w4l/D2f6x7svySF',
              parents: [
                'node_modules/engine.io-client/lib/transports/websocket.js',
                'node_modules/engine.io-client/lib/transports/polling.js'
              ]
            },
            'node_modules/engine.io-client/lib/transports/websocket.js': {
              index: 49,
              hash: 'iBZv11MBmWTH/+PbPnFJ',
              parents: ['node_modules/engine.io-client/lib/transports/index.js']
            },
            'node_modules/engine.io-client/node_modules/debug/src/browser.js': {
              index: 51,
              hash: 'WQOMOQpV9lvFHrCSbGL9',
              parents: [
                'node_modules/engine.io-client/lib/transports/websocket.js',
                'node_modules/engine.io-client/lib/transports/polling.js',
                'node_modules/engine.io-client/lib/transports/polling-xhr.js',
                'node_modules/engine.io-client/lib/socket.js'
              ]
            },
            'node_modules/component-inherit/index.js': {
              index: 41,
              hash: 'T0Fqch4d4akvlr8bh7lc',
              parents: [
                'node_modules/engine.io-client/lib/transports/websocket.js',
                'node_modules/engine.io-client/lib/transports/polling-jsonp.js',
                'node_modules/engine.io-client/lib/transports/polling.js',
                'node_modules/engine.io-client/lib/transports/polling-xhr.js'
              ]
            },
            'node_modules/engine.io-client/lib/transports/polling-jsonp.js': {
              index: 46,
              hash: 'O1EAD9tSFkm+NOKqKeps',
              parents: ['node_modules/engine.io-client/lib/transports/index.js']
            },
            'node_modules/engine.io-client/lib/transports/polling.js': {
              index: 48,
              hash: 'iR9NdLeAEs8vSYk/mMqT',
              parents: [
                'node_modules/engine.io-client/lib/transports/polling-jsonp.js',
                'node_modules/engine.io-client/lib/transports/polling-xhr.js'
              ]
            },
            'node_modules/lodash/_listCacheHas.js': {
              index: 149,
              hash: '2tu2JqPxTVjaJm/WbeGw',
              parents: ['node_modules/lodash/_ListCache.js']
            },
            'node_modules/lodash/_mapCacheGet.js': {
              index: 153,
              hash: 'dglUiNgT6mYn3/TLOqMD',
              parents: ['node_modules/lodash/_MapCache.js']
            },
            'node_modules/lodash/_getMapData.js': {
              index: 126,
              hash: 'ZdeLudBY90L64kFsAIQL',
              parents: [
                'node_modules/lodash/_mapCacheGet.js',
                'node_modules/lodash/_mapCacheSet.js',
                'node_modules/lodash/_mapCacheHas.js',
                'node_modules/lodash/_mapCacheDelete.js'
              ]
            },
            'node_modules/lodash/_mapCacheSet.js': {
              index: 155,
              hash: 'Rk8Cf6ZeJaOWzM2bXiED',
              parents: ['node_modules/lodash/_MapCache.js']
            },
            'node_modules/lodash/_mapCacheHas.js': {
              index: 154,
              hash: 'S0HdvBVxOySQIIMRmtf0',
              parents: ['node_modules/lodash/_MapCache.js']
            },
            'node_modules/lodash/_baseToString.js': {
              index: 109,
              hash: 'AnA1FrHVlMlph8hPfQFk',
              parents: ['node_modules/lodash/toString.js']
            },
            'node_modules/lodash/toString.js': {
              index: 206,
              hash: 'u6lNu4mjQVTOavtG4Hpr',
              parents: ['node_modules/lodash/_castPath.js']
            },
            'node_modules/lodash/_arrayPush.js': {
              index: 79,
              hash: '/EQp182bKyQYd9DyjHRq',
              parents: ['node_modules/lodash/_baseGetAllKeys.js']
            },
            'node_modules/lodash/_baseGetAllKeys.js': {
              index: 89,
              hash: 'G/yC9530/ahn/dgrrslT',
              parents: ['node_modules/lodash/_getAllKeys.js']
            },
            'node_modules/lodash/stubArray.js': {
              index: 204,
              hash: 'hpV3ZtG8dCYBLEBt0XqS',
              parents: ['node_modules/lodash/_getSymbols.js']
            },
            'node_modules/lodash/_getSymbols.js': {
              index: 130,
              hash: 'PoUL82x850fu8UHfzZjw',
              parents: ['node_modules/lodash/_getAllKeys.js']
            },
            'node_modules/lodash/_getAllKeys.js': {
              index: 125,
              hash: '3JYThcdBa6xFuMLEJAcf',
              parents: ['node_modules/lodash/_equalObjects.js']
            },
            'node_modules/lodash/_equalObjects.js': {
              index: 123,
              hash: 'Rc9NYU8R1s/bWUnUOXOJ',
              parents: ['node_modules/lodash/_baseIsEqualDeep.js']
            },
            'node_modules/lodash/_baseIsEqualDeep.js': {
              index: 94,
              hash: 'a5Qj+02BWo5995Nobe+v',
              parents: ['node_modules/lodash/_baseIsEqual.js']
            },
            'node_modules/lodash/_Stack.js': {
              index: 70,
              hash: '/wytiRFlfgg4krF9Qz6a',
              parents: [
                'node_modules/lodash/_baseIsEqualDeep.js',
                'node_modules/lodash/_baseIsMatch.js'
              ]
            },
            'node_modules/lodash/_baseIsEqual.js': {
              index: 93,
              hash: 'IfD9jeZw2S45+s0BZ1L3',
              parents: [
                'node_modules/lodash/_baseMatchesProperty.js',
                'node_modules/lodash/_baseIsMatch.js'
              ]
            },
            'node_modules/engine.io-client/node_modules/ms/index.js': {
              index: 53,
              hash: 'VZhpcvXzyURvh2xXbhzT',
              parents: [
                'node_modules/engine.io-client/node_modules/debug/src/common.js'
              ]
            },
            'node_modules/engine.io-client/node_modules/debug/src/common.js': {
              index: 52,
              hash: '7srtgs+0UG8MssFA6lAN',
              parents: [
                'node_modules/engine.io-client/node_modules/debug/src/browser.js'
              ]
            },
            'node_modules/vue/dist/vue.js': {
              index: 232,
              hash: 'MlUf/+T/HoADTNJ/iULB',
              parents: [
                'src/frontend/public/js/store/index.js',
                'src/frontend/public/js/main.js'
              ]
            },
            'src/frontend/public/js/store/index.js': {
              index: 266,
              hash: 'tHEZ2uL/PCKmbcsszeh0',
              parents: ['src/frontend/public/js/main.js']
            },
            'node_modules/vueify/lib/insert-css.js': {
              index: 236,
              hash: 'oiKAfua2i7DdNH5GB3Qm',
              parents: [
                'src/frontend/public/js/components/search.vue',
                'src/frontend/public/js/components/dashboard/createEvent.vue',
                'src/frontend/public/js/components/ui/input.vue',
                'src/frontend/public/js/components/ui/errorBox.vue',
                'src/frontend/public/js/components/ui/button.vue',
                'src/frontend/public/js/components/ui/facebook-login-button.vue',
                'src/frontend/public/js/components/ui/google-login-button.vue',
                'src/frontend/public/js/components/registerHeader.vue',
                'src/frontend/public/js/components/dashboard/subComponents/questionCard.vue',
                'src/frontend/public/js/components/dashboard/subComponents/lineupNav.vue',
                'src/frontend/public/js/components/dashboard/subComponents/feedbackCard.vue',
                'src/frontend/public/js/components/dashboard/subComponents/sideNav.vue',
                'src/frontend/public/js/components/dashboard/subComponents/eventCard.vue'
              ]
            },
            'src/frontend/public/js/components/search.vue': {
              index: 257,
              hash: 'pYbSCVDXxljDCS8IcQyr',
              parents: ['src/frontend/public/js/main.js']
            },
            'node_modules/engine.io-client/lib/transports/polling-xhr.js': {
              index: 47,
              hash: 'TL+1mTEJ4L+WqZ55O3mx',
              parents: ['node_modules/engine.io-client/lib/transports/index.js']
            },
            'node_modules/engine.io-client/lib/transports/index.js': {
              index: 45,
              hash: 'r1mMVUmACxBW/zZI87/q',
              parents: ['node_modules/engine.io-client/lib/socket.js']
            },
            'node_modules/engine.io-client/lib/socket.js': {
              index: 43,
              hash: 'j6W72P9PnNRiWym2sq/p',
              parents: ['node_modules/engine.io-client/lib/index.js']
            },
            'node_modules/engine.io-client/lib/index.js': {
              index: 42,
              hash: 'G6QYuSNu0EcS+G5tR9NE',
              parents: ['node_modules/socket.io-client/lib/manager.js']
            },
            'node_modules/socket.io-client/lib/manager.js': {
              index: 212,
              hash: 'fuESgYCj6MeJBthiS/c9',
              parents: ['node_modules/socket.io-client/lib/index.js']
            },
            'node_modules/socket.io-client/lib/index.js': {
              index: 211,
              hash: '77zpTM5ck9mQrSo8paNO',
              parents: []
            },
            'node_modules/lodash/memoize.js': {
              index: 201,
              hash: 'avTk3nhklvyvSxLNiUwd',
              parents: ['node_modules/lodash/_memoizeCapped.js']
            },
            'node_modules/lodash/_memoizeCapped.js': {
              index: 158,
              hash: 'HacnckK3nw4vtSYbX7i/',
              parents: ['node_modules/lodash/_stringToPath.js']
            },
            'node_modules/lodash/_stringToPath.js': {
              index: 176,
              hash: 'WduCAHGisFQY91/TpBpr',
              parents: ['node_modules/lodash/_castPath.js']
            },
            'node_modules/lodash/_hasPath.js': {
              index: 133,
              hash: 'H9ddOWkLPRuFYq8fwTEv',
              parents: ['node_modules/lodash/hasIn.js']
            },
            'node_modules/lodash/hasIn.js': {
              index: 186,
              hash: 'o6j7gwruD7qKNbgMUe0j',
              parents: ['node_modules/lodash/_baseMatchesProperty.js']
            },
            'node_modules/lodash/_baseMatchesProperty.js': {
              index: 102,
              hash: 'JUSg/+I63FvjCRBMWDG8',
              parents: ['node_modules/lodash/_baseIteratee.js']
            },
            'node_modules/lodash/_isKeyable.js': {
              index: 142,
              hash: 'NQsK9iVUkTA1EsHPdaK1',
              parents: ['node_modules/lodash/_getMapData.js']
            },
            'node_modules/lodash/_mapCacheDelete.js': {
              index: 152,
              hash: 'Y2RLt8NGt0Im9c9uXXcS',
              parents: ['node_modules/lodash/_MapCache.js']
            },
            'node_modules/lodash/_hashDelete.js': {
              index: 135,
              hash: 'CmVwjIdw4ONOgfUyiaMT',
              parents: ['node_modules/lodash/_Hash.js']
            },
            'node_modules/lodash/_hashSet.js': {
              index: 138,
              hash: 'GANy9myYOl9CQUX6Hi+w',
              parents: ['node_modules/lodash/_Hash.js']
            },
            'node_modules/lodash/_nativeCreate.js': {
              index: 159,
              hash: 'QnEWfxsVWqcrQRLl5xaD',
              parents: [
                'node_modules/lodash/_hashSet.js',
                'node_modules/lodash/_hashHas.js',
                'node_modules/lodash/_hashGet.js',
                'node_modules/lodash/_hashClear.js'
              ]
            },
            'node_modules/lodash/_hashHas.js': {
              index: 137,
              hash: 'fr70n7H4vKHBcQoEXEpO',
              parents: ['node_modules/lodash/_Hash.js']
            },
            'node_modules/axios/lib/helpers/bind.js': {
              index: 20,
              hash: '7qz63sWc/avguoKZp/Tj',
              parents: [
                'node_modules/axios/lib/utils.js',
                'node_modules/axios/lib/axios.js'
              ]
            },
            'node_modules/axios/lib/cancel/Cancel.js': {
              index: 7,
              hash: 'H5p8YXHwES9hf4g5J2Ix',
              parents: [
                'node_modules/axios/lib/cancel/CancelToken.js',
                'node_modules/axios/lib/axios.js'
              ]
            },
            'node_modules/lodash/_hashGet.js': {
              index: 136,
              hash: 'dc0CR5GuEuyIhxwkyCwj',
              parents: ['node_modules/lodash/_Hash.js']
            },
            'node_modules/axios/lib/helpers/spread.js': {
              index: 28,
              hash: 'tRmNydzwpR2+f97xOT2R',
              parents: ['node_modules/axios/lib/axios.js']
            },
            'node_modules/axios/lib/cancel/isCancel.js': {
              index: 9,
              hash: 'I1e5Pa4+rYUPP2HOlgqQ',
              parents: [
                'node_modules/axios/lib/core/dispatchRequest.js',
                'node_modules/axios/lib/axios.js'
              ]
            },
            'src/frontend/public/js/components/dashboard/createEvent.vue': {
              index: 241,
              hash: 'EU9qY8R8L5PQGDtp3iBR',
              parents: ['src/frontend/public/js/main.js']
            },
            'node_modules/axios/lib/utils.js': {
              index: 29,
              hash: 'qtyQ324ywC3lmxEImVMz',
              parents: [
                'node_modules/axios/lib/core/mergeConfig.js',
                'node_modules/axios/lib/helpers/normalizeHeaderName.js',
                'node_modules/axios/lib/helpers/buildURL.js',
                'node_modules/axios/lib/core/InterceptorManager.js',
                'node_modules/axios/lib/helpers/cookies.js',
                'node_modules/axios/lib/helpers/parseHeaders.js',
                'node_modules/axios/lib/helpers/isURLSameOrigin.js',
                'node_modules/axios/lib/core/transformData.js',
                'node_modules/axios/lib/core/dispatchRequest.js',
                'node_modules/axios/lib/core/Axios.js',
                'node_modules/axios/lib/adapters/xhr.js',
                'node_modules/axios/lib/defaults.js',
                'node_modules/axios/lib/axios.js'
              ]
            },
            'node_modules/lodash/_hashClear.js': {
              index: 134,
              hash: '2feZ9hRgUzW8Djw0JrqE',
              parents: ['node_modules/lodash/_Hash.js']
            },
            'node_modules/lodash/_Hash.js': {
              index: 63,
              hash: 'hTyKHFwLDhT8hzgE2zlD',
              parents: ['node_modules/lodash/_mapCacheClear.js']
            },
            'node_modules/lodash/_mapCacheClear.js': {
              index: 151,
              hash: '6D5+Bp90PNozl9Vr8wu2',
              parents: ['node_modules/lodash/_MapCache.js']
            },
            'node_modules/lodash/_stackSet.js': {
              index: 175,
              hash: 'rFq/zAhyEaIffTCH45Gf',
              parents: ['node_modules/lodash/_Stack.js']
            },
            'node_modules/lodash/_baseIsMatch.js': {
              index: 95,
              hash: 'yrF79Y2F5RiVXHPZgzhK',
              parents: ['node_modules/lodash/_baseMatches.js']
            },
            'node_modules/lodash/_baseMatches.js': {
              index: 101,
              hash: 'eM6GzX+YFfSSvWUut1RW',
              parents: ['node_modules/lodash/_baseIteratee.js']
            },
            'node_modules/lodash/some.js': {
              index: 203,
              hash: 'o5R2DTe3L0fWtByoF6NK',
              parents: ['node_modules/browserify-hmr/inc/index.js']
            },
            'node_modules/browserify-hmr/inc/index.js': {
              index: 35,
              hash: 'szQAOWiT0DPGHEwHQCqu',
              parents: []
            },
            'node_modules/axios/lib/core/mergeConfig.js': {
              index: 16,
              hash: 'frsED4runYe9NGon1KgT',
              parents: [
                'node_modules/axios/lib/core/Axios.js',
                'node_modules/axios/lib/axios.js'
              ]
            },
            'node_modules/axios/lib/cancel/CancelToken.js': {
              index: 8,
              hash: 'FHNSerik6mTW7UK588b6',
              parents: ['node_modules/axios/lib/axios.js']
            },
            'node_modules/axios/lib/helpers/normalizeHeaderName.js': {
              index: 26,
              hash: 'ZOnEbUQ4gAqyOWXM/MJz',
              parents: ['node_modules/axios/lib/defaults.js']
            },
            'node_modules/axios/lib/helpers/buildURL.js': {
              index: 21,
              hash: 'udtdPJ7gYtSlB1CAjCkP',
              parents: [
                'node_modules/axios/lib/core/Axios.js',
                'node_modules/axios/lib/adapters/xhr.js'
              ]
            },
            'node_modules/axios/lib/core/InterceptorManager.js': {
              index: 11,
              hash: 'eKcTD61ZQvp+fRuqC8MM',
              parents: ['node_modules/axios/lib/core/Axios.js']
            },
            'node_modules/axios/lib/helpers/cookies.js': {
              index: 23,
              hash: 'qM6kzxO0glTud6f+9Zsb',
              parents: ['node_modules/axios/lib/adapters/xhr.js']
            },
            'node_modules/axios/lib/helpers/parseHeaders.js': {
              index: 27,
              hash: 'Y1BQXR+41VBwe6p8rmZ/',
              parents: ['node_modules/axios/lib/adapters/xhr.js']
            },
            'node_modules/axios/lib/helpers/isURLSameOrigin.js': {
              index: 25,
              hash: 'nuSPzJI+HS39GwE1dcbh',
              parents: ['node_modules/axios/lib/adapters/xhr.js']
            },
            'node_modules/axios/lib/core/settle.js': {
              index: 17,
              hash: '4nu0h+kT7T3ODvM1HTjb',
              parents: ['node_modules/axios/lib/adapters/xhr.js']
            },
            'node_modules/axios/lib/core/createError.js': {
              index: 13,
              hash: '+o6+WD/ccw4RiSORle6L',
              parents: [
                'node_modules/axios/lib/core/settle.js',
                'node_modules/axios/lib/adapters/xhr.js'
              ]
            },
            'node_modules/axios/lib/core/transformData.js': {
              index: 18,
              hash: 'ogPxBrH/+f25p5LI/dDI',
              parents: ['node_modules/axios/lib/core/dispatchRequest.js']
            },
            'node_modules/axios/lib/core/dispatchRequest.js': {
              index: 14,
              hash: 's1oCBcRaD18wCTQMQBIT',
              parents: ['node_modules/axios/lib/core/Axios.js']
            },
            'node_modules/axios/lib/defaults.js': {
              index: 19,
              hash: 'zfYPwLSWuE3pEDvQqW+L',
              parents: [
                'node_modules/axios/lib/core/dispatchRequest.js',
                'node_modules/axios/lib/axios.js'
              ]
            },
            'node_modules/axios/lib/core/Axios.js': {
              index: 10,
              hash: 'y6Xr/1syYWJNaI+vV0aj',
              parents: ['node_modules/axios/lib/axios.js']
            },
            'node_modules/axios/lib/helpers/isAbsoluteURL.js': {
              index: 24,
              hash: 'vVWCDPr+MX6lpqXv8pbV',
              parents: ['node_modules/axios/lib/core/buildFullPath.js']
            },
            'node_modules/axios/lib/helpers/combineURLs.js': {
              index: 22,
              hash: 'CZOnd5DJVanVNvEGgtOm',
              parents: ['node_modules/axios/lib/core/buildFullPath.js']
            },
            'node_modules/axios/lib/core/buildFullPath.js': {
              index: 12,
              hash: 'BjjeX8vHdbb1IBgxeR+5',
              parents: ['node_modules/axios/lib/adapters/xhr.js']
            },
            'node_modules/axios/lib/core/enhanceError.js': {
              index: 15,
              hash: 'uey06QOaqZwBXUc8tg2R',
              parents: ['node_modules/axios/lib/core/createError.js']
            },
            'node_modules/axios/lib/adapters/xhr.js': {
              index: 5,
              hash: 'rVFXI4fbm8JV6euSd/LL',
              parents: [
                'node_modules/axios/lib/defaults.js',
                'node_modules/axios/lib/defaults.js'
              ]
            },
            'node_modules/axios/lib/axios.js': {
              index: 6,
              hash: 'qzWf5Q/Ot8PG6d9F5V2q',
              parents: ['node_modules/axios/index.js']
            },
            'node_modules/axios/index.js': {
              index: 4,
              hash: 'i3hbSNtq55ltbO/Ev0Ye',
              parents: ['src/frontend/public/js/services/user.js']
            },
            'src/frontend/public/js/components/registerHeader.vue': {
              index: 255,
              hash: 'Hz7gtb+9k1y2GHgXmAeT',
              parents: ['src/frontend/public/js/main.js']
            },
            'src/frontend/public/js/components/dashboard/subComponents/questionCard.vue': {
              index: 252,
              hash: 'bTHHQKnxV56/arcw3eNk',
              parents: [
                'src/frontend/public/js/components/dashboard/questions.vue'
              ]
            },
            'src/frontend/public/js/components/dashboard/questions.vue': {
              index: 247,
              hash: 'IS/mUR/JxTrP636IAGTO',
              parents: ['src/frontend/public/js/main.js']
            },
            'src/frontend/public/js/components/dashboard/subComponents/feedbackCard.vue': {
              index: 250,
              hash: 'tQ8C+Vw5UXwvL7kVstGd',
              parents: [
                'src/frontend/public/js/components/dashboard/feedback.vue'
              ]
            },
            'src/frontend/public/js/components/dashboard/feedback.vue': {
              index: 244,
              hash: '3fU0lRPEd0SOlrmnrNuj',
              parents: ['src/frontend/public/js/main.js']
            },
            'src/frontend/public/js/components/dashboard/subComponents/eventCard.vue': {
              index: 248,
              hash: 'dXkhsGmJUSvI5D7cbsEo',
              parents: [
                'src/frontend/public/js/components/dashboard/subComponents/events.vue'
              ]
            },
            'src/frontend/public/js/components/dashboard/subComponents/events.vue': {
              index: 249,
              hash: 'X7WEebDu2oUJnvLN8dft',
              parents: [
                'src/frontend/public/js/components/dashboard/dashboard.vue'
              ]
            },
            'src/frontend/public/js/components/dashboard/dashboard.vue': {
              index: 242,
              hash: '1Nsk6y1+BAw4Xn53UQeJ',
              parents: ['src/frontend/public/js/main.js']
            },
            'src/frontend/public/js/main.js': {
              index: 264,
              hash: '0RVCJUqIuuD9vooVMi+R',
              parents: []
            }
          }
          var originalEntries = [
            '/Users/chun/projects/upnext/src/frontend/public/js/main.js'
          ]
          var updateUrl = null
          var updateMode = 'websocket'
          var supportModes = ['none', 'websocket']
          var ignoreUnaccepted = true
          var updateCacheBust = false
          var bundleKey = 'websocket:null'
          var sioPath = './node_modules/socket.io-client/lib/index.js'
          var incPath = './node_modules/browserify-hmr/inc/index.js'
          if (!global._hmr) {
            try {
              Object.defineProperty(global, '_hmr', { value: {} })
            } catch (e) {
              global._hmr = {}
            }
          }
          if (!Object.prototype.hasOwnProperty.call(global._hmr, bundleKey)) {
            // Temporary hack so requiring modules works before the _hmr values are
            // correctly initialized.
            global._hmr[bundleKey] = { initModule: function initModule() {} }
          }
          var main = require(incPath)
          var isFirstRun = main(
            moduleDefs,
            cachedModules,
            moduleMeta,
            updateUrl,
            updateMode,
            supportModes,
            ignoreUnaccepted,
            updateCacheBust,
            bundleKey,
            sioPath ? require(sioPath) : null,
            typeof __filename !== 'undefined' && __filename,
            typeof __dirname !== 'undefined' && __dirname
          )
          if (isFirstRun) {
            for (var i = 0, len = originalEntries.length; i < len; i++) {
              require(originalEntries[i])
            }
          }
        }.call(
          this,
          typeof global !== 'undefined'
            ? global
            : typeof self !== 'undefined'
            ? self
            : typeof window !== 'undefined'
            ? window
            : {},
          arguments[3],
          arguments[4],
          arguments[5],
          arguments[6]
        ))
      },
      {
        './node_modules/browserify-hmr/inc/index.js': 35,
        './node_modules/socket.io-client/lib/index.js': 211,
        '/Users/chun/projects/upnext/src/frontend/public/js/main.js': 264
      }
    ]
  },
  {},
  [1]
)
